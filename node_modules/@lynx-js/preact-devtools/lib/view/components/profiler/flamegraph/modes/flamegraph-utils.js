/**
 * The default layout that's typical for a flamegraph chart.
 */
export function placeFlamegraph(tree, idToTransform, rootId, selectedId, canvasWidth) {
    const maximizedIds = new Set([selectedId]);
    const commitParentIds = new Set();
    let parentId = tree.get(rootId).parent;
    while (parentId !== -1) {
        const node = tree.get(parentId);
        if (node === undefined)
            break;
        commitParentIds.add(parentId);
        parentId = node.parent;
    }
    // Account for commits not having the currently selected node
    // TODO: Move this logic elsewhere
    const selected = !tree.has(selectedId)
        ? tree.get(rootId)
        : tree.get(selectedId);
    parentId = selected.parent;
    while (parentId !== -1) {
        const node = tree.get(parentId);
        if (node === undefined)
            break;
        maximizedIds.add(parentId);
        parentId = node.parent;
    }
    let offset = 0;
    let scale = 1;
    const selectedPos = idToTransform.get(selectedId);
    if (selectedPos !== undefined) {
        offset = selectedPos.x;
        scale = canvasWidth / selectedPos.width;
    }
    const byRow = [];
    idToTransform.forEach(pos => {
        let start;
        let width;
        let hidden = false;
        if (maximizedIds.has(pos.id)) {
            start = 0;
            width = canvasWidth;
        }
        else {
            start = (pos.x - offset) * scale;
            width = pos.width * scale;
            // Hide other sibling nodes of maximized nodes
            const node = tree.get(pos.id);
            if (node && node.parent !== -1 && maximizedIds.has(node.parent)) {
                const parent = tree.get(node.parent);
                if (parent.children.length > 1) {
                    hidden = parent.children.some(childId => maximizedIds.has(childId));
                }
            }
        }
        const visible = hidden ? false : start >= 0 && start <= canvasWidth;
        if (pos.row >= byRow.length) {
            byRow.push([]);
        }
        byRow[pos.row].push({
            ...pos,
            x: start,
            width,
            maximized: maximizedIds.has(pos.id),
            visible,
        });
    });
    return byRow;
}
