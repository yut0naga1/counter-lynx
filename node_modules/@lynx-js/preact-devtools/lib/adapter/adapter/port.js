import { DevtoolsToClient, PageHookName } from "../../constants";
export function listenToDevtools(ctx, type, callback) {
    ctx.addEventListener("message", e => {
        if (e.source === ctx && e.data.source === DevtoolsToClient) {
            const data = e.data;
            if (data.type === type)
                callback(data.data);
        }
    });
}
export function listenToPageHook(ctx, type, callback) {
    ctx.addEventListener("message", e => {
        if (e.source === ctx && e.data.source === PageHookName) {
            const data = e.data;
            if (data.type === type)
                callback(data.data);
        }
    });
}
export function sendToDevtools(ctx, type, data) {
    ctx.postMessage({
        source: PageHookName,
        type,
        data,
    }, "*");
}
export function createPortForHook(ctx) {
    return {
        send: (type, message) => sendToDevtools(ctx, type, message),
        listen: (type, callback) => listenToDevtools(ctx, type, callback),
        listenToPage: (type, callback) => listenToPageHook(ctx, type, callback),
    };
}
