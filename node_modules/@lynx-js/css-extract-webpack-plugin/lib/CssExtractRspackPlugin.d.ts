import type { Compiler, CssExtractRspackPluginOptions as ExternalCssExtractRspackPluginOptions } from '@rspack/core';
import { LynxTemplatePlugin } from '@lynx-js/template-webpack-plugin';
/**
 * The options for {@link @lynx-js/css-extract-webpack-plugin#CssExtractRspackPlugin}
 *
 * @public
 */
interface CssExtractRspackPluginOptions extends ExternalCssExtractRspackPluginOptions {
    /**
     * plugins passed to parser
     */
    cssPlugins: Parameters<typeof LynxTemplatePlugin.convertCSSChunksToMap>[1];
    /**
     * The name of non-initial CSS chunk files
     */
    chunkFilename?: string;
    /**
     * The name of each output bundle.
     */
    filename?: string;
}
/**
 * @public
 *
 * CssExtractRspackPlugin is the CSS extract plugin for Lynx.
 * It works just like the {@link https://www.rspack.dev/plugins/rspack/css-extract-rspack-plugin.html | CssExtractRspackPlugin} in Web.
 *
 * @example
 * ```js
 * import { CssExtractRspackPlugin } from '@lynx-js/css-extract-webpack-plugin'
 * export default {
 *   plugins: [new CssExtractRspackPlugin()],
 *   module: {
 *     rules: [
 *       {
 *         test: /\.css$/,
 *         uses: [CssExtractRspackPlugin.loader, 'css-loader'],
 *       },
 *     ],
 *   },
 * }
 * ```
 */
declare class CssExtractRspackPlugin {
    private readonly options?;
    constructor(options?: CssExtractRspackPluginOptions | undefined);
    /**
     * The loader to extract CSS.
     *
     * @remarks
     * It should be used with the {@link https://github.com/webpack-contrib/css-loader | 'css-loader'}.
     *
     * @example
     *
     * ```js
     * import { CssExtractRspackPlugin } from '@lynx-js/css-extract-webpack-plugin'
     * export default {
     *   plugins: [new CssExtractRspackPlugin()],
     *   module: {
     *     rules: [
     *       {
     *         test: /\.css$/,
     *         uses: [CssExtractRspackPlugin.loader, 'css-loader'],
     *       },
     *     ],
     *   },
     * }
     * ```
     *
     * @public
     */
    static loader: string;
    /**
     * `defaultOptions` is the default options that the {@link CssExtractRspackPlugin} uses.
     *
     * @public
     */
    static defaultOptions: Readonly<CssExtractRspackPluginOptions>;
    /**
     * The entry point of a webpack plugin.
     * @param compiler - the webpack compiler
     */
    apply(compiler: Compiler): void;
}
export { CssExtractRspackPlugin };
export type { CssExtractRspackPluginOptions };
