export const __webpack_id__ = "src_config_validate_ts";
export const __webpack_ids__ = [
    "src_config_validate_ts"
];
export const __webpack_modules__ = {
    "../../../node_modules/.pnpm/typia@9.7.1_typescript@5.9.2/node_modules/typia/lib/internal/_accessExpressionAsString.js": function(__unused_webpack_module, exports) {
        exports._accessExpressionAsString = void 0;
        const _accessExpressionAsString = (str)=>variable(str) ? `.${str}` : `[${JSON.stringify(str)}]`;
        exports._accessExpressionAsString = _accessExpressionAsString;
        const variable = (str)=>false === reserved(str) && /^[a-zA-Z_$][a-zA-Z_$0-9]*$/g.test(str);
        const reserved = (str)=>RESERVED.has(str);
        const RESERVED = new Set([
            "break",
            "case",
            "catch",
            "class",
            "const",
            "continue",
            "debugger",
            "default",
            "delete",
            "do",
            "else",
            "enum",
            "export",
            "extends",
            "false",
            "finally",
            "for",
            "function",
            "if",
            "import",
            "in",
            "instanceof",
            "new",
            "null",
            "return",
            "super",
            "switch",
            "this",
            "throw",
            "true",
            "try",
            "typeof",
            "var",
            "void",
            "while",
            "with"
        ]);
    },
    "../../../node_modules/.pnpm/typia@9.7.1_typescript@5.9.2/node_modules/typia/lib/internal/_createStandardSchema.js": function(__unused_webpack_module, exports) {
        exports._createStandardSchema = void 0;
        const _createStandardSchema = (fn)=>Object.assign(fn, {
                "~standard": {
                    version: 1,
                    vendor: "typia",
                    validate: (input)=>{
                        const result = fn(input);
                        if (result.success) return {
                            value: result.data
                        };
                        return {
                            issues: result.errors.map((error)=>({
                                    message: `expected ${error.expected}, got ${error.value}`,
                                    path: typiaPathToStandardSchemaPath(error.path)
                                }))
                        };
                    }
                }
            });
        exports._createStandardSchema = _createStandardSchema;
        var PathParserState;
        (function(PathParserState) {
            PathParserState[PathParserState["Start"] = 0] = "Start";
            PathParserState[PathParserState["Property"] = 1] = "Property";
            PathParserState[PathParserState["StringKey"] = 2] = "StringKey";
            PathParserState[PathParserState["NumberKey"] = 3] = "NumberKey";
        })(PathParserState || (PathParserState = {}));
        const typiaPathToStandardSchemaPath = (path)=>{
            if (!path.startsWith("$input")) throw new Error(`Invalid path: ${JSON.stringify(path)}`);
            const segments = [];
            let currentSegment = "";
            let state = PathParserState.Start;
            let index = 5;
            while(index < path.length - 1){
                index++;
                const char = path[index];
                if (state === PathParserState.Property) if ("." === char || "[" === char) {
                    segments.push({
                        key: currentSegment
                    });
                    state = PathParserState.Start;
                } else if (index === path.length - 1) {
                    currentSegment += char;
                    segments.push({
                        key: currentSegment
                    });
                    index++;
                    state = PathParserState.Start;
                } else currentSegment += char;
                else if (state === PathParserState.StringKey) if ('"' === char) {
                    segments.push({
                        key: JSON.parse(currentSegment + char)
                    });
                    index += 2;
                    state = PathParserState.Start;
                } else if ("\\" === char) {
                    currentSegment += path[index];
                    index++;
                    currentSegment += path[index];
                } else currentSegment += char;
                else if (state === PathParserState.NumberKey) if ("]" === char) {
                    segments.push({
                        key: Number.parseInt(currentSegment)
                    });
                    index++;
                    state = PathParserState.Start;
                } else currentSegment += char;
                if (state === PathParserState.Start && index < path.length - 1) {
                    const newChar = path[index];
                    currentSegment = "";
                    if ("[" === newChar) if ('"' === path[index + 1]) {
                        state = PathParserState.StringKey;
                        index++;
                        currentSegment = '"';
                    } else state = PathParserState.NumberKey;
                    else if ("." === newChar) state = PathParserState.Property;
                    else throw new Error("Unreachable: pointer points invalid character");
                }
            }
            if (state !== PathParserState.Start) throw new Error(`Failed to parse path: ${JSON.stringify(path)}`);
            return segments;
        };
    },
    "../../../node_modules/.pnpm/typia@9.7.1_typescript@5.9.2/node_modules/typia/lib/internal/_validateReport.js": function(__unused_webpack_module, exports) {
        exports._validateReport = void 0;
        const _validateReport = (array)=>{
            const reportable = (path)=>{
                if (0 === array.length) return true;
                const last = array[array.length - 1].path;
                return path.length > last.length || last.substring(0, path.length) !== path;
            };
            return (exceptable, error)=>{
                if (exceptable && reportable(error.path)) {
                    if (void 0 === error.value) null != error.description || (error.description = [
                        "The value at this path is `undefined`.",
                        "",
                        `Please fill the \`${error.expected}\` typed value next time.`
                    ].join("\n"));
                    array.push(error);
                }
                return false;
            };
        };
        exports._validateReport = _validateReport;
    },
    "./src/config/validate.ts": function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.r(__webpack_exports__);
        __webpack_require__.d(__webpack_exports__, {
            validate: ()=>validate,
            validateConfig: ()=>validateConfig
        });
        var typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("../../../node_modules/.pnpm/typia@9.7.1_typescript@5.9.2/node_modules/typia/lib/internal/_accessExpressionAsString.js");
        var typia_lib_internal_validateReport_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("../../../node_modules/.pnpm/typia@9.7.1_typescript@5.9.2/node_modules/typia/lib/internal/_validateReport.js");
        var typia_lib_internal_createStandardSchema_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("../../../node_modules/.pnpm/typia@9.7.1_typescript@5.9.2/node_modules/typia/lib/internal/_createStandardSchema.js");
        var picocolors__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("../../../node_modules/.pnpm/picocolors@1.1.1/node_modules/picocolors/picocolors.js");
        var picocolors__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/ __webpack_require__.n(picocolors__WEBPACK_IMPORTED_MODULE_3__);
        const validateConfig = (()=>{
            const _iv29 = new Set([
                "es3",
                "es5",
                "es2015",
                "es2016",
                "es2017",
                "es2018",
                "es2019",
                "es2020",
                "es2021",
                "es2022",
                "es2023",
                "es2024",
                "esnext"
            ]);
            const _iv48 = new Set([
                false,
                "es3",
                "es5",
                "es2015",
                "es2016",
                "es2017",
                "es2018",
                "es2019",
                "es2020",
                "es2021",
                "es2022",
                "es2023",
                "es2024",
                "node",
                "async-node",
                "web",
                "webworker",
                "es2025",
                "electron-main",
                "electron-renderer",
                "electron-preload",
                "nwjs",
                "node-webkit",
                "browserslist"
            ]);
            const _iv50 = new Set([
                "es3",
                "es5",
                "es2015",
                "es2016",
                "es2017",
                "es2018",
                "es2019",
                "es2020",
                "es2021",
                "es2022",
                "es2023",
                "es2024",
                "node",
                "async-node",
                "web",
                "webworker",
                "es2025",
                "electron-main",
                "electron-renderer",
                "electron-preload",
                "nwjs",
                "node-webkit",
                "browserslist"
            ]);
            const _iv52 = new Set([
                "module",
                "global",
                "commonjs",
                "umd",
                "amd",
                "jsonp",
                "import",
                "var",
                "assign",
                "this",
                "window",
                "self",
                "commonjs2",
                "commonjs-module",
                "commonjs-static",
                "amd-require",
                "umd2",
                "system",
                "promise",
                "module-import",
                "script",
                "node-commonjs",
                "commonjs-import"
            ]);
            const _iv53 = new Set([
                false,
                "eval",
                "source-map",
                "source-map-debugids",
                "cheap-source-map",
                "cheap-source-map-debugids",
                "cheap-module-source-map",
                "cheap-module-source-map-debugids",
                "nosources-source-map",
                "nosources-source-map-debugids",
                "nosources-cheap-source-map",
                "nosources-cheap-source-map-debugids",
                "nosources-cheap-module-source-map",
                "nosources-cheap-module-source-map-debugids",
                "inline-source-map",
                "inline-source-map-debugids",
                "inline-cheap-source-map",
                "inline-cheap-source-map-debugids",
                "inline-cheap-module-source-map",
                "inline-cheap-module-source-map-debugids",
                "inline-nosources-source-map",
                "inline-nosources-source-map-debugids",
                "inline-nosources-cheap-source-map",
                "inline-nosources-cheap-source-map-debugids",
                "inline-nosources-cheap-module-source-map",
                "inline-nosources-cheap-module-source-map-debugids",
                "hidden-source-map",
                "hidden-source-map-debugids",
                "hidden-cheap-source-map",
                "hidden-cheap-source-map-debugids",
                "hidden-cheap-module-source-map",
                "hidden-cheap-module-source-map-debugids",
                "hidden-nosources-source-map",
                "hidden-nosources-source-map-debugids",
                "hidden-nosources-cheap-source-map",
                "hidden-nosources-cheap-source-map-debugids",
                "hidden-nosources-cheap-module-source-map",
                "hidden-nosources-cheap-module-source-map-debugids",
                "eval-source-map",
                "eval-source-map-debugids",
                "eval-cheap-source-map",
                "eval-cheap-source-map-debugids",
                "eval-cheap-module-source-map",
                "eval-cheap-module-source-map-debugids",
                "eval-nosources-source-map",
                "eval-nosources-source-map-debugids",
                "eval-nosources-cheap-source-map",
                "eval-nosources-cheap-source-map-debugids",
                "eval-nosources-cheap-module-source-map",
                "eval-nosources-cheap-module-source-map-debugids"
            ]);
            const _iv130 = new Set([
                "utf8",
                "ascii",
                "utf-8",
                "utf16le",
                "utf-16le",
                "ucs2",
                "ucs-2",
                "base64",
                "base64url",
                "latin1",
                "binary",
                "hex"
            ]);
            const _iv132 = new Set([
                "utf8",
                "ascii",
                "utf-8",
                "utf16le",
                "utf-16le",
                "ucs2",
                "ucs-2",
                "base64",
                "base64url",
                "latin1",
                "binary",
                "hex"
            ]);
            const _iv151 = new Set([
                "module",
                "global",
                "commonjs",
                "umd",
                "amd",
                "jsonp",
                "import",
                "var",
                "assign",
                "this",
                "window",
                "self",
                "commonjs2",
                "commonjs-module",
                "commonjs-static",
                "amd-require",
                "umd2",
                "system",
                "promise",
                "module-import",
                "script",
                "node-commonjs"
            ]);
            const _iv303 = new Set([
                false,
                "eval",
                "source-map",
                "source-map-debugids",
                "cheap-source-map",
                "cheap-source-map-debugids",
                "cheap-module-source-map",
                "cheap-module-source-map-debugids",
                "nosources-source-map",
                "nosources-source-map-debugids",
                "nosources-cheap-source-map",
                "nosources-cheap-source-map-debugids",
                "nosources-cheap-module-source-map",
                "nosources-cheap-module-source-map-debugids",
                "inline-source-map",
                "inline-source-map-debugids",
                "inline-cheap-source-map",
                "inline-cheap-source-map-debugids",
                "inline-cheap-module-source-map",
                "inline-cheap-module-source-map-debugids",
                "inline-nosources-source-map",
                "inline-nosources-source-map-debugids",
                "inline-nosources-cheap-source-map",
                "inline-nosources-cheap-source-map-debugids",
                "inline-nosources-cheap-module-source-map",
                "inline-nosources-cheap-module-source-map-debugids",
                "hidden-source-map",
                "hidden-source-map-debugids",
                "hidden-cheap-source-map",
                "hidden-cheap-source-map-debugids",
                "hidden-cheap-module-source-map",
                "hidden-cheap-module-source-map-debugids",
                "hidden-nosources-source-map",
                "hidden-nosources-source-map-debugids",
                "hidden-nosources-cheap-source-map",
                "hidden-nosources-cheap-source-map-debugids",
                "hidden-nosources-cheap-module-source-map",
                "hidden-nosources-cheap-module-source-map-debugids",
                "eval-source-map",
                "eval-source-map-debugids",
                "eval-cheap-source-map",
                "eval-cheap-source-map-debugids",
                "eval-cheap-module-source-map",
                "eval-cheap-module-source-map-debugids",
                "eval-nosources-source-map",
                "eval-nosources-source-map-debugids",
                "eval-nosources-cheap-source-map",
                "eval-nosources-cheap-source-map-debugids",
                "eval-nosources-cheap-module-source-map",
                "eval-nosources-cheap-module-source-map-debugids"
            ]);
            const _iv323 = new Set([
                "module",
                "global",
                "commonjs",
                "umd",
                "amd",
                "jsonp",
                "import",
                "var",
                "assign",
                "this",
                "window",
                "self",
                "commonjs2",
                "commonjs-module",
                "commonjs-static",
                "amd-require",
                "umd2",
                "system",
                "promise",
                "module-import",
                "script",
                "node-commonjs",
                "commonjs-import"
            ]);
            const _iv334 = new Set([
                false,
                "eval",
                "source-map",
                "source-map-debugids",
                "cheap-source-map",
                "cheap-source-map-debugids",
                "cheap-module-source-map",
                "cheap-module-source-map-debugids",
                "nosources-source-map",
                "nosources-source-map-debugids",
                "nosources-cheap-source-map",
                "nosources-cheap-source-map-debugids",
                "nosources-cheap-module-source-map",
                "nosources-cheap-module-source-map-debugids",
                "inline-source-map",
                "inline-source-map-debugids",
                "inline-cheap-source-map",
                "inline-cheap-source-map-debugids",
                "inline-cheap-module-source-map",
                "inline-cheap-module-source-map-debugids",
                "inline-nosources-source-map",
                "inline-nosources-source-map-debugids",
                "inline-nosources-cheap-source-map",
                "inline-nosources-cheap-source-map-debugids",
                "inline-nosources-cheap-module-source-map",
                "inline-nosources-cheap-module-source-map-debugids",
                "hidden-source-map",
                "hidden-source-map-debugids",
                "hidden-cheap-source-map",
                "hidden-cheap-source-map-debugids",
                "hidden-cheap-module-source-map",
                "hidden-cheap-module-source-map-debugids",
                "hidden-nosources-source-map",
                "hidden-nosources-source-map-debugids",
                "hidden-nosources-cheap-source-map",
                "hidden-nosources-cheap-source-map-debugids",
                "hidden-nosources-cheap-module-source-map",
                "hidden-nosources-cheap-module-source-map-debugids",
                "eval-source-map",
                "eval-source-map-debugids",
                "eval-cheap-source-map",
                "eval-cheap-source-map-debugids",
                "eval-cheap-module-source-map",
                "eval-cheap-module-source-map-debugids",
                "eval-nosources-source-map",
                "eval-nosources-source-map-debugids",
                "eval-nosources-cheap-source-map",
                "eval-nosources-cheap-source-map-debugids",
                "eval-nosources-cheap-module-source-map",
                "eval-nosources-cheap-module-source-map-debugids",
                "source-map-debugids-debugids",
                "cheap-source-map-debugids-debugids",
                "cheap-module-source-map-debugids-debugids",
                "nosources-source-map-debugids-debugids",
                "nosources-cheap-source-map-debugids-debugids",
                "nosources-cheap-module-source-map-debugids-debugids",
                "inline-source-map-debugids-debugids",
                "inline-cheap-source-map-debugids-debugids",
                "inline-cheap-module-source-map-debugids-debugids",
                "inline-nosources-source-map-debugids-debugids",
                "inline-nosources-cheap-source-map-debugids-debugids",
                "inline-nosources-cheap-module-source-map-debugids-debugids",
                "hidden-source-map-debugids-debugids",
                "hidden-cheap-source-map-debugids-debugids",
                "hidden-cheap-module-source-map-debugids-debugids",
                "hidden-nosources-source-map-debugids-debugids",
                "hidden-nosources-cheap-source-map-debugids-debugids",
                "hidden-nosources-cheap-module-source-map-debugids-debugids",
                "eval-source-map-debugids-debugids",
                "eval-cheap-source-map-debugids-debugids",
                "eval-cheap-module-source-map-debugids-debugids",
                "eval-nosources-source-map-debugids-debugids",
                "eval-nosources-cheap-source-map-debugids-debugids",
                "eval-nosources-cheap-module-source-map-debugids-debugids"
            ]);
            const _iv357 = new Set([
                3,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                2015,
                2016,
                2017,
                2018,
                2019,
                2020,
                2021,
                2022,
                2023,
                2024,
                2025,
                2026,
                "latest"
            ]);
            const _vv400 = new Set([
                "es3",
                "es5",
                "es2015",
                "es2016",
                "es2017",
                "es2018",
                "es2019",
                "es2020",
                "es2021",
                "es2022",
                "es2023",
                "es2024",
                "esnext"
            ]);
            const _vv419 = new Set([
                false,
                "es3",
                "es5",
                "es2015",
                "es2016",
                "es2017",
                "es2018",
                "es2019",
                "es2020",
                "es2021",
                "es2022",
                "es2023",
                "es2024",
                "node",
                "async-node",
                "web",
                "webworker",
                "es2025",
                "electron-main",
                "electron-renderer",
                "electron-preload",
                "nwjs",
                "node-webkit",
                "browserslist"
            ]);
            const _vv421 = new Set([
                "es3",
                "es5",
                "es2015",
                "es2016",
                "es2017",
                "es2018",
                "es2019",
                "es2020",
                "es2021",
                "es2022",
                "es2023",
                "es2024",
                "node",
                "async-node",
                "web",
                "webworker",
                "es2025",
                "electron-main",
                "electron-renderer",
                "electron-preload",
                "nwjs",
                "node-webkit",
                "browserslist"
            ]);
            const _vv423 = new Set([
                "module",
                "global",
                "commonjs",
                "umd",
                "amd",
                "jsonp",
                "import",
                "var",
                "assign",
                "this",
                "window",
                "self",
                "commonjs2",
                "commonjs-module",
                "commonjs-static",
                "amd-require",
                "umd2",
                "system",
                "promise",
                "module-import",
                "script",
                "node-commonjs",
                "commonjs-import"
            ]);
            const _vv424 = new Set([
                false,
                "eval",
                "source-map",
                "source-map-debugids",
                "cheap-source-map",
                "cheap-source-map-debugids",
                "cheap-module-source-map",
                "cheap-module-source-map-debugids",
                "nosources-source-map",
                "nosources-source-map-debugids",
                "nosources-cheap-source-map",
                "nosources-cheap-source-map-debugids",
                "nosources-cheap-module-source-map",
                "nosources-cheap-module-source-map-debugids",
                "inline-source-map",
                "inline-source-map-debugids",
                "inline-cheap-source-map",
                "inline-cheap-source-map-debugids",
                "inline-cheap-module-source-map",
                "inline-cheap-module-source-map-debugids",
                "inline-nosources-source-map",
                "inline-nosources-source-map-debugids",
                "inline-nosources-cheap-source-map",
                "inline-nosources-cheap-source-map-debugids",
                "inline-nosources-cheap-module-source-map",
                "inline-nosources-cheap-module-source-map-debugids",
                "hidden-source-map",
                "hidden-source-map-debugids",
                "hidden-cheap-source-map",
                "hidden-cheap-source-map-debugids",
                "hidden-cheap-module-source-map",
                "hidden-cheap-module-source-map-debugids",
                "hidden-nosources-source-map",
                "hidden-nosources-source-map-debugids",
                "hidden-nosources-cheap-source-map",
                "hidden-nosources-cheap-source-map-debugids",
                "hidden-nosources-cheap-module-source-map",
                "hidden-nosources-cheap-module-source-map-debugids",
                "eval-source-map",
                "eval-source-map-debugids",
                "eval-cheap-source-map",
                "eval-cheap-source-map-debugids",
                "eval-cheap-module-source-map",
                "eval-cheap-module-source-map-debugids",
                "eval-nosources-source-map",
                "eval-nosources-source-map-debugids",
                "eval-nosources-cheap-source-map",
                "eval-nosources-cheap-source-map-debugids",
                "eval-nosources-cheap-module-source-map",
                "eval-nosources-cheap-module-source-map-debugids"
            ]);
            const _vv501 = new Set([
                "utf8",
                "ascii",
                "utf-8",
                "utf16le",
                "utf-16le",
                "ucs2",
                "ucs-2",
                "base64",
                "base64url",
                "latin1",
                "binary",
                "hex"
            ]);
            const _vv503 = new Set([
                "utf8",
                "ascii",
                "utf-8",
                "utf16le",
                "utf-16le",
                "ucs2",
                "ucs-2",
                "base64",
                "base64url",
                "latin1",
                "binary",
                "hex"
            ]);
            const _vv522 = new Set([
                "module",
                "global",
                "commonjs",
                "umd",
                "amd",
                "jsonp",
                "import",
                "var",
                "assign",
                "this",
                "window",
                "self",
                "commonjs2",
                "commonjs-module",
                "commonjs-static",
                "amd-require",
                "umd2",
                "system",
                "promise",
                "module-import",
                "script",
                "node-commonjs"
            ]);
            const _vv674 = new Set([
                false,
                "eval",
                "source-map",
                "source-map-debugids",
                "cheap-source-map",
                "cheap-source-map-debugids",
                "cheap-module-source-map",
                "cheap-module-source-map-debugids",
                "nosources-source-map",
                "nosources-source-map-debugids",
                "nosources-cheap-source-map",
                "nosources-cheap-source-map-debugids",
                "nosources-cheap-module-source-map",
                "nosources-cheap-module-source-map-debugids",
                "inline-source-map",
                "inline-source-map-debugids",
                "inline-cheap-source-map",
                "inline-cheap-source-map-debugids",
                "inline-cheap-module-source-map",
                "inline-cheap-module-source-map-debugids",
                "inline-nosources-source-map",
                "inline-nosources-source-map-debugids",
                "inline-nosources-cheap-source-map",
                "inline-nosources-cheap-source-map-debugids",
                "inline-nosources-cheap-module-source-map",
                "inline-nosources-cheap-module-source-map-debugids",
                "hidden-source-map",
                "hidden-source-map-debugids",
                "hidden-cheap-source-map",
                "hidden-cheap-source-map-debugids",
                "hidden-cheap-module-source-map",
                "hidden-cheap-module-source-map-debugids",
                "hidden-nosources-source-map",
                "hidden-nosources-source-map-debugids",
                "hidden-nosources-cheap-source-map",
                "hidden-nosources-cheap-source-map-debugids",
                "hidden-nosources-cheap-module-source-map",
                "hidden-nosources-cheap-module-source-map-debugids",
                "eval-source-map",
                "eval-source-map-debugids",
                "eval-cheap-source-map",
                "eval-cheap-source-map-debugids",
                "eval-cheap-module-source-map",
                "eval-cheap-module-source-map-debugids",
                "eval-nosources-source-map",
                "eval-nosources-source-map-debugids",
                "eval-nosources-cheap-source-map",
                "eval-nosources-cheap-source-map-debugids",
                "eval-nosources-cheap-module-source-map",
                "eval-nosources-cheap-module-source-map-debugids"
            ]);
            const _vv694 = new Set([
                "module",
                "global",
                "commonjs",
                "umd",
                "amd",
                "jsonp",
                "import",
                "var",
                "assign",
                "this",
                "window",
                "self",
                "commonjs2",
                "commonjs-module",
                "commonjs-static",
                "amd-require",
                "umd2",
                "system",
                "promise",
                "module-import",
                "script",
                "node-commonjs",
                "commonjs-import"
            ]);
            const _vv705 = new Set([
                false,
                "eval",
                "source-map",
                "source-map-debugids",
                "cheap-source-map",
                "cheap-source-map-debugids",
                "cheap-module-source-map",
                "cheap-module-source-map-debugids",
                "nosources-source-map",
                "nosources-source-map-debugids",
                "nosources-cheap-source-map",
                "nosources-cheap-source-map-debugids",
                "nosources-cheap-module-source-map",
                "nosources-cheap-module-source-map-debugids",
                "inline-source-map",
                "inline-source-map-debugids",
                "inline-cheap-source-map",
                "inline-cheap-source-map-debugids",
                "inline-cheap-module-source-map",
                "inline-cheap-module-source-map-debugids",
                "inline-nosources-source-map",
                "inline-nosources-source-map-debugids",
                "inline-nosources-cheap-source-map",
                "inline-nosources-cheap-source-map-debugids",
                "inline-nosources-cheap-module-source-map",
                "inline-nosources-cheap-module-source-map-debugids",
                "hidden-source-map",
                "hidden-source-map-debugids",
                "hidden-cheap-source-map",
                "hidden-cheap-source-map-debugids",
                "hidden-cheap-module-source-map",
                "hidden-cheap-module-source-map-debugids",
                "hidden-nosources-source-map",
                "hidden-nosources-source-map-debugids",
                "hidden-nosources-cheap-source-map",
                "hidden-nosources-cheap-source-map-debugids",
                "hidden-nosources-cheap-module-source-map",
                "hidden-nosources-cheap-module-source-map-debugids",
                "eval-source-map",
                "eval-source-map-debugids",
                "eval-cheap-source-map",
                "eval-cheap-source-map-debugids",
                "eval-cheap-module-source-map",
                "eval-cheap-module-source-map-debugids",
                "eval-nosources-source-map",
                "eval-nosources-source-map-debugids",
                "eval-nosources-cheap-source-map",
                "eval-nosources-cheap-source-map-debugids",
                "eval-nosources-cheap-module-source-map",
                "eval-nosources-cheap-module-source-map-debugids",
                "source-map-debugids-debugids",
                "cheap-source-map-debugids-debugids",
                "cheap-module-source-map-debugids-debugids",
                "nosources-source-map-debugids-debugids",
                "nosources-cheap-source-map-debugids-debugids",
                "nosources-cheap-module-source-map-debugids-debugids",
                "inline-source-map-debugids-debugids",
                "inline-cheap-source-map-debugids-debugids",
                "inline-cheap-module-source-map-debugids-debugids",
                "inline-nosources-source-map-debugids-debugids",
                "inline-nosources-cheap-source-map-debugids-debugids",
                "inline-nosources-cheap-module-source-map-debugids-debugids",
                "hidden-source-map-debugids-debugids",
                "hidden-cheap-source-map-debugids-debugids",
                "hidden-cheap-module-source-map-debugids-debugids",
                "hidden-nosources-source-map-debugids-debugids",
                "hidden-nosources-cheap-source-map-debugids-debugids",
                "hidden-nosources-cheap-module-source-map-debugids-debugids",
                "eval-source-map-debugids-debugids",
                "eval-cheap-source-map-debugids-debugids",
                "eval-cheap-module-source-map-debugids-debugids",
                "eval-nosources-source-map-debugids-debugids",
                "eval-nosources-cheap-source-map-debugids-debugids",
                "eval-nosources-cheap-module-source-map-debugids-debugids"
            ]);
            const _vv728 = new Set([
                3,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                2015,
                2016,
                2017,
                2018,
                2019,
                2020,
                2021,
                2022,
                2023,
                2024,
                2025,
                2026,
                "latest"
            ]);
            const _ip0 = (input, _exceptionable = true)=>{
                const array = input;
                const top = input[0];
                if (0 === input.length) return true;
                const arrayPredicators = [
                    [
                        (top)=>null != top && ("string" == typeof top || "object" == typeof top && null !== top && _io141(top, false)),
                        (entire)=>entire.every((elem, _index105)=>null != elem && ("string" == typeof elem || "object" == typeof elem && null !== elem && _io141(elem, _exceptionable)))
                    ],
                    [
                        (top)=>"string" == typeof top,
                        (entire)=>entire.every((elem, _index106)=>"string" == typeof elem)
                    ]
                ];
                const passed = arrayPredicators.filter((pred)=>pred[0](top));
                if (1 === passed.length) return passed[0][1](array);
                if (1 < passed.length) {
                    for (const pred of passed)if (array.every((value)=>true === pred[0](value))) return pred[1](array);
                }
                return false;
            };
            const _ip1 = (input, _exceptionable = true)=>{
                const array = input;
                const top = input[0];
                if (0 === input.length) return true;
                const arrayPredicators = [
                    [
                        (top)=>"string" == typeof top,
                        (entire)=>entire.every((elem, _index123)=>"string" == typeof elem)
                    ],
                    [
                        (top)=>top instanceof Uint8Array,
                        (entire)=>entire.every((elem, _index124)=>elem instanceof Uint8Array)
                    ]
                ];
                const passed = arrayPredicators.filter((pred)=>pred[0](top));
                if (1 === passed.length) return passed[0][1](array);
                if (1 < passed.length) {
                    for (const pred of passed)if (array.every((value)=>true === pred[0](value))) return pred[1](array);
                }
                return false;
            };
            const _vp2 = (input, _path, _exceptionable = true)=>{
                const array = input;
                const top = input[0];
                if (0 === input.length) return true;
                const arrayPredicators = [
                    [
                        (top)=>null != top && ("string" == typeof top || "object" == typeof top && null !== top && _vo141(top, _path, false)),
                        (entire)=>entire.map((elem, _index476)=>(null !== elem || _report(_exceptionable, {
                                    path: _path + "[" + _index476 + "]",
                                    expected: "(WatchFiles.o1 | string)",
                                    value: elem
                                })) && (void 0 !== elem || _report(_exceptionable, {
                                    path: _path + "[" + _index476 + "]",
                                    expected: "(WatchFiles.o1 | string)",
                                    value: elem
                                })) && ("string" == typeof elem || ("object" == typeof elem && null !== elem || _report(_exceptionable, {
                                    path: _path + "[" + _index476 + "]",
                                    expected: "(WatchFiles.o1 | string)",
                                    value: elem
                                })) && _vo141(elem, _path + "[" + _index476 + "]", _exceptionable) || _report(_exceptionable, {
                                    path: _path + "[" + _index476 + "]",
                                    expected: "(WatchFiles.o1 | string)",
                                    value: elem
                                }))).every((flag)=>flag)
                    ],
                    [
                        (top)=>"string" == typeof top,
                        (entire)=>entire.map((elem, _index477)=>"string" == typeof elem || _report(_exceptionable, {
                                    path: _path + "[" + _index477 + "]",
                                    expected: "string",
                                    value: elem
                                })).every((flag)=>flag)
                    ]
                ];
                const passed = arrayPredicators.filter((pred)=>pred[0](top));
                if (1 === passed.length) return passed[0][1](array);
                if (1 < passed.length) {
                    for (const pred of passed)if (array.every((value)=>true === pred[0](value))) return pred[1](array);
                }
                return _report(_exceptionable, {
                    path: _path,
                    expected: "(Array<string | WatchFiles> | Array<string>)",
                    value: input
                });
            };
            const _vp3 = (input, _path, _exceptionable = true)=>{
                const array = input;
                const top = input[0];
                if (0 === input.length) return true;
                const arrayPredicators = [
                    [
                        (top)=>"string" == typeof top,
                        (entire)=>entire.map((elem, _index494)=>"string" == typeof elem || _report(_exceptionable, {
                                    path: _path + "[" + _index494 + "]",
                                    expected: "string",
                                    value: elem
                                })).every((flag)=>flag)
                    ],
                    [
                        (top)=>top instanceof Uint8Array,
                        (entire)=>entire.map((elem, _index495)=>elem instanceof Uint8Array || _report(_exceptionable, {
                                    path: _path + "[" + _index495 + "]",
                                    expected: "Uint8Array",
                                    value: elem
                                })).every((flag)=>flag)
                    ]
                ];
                const passed = arrayPredicators.filter((pred)=>pred[0](top));
                if (1 === passed.length) return passed[0][1](array);
                if (1 < passed.length) {
                    for (const pred of passed)if (array.every((value)=>true === pred[0](value))) return pred[1](array);
                }
                return _report(_exceptionable, {
                    path: _path,
                    expected: "(Array<string> | Array<Uint8Array<ArrayBufferLike>>)",
                    value: input
                });
            };
            const _io0 = (input, _exceptionable = true)=>(void 0 === input.dev || "object" == typeof input.dev && null !== input.dev && false === Array.isArray(input.dev) && _io1(input.dev, _exceptionable)) && (void 0 === input.environments || "object" == typeof input.environments && null !== input.environments && false === Array.isArray(input.environments) && _io8(input.environments, _exceptionable)) && (void 0 === input.mode || "none" === input.mode || "development" === input.mode || "production" === input.mode) && (void 0 === input.output || "object" == typeof input.output && null !== input.output && false === Array.isArray(input.output) && _io407(input.output, _exceptionable)) && (void 0 === input.performance || "object" == typeof input.performance && null !== input.performance && false === Array.isArray(input.performance) && _io413(input.performance, _exceptionable)) && (void 0 === input.resolve || "object" == typeof input.resolve && null !== input.resolve && false === Array.isArray(input.resolve) && _io418(input.resolve, _exceptionable)) && (void 0 === input.server || "object" == typeof input.server && null !== input.server && false === Array.isArray(input.server) && _io420(input.server, _exceptionable)) && (void 0 === input.source || "object" == typeof input.source && null !== input.source && false === Array.isArray(input.source) && _io421(input.source, _exceptionable)) && (void 0 === input.tools || "object" == typeof input.tools && null !== input.tools && false === Array.isArray(input.tools) && _io427(input.tools, _exceptionable)) && (void 0 === input.plugins || Array.isArray(input.plugins) && (_ia4(input.plugins, _exceptionable) || false)) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "dev",
                        "environments",
                        "mode",
                        "output",
                        "performance",
                        "resolve",
                        "server",
                        "source",
                        "tools",
                        "plugins"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io1 = (input, _exceptionable = true)=>(void 0 === input.assetPrefix || "string" == typeof input.assetPrefix || "boolean" == typeof input.assetPrefix) && (void 0 === input.client || "object" == typeof input.client && null !== input.client && false === Array.isArray(input.client) && _io2(input.client, _exceptionable)) && (void 0 === input.hmr || "boolean" == typeof input.hmr) && (void 0 === input.liveReload || "boolean" == typeof input.liveReload) && null !== input.watchFiles && (void 0 === input.watchFiles || Array.isArray(input.watchFiles) && input.watchFiles.every((elem, _index1)=>"object" == typeof elem && null !== elem && _io3(elem, _exceptionable)) || "object" == typeof input.watchFiles && null !== input.watchFiles && _io3(input.watchFiles, _exceptionable)) && null !== input.writeToDisk && (void 0 === input.writeToDisk || "function" == typeof input.writeToDisk || "boolean" == typeof input.writeToDisk) && null !== input.progressBar && (void 0 === input.progressBar || "boolean" == typeof input.progressBar || "object" == typeof input.progressBar && null !== input.progressBar && false === Array.isArray(input.progressBar) && _io7(input.progressBar, _exceptionable)) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "assetPrefix",
                        "client",
                        "hmr",
                        "liveReload",
                        "watchFiles",
                        "writeToDisk",
                        "progressBar"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io2 = (input, _exceptionable = true)=>(void 0 === input.websocketTransport || "string" == typeof input.websocketTransport) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "websocketTransport"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io3 = (input, _exceptionable = true)=>null !== input.paths && void 0 !== input.paths && ("string" == typeof input.paths || Array.isArray(input.paths) && input.paths.every((elem, _index2)=>"string" == typeof elem)) && (void 0 === input.options || "object" == typeof input.options && null !== input.options && false === Array.isArray(input.options) && _io4(input.options, _exceptionable)) && (void 0 === input.type || "reload-page" === input.type || "reload-server" === input.type) && (1 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "paths",
                        "options",
                        "type"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io4 = (input, _exceptionable = true)=>(void 0 === input.persistent || "boolean" == typeof input.persistent) && (void 0 === input.ignoreInitial || "boolean" == typeof input.ignoreInitial) && (void 0 === input.followSymlinks || "boolean" == typeof input.followSymlinks) && (void 0 === input.cwd || "string" == typeof input.cwd) && (void 0 === input.usePolling || "boolean" == typeof input.usePolling) && (void 0 === input.interval || "number" == typeof input.interval) && (void 0 === input.binaryInterval || "number" == typeof input.binaryInterval) && (void 0 === input.alwaysStat || "boolean" == typeof input.alwaysStat) && (void 0 === input.depth || "number" == typeof input.depth) && (void 0 === input.ignorePermissionErrors || "boolean" == typeof input.ignorePermissionErrors) && (void 0 === input.atomic || "number" == typeof input.atomic || "boolean" == typeof input.atomic) && null !== input.ignored && (void 0 === input.ignored || "function" == typeof input.ignored || "string" == typeof input.ignored || input.ignored instanceof RegExp || Array.isArray(input.ignored) && input.ignored.every((elem, _index3)=>null != elem && ("function" == typeof elem || "string" == typeof elem || elem instanceof RegExp || "object" == typeof elem && null !== elem && _io5(elem, _exceptionable))) || "object" == typeof input.ignored && null !== input.ignored && _io5(input.ignored, _exceptionable)) && null !== input.awaitWriteFinish && (void 0 === input.awaitWriteFinish || "boolean" == typeof input.awaitWriteFinish || "object" == typeof input.awaitWriteFinish && null !== input.awaitWriteFinish && false === Array.isArray(input.awaitWriteFinish) && _io6(input.awaitWriteFinish, _exceptionable)) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "persistent",
                        "ignoreInitial",
                        "followSymlinks",
                        "cwd",
                        "usePolling",
                        "interval",
                        "binaryInterval",
                        "alwaysStat",
                        "depth",
                        "ignorePermissionErrors",
                        "atomic",
                        "ignored",
                        "awaitWriteFinish"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io5 = (input, _exceptionable = true)=>"string" == typeof input.path && (void 0 === input.recursive || "boolean" == typeof input.recursive) && (1 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "path",
                        "recursive"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io6 = (input, _exceptionable = true)=>(void 0 === input.stabilityThreshold || "number" == typeof input.stabilityThreshold) && (void 0 === input.pollInterval || "number" == typeof input.pollInterval) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "stabilityThreshold",
                        "pollInterval"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io7 = (input, _exceptionable = true)=>(void 0 === input.id || "string" == typeof input.id) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "id"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io8 = (input, _exceptionable = true)=>Object.keys(input).every((key)=>{
                    const value = input[key];
                    if (void 0 === value) return true;
                    return "object" == typeof value && null !== value && false === Array.isArray(value) && _io9(value, _exceptionable);
                });
            const _io9 = (input, _exceptionable = true)=>(void 0 === input.dev || "object" == typeof input.dev && null !== input.dev && false === Array.isArray(input.dev) && _io10(input.dev, _exceptionable)) && (void 0 === input.html || "object" == typeof input.html && null !== input.html && false === Array.isArray(input.html) && _io14(input.html, _exceptionable)) && (void 0 === input.tools || "object" == typeof input.tools && null !== input.tools && false === Array.isArray(input.tools) && _io23(input.tools, _exceptionable)) && (void 0 === input.resolve || "object" == typeof input.resolve && null !== input.resolve && false === Array.isArray(input.resolve) && _io351(input.resolve, _exceptionable)) && (void 0 === input.source || "object" == typeof input.source && null !== input.source && false === Array.isArray(input.source) && _io353(input.source, _exceptionable)) && (void 0 === input.output || "object" == typeof input.output && null !== input.output && false === Array.isArray(input.output) && _io359(input.output, _exceptionable)) && (void 0 === input.security || "object" == typeof input.security && null !== input.security && false === Array.isArray(input.security) && _io384(input.security, _exceptionable)) && (void 0 === input.performance || "object" == typeof input.performance && null !== input.performance && false === Array.isArray(input.performance) && _io386(input.performance, _exceptionable)) && (void 0 === input.moduleFederation || "object" == typeof input.moduleFederation && null !== input.moduleFederation && _io397(input.moduleFederation, _exceptionable)) && (void 0 === input.plugins || Array.isArray(input.plugins) && (_ia4(input.plugins, _exceptionable) || false)) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "dev",
                        "html",
                        "tools",
                        "resolve",
                        "source",
                        "output",
                        "security",
                        "performance",
                        "moduleFederation",
                        "plugins"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io10 = (input, _exceptionable = true)=>(void 0 === input.hmr || "boolean" == typeof input.hmr) && (void 0 === input.client || "object" == typeof input.client && null !== input.client && false === Array.isArray(input.client) && _io11(input.client, _exceptionable)) && (void 0 === input.liveReload || "boolean" == typeof input.liveReload) && (void 0 === input.assetPrefix || "string" == typeof input.assetPrefix || "boolean" == typeof input.assetPrefix) && null !== input.progressBar && (void 0 === input.progressBar || "boolean" == typeof input.progressBar || "object" == typeof input.progressBar && null !== input.progressBar && false === Array.isArray(input.progressBar) && _io12(input.progressBar, _exceptionable)) && null !== input.lazyCompilation && (void 0 === input.lazyCompilation || "boolean" == typeof input.lazyCompilation || "object" == typeof input.lazyCompilation && null !== input.lazyCompilation && false === Array.isArray(input.lazyCompilation) && _io13(input.lazyCompilation, _exceptionable)) && null !== input.writeToDisk && (void 0 === input.writeToDisk || "function" == typeof input.writeToDisk || "boolean" == typeof input.writeToDisk) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "hmr",
                        "client",
                        "liveReload",
                        "assetPrefix",
                        "progressBar",
                        "lazyCompilation",
                        "writeToDisk"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io11 = (input, _exceptionable = true)=>(void 0 === input.path || "string" == typeof input.path) && (void 0 === input.port || "string" == typeof input.port || "number" == typeof input.port) && (void 0 === input.host || "string" == typeof input.host) && (void 0 === input.protocol || "ws" === input.protocol || "wss" === input.protocol) && (void 0 === input.reconnect || "number" == typeof input.reconnect) && (void 0 === input.overlay || "boolean" == typeof input.overlay) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "path",
                        "port",
                        "host",
                        "protocol",
                        "reconnect",
                        "overlay"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io12 = (input, _exceptionable = true)=>(void 0 === input.id || "string" == typeof input.id) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "id"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io13 = (input, _exceptionable = true)=>(void 0 === input.imports || "boolean" == typeof input.imports) && (void 0 === input.entries || "boolean" == typeof input.entries) && null !== input.test && (void 0 === input.test || "function" == typeof input.test || input.test instanceof RegExp) && (void 0 === input.client || "string" == typeof input.client) && (void 0 === input.serverUrl || "string" == typeof input.serverUrl) && (void 0 === input.prefix || "string" == typeof input.prefix) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "imports",
                        "entries",
                        "test",
                        "client",
                        "serverUrl",
                        "prefix"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io14 = (input, _exceptionable = true)=>null !== input.meta && (void 0 === input.meta || "function" == typeof input.meta || Array.isArray(input.meta) && input.meta.every((elem, _index4)=>null != elem && ("function" == typeof elem || "object" == typeof elem && null !== elem && false === Array.isArray(elem) && _io15(elem, _exceptionable))) || "object" == typeof input.meta && null !== input.meta && false === Array.isArray(input.meta) && _io15(input.meta, _exceptionable)) && null !== input.title && (void 0 === input.title || "function" == typeof input.title || "string" == typeof input.title || Array.isArray(input.title) && input.title.every((elem, _index5)=>null != elem && ("function" == typeof elem || "string" == typeof elem))) && null !== input.inject && (void 0 === input.inject || "function" == typeof input.inject || "body" === input.inject || "head" === input.inject || "boolean" == typeof input.inject || Array.isArray(input.inject) && input.inject.every((elem, _index6)=>null != elem && ("function" == typeof elem || "body" === elem || "head" === elem || "boolean" == typeof elem))) && null !== input.tags && (void 0 === input.tags || "function" == typeof input.tags || Array.isArray(input.tags) && input.tags.every((elem, _index7)=>null != elem && ("function" == typeof elem || "object" == typeof elem && null !== elem && _io17(elem, _exceptionable))) || "object" == typeof input.tags && null !== input.tags && _io17(input.tags, _exceptionable)) && null !== input.favicon && (void 0 === input.favicon || "function" == typeof input.favicon || "string" == typeof input.favicon || Array.isArray(input.favicon) && input.favicon.every((elem, _index8)=>null != elem && ("function" == typeof elem || "string" == typeof elem))) && (void 0 === input.appIcon || "object" == typeof input.appIcon && null !== input.appIcon && _io20(input.appIcon, _exceptionable)) && (void 0 === input.mountId || "string" == typeof input.mountId) && (void 0 === input.crossorigin || "anonymous" === input.crossorigin || "use-credentials" === input.crossorigin || "boolean" == typeof input.crossorigin) && (void 0 === input.outputStructure || "flat" === input.outputStructure || "nested" === input.outputStructure) && null !== input.template && (void 0 === input.template || "function" == typeof input.template || "string" == typeof input.template || Array.isArray(input.template) && input.template.every((elem, _index9)=>null != elem && ("function" == typeof elem || "string" == typeof elem))) && null !== input.templateParameters && (void 0 === input.templateParameters || "function" == typeof input.templateParameters || Array.isArray(input.templateParameters) && input.templateParameters.every((elem, _index10)=>null != elem && ("function" == typeof elem || "object" == typeof elem && null !== elem && false === Array.isArray(elem) && _io22(elem, _exceptionable))) || "object" == typeof input.templateParameters && null !== input.templateParameters && false === Array.isArray(input.templateParameters) && _io22(input.templateParameters, _exceptionable)) && (void 0 === input.scriptLoading || "defer" === input.scriptLoading || "module" === input.scriptLoading || "blocking" === input.scriptLoading) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "meta",
                        "title",
                        "inject",
                        "tags",
                        "favicon",
                        "appIcon",
                        "mountId",
                        "crossorigin",
                        "outputStructure",
                        "template",
                        "templateParameters",
                        "scriptLoading"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io15 = (input, _exceptionable = true)=>Object.keys(input).every((key)=>{
                    const value = input[key];
                    if (void 0 === value) return true;
                    return null != value && (false === value || "string" == typeof value || "object" == typeof value && null !== value && false === Array.isArray(value) && _io16(value, _exceptionable));
                });
            const _io16 = (input, _exceptionable = true)=>Object.keys(input).every((key)=>{
                    const value = input[key];
                    if (void 0 === value) return true;
                    return "string" == typeof value || "boolean" == typeof value;
                });
            const _io17 = (input, _exceptionable = true)=>"string" == typeof input.tag && (void 0 === input.attrs || "object" == typeof input.attrs && null !== input.attrs && false === Array.isArray(input.attrs) && _io18(input.attrs, _exceptionable)) && (void 0 === input.children || "string" == typeof input.children) && (void 0 === input.metadata || "object" == typeof input.metadata && null !== input.metadata && false === Array.isArray(input.metadata) && _io19(input.metadata, _exceptionable)) && null !== input.hash && (void 0 === input.hash || "function" == typeof input.hash || "string" == typeof input.hash || "boolean" == typeof input.hash) && null !== input.publicPath && (void 0 === input.publicPath || "function" == typeof input.publicPath || "string" == typeof input.publicPath || "boolean" == typeof input.publicPath) && (void 0 === input.append || "boolean" == typeof input.append) && (void 0 === input.head || "boolean" == typeof input.head) && (1 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "tag",
                        "attrs",
                        "children",
                        "metadata",
                        "hash",
                        "publicPath",
                        "append",
                        "head"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io18 = (input, _exceptionable = true)=>Object.keys(input).every((key)=>{
                    const value = input[key];
                    if (void 0 === value) return true;
                    return null == value || "string" == typeof value || "boolean" == typeof value;
                });
            const _io19 = (input, _exceptionable = true)=>Object.keys(input).every((key)=>{
                    input[key];
                    return true;
                });
            const _io20 = (input, _exceptionable = true)=>(void 0 === input.name || "string" == typeof input.name) && Array.isArray(input.icons) && input.icons.every((elem, _index11)=>"object" == typeof elem && null !== elem && _io21(elem, _exceptionable)) && (void 0 === input.filename || "string" == typeof input.filename) && (1 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "name",
                        "icons",
                        "filename"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io21 = (input, _exceptionable = true)=>"string" == typeof input.src && "number" == typeof input.size && (void 0 === input.target || "apple-touch-icon" === input.target || "web-app-manifest" === input.target) && (2 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "src",
                        "size",
                        "target"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io22 = (input, _exceptionable = true)=>Object.keys(input).every((key)=>{
                    input[key];
                    return true;
                });
            const _io23 = (input, _exceptionable = true)=>null !== input.bundlerChain && (void 0 === input.bundlerChain || "function" == typeof input.bundlerChain || Array.isArray(input.bundlerChain) && input.bundlerChain.every((elem, _index12)=>true)) && null !== input.cssLoader && (void 0 === input.cssLoader || "function" == typeof input.cssLoader || Array.isArray(input.cssLoader) && input.cssLoader.every((elem, _index13)=>null != elem && ("function" == typeof elem || "object" == typeof elem && null !== elem && false === Array.isArray(elem) && _io24(elem, _exceptionable))) || "object" == typeof input.cssLoader && null !== input.cssLoader && false === Array.isArray(input.cssLoader) && _io24(input.cssLoader, _exceptionable)) && null !== input.postcss && (void 0 === input.postcss || "function" == typeof input.postcss || Array.isArray(input.postcss) && input.postcss.every((elem, _index14)=>null != elem && ("function" == typeof elem || "object" == typeof elem && null !== elem && false === Array.isArray(elem) && _io28(elem, _exceptionable))) || "object" == typeof input.postcss && null !== input.postcss && false === Array.isArray(input.postcss) && _io28(input.postcss, _exceptionable)) && null !== input.styleLoader && (void 0 === input.styleLoader || "function" == typeof input.styleLoader || Array.isArray(input.styleLoader) && input.styleLoader.every((elem, _index15)=>null != elem && ("function" == typeof elem || "object" == typeof elem && null !== elem && false === Array.isArray(elem) && _io36(elem, _exceptionable))) || "object" == typeof input.styleLoader && null !== input.styleLoader && false === Array.isArray(input.styleLoader) && _io36(input.styleLoader, _exceptionable)) && null !== input.htmlPlugin && (void 0 === input.htmlPlugin || "function" == typeof input.htmlPlugin || "boolean" == typeof input.htmlPlugin || Array.isArray(input.htmlPlugin) && input.htmlPlugin.every((elem, _index16)=>null != elem && ("function" == typeof elem || "object" == typeof elem && null !== elem && false === Array.isArray(elem) && _io38(elem, _exceptionable))) || "object" == typeof input.htmlPlugin && null !== input.htmlPlugin && false === Array.isArray(input.htmlPlugin) && _io38(input.htmlPlugin, _exceptionable)) && null !== input.swc && (void 0 === input.swc || "function" == typeof input.swc || Array.isArray(input.swc) && input.swc.every((elem, _index17)=>null != elem && ("function" == typeof elem || "object" == typeof elem && null !== elem && false === Array.isArray(elem) && _io43(elem, _exceptionable))) || "object" == typeof input.swc && null !== input.swc && false === Array.isArray(input.swc) && _io43(input.swc, _exceptionable)) && null !== input.lightningcssLoader && (void 0 === input.lightningcssLoader || "function" == typeof input.lightningcssLoader || "boolean" == typeof input.lightningcssLoader || Array.isArray(input.lightningcssLoader) && input.lightningcssLoader.every((elem, _index18)=>null != elem && ("function" == typeof elem || "object" == typeof elem && null !== elem && false === Array.isArray(elem) && _io77(elem, _exceptionable))) || "object" == typeof input.lightningcssLoader && null !== input.lightningcssLoader && false === Array.isArray(input.lightningcssLoader) && _io77(input.lightningcssLoader, _exceptionable)) && (void 0 === input.cssExtract || "object" == typeof input.cssExtract && null !== input.cssExtract && false === Array.isArray(input.cssExtract) && _io83(input.cssExtract, _exceptionable)) && null !== input.rspack && (void 0 === input.rspack || "function" == typeof input.rspack || Array.isArray(input.rspack) && input.rspack.every((elem, _index19)=>null != elem && ("function" == typeof elem || "object" == typeof elem && null !== elem && false === Array.isArray(elem) && _io86(elem, _exceptionable))) || "object" == typeof input.rspack && null !== input.rspack && false === Array.isArray(input.rspack) && _io86(input.rspack, _exceptionable)) && null !== input.webpack && (void 0 === input.webpack || "function" == typeof input.webpack || Array.isArray(input.webpack) && input.webpack.every((elem, _index20)=>null != elem && ("function" == typeof elem || "object" == typeof elem && null !== elem && false === Array.isArray(elem) && _io196(elem, _exceptionable))) || "object" == typeof input.webpack && null !== input.webpack && false === Array.isArray(input.webpack) && _io196(input.webpack, _exceptionable)) && null !== input.webpackChain && (void 0 === input.webpackChain || "function" == typeof input.webpackChain || Array.isArray(input.webpackChain) && input.webpackChain.every((elem, _index21)=>true)) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "bundlerChain",
                        "cssLoader",
                        "postcss",
                        "styleLoader",
                        "htmlPlugin",
                        "swc",
                        "lightningcssLoader",
                        "cssExtract",
                        "rspack",
                        "webpack",
                        "webpackChain"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io24 = (input, _exceptionable = true)=>null !== input.url && (void 0 === input.url || "boolean" == typeof input.url || "object" == typeof input.url && null !== input.url && _io25(input.url, _exceptionable)) && null !== input["import"] && (void 0 === input["import"] || "boolean" == typeof input["import"] || "object" == typeof input["import"] && null !== input["import"] && _io26(input["import"], _exceptionable)) && null !== input.modules && (void 0 === input.modules || "string" == typeof input.modules || "boolean" == typeof input.modules || "object" == typeof input.modules && null !== input.modules && false === Array.isArray(input.modules) && _io27(input.modules, _exceptionable)) && (void 0 === input.sourceMap || "boolean" == typeof input.sourceMap) && (void 0 === input.importLoaders || "number" == typeof input.importLoaders) && (void 0 === input.esModule || "boolean" == typeof input.esModule) && (void 0 === input.exportType || "string" === input.exportType || "array" === input.exportType || "css-style-sheet" === input.exportType) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "url",
                        "import",
                        "modules",
                        "sourceMap",
                        "importLoaders",
                        "esModule",
                        "exportType"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io25 = (input, _exceptionable = true)=>1 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "filter"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                });
            const _io26 = (input, _exceptionable = true)=>1 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "filter"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                });
            const _io27 = (input, _exceptionable = true)=>null !== input.auto && (void 0 === input.auto || "function" == typeof input.auto || "boolean" == typeof input.auto || input.auto instanceof RegExp) && (void 0 === input.exportGlobals || "boolean" == typeof input.exportGlobals) && null !== input.exportLocalsConvention && (void 0 === input.exportLocalsConvention || "function" == typeof input.exportLocalsConvention || "asIs" === input.exportLocalsConvention || "as-is" === input.exportLocalsConvention || "camelCase" === input.exportLocalsConvention || "camel-case" === input.exportLocalsConvention || "camelCaseOnly" === input.exportLocalsConvention || "camel-case-only" === input.exportLocalsConvention || "dashes" === input.exportLocalsConvention || "dashesOnly" === input.exportLocalsConvention || "dashes-only" === input.exportLocalsConvention) && (void 0 === input.exportOnlyLocals || "boolean" == typeof input.exportOnlyLocals) && (void 0 === input.getLocalIdent || true) && (void 0 === input.localIdentName || "string" == typeof input.localIdentName) && (void 0 === input.localIdentContext || "string" == typeof input.localIdentContext) && (void 0 === input.localIdentHashSalt || "string" == typeof input.localIdentHashSalt) && (void 0 === input.localIdentHashFunction || "string" == typeof input.localIdentHashFunction) && (void 0 === input.localIdentHashDigest || "string" == typeof input.localIdentHashDigest) && null !== input.localIdentRegExp && (void 0 === input.localIdentRegExp || "string" == typeof input.localIdentRegExp || input.localIdentRegExp instanceof RegExp) && null !== input.mode && (void 0 === input.mode || "function" == typeof input.mode || "local" === input.mode || "global" === input.mode || "pure" === input.mode || "icss" === input.mode) && (void 0 === input.namedExport || "boolean" == typeof input.namedExport) && (void 0 === input.getJSON || true) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "auto",
                        "exportGlobals",
                        "exportLocalsConvention",
                        "exportOnlyLocals",
                        "getLocalIdent",
                        "localIdentName",
                        "localIdentContext",
                        "localIdentHashSalt",
                        "localIdentHashFunction",
                        "localIdentHashDigest",
                        "localIdentRegExp",
                        "mode",
                        "namedExport",
                        "getJSON"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io28 = (input, _exceptionable = true)=>(void 0 === input.execute || "boolean" == typeof input.execute) && (void 0 === input.sourceMap || "boolean" == typeof input.sourceMap) && true && null !== input.postcssOptions && (void 0 === input.postcssOptions || "function" == typeof input.postcssOptions || "object" == typeof input.postcssOptions && null !== input.postcssOptions && false === Array.isArray(input.postcssOptions) && _io29(input.postcssOptions, _exceptionable)) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "execute",
                        "sourceMap",
                        "implementation",
                        "postcssOptions"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io29 = (input, _exceptionable = true)=>(void 0 === input.document || "string" == typeof input.document) && (void 0 === input.from || "string" == typeof input.from) && null !== input.map && (void 0 === input.map || "boolean" == typeof input.map || "object" == typeof input.map && null !== input.map && false === Array.isArray(input.map) && _io30(input.map, _exceptionable)) && (void 0 === input.parser || "object" == typeof input.parser && null !== input.parser && false === Array.isArray(input.parser) && _iu4(input.parser, _exceptionable)) && (void 0 === input.stringifier || "object" == typeof input.stringifier && null !== input.stringifier && false === Array.isArray(input.stringifier) && _iu5(input.stringifier, _exceptionable)) && (void 0 === input.syntax || "object" == typeof input.syntax && null !== input.syntax && false === Array.isArray(input.syntax) && _io34(input.syntax, _exceptionable)) && (void 0 === input.to || "string" == typeof input.to) && (void 0 === input.config || "boolean" == typeof input.config) && (void 0 === input.plugins || Array.isArray(input.plugins)) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "document",
                        "from",
                        "map",
                        "parser",
                        "stringifier",
                        "syntax",
                        "to",
                        "config",
                        "plugins"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io30 = (input, _exceptionable = true)=>(void 0 === input.absolute || "boolean" == typeof input.absolute) && null !== input.annotation && (void 0 === input.annotation || "function" == typeof input.annotation || "string" == typeof input.annotation || "boolean" == typeof input.annotation) && (void 0 === input.from || "string" == typeof input.from) && (void 0 === input.inline || "boolean" == typeof input.inline) && null !== input.prev && (void 0 === input.prev || "function" == typeof input.prev || "string" == typeof input.prev || "boolean" == typeof input.prev || "object" == typeof input.prev && null !== input.prev && false === Array.isArray(input.prev) && _io31(input.prev, _exceptionable)) && (void 0 === input.sourcesContent || "boolean" == typeof input.sourcesContent) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "absolute",
                        "annotation",
                        "from",
                        "inline",
                        "prev",
                        "sourcesContent"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io31 = (input, _exceptionable = true)=>0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                });
            const _io32 = (input, _exceptionable = true)=>"number" == typeof input.length && true && "object" == typeof input.caller && null !== input.caller && _io33(input.caller, _exceptionable) && "string" == typeof input.name && (5 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "prototype",
                        "length",
                        "arguments",
                        "caller",
                        "name"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io33 = (input, _exceptionable = true)=>"number" == typeof input.length && true && "object" == typeof input.caller && null !== input.caller && _io33(input.caller, _exceptionable) && "string" == typeof input.name && (5 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "prototype",
                        "length",
                        "arguments",
                        "caller",
                        "name"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io34 = (input, _exceptionable = true)=>(void 0 === input.parse || "object" == typeof input.parse && null !== input.parse && _io32(input.parse, _exceptionable)) && (void 0 === input.stringify || "object" == typeof input.stringify && null !== input.stringify && _io35(input.stringify, _exceptionable)) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "parse",
                        "stringify"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io35 = (input, _exceptionable = true)=>"number" == typeof input.length && true && "object" == typeof input.caller && null !== input.caller && _io33(input.caller, _exceptionable) && "string" == typeof input.name && (5 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "prototype",
                        "length",
                        "arguments",
                        "caller",
                        "name"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io36 = (input, _exceptionable = true)=>(void 0 === input.esModule || "boolean" == typeof input.esModule) && (void 0 === input.injectType || "styleTag" === input.injectType || "singletonStyleTag" === input.injectType || "lazyStyleTag" === input.injectType || "lazySingletonStyleTag" === input.injectType || "linkTag" === input.injectType) && (void 0 === input.attributes || "object" == typeof input.attributes && null !== input.attributes && false === Array.isArray(input.attributes) && _io37(input.attributes, _exceptionable)) && null !== input.insert && (void 0 === input.insert || "function" == typeof input.insert || "string" == typeof input.insert) && null !== input.styleTagTransform && (void 0 === input.styleTagTransform || "function" == typeof input.styleTagTransform || "string" == typeof input.styleTagTransform) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "esModule",
                        "injectType",
                        "attributes",
                        "insert",
                        "styleTagTransform"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io37 = (input, _exceptionable = true)=>Object.keys(input).every((key)=>{
                    const value = input[key];
                    if (void 0 === value) return true;
                    return "string" == typeof value;
                });
            const _io38 = (input, _exceptionable = true)=>(void 0 === input.cache || "boolean" == typeof input.cache) && null !== input.chunks && (void 0 === input.chunks || "all" === input.chunks || Array.isArray(input.chunks) && input.chunks.every((elem, _index22)=>"string" == typeof elem)) && null !== input.chunksSortMode && (void 0 === input.chunksSortMode || "function" == typeof input.chunksSortMode || "auto" === input.chunksSortMode || "none" === input.chunksSortMode || "manual" === input.chunksSortMode) && (void 0 === input.excludeChunks || Array.isArray(input.excludeChunks) && input.excludeChunks.every((elem, _index23)=>"string" == typeof elem)) && (void 0 === input.favicon || false === input.favicon || "string" == typeof input.favicon) && null !== input.filename && (void 0 === input.filename || "function" == typeof input.filename || "string" == typeof input.filename) && (void 0 === input.publicPath || "string" == typeof input.publicPath) && (void 0 === input.hash || "boolean" == typeof input.hash) && (void 0 === input.inject || "body" === input.inject || "head" === input.inject || "boolean" == typeof input.inject) && (void 0 === input.scriptLoading || "defer" === input.scriptLoading || "module" === input.scriptLoading || "blocking" === input.scriptLoading || "systemjs-module" === input.scriptLoading) && null !== input.meta && (void 0 === input.meta || false === input.meta || "object" == typeof input.meta && null !== input.meta && false === Array.isArray(input.meta) && _io39(input.meta, _exceptionable)) && (void 0 === input.minify || true) && (void 0 === input.showErrors || "boolean" == typeof input.showErrors) && (void 0 === input.template || "string" == typeof input.template) && null !== input.templateContent && (void 0 === input.templateContent || "function" == typeof input.templateContent || false === input.templateContent || "string" == typeof input.templateContent || "object" == typeof input.templateContent && null !== input.templateContent && _io41(input.templateContent, _exceptionable)) && null !== input.templateParameters && (void 0 === input.templateParameters || "function" == typeof input.templateParameters || false === input.templateParameters || "object" == typeof input.templateParameters && null !== input.templateParameters && false === Array.isArray(input.templateParameters) && _io42(input.templateParameters, _exceptionable)) && (void 0 === input.title || "string" == typeof input.title) && (void 0 === input.xhtml || "boolean" == typeof input.xhtml) && Object.keys(input).every((key)=>{
                    if ([
                        "cache",
                        "chunks",
                        "chunksSortMode",
                        "excludeChunks",
                        "favicon",
                        "filename",
                        "publicPath",
                        "hash",
                        "inject",
                        "scriptLoading",
                        "meta",
                        "minify",
                        "showErrors",
                        "template",
                        "templateContent",
                        "templateParameters",
                        "title",
                        "xhtml"
                    ].some((prop)=>key === prop)) return true;
                    input[key];
                    return true;
                });
            const _io39 = (input, _exceptionable = true)=>Object.keys(input).every((key)=>{
                    const value = input[key];
                    if (void 0 === value) return true;
                    return null != value && (false === value || "string" == typeof value || "object" == typeof value && null !== value && false === Array.isArray(value) && _io40(value, _exceptionable));
                });
            const _io40 = (input, _exceptionable = true)=>Object.keys(input).every((key)=>{
                    const value = input[key];
                    if (void 0 === value) return true;
                    return "string" == typeof value || "boolean" == typeof value;
                });
            const _io41 = (input, _exceptionable = true)=>"string" == typeof input["__@toStringTag@6659"] && (1 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "__@toStringTag@6659"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io42 = (input, _exceptionable = true)=>Object.keys(input).every((key)=>{
                    input[key];
                    return true;
                });
            const _io43 = (input, _exceptionable = true)=>null !== input.test && (void 0 === input.test || "string" == typeof input.test || Array.isArray(input.test) && input.test.every((elem, _index24)=>"string" == typeof elem)) && null !== input.exclude && (void 0 === input.exclude || "string" == typeof input.exclude || Array.isArray(input.exclude) && input.exclude.every((elem, _index25)=>"string" == typeof elem)) && (void 0 === input.env || "object" == typeof input.env && null !== input.env && false === Array.isArray(input.env) && _io44(input.env, _exceptionable)) && (void 0 === input.jsc || "object" == typeof input.jsc && null !== input.jsc && false === Array.isArray(input.jsc) && _io45(input.jsc, _exceptionable)) && (void 0 === input["module"] || "object" == typeof input["module"] && null !== input["module"] && _iu6(input["module"], _exceptionable)) && (void 0 === input.minify || "boolean" == typeof input.minify) && (void 0 === input.sourceMaps || "inline" === input.sourceMaps || "boolean" == typeof input.sourceMaps) && (void 0 === input.inlineSourcesContent || "boolean" == typeof input.inlineSourcesContent) && (void 0 === input.isModule || "unknown" === input.isModule || "boolean" == typeof input.isModule) && (void 0 === input.rspackExperiments || "object" == typeof input.rspackExperiments && null !== input.rspackExperiments && false === Array.isArray(input.rspackExperiments) && _io74(input.rspackExperiments, _exceptionable)) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "test",
                        "exclude",
                        "env",
                        "jsc",
                        "module",
                        "minify",
                        "sourceMaps",
                        "inlineSourcesContent",
                        "isModule",
                        "rspackExperiments"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io44 = (input, _exceptionable = true)=>(void 0 === input.mode || "usage" === input.mode || "entry" === input.mode) && (void 0 === input.debug || "boolean" == typeof input.debug) && (void 0 === input.dynamicImport || "boolean" == typeof input.dynamicImport) && (void 0 === input.loose || "boolean" == typeof input.loose) && (void 0 === input.bugfixes || "boolean" == typeof input.bugfixes) && (void 0 === input.skip || Array.isArray(input.skip) && input.skip.every((elem, _index26)=>"string" == typeof elem)) && (void 0 === input.include || Array.isArray(input.include) && input.include.every((elem, _index27)=>"string" == typeof elem)) && (void 0 === input.exclude || Array.isArray(input.exclude) && input.exclude.every((elem, _index28)=>"string" == typeof elem)) && (void 0 === input.coreJs || "string" == typeof input.coreJs) && true && (void 0 === input.path || "string" == typeof input.path) && (void 0 === input.shippedProposals || "boolean" == typeof input.shippedProposals) && (void 0 === input.forceAllTransforms || "boolean" == typeof input.forceAllTransforms) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "mode",
                        "debug",
                        "dynamicImport",
                        "loose",
                        "bugfixes",
                        "skip",
                        "include",
                        "exclude",
                        "coreJs",
                        "targets",
                        "path",
                        "shippedProposals",
                        "forceAllTransforms"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io45 = (input, _exceptionable = true)=>(void 0 === input.assumptions || "object" == typeof input.assumptions && null !== input.assumptions && false === Array.isArray(input.assumptions) && _io46(input.assumptions, _exceptionable)) && (void 0 === input.loose || "boolean" == typeof input.loose) && (void 0 === input.parser || "object" == typeof input.parser && null !== input.parser && _iu7(input.parser, _exceptionable)) && (void 0 === input.transform || "object" == typeof input.transform && null !== input.transform && false === Array.isArray(input.transform) && _io49(input.transform, _exceptionable)) && (void 0 === input.externalHelpers || "boolean" == typeof input.externalHelpers) && (void 0 === input.target || true === _iv29.has(input.target)) && (void 0 === input.keepClassNames || "boolean" == typeof input.keepClassNames) && (void 0 === input.experimental || "object" == typeof input.experimental && null !== input.experimental && false === Array.isArray(input.experimental) && _io58(input.experimental, _exceptionable)) && (void 0 === input.baseUrl || "string" == typeof input.baseUrl) && (void 0 === input.paths || "object" == typeof input.paths && null !== input.paths && false === Array.isArray(input.paths) && _io59(input.paths, _exceptionable)) && (void 0 === input.minify || "object" == typeof input.minify && null !== input.minify && false === Array.isArray(input.minify) && _io60(input.minify, _exceptionable)) && (void 0 === input.preserveAllComments || "boolean" == typeof input.preserveAllComments) && (void 0 === input.output || "object" == typeof input.output && null !== input.output && false === Array.isArray(input.output) && _io66(input.output, _exceptionable)) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "assumptions",
                        "loose",
                        "parser",
                        "transform",
                        "externalHelpers",
                        "target",
                        "keepClassNames",
                        "experimental",
                        "baseUrl",
                        "paths",
                        "minify",
                        "preserveAllComments",
                        "output"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io46 = (input, _exceptionable = true)=>(void 0 === input.arrayLikeIsIterable || "boolean" == typeof input.arrayLikeIsIterable) && (void 0 === input.constantReexports || "boolean" == typeof input.constantReexports) && (void 0 === input.constantSuper || "boolean" == typeof input.constantSuper) && (void 0 === input.enumerableModuleMeta || "boolean" == typeof input.enumerableModuleMeta) && (void 0 === input.ignoreFunctionLength || "boolean" == typeof input.ignoreFunctionLength) && (void 0 === input.ignoreFunctionName || "boolean" == typeof input.ignoreFunctionName) && (void 0 === input.ignoreToPrimitiveHint || "boolean" == typeof input.ignoreToPrimitiveHint) && (void 0 === input.iterableIsArray || "boolean" == typeof input.iterableIsArray) && (void 0 === input.mutableTemplateObject || "boolean" == typeof input.mutableTemplateObject) && (void 0 === input.noClassCalls || "boolean" == typeof input.noClassCalls) && (void 0 === input.noDocumentAll || "boolean" == typeof input.noDocumentAll) && (void 0 === input.noIncompleteNsImportDetection || "boolean" == typeof input.noIncompleteNsImportDetection) && (void 0 === input.noNewArrows || "boolean" == typeof input.noNewArrows) && (void 0 === input.objectRestNoSymbols || "boolean" == typeof input.objectRestNoSymbols) && (void 0 === input.privateFieldsAsProperties || "boolean" == typeof input.privateFieldsAsProperties) && (void 0 === input.pureGetters || "boolean" == typeof input.pureGetters) && (void 0 === input.setClassMethods || "boolean" == typeof input.setClassMethods) && (void 0 === input.setComputedProperties || "boolean" == typeof input.setComputedProperties) && (void 0 === input.setPublicClassFields || "boolean" == typeof input.setPublicClassFields) && (void 0 === input.setSpreadProperties || "boolean" == typeof input.setSpreadProperties) && (void 0 === input.skipForOfIteratorClosing || "boolean" == typeof input.skipForOfIteratorClosing) && (void 0 === input.superIsCallableConstructor || "boolean" == typeof input.superIsCallableConstructor) && (void 0 === input.tsEnumIsReadonly || "boolean" == typeof input.tsEnumIsReadonly) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "arrayLikeIsIterable",
                        "constantReexports",
                        "constantSuper",
                        "enumerableModuleMeta",
                        "ignoreFunctionLength",
                        "ignoreFunctionName",
                        "ignoreToPrimitiveHint",
                        "iterableIsArray",
                        "mutableTemplateObject",
                        "noClassCalls",
                        "noDocumentAll",
                        "noIncompleteNsImportDetection",
                        "noNewArrows",
                        "objectRestNoSymbols",
                        "privateFieldsAsProperties",
                        "pureGetters",
                        "setClassMethods",
                        "setComputedProperties",
                        "setPublicClassFields",
                        "setSpreadProperties",
                        "skipForOfIteratorClosing",
                        "superIsCallableConstructor",
                        "tsEnumIsReadonly"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io47 = (input, _exceptionable = true)=>"typescript" === input.syntax && (void 0 === input.tsx || "boolean" == typeof input.tsx) && (void 0 === input.decorators || "boolean" == typeof input.decorators) && (void 0 === input.dynamicImport || "boolean" == typeof input.dynamicImport) && (1 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "syntax",
                        "tsx",
                        "decorators",
                        "dynamicImport"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io48 = (input, _exceptionable = true)=>"ecmascript" === input.syntax && (void 0 === input.jsx || "boolean" == typeof input.jsx) && (void 0 === input.numericSeparator || "boolean" == typeof input.numericSeparator) && (void 0 === input.classPrivateProperty || "boolean" == typeof input.classPrivateProperty) && (void 0 === input.privateMethod || "boolean" == typeof input.privateMethod) && (void 0 === input.classProperty || "boolean" == typeof input.classProperty) && (void 0 === input.functionBind || "boolean" == typeof input.functionBind) && (void 0 === input.decorators || "boolean" == typeof input.decorators) && (void 0 === input.decoratorsBeforeExport || "boolean" == typeof input.decoratorsBeforeExport) && (void 0 === input.exportDefaultFrom || "boolean" == typeof input.exportDefaultFrom) && (void 0 === input.exportNamespaceFrom || "boolean" == typeof input.exportNamespaceFrom) && (void 0 === input.dynamicImport || "boolean" == typeof input.dynamicImport) && (void 0 === input.nullishCoalescing || "boolean" == typeof input.nullishCoalescing) && (void 0 === input.optionalChaining || "boolean" == typeof input.optionalChaining) && (void 0 === input.importMeta || "boolean" == typeof input.importMeta) && (void 0 === input.topLevelAwait || "boolean" == typeof input.topLevelAwait) && (void 0 === input.importAssertions || "boolean" == typeof input.importAssertions) && (void 0 === input.importAttributes || "boolean" == typeof input.importAttributes) && (void 0 === input.allowSuperOutsideMethod || "boolean" == typeof input.allowSuperOutsideMethod) && (void 0 === input.allowReturnOutsideFunction || "boolean" == typeof input.allowReturnOutsideFunction) && (void 0 === input.autoAccessors || "boolean" == typeof input.autoAccessors) && (void 0 === input.explicitResourceManagement || "boolean" == typeof input.explicitResourceManagement) && (1 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "syntax",
                        "jsx",
                        "numericSeparator",
                        "classPrivateProperty",
                        "privateMethod",
                        "classProperty",
                        "functionBind",
                        "decorators",
                        "decoratorsBeforeExport",
                        "exportDefaultFrom",
                        "exportNamespaceFrom",
                        "dynamicImport",
                        "nullishCoalescing",
                        "optionalChaining",
                        "importMeta",
                        "topLevelAwait",
                        "importAssertions",
                        "importAttributes",
                        "allowSuperOutsideMethod",
                        "allowReturnOutsideFunction",
                        "autoAccessors",
                        "explicitResourceManagement"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io49 = (input, _exceptionable = true)=>(void 0 === input.react || "object" == typeof input.react && null !== input.react && false === Array.isArray(input.react) && _io50(input.react, _exceptionable)) && (void 0 === input.constModules || "object" == typeof input.constModules && null !== input.constModules && false === Array.isArray(input.constModules) && _io52(input.constModules, _exceptionable)) && (void 0 === input.optimizer || "object" == typeof input.optimizer && null !== input.optimizer && false === Array.isArray(input.optimizer) && _io55(input.optimizer, _exceptionable)) && (void 0 === input.legacyDecorator || "boolean" == typeof input.legacyDecorator) && (void 0 === input.decoratorMetadata || "boolean" == typeof input.decoratorMetadata) && (void 0 === input.decoratorVersion || "2021-12" === input.decoratorVersion || "2022-03" === input.decoratorVersion) && (void 0 === input.treatConstEnumAsEnum || "boolean" == typeof input.treatConstEnumAsEnum) && (void 0 === input.useDefineForClassFields || "boolean" == typeof input.useDefineForClassFields) && (void 0 === input.verbatimModuleSyntax || "boolean" == typeof input.verbatimModuleSyntax) && (void 0 === input.tsEnumIsMutable || "boolean" == typeof input.tsEnumIsMutable) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "react",
                        "constModules",
                        "optimizer",
                        "legacyDecorator",
                        "decoratorMetadata",
                        "decoratorVersion",
                        "treatConstEnumAsEnum",
                        "useDefineForClassFields",
                        "verbatimModuleSyntax",
                        "tsEnumIsMutable"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io50 = (input, _exceptionable = true)=>(void 0 === input.pragma || "string" == typeof input.pragma) && (void 0 === input.pragmaFrag || "string" == typeof input.pragmaFrag) && (void 0 === input.throwIfNamespace || "boolean" == typeof input.throwIfNamespace) && (void 0 === input.development || "boolean" == typeof input.development) && (void 0 === input.useBuiltins || "boolean" == typeof input.useBuiltins) && null !== input.refresh && (void 0 === input.refresh || "boolean" == typeof input.refresh || "object" == typeof input.refresh && null !== input.refresh && false === Array.isArray(input.refresh) && _io51(input.refresh, _exceptionable)) && (void 0 === input.runtime || "automatic" === input.runtime || "classic" === input.runtime) && (void 0 === input.importSource || "string" == typeof input.importSource) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "pragma",
                        "pragmaFrag",
                        "throwIfNamespace",
                        "development",
                        "useBuiltins",
                        "refresh",
                        "runtime",
                        "importSource"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io51 = (input, _exceptionable = true)=>(void 0 === input.refreshReg || "string" == typeof input.refreshReg) && (void 0 === input.refreshSig || "string" == typeof input.refreshSig) && (void 0 === input.emitFullSignatures || "boolean" == typeof input.emitFullSignatures) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "refreshReg",
                        "refreshSig",
                        "emitFullSignatures"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io52 = (input, _exceptionable = true)=>(void 0 === input.globals || "object" == typeof input.globals && null !== input.globals && false === Array.isArray(input.globals) && _io53(input.globals, _exceptionable)) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "globals"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io53 = (input, _exceptionable = true)=>Object.keys(input).every((key)=>{
                    const value = input[key];
                    if (void 0 === value) return true;
                    return "object" == typeof value && null !== value && false === Array.isArray(value) && _io54(value, _exceptionable);
                });
            const _io54 = (input, _exceptionable = true)=>Object.keys(input).every((key)=>{
                    const value = input[key];
                    if (void 0 === value) return true;
                    return "string" == typeof value;
                });
            const _io55 = (input, _exceptionable = true)=>(void 0 === input.simplify || "boolean" == typeof input.simplify) && (void 0 === input.globals || "object" == typeof input.globals && null !== input.globals && false === Array.isArray(input.globals) && _io56(input.globals, _exceptionable)) && (void 0 === input.jsonify || "object" == typeof input.jsonify && null !== input.jsonify && _io57(input.jsonify, _exceptionable)) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "simplify",
                        "globals",
                        "jsonify"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io56 = (input, _exceptionable = true)=>(void 0 === input.vars || "object" == typeof input.vars && null !== input.vars && false === Array.isArray(input.vars) && _io37(input.vars, _exceptionable)) && null !== input.envs && (void 0 === input.envs || Array.isArray(input.envs) && input.envs.every((elem, _index30)=>"string" == typeof elem) || "object" == typeof input.envs && null !== input.envs && false === Array.isArray(input.envs) && _io37(input.envs, _exceptionable)) && (void 0 === input.typeofs || "object" == typeof input.typeofs && null !== input.typeofs && false === Array.isArray(input.typeofs) && _io37(input.typeofs, _exceptionable)) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "vars",
                        "envs",
                        "typeofs"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io57 = (input, _exceptionable = true)=>"number" == typeof input.minCost && (1 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "minCost"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io58 = (input, _exceptionable = true)=>(void 0 === input.optimizeHygiene || "boolean" == typeof input.optimizeHygiene) && (void 0 === input.keepImportAttributes || "boolean" == typeof input.keepImportAttributes) && (void 0 === input.emitAssertForImportAttributes || "boolean" == typeof input.emitAssertForImportAttributes) && (void 0 === input.cacheRoot || "string" == typeof input.cacheRoot) && (void 0 === input.plugins || Array.isArray(input.plugins) && input.plugins.every((elem, _index31)=>Array.isArray(elem) && 2 === elem.length && "string" == typeof elem[0] && "object" == typeof elem[1] && null !== elem[1] && false === Array.isArray(elem[1]) && _io19(elem[1], _exceptionable))) && (void 0 === input.runPluginFirst || "boolean" == typeof input.runPluginFirst) && (void 0 === input.disableBuiltinTransformsForInternalTesting || "boolean" == typeof input.disableBuiltinTransformsForInternalTesting) && (void 0 === input.emitIsolatedDts || "boolean" == typeof input.emitIsolatedDts) && (void 0 === input.disableAllLints || "boolean" == typeof input.disableAllLints) && (void 0 === input.keepImportAssertions || "boolean" == typeof input.keepImportAssertions) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "optimizeHygiene",
                        "keepImportAttributes",
                        "emitAssertForImportAttributes",
                        "cacheRoot",
                        "plugins",
                        "runPluginFirst",
                        "disableBuiltinTransformsForInternalTesting",
                        "emitIsolatedDts",
                        "disableAllLints",
                        "keepImportAssertions"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io59 = (input, _exceptionable = true)=>Object.keys(input).every((key)=>{
                    const value = input[key];
                    if (void 0 === value) return true;
                    return Array.isArray(value) && value.every((elem, _index32)=>"string" == typeof elem);
                });
            const _io60 = (input, _exceptionable = true)=>null !== input.compress && (void 0 === input.compress || "boolean" == typeof input.compress || "object" == typeof input.compress && null !== input.compress && false === Array.isArray(input.compress) && _io61(input.compress, _exceptionable)) && (void 0 === input.format || "object" == typeof input.format && null !== input.format && false === Array.isArray(input.format) && _io62(input.format, _exceptionable)) && null !== input.mangle && (void 0 === input.mangle || "boolean" == typeof input.mangle || "object" == typeof input.mangle && null !== input.mangle && false === Array.isArray(input.mangle) && _io64(input.mangle, _exceptionable)) && (void 0 === input.ecma || "string" == typeof input.ecma || "number" == typeof input.ecma) && (void 0 === input.keep_classnames || "boolean" == typeof input.keep_classnames) && (void 0 === input.keep_fnames || "boolean" == typeof input.keep_fnames) && (void 0 === input["module"] || "unknown" === input["module"] || "boolean" == typeof input["module"]) && (void 0 === input.safari10 || "boolean" == typeof input.safari10) && (void 0 === input.toplevel || "boolean" == typeof input.toplevel) && (void 0 === input.sourceMap || "boolean" == typeof input.sourceMap) && (void 0 === input.outputPath || "string" == typeof input.outputPath) && (void 0 === input.inlineSourcesContent || "boolean" == typeof input.inlineSourcesContent) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "compress",
                        "format",
                        "mangle",
                        "ecma",
                        "keep_classnames",
                        "keep_fnames",
                        "module",
                        "safari10",
                        "toplevel",
                        "sourceMap",
                        "outputPath",
                        "inlineSourcesContent"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io61 = (input, _exceptionable = true)=>(void 0 === input.arguments || "boolean" == typeof input.arguments) && (void 0 === input.arrows || "boolean" == typeof input.arrows) && (void 0 === input.booleans || "boolean" == typeof input.booleans) && (void 0 === input.booleans_as_integers || "boolean" == typeof input.booleans_as_integers) && (void 0 === input.collapse_vars || "boolean" == typeof input.collapse_vars) && (void 0 === input.comparisons || "boolean" == typeof input.comparisons) && (void 0 === input.computed_props || "boolean" == typeof input.computed_props) && (void 0 === input.conditionals || "boolean" == typeof input.conditionals) && (void 0 === input.dead_code || "boolean" == typeof input.dead_code) && (void 0 === input.defaults || "boolean" == typeof input.defaults) && (void 0 === input.directives || "boolean" == typeof input.directives) && (void 0 === input.drop_console || "boolean" == typeof input.drop_console) && (void 0 === input.drop_debugger || "boolean" == typeof input.drop_debugger) && (void 0 === input.ecma || "string" == typeof input.ecma || "number" == typeof input.ecma) && (void 0 === input.evaluate || "boolean" == typeof input.evaluate) && (void 0 === input.expression || "boolean" == typeof input.expression) && true && (void 0 === input.hoist_funs || "boolean" == typeof input.hoist_funs) && (void 0 === input.hoist_props || "boolean" == typeof input.hoist_props) && (void 0 === input.hoist_vars || "boolean" == typeof input.hoist_vars) && (void 0 === input.ie8 || "boolean" == typeof input.ie8) && (void 0 === input.if_return || "boolean" == typeof input.if_return) && (void 0 === input.inline || 0 === input.inline || 1 === input.inline || 2 === input.inline || 3 === input.inline) && (void 0 === input.join_vars || "boolean" == typeof input.join_vars) && (void 0 === input.keep_classnames || "boolean" == typeof input.keep_classnames) && (void 0 === input.keep_fargs || "boolean" == typeof input.keep_fargs) && (void 0 === input.keep_fnames || "boolean" == typeof input.keep_fnames) && (void 0 === input.keep_infinity || "boolean" == typeof input.keep_infinity) && (void 0 === input.loops || "boolean" == typeof input.loops) && (void 0 === input.negate_iife || "boolean" == typeof input.negate_iife) && (void 0 === input.passes || "number" == typeof input.passes) && (void 0 === input.properties || "boolean" == typeof input.properties) && true && (void 0 === input.pure_funcs || Array.isArray(input.pure_funcs) && input.pure_funcs.every((elem, _index33)=>"string" == typeof elem)) && (void 0 === input.reduce_funcs || "boolean" == typeof input.reduce_funcs) && (void 0 === input.reduce_vars || "boolean" == typeof input.reduce_vars) && true && (void 0 === input.side_effects || "boolean" == typeof input.side_effects) && (void 0 === input.switches || "boolean" == typeof input.switches) && true && true && (void 0 === input.typeofs || "boolean" == typeof input.typeofs) && (void 0 === input.unsafe || "boolean" == typeof input.unsafe) && (void 0 === input.unsafe_passes || "boolean" == typeof input.unsafe_passes) && (void 0 === input.unsafe_arrows || "boolean" == typeof input.unsafe_arrows) && (void 0 === input.unsafe_comps || "boolean" == typeof input.unsafe_comps) && (void 0 === input.unsafe_function || "boolean" == typeof input.unsafe_function) && (void 0 === input.unsafe_math || "boolean" == typeof input.unsafe_math) && (void 0 === input.unsafe_symbols || "boolean" == typeof input.unsafe_symbols) && (void 0 === input.unsafe_methods || "boolean" == typeof input.unsafe_methods) && (void 0 === input.unsafe_proto || "boolean" == typeof input.unsafe_proto) && (void 0 === input.unsafe_regexp || "boolean" == typeof input.unsafe_regexp) && (void 0 === input.unsafe_undefined || "boolean" == typeof input.unsafe_undefined) && (void 0 === input.unused || "boolean" == typeof input.unused) && (void 0 === input.const_to_let || "boolean" == typeof input.const_to_let) && (void 0 === input["module"] || "boolean" == typeof input["module"]) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "arguments",
                        "arrows",
                        "booleans",
                        "booleans_as_integers",
                        "collapse_vars",
                        "comparisons",
                        "computed_props",
                        "conditionals",
                        "dead_code",
                        "defaults",
                        "directives",
                        "drop_console",
                        "drop_debugger",
                        "ecma",
                        "evaluate",
                        "expression",
                        "global_defs",
                        "hoist_funs",
                        "hoist_props",
                        "hoist_vars",
                        "ie8",
                        "if_return",
                        "inline",
                        "join_vars",
                        "keep_classnames",
                        "keep_fargs",
                        "keep_fnames",
                        "keep_infinity",
                        "loops",
                        "negate_iife",
                        "passes",
                        "properties",
                        "pure_getters",
                        "pure_funcs",
                        "reduce_funcs",
                        "reduce_vars",
                        "sequences",
                        "side_effects",
                        "switches",
                        "top_retain",
                        "toplevel",
                        "typeofs",
                        "unsafe",
                        "unsafe_passes",
                        "unsafe_arrows",
                        "unsafe_comps",
                        "unsafe_function",
                        "unsafe_math",
                        "unsafe_symbols",
                        "unsafe_methods",
                        "unsafe_proto",
                        "unsafe_regexp",
                        "unsafe_undefined",
                        "unused",
                        "const_to_let",
                        "module"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io62 = (input, _exceptionable = true)=>(void 0 === input.asciiOnly || "boolean" == typeof input.asciiOnly) && (void 0 === input.beautify || "boolean" == typeof input.beautify) && (void 0 === input.braces || "boolean" == typeof input.braces) && null !== input.comments && (void 0 === input.comments || false === input.comments || "all" === input.comments || "some" === input.comments || "object" == typeof input.comments && null !== input.comments && _io63(input.comments, _exceptionable)) && (void 0 === input.ecma || "string" == typeof input.ecma || "number" == typeof input.ecma) && (void 0 === input.indentLevel || "number" == typeof input.indentLevel) && (void 0 === input.indentStart || "number" == typeof input.indentStart) && (void 0 === input.inlineScript || "boolean" == typeof input.inlineScript) && (void 0 === input.keepNumbers || "number" == typeof input.keepNumbers) && (void 0 === input.keepQuotedProps || "boolean" == typeof input.keepQuotedProps) && (void 0 === input.maxLineLen || false === input.maxLineLen || "number" == typeof input.maxLineLen) && (void 0 === input.preamble || "string" == typeof input.preamble) && (void 0 === input.quoteKeys || "boolean" == typeof input.quoteKeys) && (void 0 === input.quoteStyle || "boolean" == typeof input.quoteStyle) && (void 0 === input.preserveAnnotations || "boolean" == typeof input.preserveAnnotations) && (void 0 === input.safari10 || "boolean" == typeof input.safari10) && (void 0 === input.semicolons || "boolean" == typeof input.semicolons) && (void 0 === input.shebang || "boolean" == typeof input.shebang) && (void 0 === input.webkit || "boolean" == typeof input.webkit) && (void 0 === input.wrapIife || "boolean" == typeof input.wrapIife) && (void 0 === input.wrapFuncArgs || "boolean" == typeof input.wrapFuncArgs) && (void 0 === input.ascii_only || "boolean" == typeof input.ascii_only) && (void 0 === input.indent_level || "number" == typeof input.indent_level) && (void 0 === input.indent_start || "number" == typeof input.indent_start) && (void 0 === input.inline_script || "boolean" == typeof input.inline_script) && (void 0 === input.keep_numbers || "number" == typeof input.keep_numbers) && (void 0 === input.keep_quoted_props || "boolean" == typeof input.keep_quoted_props) && (void 0 === input.max_line_len || false === input.max_line_len || "number" == typeof input.max_line_len) && (void 0 === input.quote_keys || "boolean" == typeof input.quote_keys) && (void 0 === input.quote_style || "boolean" == typeof input.quote_style) && (void 0 === input.preserve_annotations || "boolean" == typeof input.preserve_annotations) && (void 0 === input.wrap_iife || "boolean" == typeof input.wrap_iife) && (void 0 === input.wrap_func_args || "boolean" == typeof input.wrap_func_args) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "asciiOnly",
                        "beautify",
                        "braces",
                        "comments",
                        "ecma",
                        "indentLevel",
                        "indentStart",
                        "inlineScript",
                        "keepNumbers",
                        "keepQuotedProps",
                        "maxLineLen",
                        "preamble",
                        "quoteKeys",
                        "quoteStyle",
                        "preserveAnnotations",
                        "safari10",
                        "semicolons",
                        "shebang",
                        "webkit",
                        "wrapIife",
                        "wrapFuncArgs",
                        "ascii_only",
                        "indent_level",
                        "indent_start",
                        "inline_script",
                        "keep_numbers",
                        "keep_quoted_props",
                        "max_line_len",
                        "quote_keys",
                        "quote_style",
                        "preserve_annotations",
                        "wrap_iife",
                        "wrap_func_args"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io63 = (input, _exceptionable = true)=>"string" == typeof input.regex && (1 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "regex"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io64 = (input, _exceptionable = true)=>(void 0 === input.props || "object" == typeof input.props && null !== input.props && false === Array.isArray(input.props) && _io65(input.props, _exceptionable)) && (void 0 === input.topLevel || "boolean" == typeof input.topLevel) && (void 0 === input.toplevel || "boolean" == typeof input.toplevel) && (void 0 === input.keepClassNames || "boolean" == typeof input.keepClassNames) && (void 0 === input.keep_classnames || "boolean" == typeof input.keep_classnames) && (void 0 === input.keepFnNames || "boolean" == typeof input.keepFnNames) && (void 0 === input.keep_fnames || "boolean" == typeof input.keep_fnames) && (void 0 === input.keepPrivateProps || "boolean" == typeof input.keepPrivateProps) && (void 0 === input.keep_private_props || "boolean" == typeof input.keep_private_props) && (void 0 === input.ie8 || "boolean" == typeof input.ie8) && (void 0 === input.safari10 || "boolean" == typeof input.safari10) && (void 0 === input.reserved || Array.isArray(input.reserved) && input.reserved.every((elem, _index34)=>"string" == typeof elem)) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "props",
                        "topLevel",
                        "toplevel",
                        "keepClassNames",
                        "keep_classnames",
                        "keepFnNames",
                        "keep_fnames",
                        "keepPrivateProps",
                        "keep_private_props",
                        "ie8",
                        "safari10",
                        "reserved"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io65 = (input, _exceptionable = true)=>0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                });
            const _io66 = (input, _exceptionable = true)=>(void 0 === input.charset || "utf8" === input.charset || "ascii" === input.charset) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "charset"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io67 = (input, _exceptionable = true)=>"es6" === input.type && (void 0 === input.strict || "boolean" == typeof input.strict) && (void 0 === input.strictMode || "boolean" == typeof input.strictMode) && null !== input.lazy && (void 0 === input.lazy || "boolean" == typeof input.lazy || Array.isArray(input.lazy) && input.lazy.every((elem, _index35)=>"string" == typeof elem)) && (void 0 === input.noInterop || "boolean" == typeof input.noInterop) && (void 0 === input.importInterop || "none" === input.importInterop || "swc" === input.importInterop || "babel" === input.importInterop || "node" === input.importInterop) && (void 0 === input.outFileExtension || "js" === input.outFileExtension || "mjs" === input.outFileExtension || "cjs" === input.outFileExtension) && (void 0 === input.exportInteropAnnotation || "boolean" == typeof input.exportInteropAnnotation) && (void 0 === input.ignoreDynamic || "boolean" == typeof input.ignoreDynamic) && (void 0 === input.allowTopLevelThis || "boolean" == typeof input.allowTopLevelThis) && (void 0 === input.preserveImportMeta || "boolean" == typeof input.preserveImportMeta) && (void 0 === input.resolveFully || "boolean" == typeof input.resolveFully) && (1 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "type",
                        "strict",
                        "strictMode",
                        "lazy",
                        "noInterop",
                        "importInterop",
                        "outFileExtension",
                        "exportInteropAnnotation",
                        "ignoreDynamic",
                        "allowTopLevelThis",
                        "preserveImportMeta",
                        "resolveFully"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io68 = (input, _exceptionable = true)=>"commonjs" === input.type && (void 0 === input.strict || "boolean" == typeof input.strict) && (void 0 === input.strictMode || "boolean" == typeof input.strictMode) && null !== input.lazy && (void 0 === input.lazy || "boolean" == typeof input.lazy || Array.isArray(input.lazy) && input.lazy.every((elem, _index36)=>"string" == typeof elem)) && (void 0 === input.noInterop || "boolean" == typeof input.noInterop) && (void 0 === input.importInterop || "none" === input.importInterop || "swc" === input.importInterop || "babel" === input.importInterop || "node" === input.importInterop) && (void 0 === input.outFileExtension || "js" === input.outFileExtension || "mjs" === input.outFileExtension || "cjs" === input.outFileExtension) && (void 0 === input.exportInteropAnnotation || "boolean" == typeof input.exportInteropAnnotation) && (void 0 === input.ignoreDynamic || "boolean" == typeof input.ignoreDynamic) && (void 0 === input.allowTopLevelThis || "boolean" == typeof input.allowTopLevelThis) && (void 0 === input.preserveImportMeta || "boolean" == typeof input.preserveImportMeta) && (void 0 === input.resolveFully || "boolean" == typeof input.resolveFully) && (1 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "type",
                        "strict",
                        "strictMode",
                        "lazy",
                        "noInterop",
                        "importInterop",
                        "outFileExtension",
                        "exportInteropAnnotation",
                        "ignoreDynamic",
                        "allowTopLevelThis",
                        "preserveImportMeta",
                        "resolveFully"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io69 = (input, _exceptionable = true)=>"umd" === input.type && (void 0 === input.globals || "object" == typeof input.globals && null !== input.globals && false === Array.isArray(input.globals) && _io70(input.globals, _exceptionable)) && (void 0 === input.strict || "boolean" == typeof input.strict) && (void 0 === input.strictMode || "boolean" == typeof input.strictMode) && null !== input.lazy && (void 0 === input.lazy || "boolean" == typeof input.lazy || Array.isArray(input.lazy) && input.lazy.every((elem, _index37)=>"string" == typeof elem)) && (void 0 === input.noInterop || "boolean" == typeof input.noInterop) && (void 0 === input.importInterop || "none" === input.importInterop || "swc" === input.importInterop || "babel" === input.importInterop || "node" === input.importInterop) && (void 0 === input.outFileExtension || "js" === input.outFileExtension || "mjs" === input.outFileExtension || "cjs" === input.outFileExtension) && (void 0 === input.exportInteropAnnotation || "boolean" == typeof input.exportInteropAnnotation) && (void 0 === input.ignoreDynamic || "boolean" == typeof input.ignoreDynamic) && (void 0 === input.allowTopLevelThis || "boolean" == typeof input.allowTopLevelThis) && (void 0 === input.preserveImportMeta || "boolean" == typeof input.preserveImportMeta) && (void 0 === input.resolveFully || "boolean" == typeof input.resolveFully) && (1 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "type",
                        "globals",
                        "strict",
                        "strictMode",
                        "lazy",
                        "noInterop",
                        "importInterop",
                        "outFileExtension",
                        "exportInteropAnnotation",
                        "ignoreDynamic",
                        "allowTopLevelThis",
                        "preserveImportMeta",
                        "resolveFully"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io70 = (input, _exceptionable = true)=>Object.keys(input).every((key)=>{
                    const value = input[key];
                    if (void 0 === value) return true;
                    return "string" == typeof value;
                });
            const _io71 = (input, _exceptionable = true)=>"amd" === input.type && (void 0 === input.moduleId || "string" == typeof input.moduleId) && (void 0 === input.strict || "boolean" == typeof input.strict) && (void 0 === input.strictMode || "boolean" == typeof input.strictMode) && null !== input.lazy && (void 0 === input.lazy || "boolean" == typeof input.lazy || Array.isArray(input.lazy) && input.lazy.every((elem, _index38)=>"string" == typeof elem)) && (void 0 === input.noInterop || "boolean" == typeof input.noInterop) && (void 0 === input.importInterop || "none" === input.importInterop || "swc" === input.importInterop || "babel" === input.importInterop || "node" === input.importInterop) && (void 0 === input.outFileExtension || "js" === input.outFileExtension || "mjs" === input.outFileExtension || "cjs" === input.outFileExtension) && (void 0 === input.exportInteropAnnotation || "boolean" == typeof input.exportInteropAnnotation) && (void 0 === input.ignoreDynamic || "boolean" == typeof input.ignoreDynamic) && (void 0 === input.allowTopLevelThis || "boolean" == typeof input.allowTopLevelThis) && (void 0 === input.preserveImportMeta || "boolean" == typeof input.preserveImportMeta) && (void 0 === input.resolveFully || "boolean" == typeof input.resolveFully) && (1 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "type",
                        "moduleId",
                        "strict",
                        "strictMode",
                        "lazy",
                        "noInterop",
                        "importInterop",
                        "outFileExtension",
                        "exportInteropAnnotation",
                        "ignoreDynamic",
                        "allowTopLevelThis",
                        "preserveImportMeta",
                        "resolveFully"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io72 = (input, _exceptionable = true)=>"nodenext" === input.type && (void 0 === input.strict || "boolean" == typeof input.strict) && (void 0 === input.strictMode || "boolean" == typeof input.strictMode) && null !== input.lazy && (void 0 === input.lazy || "boolean" == typeof input.lazy || Array.isArray(input.lazy) && input.lazy.every((elem, _index39)=>"string" == typeof elem)) && (void 0 === input.noInterop || "boolean" == typeof input.noInterop) && (void 0 === input.importInterop || "none" === input.importInterop || "swc" === input.importInterop || "babel" === input.importInterop || "node" === input.importInterop) && (void 0 === input.outFileExtension || "js" === input.outFileExtension || "mjs" === input.outFileExtension || "cjs" === input.outFileExtension) && (void 0 === input.exportInteropAnnotation || "boolean" == typeof input.exportInteropAnnotation) && (void 0 === input.ignoreDynamic || "boolean" == typeof input.ignoreDynamic) && (void 0 === input.allowTopLevelThis || "boolean" == typeof input.allowTopLevelThis) && (void 0 === input.preserveImportMeta || "boolean" == typeof input.preserveImportMeta) && (void 0 === input.resolveFully || "boolean" == typeof input.resolveFully) && (1 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "type",
                        "strict",
                        "strictMode",
                        "lazy",
                        "noInterop",
                        "importInterop",
                        "outFileExtension",
                        "exportInteropAnnotation",
                        "ignoreDynamic",
                        "allowTopLevelThis",
                        "preserveImportMeta",
                        "resolveFully"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io73 = (input, _exceptionable = true)=>"systemjs" === input.type && (void 0 === input.allowTopLevelThis || "boolean" == typeof input.allowTopLevelThis) && (1 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "type",
                        "allowTopLevelThis"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io74 = (input, _exceptionable = true)=>(void 0 === input["import"] || Array.isArray(input["import"]) && input["import"].every((elem, _index40)=>"object" == typeof elem && null !== elem && _io75(elem, _exceptionable))) && (void 0 === input.collectTypeScriptInfo || "object" == typeof input.collectTypeScriptInfo && null !== input.collectTypeScriptInfo && false === Array.isArray(input.collectTypeScriptInfo) && _io76(input.collectTypeScriptInfo, _exceptionable)) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "import",
                        "collectTypeScriptInfo"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io75 = (input, _exceptionable = true)=>"string" == typeof input.libraryName && (void 0 === input.libraryDirectory || "string" == typeof input.libraryDirectory) && (void 0 === input.customName || "string" == typeof input.customName) && (void 0 === input.customStyleName || "string" == typeof input.customStyleName) && (void 0 === input.style || "string" == typeof input.style || "boolean" == typeof input.style) && (void 0 === input.styleLibraryDirectory || "string" == typeof input.styleLibraryDirectory) && (void 0 === input.camelToDashComponentName || "boolean" == typeof input.camelToDashComponentName) && (void 0 === input.transformToDefaultImport || "boolean" == typeof input.transformToDefaultImport) && (void 0 === input.ignoreEsComponent || Array.isArray(input.ignoreEsComponent) && input.ignoreEsComponent.every((elem, _index41)=>"string" == typeof elem)) && (void 0 === input.ignoreStyleComponent || Array.isArray(input.ignoreStyleComponent) && input.ignoreStyleComponent.every((elem, _index42)=>"string" == typeof elem)) && (1 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "libraryName",
                        "libraryDirectory",
                        "customName",
                        "customStyleName",
                        "style",
                        "styleLibraryDirectory",
                        "camelToDashComponentName",
                        "transformToDefaultImport",
                        "ignoreEsComponent",
                        "ignoreStyleComponent"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io76 = (input, _exceptionable = true)=>(void 0 === input.typeExports || "boolean" == typeof input.typeExports) && (void 0 === input.exportedEnum || "const-only" === input.exportedEnum || "boolean" == typeof input.exportedEnum) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "typeExports",
                        "exportedEnum"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io77 = (input, _exceptionable = true)=>(void 0 === input.minify || "boolean" == typeof input.minify) && (void 0 === input.errorRecovery || "boolean" == typeof input.errorRecovery) && null !== input.targets && (void 0 === input.targets || "string" == typeof input.targets || Array.isArray(input.targets) && input.targets.every((elem, _index43)=>"string" == typeof elem) || "object" == typeof input.targets && null !== input.targets && false === Array.isArray(input.targets) && _io78(input.targets, _exceptionable)) && (void 0 === input.include || "object" == typeof input.include && null !== input.include && false === Array.isArray(input.include) && _io79(input.include, _exceptionable)) && (void 0 === input.exclude || "object" == typeof input.exclude && null !== input.exclude && false === Array.isArray(input.exclude) && _io79(input.exclude, _exceptionable)) && (void 0 === input.draft || "object" == typeof input.draft && null !== input.draft && false === Array.isArray(input.draft) && _io80(input.draft, _exceptionable)) && (void 0 === input.drafts || "object" == typeof input.drafts && null !== input.drafts && false === Array.isArray(input.drafts) && _io80(input.drafts, _exceptionable)) && (void 0 === input.nonStandard || "object" == typeof input.nonStandard && null !== input.nonStandard && false === Array.isArray(input.nonStandard) && _io81(input.nonStandard, _exceptionable)) && (void 0 === input.pseudoClasses || "object" == typeof input.pseudoClasses && null !== input.pseudoClasses && false === Array.isArray(input.pseudoClasses) && _io82(input.pseudoClasses, _exceptionable)) && (void 0 === input.unusedSymbols || Array.isArray(input.unusedSymbols) && input.unusedSymbols.every((elem, _index44)=>"string" == typeof elem)) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "minify",
                        "errorRecovery",
                        "targets",
                        "include",
                        "exclude",
                        "draft",
                        "drafts",
                        "nonStandard",
                        "pseudoClasses",
                        "unusedSymbols"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io78 = (input, _exceptionable = true)=>(void 0 === input.android || "number" == typeof input.android) && (void 0 === input.chrome || "number" == typeof input.chrome) && (void 0 === input.edge || "number" == typeof input.edge) && (void 0 === input.firefox || "number" == typeof input.firefox) && (void 0 === input.ie || "number" == typeof input.ie) && (void 0 === input.ios_saf || "number" == typeof input.ios_saf) && (void 0 === input.opera || "number" == typeof input.opera) && (void 0 === input.safari || "number" == typeof input.safari) && (void 0 === input.samsung || "number" == typeof input.samsung) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "android",
                        "chrome",
                        "edge",
                        "firefox",
                        "ie",
                        "ios_saf",
                        "opera",
                        "safari",
                        "samsung"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io79 = (input, _exceptionable = true)=>(void 0 === input.nesting || "boolean" == typeof input.nesting) && (void 0 === input.notSelectorList || "boolean" == typeof input.notSelectorList) && (void 0 === input.dirSelector || "boolean" == typeof input.dirSelector) && (void 0 === input.langSelectorList || "boolean" == typeof input.langSelectorList) && (void 0 === input.isSelector || "boolean" == typeof input.isSelector) && (void 0 === input.textDecorationThicknessPercent || "boolean" == typeof input.textDecorationThicknessPercent) && (void 0 === input.mediaIntervalSyntax || "boolean" == typeof input.mediaIntervalSyntax) && (void 0 === input.mediaRangeSyntax || "boolean" == typeof input.mediaRangeSyntax) && (void 0 === input.customMediaQueries || "boolean" == typeof input.customMediaQueries) && (void 0 === input.clampFunction || "boolean" == typeof input.clampFunction) && (void 0 === input.colorFunction || "boolean" == typeof input.colorFunction) && (void 0 === input.oklabColors || "boolean" == typeof input.oklabColors) && (void 0 === input.labColors || "boolean" == typeof input.labColors) && (void 0 === input.p3Colors || "boolean" == typeof input.p3Colors) && (void 0 === input.hexAlphaColors || "boolean" == typeof input.hexAlphaColors) && (void 0 === input.spaceSeparatedColorNotation || "boolean" == typeof input.spaceSeparatedColorNotation) && (void 0 === input.fontFamilySystemUi || "boolean" == typeof input.fontFamilySystemUi) && (void 0 === input.doublePositionGradients || "boolean" == typeof input.doublePositionGradients) && (void 0 === input.vendorPrefixes || "boolean" == typeof input.vendorPrefixes) && (void 0 === input.logicalProperties || "boolean" == typeof input.logicalProperties) && (void 0 === input.selectors || "boolean" == typeof input.selectors) && (void 0 === input.mediaQueries || "boolean" == typeof input.mediaQueries) && (void 0 === input.color || "boolean" == typeof input.color) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "nesting",
                        "notSelectorList",
                        "dirSelector",
                        "langSelectorList",
                        "isSelector",
                        "textDecorationThicknessPercent",
                        "mediaIntervalSyntax",
                        "mediaRangeSyntax",
                        "customMediaQueries",
                        "clampFunction",
                        "colorFunction",
                        "oklabColors",
                        "labColors",
                        "p3Colors",
                        "hexAlphaColors",
                        "spaceSeparatedColorNotation",
                        "fontFamilySystemUi",
                        "doublePositionGradients",
                        "vendorPrefixes",
                        "logicalProperties",
                        "selectors",
                        "mediaQueries",
                        "color"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io80 = (input, _exceptionable = true)=>(void 0 === input.customMedia || "boolean" == typeof input.customMedia) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "customMedia"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io81 = (input, _exceptionable = true)=>(void 0 === input.deepSelectorCombinator || "boolean" == typeof input.deepSelectorCombinator) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "deepSelectorCombinator"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io82 = (input, _exceptionable = true)=>(void 0 === input.hover || "string" == typeof input.hover) && (void 0 === input.active || "string" == typeof input.active) && (void 0 === input.focus || "string" == typeof input.focus) && (void 0 === input.focusVisible || "string" == typeof input.focusVisible) && (void 0 === input.focusWithin || "string" == typeof input.focusWithin) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "hover",
                        "active",
                        "focus",
                        "focusVisible",
                        "focusWithin"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io83 = (input, _exceptionable = true)=>(void 0 === input.pluginOptions || "object" == typeof input.pluginOptions && null !== input.pluginOptions && false === Array.isArray(input.pluginOptions) && _io84(input.pluginOptions, _exceptionable)) && (void 0 === input.loaderOptions || "object" == typeof input.loaderOptions && null !== input.loaderOptions && false === Array.isArray(input.loaderOptions) && _io85(input.loaderOptions, _exceptionable)) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "pluginOptions",
                        "loaderOptions"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io84 = (input, _exceptionable = true)=>null !== input.filename && (void 0 === input.filename || "function" == typeof input.filename || "string" == typeof input.filename) && null !== input.chunkFilename && (void 0 === input.chunkFilename || "function" == typeof input.chunkFilename || "string" == typeof input.chunkFilename) && (void 0 === input.ignoreOrder || "boolean" == typeof input.ignoreOrder) && null !== input.insert && (void 0 === input.insert || "function" == typeof input.insert || "string" == typeof input.insert) && (void 0 === input.attributes || "object" == typeof input.attributes && null !== input.attributes && false === Array.isArray(input.attributes) && _io37(input.attributes, _exceptionable)) && (void 0 === input.linkType || false === input.linkType || "string" == typeof input.linkType) && (void 0 === input.runtime || "boolean" == typeof input.runtime) && (void 0 === input.pathinfo || "boolean" == typeof input.pathinfo) && (void 0 === input.enforceRelative || "boolean" == typeof input.enforceRelative) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "filename",
                        "chunkFilename",
                        "ignoreOrder",
                        "insert",
                        "attributes",
                        "linkType",
                        "runtime",
                        "pathinfo",
                        "enforceRelative"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io85 = (input, _exceptionable = true)=>null !== input.publicPath && (void 0 === input.publicPath || "function" == typeof input.publicPath || "string" == typeof input.publicPath) && (void 0 === input.emit || "boolean" == typeof input.emit) && (void 0 === input.esModule || "boolean" == typeof input.esModule) && (void 0 === input.layer || "string" == typeof input.layer) && (void 0 === input.defaultExport || "boolean" == typeof input.defaultExport) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "publicPath",
                        "emit",
                        "esModule",
                        "layer",
                        "defaultExport"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io86 = (input, _exceptionable = true)=>(void 0 === input.name || "string" == typeof input.name) && (void 0 === input.dependencies || Array.isArray(input.dependencies) && input.dependencies.every((elem, _index45)=>"string" == typeof elem)) && null !== input["extends"] && (void 0 === input["extends"] || "string" == typeof input["extends"] || Array.isArray(input["extends"]) && input["extends"].every((elem, _index46)=>"string" == typeof elem)) && null !== input.entry && (void 0 === input.entry || "function" == typeof input.entry || "string" == typeof input.entry || Array.isArray(input.entry) && input.entry.every((elem, _index47)=>"string" == typeof elem) || "object" == typeof input.entry && null !== input.entry && false === Array.isArray(input.entry) && _io87(input.entry, _exceptionable)) && (void 0 === input.output || "object" == typeof input.output && null !== input.output && false === Array.isArray(input.output) && _io92(input.output, _exceptionable)) && null !== input.target && (void 0 === input.target || true === _iv48.has(input.target) || "string" == typeof input.target && (RegExp(/^node[+-]?\d+(?:\.\d+)?(?:[eE][+-]?\d+)?$/).test(input.target) || RegExp(/^async\x2dnode[+-]?\d+(?:\.\d+)?(?:[eE][+-]?\d+)?$/).test(input.target) || RegExp(/^node[+-]?\d+(?:\.\d+)?(?:[eE][+-]?\d+)?\.[+-]?\d+(?:\.\d+)?(?:[eE][+-]?\d+)?$/).test(input.target) || RegExp(/^async\x2dnode[+-]?\d+(?:\.\d+)?(?:[eE][+-]?\d+)?\.[+-]?\d+(?:\.\d+)?(?:[eE][+-]?\d+)?$/).test(input.target) || RegExp(/^electron[+-]?\d+(?:\.\d+)?(?:[eE][+-]?\d+)?\x2dmain$/).test(input.target) || RegExp(/^electron[+-]?\d+(?:\.\d+)?(?:[eE][+-]?\d+)?\.[+-]?\d+(?:\.\d+)?(?:[eE][+-]?\d+)?\x2dmain$/).test(input.target) || RegExp(/^electron[+-]?\d+(?:\.\d+)?(?:[eE][+-]?\d+)?\x2drenderer$/).test(input.target) || RegExp(/^electron[+-]?\d+(?:\.\d+)?(?:[eE][+-]?\d+)?\.[+-]?\d+(?:\.\d+)?(?:[eE][+-]?\d+)?\x2drenderer$/).test(input.target) || RegExp(/^electron[+-]?\d+(?:\.\d+)?(?:[eE][+-]?\d+)?\x2dpreload$/).test(input.target) || RegExp(/^electron[+-]?\d+(?:\.\d+)?(?:[eE][+-]?\d+)?\.[+-]?\d+(?:\.\d+)?(?:[eE][+-]?\d+)?\x2dpreload$/).test(input.target) || RegExp(/^nwjs[+-]?\d+(?:\.\d+)?(?:[eE][+-]?\d+)?$/).test(input.target) || RegExp(/^nwjs[+-]?\d+(?:\.\d+)?(?:[eE][+-]?\d+)?\.[+-]?\d+(?:\.\d+)?(?:[eE][+-]?\d+)?$/).test(input.target) || RegExp(/^node\x2dwebkit[+-]?\d+(?:\.\d+)?(?:[eE][+-]?\d+)?$/).test(input.target) || RegExp(/^node\x2dwebkit[+-]?\d+(?:\.\d+)?(?:[eE][+-]?\d+)?\.[+-]?\d+(?:\.\d+)?(?:[eE][+-]?\d+)?$/).test(input.target) || RegExp(/^browserslist:(.*)/).test(input.target)) || Array.isArray(input.target) && input.target.every((elem, _index49)=>null != elem && (true === _iv50.has(elem) || "string" == typeof elem && (RegExp(/^node[+-]?\d+(?:\.\d+)?(?:[eE][+-]?\d+)?$/).test(elem) || RegExp(/^async\x2dnode[+-]?\d+(?:\.\d+)?(?:[eE][+-]?\d+)?$/).test(elem) || RegExp(/^node[+-]?\d+(?:\.\d+)?(?:[eE][+-]?\d+)?\.[+-]?\d+(?:\.\d+)?(?:[eE][+-]?\d+)?$/).test(elem) || RegExp(/^async\x2dnode[+-]?\d+(?:\.\d+)?(?:[eE][+-]?\d+)?\.[+-]?\d+(?:\.\d+)?(?:[eE][+-]?\d+)?$/).test(elem) || RegExp(/^electron[+-]?\d+(?:\.\d+)?(?:[eE][+-]?\d+)?\x2dmain$/).test(elem) || RegExp(/^electron[+-]?\d+(?:\.\d+)?(?:[eE][+-]?\d+)?\.[+-]?\d+(?:\.\d+)?(?:[eE][+-]?\d+)?\x2dmain$/).test(elem) || RegExp(/^electron[+-]?\d+(?:\.\d+)?(?:[eE][+-]?\d+)?\x2drenderer$/).test(elem) || RegExp(/^electron[+-]?\d+(?:\.\d+)?(?:[eE][+-]?\d+)?\.[+-]?\d+(?:\.\d+)?(?:[eE][+-]?\d+)?\x2drenderer$/).test(elem) || RegExp(/^electron[+-]?\d+(?:\.\d+)?(?:[eE][+-]?\d+)?\x2dpreload$/).test(elem) || RegExp(/^electron[+-]?\d+(?:\.\d+)?(?:[eE][+-]?\d+)?\.[+-]?\d+(?:\.\d+)?(?:[eE][+-]?\d+)?\x2dpreload$/).test(elem) || RegExp(/^nwjs[+-]?\d+(?:\.\d+)?(?:[eE][+-]?\d+)?$/).test(elem) || RegExp(/^nwjs[+-]?\d+(?:\.\d+)?(?:[eE][+-]?\d+)?\.[+-]?\d+(?:\.\d+)?(?:[eE][+-]?\d+)?$/).test(elem) || RegExp(/^node\x2dwebkit[+-]?\d+(?:\.\d+)?(?:[eE][+-]?\d+)?$/).test(elem) || RegExp(/^node\x2dwebkit[+-]?\d+(?:\.\d+)?(?:[eE][+-]?\d+)?\.[+-]?\d+(?:\.\d+)?(?:[eE][+-]?\d+)?$/).test(elem) || RegExp(/^browserslist:(.*)/).test(elem))))) && (void 0 === input.mode || "none" === input.mode || "development" === input.mode || "production" === input.mode) && (void 0 === input.experiments || "object" == typeof input.experiments && null !== input.experiments && false === Array.isArray(input.experiments) && _io96(input.experiments, _exceptionable)) && null !== input.externals && (void 0 === input.externals || "function" == typeof input.externals || "string" == typeof input.externals || input.externals instanceof RegExp || Array.isArray(input.externals) && input.externals.every((elem, _index51)=>null != elem && ("function" == typeof elem || "string" == typeof elem || elem instanceof RegExp || "object" == typeof elem && null !== elem && false === Array.isArray(elem) && _io105(elem, _exceptionable))) || "object" == typeof input.externals && null !== input.externals && false === Array.isArray(input.externals) && _io105(input.externals, _exceptionable)) && (void 0 === input.externalsType || true === _iv52.has(input.externalsType)) && (void 0 === input.externalsPresets || "object" == typeof input.externalsPresets && null !== input.externalsPresets && false === Array.isArray(input.externalsPresets) && _io108(input.externalsPresets, _exceptionable)) && (void 0 === input.infrastructureLogging || "object" == typeof input.infrastructureLogging && null !== input.infrastructureLogging && false === Array.isArray(input.infrastructureLogging) && _io109(input.infrastructureLogging, _exceptionable)) && (void 0 === input.cache || "boolean" == typeof input.cache) && (void 0 === input.context || "string" == typeof input.context) && (void 0 === input.devtool || true === _iv53.has(input.devtool)) && null !== input.node && (void 0 === input.node || false === input.node || "object" == typeof input.node && null !== input.node && false === Array.isArray(input.node) && _io113(input.node, _exceptionable)) && (void 0 === input.loader || "object" == typeof input.loader && null !== input.loader && false === Array.isArray(input.loader) && _io114(input.loader, _exceptionable)) && (void 0 === input.ignoreWarnings || Array.isArray(input.ignoreWarnings) && input.ignoreWarnings.every((elem, _index54)=>null != elem && ("function" == typeof elem || elem instanceof RegExp || "object" == typeof elem && null !== elem && false === Array.isArray(elem) && _io115(elem, _exceptionable)))) && (void 0 === input.watchOptions || "object" == typeof input.watchOptions && null !== input.watchOptions && false === Array.isArray(input.watchOptions) && _io116(input.watchOptions, _exceptionable)) && (void 0 === input.watch || "boolean" == typeof input.watch) && null !== input.stats && (void 0 === input.stats || "none" === input.stats || "verbose" === input.stats || "normal" === input.stats || "errors-only" === input.stats || "errors-warnings" === input.stats || "minimal" === input.stats || "detailed" === input.stats || "summary" === input.stats || "boolean" == typeof input.stats || "object" == typeof input.stats && null !== input.stats && false === Array.isArray(input.stats) && _io117(input.stats, _exceptionable)) && (void 0 === input.snapshot || "object" == typeof input.snapshot && null !== input.snapshot && false === Array.isArray(input.snapshot) && _io118(input.snapshot, _exceptionable)) && (void 0 === input.optimization || "object" == typeof input.optimization && null !== input.optimization && false === Array.isArray(input.optimization) && _io119(input.optimization, _exceptionable)) && (void 0 === input.resolve || "object" == typeof input.resolve && null !== input.resolve && false === Array.isArray(input.resolve) && _io128(input.resolve, _exceptionable)) && (void 0 === input.resolveLoader || "object" == typeof input.resolveLoader && null !== input.resolveLoader && false === Array.isArray(input.resolveLoader) && _io128(input.resolveLoader, _exceptionable)) && (void 0 === input.plugins || Array.isArray(input.plugins) && input.plugins.every((elem, _index55)=>null == elem || "function" == typeof elem || false === elem || "" === elem || 0 === elem || "object" == typeof elem && null !== elem && _iu0(elem, _exceptionable))) && (void 0 === input.devServer || "object" == typeof input.devServer && null !== input.devServer && false === Array.isArray(input.devServer) && _io133(input.devServer, _exceptionable)) && (void 0 === input["module"] || "object" == typeof input["module"] && null !== input["module"] && false === Array.isArray(input["module"]) && _io172(input["module"], _exceptionable)) && (void 0 === input.profile || "boolean" == typeof input.profile) && null !== input.amd && (void 0 === input.amd || false === input.amd || "object" == typeof input.amd && null !== input.amd && false === Array.isArray(input.amd) && _io19(input.amd, _exceptionable)) && (void 0 === input.bail || "boolean" == typeof input.bail) && null !== input.performance && (void 0 === input.performance || false === input.performance || "object" == typeof input.performance && null !== input.performance && false === Array.isArray(input.performance) && _io195(input.performance, _exceptionable)) && null !== input.lazyCompilation && (void 0 === input.lazyCompilation || "boolean" == typeof input.lazyCompilation || "object" == typeof input.lazyCompilation && null !== input.lazyCompilation && false === Array.isArray(input.lazyCompilation) && _io13(input.lazyCompilation, _exceptionable)) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "name",
                        "dependencies",
                        "extends",
                        "entry",
                        "output",
                        "target",
                        "mode",
                        "experiments",
                        "externals",
                        "externalsType",
                        "externalsPresets",
                        "infrastructureLogging",
                        "cache",
                        "context",
                        "devtool",
                        "node",
                        "loader",
                        "ignoreWarnings",
                        "watchOptions",
                        "watch",
                        "stats",
                        "snapshot",
                        "optimization",
                        "resolve",
                        "resolveLoader",
                        "plugins",
                        "devServer",
                        "module",
                        "profile",
                        "amd",
                        "bail",
                        "performance",
                        "lazyCompilation"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io87 = (input, _exceptionable = true)=>Object.keys(input).every((key)=>{
                    const value = input[key];
                    if (void 0 === value) return true;
                    return null != value && ("string" == typeof value || Array.isArray(value) && value.every((elem, _index56)=>"string" == typeof elem) || "object" == typeof value && null !== value && _io88(value, _exceptionable));
                });
            const _io88 = (input, _exceptionable = true)=>null !== input["import"] && void 0 !== input["import"] && ("string" == typeof input["import"] || Array.isArray(input["import"]) && input["import"].every((elem, _index57)=>"string" == typeof elem)) && (void 0 === input.runtime || false === input.runtime || "string" == typeof input.runtime) && null !== input.publicPath && (void 0 === input.publicPath || "function" == typeof input.publicPath || "string" == typeof input.publicPath) && (void 0 === input.baseUri || "string" == typeof input.baseUri) && (void 0 === input.chunkLoading || false === input.chunkLoading || "string" == typeof input.chunkLoading) && (void 0 === input.asyncChunks || "boolean" == typeof input.asyncChunks) && (void 0 === input.wasmLoading || false === input.wasmLoading || "string" == typeof input.wasmLoading) && null !== input.filename && (void 0 === input.filename || "function" == typeof input.filename || "string" == typeof input.filename) && (void 0 === input.library || "object" == typeof input.library && null !== input.library && _io89(input.library, _exceptionable)) && null !== input.dependOn && (void 0 === input.dependOn || "string" == typeof input.dependOn || Array.isArray(input.dependOn) && input.dependOn.every((elem, _index58)=>"string" == typeof elem)) && (null === input.layer || void 0 === input.layer || "string" == typeof input.layer) && (1 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "import",
                        "runtime",
                        "publicPath",
                        "baseUri",
                        "chunkLoading",
                        "asyncChunks",
                        "wasmLoading",
                        "filename",
                        "library",
                        "dependOn",
                        "layer"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io89 = (input, _exceptionable = true)=>(void 0 === input.amdContainer || "string" == typeof input.amdContainer) && null !== input.auxiliaryComment && (void 0 === input.auxiliaryComment || "string" == typeof input.auxiliaryComment || "object" == typeof input.auxiliaryComment && null !== input.auxiliaryComment && false === Array.isArray(input.auxiliaryComment) && _io90(input.auxiliaryComment, _exceptionable)) && null !== input["export"] && (void 0 === input["export"] || "string" == typeof input["export"] || Array.isArray(input["export"]) && input["export"].every((elem, _index59)=>"string" == typeof elem)) && null !== input.name && (void 0 === input.name || "string" == typeof input.name || Array.isArray(input.name) && input.name.every((elem, _index60)=>"string" == typeof elem) || "object" == typeof input.name && null !== input.name && false === Array.isArray(input.name) && _io91(input.name, _exceptionable)) && "string" == typeof input.type && (void 0 === input.umdNamedDefine || "boolean" == typeof input.umdNamedDefine) && (1 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "amdContainer",
                        "auxiliaryComment",
                        "export",
                        "name",
                        "type",
                        "umdNamedDefine"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io90 = (input, _exceptionable = true)=>(void 0 === input.amd || "string" == typeof input.amd) && (void 0 === input.commonjs || "string" == typeof input.commonjs) && (void 0 === input.commonjs2 || "string" == typeof input.commonjs2) && (void 0 === input.root || "string" == typeof input.root) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "amd",
                        "commonjs",
                        "commonjs2",
                        "root"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io91 = (input, _exceptionable = true)=>(void 0 === input.amd || "string" == typeof input.amd) && (void 0 === input.commonjs || "string" == typeof input.commonjs) && null !== input.root && (void 0 === input.root || "string" == typeof input.root || Array.isArray(input.root) && input.root.every((elem, _index61)=>"string" == typeof elem)) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "amd",
                        "commonjs",
                        "root"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io92 = (input, _exceptionable = true)=>(void 0 === input.path || "string" == typeof input.path) && (void 0 === input.pathinfo || "verbose" === input.pathinfo || "boolean" == typeof input.pathinfo) && null !== input.clean && (void 0 === input.clean || "boolean" == typeof input.clean || "object" == typeof input.clean && null !== input.clean && false === Array.isArray(input.clean) && _io93(input.clean, _exceptionable)) && null !== input.publicPath && (void 0 === input.publicPath || "function" == typeof input.publicPath || "string" == typeof input.publicPath) && null !== input.filename && (void 0 === input.filename || "function" == typeof input.filename || "string" == typeof input.filename) && null !== input.chunkFilename && (void 0 === input.chunkFilename || "function" == typeof input.chunkFilename || "string" == typeof input.chunkFilename) && (void 0 === input.crossOriginLoading || false === input.crossOriginLoading || "anonymous" === input.crossOriginLoading || "use-credentials" === input.crossOriginLoading) && null !== input.cssFilename && (void 0 === input.cssFilename || "function" == typeof input.cssFilename || "string" == typeof input.cssFilename) && (void 0 === input.cssHeadDataCompression || "boolean" == typeof input.cssHeadDataCompression) && null !== input.cssChunkFilename && (void 0 === input.cssChunkFilename || "function" == typeof input.cssChunkFilename || "string" == typeof input.cssChunkFilename) && (void 0 === input.hotUpdateMainFilename || "string" == typeof input.hotUpdateMainFilename) && (void 0 === input.hotUpdateChunkFilename || "string" == typeof input.hotUpdateChunkFilename) && (void 0 === input.hotUpdateGlobal || "string" == typeof input.hotUpdateGlobal) && null !== input.assetModuleFilename && (void 0 === input.assetModuleFilename || "function" == typeof input.assetModuleFilename || "string" == typeof input.assetModuleFilename) && (void 0 === input.uniqueName || "string" == typeof input.uniqueName) && (void 0 === input.chunkLoadingGlobal || "string" == typeof input.chunkLoadingGlobal) && (void 0 === input.enabledLibraryTypes || Array.isArray(input.enabledLibraryTypes) && input.enabledLibraryTypes.every((elem, _index62)=>"string" == typeof elem)) && null !== input.library && (void 0 === input.library || "string" == typeof input.library || Array.isArray(input.library) && input.library.every((elem, _index63)=>"string" == typeof elem) || "object" == typeof input.library && null !== input.library && false === Array.isArray(input.library) && _iu8(input.library, _exceptionable)) && null !== input.libraryExport && (void 0 === input.libraryExport || "string" == typeof input.libraryExport || Array.isArray(input.libraryExport) && input.libraryExport.every((elem, _index64)=>"string" == typeof elem)) && (void 0 === input.libraryTarget || "string" == typeof input.libraryTarget) && (void 0 === input.umdNamedDefine || "boolean" == typeof input.umdNamedDefine) && null !== input.auxiliaryComment && (void 0 === input.auxiliaryComment || "string" == typeof input.auxiliaryComment || "object" == typeof input.auxiliaryComment && null !== input.auxiliaryComment && false === Array.isArray(input.auxiliaryComment) && _io90(input.auxiliaryComment, _exceptionable)) && (void 0 === input["module"] || "boolean" == typeof input["module"]) && (void 0 === input.strictModuleExceptionHandling || "boolean" == typeof input.strictModuleExceptionHandling) && (void 0 === input.strictModuleErrorHandling || "boolean" == typeof input.strictModuleErrorHandling) && (void 0 === input.globalObject || "string" == typeof input.globalObject) && (void 0 === input.importFunctionName || "string" == typeof input.importFunctionName) && (void 0 === input.importMetaName || "string" == typeof input.importMetaName) && (void 0 === input.iife || "boolean" == typeof input.iife) && (void 0 === input.wasmLoading || false === input.wasmLoading || "string" == typeof input.wasmLoading) && (void 0 === input.enabledWasmLoadingTypes || Array.isArray(input.enabledWasmLoadingTypes) && input.enabledWasmLoadingTypes.every((elem, _index65)=>"string" == typeof elem)) && (void 0 === input.webassemblyModuleFilename || "string" == typeof input.webassemblyModuleFilename) && (void 0 === input.chunkFormat || false === input.chunkFormat || "string" == typeof input.chunkFormat) && (void 0 === input.chunkLoading || false === input.chunkLoading || "string" == typeof input.chunkLoading) && (void 0 === input.enabledChunkLoadingTypes || Array.isArray(input.enabledChunkLoadingTypes) && input.enabledChunkLoadingTypes.every((elem, _index66)=>"string" == typeof elem)) && null !== input.trustedTypes && (void 0 === input.trustedTypes || true === input.trustedTypes || "string" == typeof input.trustedTypes || "object" == typeof input.trustedTypes && null !== input.trustedTypes && false === Array.isArray(input.trustedTypes) && _io94(input.trustedTypes, _exceptionable)) && (void 0 === input.sourceMapFilename || "string" == typeof input.sourceMapFilename) && (void 0 === input.hashDigest || "string" == typeof input.hashDigest) && (void 0 === input.hashDigestLength || "number" == typeof input.hashDigestLength) && (void 0 === input.hashFunction || "md4" === input.hashFunction || "xxhash64" === input.hashFunction || "sha256" === input.hashFunction) && (void 0 === input.hashSalt || "string" == typeof input.hashSalt) && (void 0 === input.asyncChunks || "boolean" == typeof input.asyncChunks) && (void 0 === input.workerChunkLoading || false === input.workerChunkLoading || "string" == typeof input.workerChunkLoading) && (void 0 === input.workerWasmLoading || false === input.workerWasmLoading || "string" == typeof input.workerWasmLoading) && (void 0 === input.workerPublicPath || "string" == typeof input.workerPublicPath) && (void 0 === input.scriptType || false === input.scriptType || "module" === input.scriptType || "text/javascript" === input.scriptType) && (void 0 === input.devtoolNamespace || "string" == typeof input.devtoolNamespace) && null !== input.devtoolModuleFilenameTemplate && (void 0 === input.devtoolModuleFilenameTemplate || "function" == typeof input.devtoolModuleFilenameTemplate || "string" == typeof input.devtoolModuleFilenameTemplate) && null !== input.devtoolFallbackModuleFilenameTemplate && (void 0 === input.devtoolFallbackModuleFilenameTemplate || "function" == typeof input.devtoolFallbackModuleFilenameTemplate || "string" == typeof input.devtoolFallbackModuleFilenameTemplate) && (void 0 === input.chunkLoadTimeout || "number" == typeof input.chunkLoadTimeout) && (void 0 === input.charset || "boolean" == typeof input.charset) && (void 0 === input.environment || "object" == typeof input.environment && null !== input.environment && false === Array.isArray(input.environment) && _io95(input.environment, _exceptionable)) && (void 0 === input.compareBeforeEmit || "boolean" == typeof input.compareBeforeEmit) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "path",
                        "pathinfo",
                        "clean",
                        "publicPath",
                        "filename",
                        "chunkFilename",
                        "crossOriginLoading",
                        "cssFilename",
                        "cssHeadDataCompression",
                        "cssChunkFilename",
                        "hotUpdateMainFilename",
                        "hotUpdateChunkFilename",
                        "hotUpdateGlobal",
                        "assetModuleFilename",
                        "uniqueName",
                        "chunkLoadingGlobal",
                        "enabledLibraryTypes",
                        "library",
                        "libraryExport",
                        "libraryTarget",
                        "umdNamedDefine",
                        "auxiliaryComment",
                        "module",
                        "strictModuleExceptionHandling",
                        "strictModuleErrorHandling",
                        "globalObject",
                        "importFunctionName",
                        "importMetaName",
                        "iife",
                        "wasmLoading",
                        "enabledWasmLoadingTypes",
                        "webassemblyModuleFilename",
                        "chunkFormat",
                        "chunkLoading",
                        "enabledChunkLoadingTypes",
                        "trustedTypes",
                        "sourceMapFilename",
                        "hashDigest",
                        "hashDigestLength",
                        "hashFunction",
                        "hashSalt",
                        "asyncChunks",
                        "workerChunkLoading",
                        "workerWasmLoading",
                        "workerPublicPath",
                        "scriptType",
                        "devtoolNamespace",
                        "devtoolModuleFilenameTemplate",
                        "devtoolFallbackModuleFilenameTemplate",
                        "chunkLoadTimeout",
                        "charset",
                        "environment",
                        "compareBeforeEmit"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io93 = (input, _exceptionable = true)=>null !== input.keep && (void 0 === input.keep || "function" == typeof input.keep || "string" == typeof input.keep || input.keep instanceof RegExp) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "keep"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io94 = (input, _exceptionable = true)=>(void 0 === input.policyName || "string" == typeof input.policyName) && (void 0 === input.onPolicyCreationFailure || "continue" === input.onPolicyCreationFailure || "stop" === input.onPolicyCreationFailure) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "policyName",
                        "onPolicyCreationFailure"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io95 = (input, _exceptionable = true)=>(void 0 === input.arrowFunction || "boolean" == typeof input.arrowFunction) && (void 0 === input.asyncFunction || "boolean" == typeof input.asyncFunction) && (void 0 === input.bigIntLiteral || "boolean" == typeof input.bigIntLiteral) && (void 0 === input["const"] || "boolean" == typeof input["const"]) && (void 0 === input.destructuring || "boolean" == typeof input.destructuring) && (void 0 === input.document || "boolean" == typeof input.document) && (void 0 === input.dynamicImport || "boolean" == typeof input.dynamicImport) && (void 0 === input.dynamicImportInWorker || "boolean" == typeof input.dynamicImportInWorker) && (void 0 === input.forOf || "boolean" == typeof input.forOf) && (void 0 === input.globalThis || "boolean" == typeof input.globalThis) && (void 0 === input["module"] || "boolean" == typeof input["module"]) && (void 0 === input.nodePrefixForCoreModules || "boolean" == typeof input.nodePrefixForCoreModules) && (void 0 === input.optionalChaining || "boolean" == typeof input.optionalChaining) && (void 0 === input.templateLiteral || "boolean" == typeof input.templateLiteral) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "arrowFunction",
                        "asyncFunction",
                        "bigIntLiteral",
                        "const",
                        "destructuring",
                        "document",
                        "dynamicImport",
                        "dynamicImportInWorker",
                        "forOf",
                        "globalThis",
                        "module",
                        "nodePrefixForCoreModules",
                        "optionalChaining",
                        "templateLiteral"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io96 = (input, _exceptionable = true)=>null !== input.cache && (void 0 === input.cache || "boolean" == typeof input.cache || "object" == typeof input.cache && null !== input.cache && _iu9(input.cache, _exceptionable)) && null !== input.lazyCompilation && (void 0 === input.lazyCompilation || "boolean" == typeof input.lazyCompilation || "object" == typeof input.lazyCompilation && null !== input.lazyCompilation && false === Array.isArray(input.lazyCompilation) && _io13(input.lazyCompilation, _exceptionable)) && (void 0 === input.asyncWebAssembly || "boolean" == typeof input.asyncWebAssembly) && (void 0 === input.outputModule || "boolean" == typeof input.outputModule) && (void 0 === input.topLevelAwait || "boolean" == typeof input.topLevelAwait) && (void 0 === input.css || "boolean" == typeof input.css) && (void 0 === input.layers || "boolean" == typeof input.layers) && null !== input.incremental && (void 0 === input.incremental || "none" === input.incremental || "safe" === input.incremental || "advance" === input.incremental || "advance-silent" === input.incremental || "boolean" == typeof input.incremental || "object" == typeof input.incremental && null !== input.incremental && false === Array.isArray(input.incremental) && _io101(input.incremental, _exceptionable)) && (void 0 === input.parallelCodeSplitting || "boolean" == typeof input.parallelCodeSplitting) && (void 0 === input.futureDefaults || "boolean" == typeof input.futureDefaults) && (void 0 === input.rspackFuture || "object" == typeof input.rspackFuture && null !== input.rspackFuture && false === Array.isArray(input.rspackFuture) && _io102(input.rspackFuture, _exceptionable)) && (void 0 === input.buildHttp || "object" == typeof input.buildHttp && null !== input.buildHttp && _io104(input.buildHttp, _exceptionable)) && (void 0 === input.parallelLoader || "boolean" == typeof input.parallelLoader) && null !== input.useInputFileSystem && (void 0 === input.useInputFileSystem || false === input.useInputFileSystem || Array.isArray(input.useInputFileSystem) && input.useInputFileSystem.every((elem, _index67)=>elem instanceof RegExp)) && (void 0 === input.nativeWatcher || "boolean" == typeof input.nativeWatcher) && (void 0 === input.inlineConst || "boolean" == typeof input.inlineConst) && (void 0 === input.inlineEnum || "boolean" == typeof input.inlineEnum) && (void 0 === input.typeReexportsPresence || "boolean" == typeof input.typeReexportsPresence) && (void 0 === input.lazyBarrel || "boolean" == typeof input.lazyBarrel) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "cache",
                        "lazyCompilation",
                        "asyncWebAssembly",
                        "outputModule",
                        "topLevelAwait",
                        "css",
                        "layers",
                        "incremental",
                        "parallelCodeSplitting",
                        "futureDefaults",
                        "rspackFuture",
                        "buildHttp",
                        "parallelLoader",
                        "useInputFileSystem",
                        "nativeWatcher",
                        "inlineConst",
                        "inlineEnum",
                        "typeReexportsPresence",
                        "lazyBarrel"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io97 = (input, _exceptionable = true)=>"memory" === input.type && (1 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "type"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io98 = (input, _exceptionable = true)=>"persistent" === input.type && (void 0 === input.buildDependencies || Array.isArray(input.buildDependencies) && input.buildDependencies.every((elem, _index68)=>"string" == typeof elem)) && (void 0 === input.version || "string" == typeof input.version) && (void 0 === input.snapshot || "object" == typeof input.snapshot && null !== input.snapshot && false === Array.isArray(input.snapshot) && _io99(input.snapshot, _exceptionable)) && (void 0 === input.storage || "object" == typeof input.storage && null !== input.storage && _io100(input.storage, _exceptionable)) && (1 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "type",
                        "buildDependencies",
                        "version",
                        "snapshot",
                        "storage"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io99 = (input, _exceptionable = true)=>(void 0 === input.immutablePaths || Array.isArray(input.immutablePaths) && input.immutablePaths.every((elem, _index69)=>null != elem && ("string" == typeof elem || elem instanceof RegExp))) && (void 0 === input.unmanagedPaths || Array.isArray(input.unmanagedPaths) && input.unmanagedPaths.every((elem, _index70)=>null != elem && ("string" == typeof elem || elem instanceof RegExp))) && (void 0 === input.managedPaths || Array.isArray(input.managedPaths) && input.managedPaths.every((elem, _index71)=>null != elem && ("string" == typeof elem || elem instanceof RegExp))) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "immutablePaths",
                        "unmanagedPaths",
                        "managedPaths"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io100 = (input, _exceptionable = true)=>"filesystem" === input.type && (void 0 === input.directory || "string" == typeof input.directory) && (1 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "type",
                        "directory"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io101 = (input, _exceptionable = true)=>(void 0 === input.silent || "boolean" == typeof input.silent) && (void 0 === input.make || "boolean" == typeof input.make) && (void 0 === input.inferAsyncModules || "boolean" == typeof input.inferAsyncModules) && (void 0 === input.providedExports || "boolean" == typeof input.providedExports) && (void 0 === input.dependenciesDiagnostics || "boolean" == typeof input.dependenciesDiagnostics) && (void 0 === input.sideEffects || "boolean" == typeof input.sideEffects) && (void 0 === input.buildChunkGraph || "boolean" == typeof input.buildChunkGraph) && (void 0 === input.moduleIds || "boolean" == typeof input.moduleIds) && (void 0 === input.chunkIds || "boolean" == typeof input.chunkIds) && (void 0 === input.modulesHashes || "boolean" == typeof input.modulesHashes) && (void 0 === input.modulesCodegen || "boolean" == typeof input.modulesCodegen) && (void 0 === input.modulesRuntimeRequirements || "boolean" == typeof input.modulesRuntimeRequirements) && (void 0 === input.chunksRuntimeRequirements || "boolean" == typeof input.chunksRuntimeRequirements) && (void 0 === input.chunksHashes || "boolean" == typeof input.chunksHashes) && (void 0 === input.chunksRender || "boolean" == typeof input.chunksRender) && (void 0 === input.emitAssets || "boolean" == typeof input.emitAssets) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "silent",
                        "make",
                        "inferAsyncModules",
                        "providedExports",
                        "dependenciesDiagnostics",
                        "sideEffects",
                        "buildChunkGraph",
                        "moduleIds",
                        "chunkIds",
                        "modulesHashes",
                        "modulesCodegen",
                        "modulesRuntimeRequirements",
                        "chunksRuntimeRequirements",
                        "chunksHashes",
                        "chunksRender",
                        "emitAssets"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io102 = (input, _exceptionable = true)=>(void 0 === input.bundlerInfo || "object" == typeof input.bundlerInfo && null !== input.bundlerInfo && false === Array.isArray(input.bundlerInfo) && _io103(input.bundlerInfo, _exceptionable)) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "bundlerInfo"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io103 = (input, _exceptionable = true)=>(void 0 === input.version || "string" == typeof input.version) && (void 0 === input.bundler || "string" == typeof input.bundler) && null !== input.force && (void 0 === input.force || "boolean" == typeof input.force || Array.isArray(input.force) && input.force.every((elem, _index72)=>"version" === elem || "uniqueId" === elem)) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "version",
                        "bundler",
                        "force"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io104 = (input, _exceptionable = true)=>Array.isArray(input.allowedUris) && input.allowedUris.every((elem, _index73)=>null != elem && ("string" == typeof elem || elem instanceof RegExp)) && (void 0 === input.lockfileLocation || "string" == typeof input.lockfileLocation) && (void 0 === input.cacheLocation || false === input.cacheLocation || "string" == typeof input.cacheLocation) && (void 0 === input.upgrade || "boolean" == typeof input.upgrade) && (void 0 === input.httpClient || true) && (1 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "allowedUris",
                        "lockfileLocation",
                        "cacheLocation",
                        "upgrade",
                        "httpClient"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io105 = (input, _exceptionable = true)=>Object.keys(input).every((key)=>{
                    const value = input[key];
                    if (void 0 === value) return true;
                    return null != value && ("string" == typeof value || "boolean" == typeof value || Array.isArray(value) && value.every((elem, _index74)=>"string" == typeof elem) || "object" == typeof value && null !== value && false === Array.isArray(value) && _iu10(value, _exceptionable));
                });
            const _io106 = (input, _exceptionable = true)=>null !== input.root && void 0 !== input.root && ("string" == typeof input.root || Array.isArray(input.root) && input.root.every((elem, _index75)=>"string" == typeof elem)) && null !== input.commonjs && void 0 !== input.commonjs && ("string" == typeof input.commonjs || Array.isArray(input.commonjs) && input.commonjs.every((elem, _index76)=>"string" == typeof elem)) && null !== input.commonjs2 && void 0 !== input.commonjs2 && ("string" == typeof input.commonjs2 || Array.isArray(input.commonjs2) && input.commonjs2.every((elem, _index77)=>"string" == typeof elem)) && null !== input.amd && void 0 !== input.amd && ("string" == typeof input.amd || Array.isArray(input.amd) && input.amd.every((elem, _index78)=>"string" == typeof elem)) && (4 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "root",
                        "commonjs",
                        "commonjs2",
                        "amd"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io107 = (input, _exceptionable = true)=>Object.keys(input).every((key)=>{
                    const value = input[key];
                    if (void 0 === value) return true;
                    return null != value && ("string" == typeof value || Array.isArray(value) && value.every((elem, _index79)=>"string" == typeof elem));
                });
            const _io108 = (input, _exceptionable = true)=>(void 0 === input.node || "boolean" == typeof input.node) && (void 0 === input.web || "boolean" == typeof input.web) && (void 0 === input.webAsync || "boolean" == typeof input.webAsync) && (void 0 === input.electron || "boolean" == typeof input.electron) && (void 0 === input.electronMain || "boolean" == typeof input.electronMain) && (void 0 === input.electronPreload || "boolean" == typeof input.electronPreload) && (void 0 === input.electronRenderer || "boolean" == typeof input.electronRenderer) && (void 0 === input.nwjs || "boolean" == typeof input.nwjs) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "node",
                        "web",
                        "webAsync",
                        "electron",
                        "electronMain",
                        "electronPreload",
                        "electronRenderer",
                        "nwjs"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io109 = (input, _exceptionable = true)=>(void 0 === input.appendOnly || "boolean" == typeof input.appendOnly) && (void 0 === input.colors || "boolean" == typeof input.colors) && (void 0 === input.console || "object" == typeof input.console && null !== input.console && _io110(input.console, _exceptionable)) && null !== input.debug && (void 0 === input.debug || "function" == typeof input.debug || "string" == typeof input.debug || "boolean" == typeof input.debug || input.debug instanceof RegExp || Array.isArray(input.debug) && input.debug.every((elem, _index80)=>null != elem && ("function" == typeof elem || "string" == typeof elem || elem instanceof RegExp))) && (void 0 === input.level || "none" === input.level || "verbose" === input.level || "error" === input.level || "warn" === input.level || "info" === input.level || "log" === input.level) && (void 0 === input.stream || "object" == typeof input.stream && null !== input.stream && _io112(input.stream, _exceptionable)) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "appendOnly",
                        "colors",
                        "console",
                        "debug",
                        "level",
                        "stream"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io110 = (input, _exceptionable = true)=>"object" == typeof input.Console && null !== input.Console && _io111(input.Console, _exceptionable) && (1 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "Console"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io111 = (input, _exceptionable = true)=>"object" == typeof input.prototype && null !== input.prototype && _io110(input.prototype, _exceptionable) && "number" == typeof input.length && true && "object" == typeof input.caller && null !== input.caller && _io33(input.caller, _exceptionable) && "string" == typeof input.name && (5 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "prototype",
                        "length",
                        "arguments",
                        "caller",
                        "name"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io112 = (input, _exceptionable = true)=>"boolean" == typeof input.writable && (1 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "writable"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io113 = (input, _exceptionable = true)=>(void 0 === input.__dirname || "warn-mock" === input.__dirname || "mock" === input.__dirname || "eval-only" === input.__dirname || "node-module" === input.__dirname || "boolean" == typeof input.__dirname) && (void 0 === input.__filename || "warn-mock" === input.__filename || "mock" === input.__filename || "eval-only" === input.__filename || "node-module" === input.__filename || "boolean" == typeof input.__filename) && (void 0 === input.global || "warn" === input.global || "boolean" == typeof input.global) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "__dirname",
                        "__filename",
                        "global"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io114 = (input, _exceptionable = true)=>Object.keys(input).every((key)=>{
                    input[key];
                    return true;
                });
            const _io115 = (input, _exceptionable = true)=>(void 0 === input.file || input.file instanceof RegExp) && (void 0 === input.message || input.message instanceof RegExp) && (void 0 === input["module"] || input["module"] instanceof RegExp) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "file",
                        "message",
                        "module"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io116 = (input, _exceptionable = true)=>(void 0 === input.aggregateTimeout || "number" == typeof input.aggregateTimeout) && (void 0 === input.followSymlinks || "boolean" == typeof input.followSymlinks) && null !== input.ignored && (void 0 === input.ignored || "string" == typeof input.ignored || input.ignored instanceof RegExp || Array.isArray(input.ignored) && input.ignored.every((elem, _index81)=>"string" == typeof elem)) && (void 0 === input.poll || "number" == typeof input.poll || "boolean" == typeof input.poll) && (void 0 === input.stdin || "boolean" == typeof input.stdin) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "aggregateTimeout",
                        "followSymlinks",
                        "ignored",
                        "poll",
                        "stdin"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io117 = (input, _exceptionable = true)=>(void 0 === input.all || "boolean" == typeof input.all) && (void 0 === input.preset || "none" === input.preset || "verbose" === input.preset || "normal" === input.preset || "errors-only" === input.preset || "errors-warnings" === input.preset || "minimal" === input.preset || "detailed" === input.preset || "summary" === input.preset || "boolean" == typeof input.preset) && (void 0 === input.assets || "boolean" == typeof input.assets) && (void 0 === input.chunks || "boolean" == typeof input.chunks) && (void 0 === input.modules || "boolean" == typeof input.modules) && (void 0 === input.entrypoints || "auto" === input.entrypoints || "boolean" == typeof input.entrypoints) && (void 0 === input.chunkGroups || "boolean" == typeof input.chunkGroups) && (void 0 === input.warnings || "boolean" == typeof input.warnings) && (void 0 === input.warningsCount || "boolean" == typeof input.warningsCount) && (void 0 === input.errors || "boolean" == typeof input.errors) && (void 0 === input.errorsCount || "boolean" == typeof input.errorsCount) && (void 0 === input.colors || "boolean" == typeof input.colors) && (void 0 === input.hash || "boolean" == typeof input.hash) && (void 0 === input.version || "boolean" == typeof input.version) && (void 0 === input.reasons || "boolean" == typeof input.reasons) && (void 0 === input.publicPath || "boolean" == typeof input.publicPath) && (void 0 === input.outputPath || "boolean" == typeof input.outputPath) && (void 0 === input.chunkModules || "boolean" == typeof input.chunkModules) && (void 0 === input.chunkRelations || "boolean" == typeof input.chunkRelations) && (void 0 === input.ids || "boolean" == typeof input.ids) && (void 0 === input.timings || "boolean" == typeof input.timings) && (void 0 === input.builtAt || "boolean" == typeof input.builtAt) && (void 0 === input.moduleAssets || "boolean" == typeof input.moduleAssets) && (void 0 === input.nestedModules || "boolean" == typeof input.nestedModules) && (void 0 === input.source || "boolean" == typeof input.source) && (void 0 === input.logging || "none" === input.logging || "verbose" === input.logging || "error" === input.logging || "warn" === input.logging || "info" === input.logging || "log" === input.logging || "boolean" == typeof input.logging) && null !== input.loggingDebug && (void 0 === input.loggingDebug || "function" == typeof input.loggingDebug || "string" == typeof input.loggingDebug || "boolean" == typeof input.loggingDebug || input.loggingDebug instanceof RegExp || Array.isArray(input.loggingDebug) && input.loggingDebug.every((elem, _index82)=>null != elem && ("function" == typeof elem || "string" == typeof elem || elem instanceof RegExp))) && (void 0 === input.loggingTrace || "boolean" == typeof input.loggingTrace) && (void 0 === input.runtimeModules || "boolean" == typeof input.runtimeModules) && (void 0 === input.children || "boolean" == typeof input.children) && (void 0 === input.usedExports || "boolean" == typeof input.usedExports) && (void 0 === input.providedExports || "boolean" == typeof input.providedExports) && (void 0 === input.optimizationBailout || "boolean" == typeof input.optimizationBailout) && (void 0 === input.groupModulesByType || "boolean" == typeof input.groupModulesByType) && (void 0 === input.groupModulesByCacheStatus || "boolean" == typeof input.groupModulesByCacheStatus) && (void 0 === input.groupModulesByLayer || "boolean" == typeof input.groupModulesByLayer) && (void 0 === input.groupModulesByAttributes || "boolean" == typeof input.groupModulesByAttributes) && (void 0 === input.groupModulesByPath || "boolean" == typeof input.groupModulesByPath) && (void 0 === input.groupModulesByExtension || "boolean" == typeof input.groupModulesByExtension) && (void 0 === input.modulesSpace || "number" == typeof input.modulesSpace) && (void 0 === input.chunkModulesSpace || "number" == typeof input.chunkModulesSpace) && (void 0 === input.nestedModulesSpace || "number" == typeof input.nestedModulesSpace) && (void 0 === input.relatedAssets || "boolean" == typeof input.relatedAssets) && (void 0 === input.groupAssetsByEmitStatus || "boolean" == typeof input.groupAssetsByEmitStatus) && (void 0 === input.groupAssetsByInfo || "boolean" == typeof input.groupAssetsByInfo) && (void 0 === input.groupAssetsByPath || "boolean" == typeof input.groupAssetsByPath) && (void 0 === input.groupAssetsByExtension || "boolean" == typeof input.groupAssetsByExtension) && (void 0 === input.groupAssetsByChunk || "boolean" == typeof input.groupAssetsByChunk) && (void 0 === input.assetsSpace || "number" == typeof input.assetsSpace) && (void 0 === input.orphanModules || "boolean" == typeof input.orphanModules) && null !== input.excludeModules && (void 0 === input.excludeModules || "function" == typeof input.excludeModules || "string" == typeof input.excludeModules || "boolean" == typeof input.excludeModules || input.excludeModules instanceof RegExp || Array.isArray(input.excludeModules) && input.excludeModules.every((elem, _index83)=>null != elem && ("function" == typeof elem || "string" == typeof elem || elem instanceof RegExp))) && null !== input.excludeAssets && (void 0 === input.excludeAssets || "function" == typeof input.excludeAssets || "string" == typeof input.excludeAssets || "boolean" == typeof input.excludeAssets || input.excludeAssets instanceof RegExp || Array.isArray(input.excludeAssets) && input.excludeAssets.every((elem, _index84)=>null != elem && ("function" == typeof elem || "string" == typeof elem || elem instanceof RegExp))) && (void 0 === input.modulesSort || "string" == typeof input.modulesSort) && (void 0 === input.chunkModulesSort || "string" == typeof input.chunkModulesSort) && (void 0 === input.nestedModulesSort || "string" == typeof input.nestedModulesSort) && (void 0 === input.chunksSort || "string" == typeof input.chunksSort) && (void 0 === input.assetsSort || "string" == typeof input.assetsSort) && (void 0 === input.performance || "boolean" == typeof input.performance) && (void 0 === input.env || "boolean" == typeof input.env) && (void 0 === input.chunkGroupAuxiliary || "boolean" == typeof input.chunkGroupAuxiliary) && (void 0 === input.chunkGroupChildren || "boolean" == typeof input.chunkGroupChildren) && (void 0 === input.chunkGroupMaxAssets || "number" == typeof input.chunkGroupMaxAssets) && (void 0 === input.dependentModules || "boolean" == typeof input.dependentModules) && (void 0 === input.chunkOrigins || "boolean" == typeof input.chunkOrigins) && (void 0 === input.runtime || "boolean" == typeof input.runtime) && (void 0 === input.depth || "boolean" == typeof input.depth) && (void 0 === input.reasonsSpace || "number" == typeof input.reasonsSpace) && (void 0 === input.groupReasonsByOrigin || "boolean" == typeof input.groupReasonsByOrigin) && (void 0 === input.errorDetails || "boolean" == typeof input.errorDetails) && (void 0 === input.errorStack || "boolean" == typeof input.errorStack) && (void 0 === input.moduleTrace || "boolean" == typeof input.moduleTrace) && (void 0 === input.cachedModules || "boolean" == typeof input.cachedModules) && (void 0 === input.cachedAssets || "boolean" == typeof input.cachedAssets) && (void 0 === input.cached || "boolean" == typeof input.cached) && (void 0 === input.errorsSpace || "number" == typeof input.errorsSpace) && (void 0 === input.warningsSpace || "number" == typeof input.warningsSpace) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "all",
                        "preset",
                        "assets",
                        "chunks",
                        "modules",
                        "entrypoints",
                        "chunkGroups",
                        "warnings",
                        "warningsCount",
                        "errors",
                        "errorsCount",
                        "colors",
                        "hash",
                        "version",
                        "reasons",
                        "publicPath",
                        "outputPath",
                        "chunkModules",
                        "chunkRelations",
                        "ids",
                        "timings",
                        "builtAt",
                        "moduleAssets",
                        "nestedModules",
                        "source",
                        "logging",
                        "loggingDebug",
                        "loggingTrace",
                        "runtimeModules",
                        "children",
                        "usedExports",
                        "providedExports",
                        "optimizationBailout",
                        "groupModulesByType",
                        "groupModulesByCacheStatus",
                        "groupModulesByLayer",
                        "groupModulesByAttributes",
                        "groupModulesByPath",
                        "groupModulesByExtension",
                        "modulesSpace",
                        "chunkModulesSpace",
                        "nestedModulesSpace",
                        "relatedAssets",
                        "groupAssetsByEmitStatus",
                        "groupAssetsByInfo",
                        "groupAssetsByPath",
                        "groupAssetsByExtension",
                        "groupAssetsByChunk",
                        "assetsSpace",
                        "orphanModules",
                        "excludeModules",
                        "excludeAssets",
                        "modulesSort",
                        "chunkModulesSort",
                        "nestedModulesSort",
                        "chunksSort",
                        "assetsSort",
                        "performance",
                        "env",
                        "chunkGroupAuxiliary",
                        "chunkGroupChildren",
                        "chunkGroupMaxAssets",
                        "dependentModules",
                        "chunkOrigins",
                        "runtime",
                        "depth",
                        "reasonsSpace",
                        "groupReasonsByOrigin",
                        "errorDetails",
                        "errorStack",
                        "moduleTrace",
                        "cachedModules",
                        "cachedAssets",
                        "cached",
                        "errorsSpace",
                        "warningsSpace"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io118 = (input, _exceptionable = true)=>0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                });
            const _io119 = (input, _exceptionable = true)=>(void 0 === input.moduleIds || "named" === input.moduleIds || "natural" === input.moduleIds || "deterministic" === input.moduleIds) && (void 0 === input.chunkIds || "named" === input.chunkIds || "natural" === input.chunkIds || "deterministic" === input.chunkIds || "size" === input.chunkIds || "total-size" === input.chunkIds) && (void 0 === input.minimize || "boolean" == typeof input.minimize) && (void 0 === input.minimizer || Array.isArray(input.minimizer) && input.minimizer.every((elem, _index85)=>null == elem || "function" == typeof elem || false === elem || "" === elem || "..." === elem || 0 === elem || "object" == typeof elem && null !== elem && _iu0(elem, _exceptionable))) && (void 0 === input.mergeDuplicateChunks || "boolean" == typeof input.mergeDuplicateChunks) && null !== input.splitChunks && (void 0 === input.splitChunks || false === input.splitChunks || "object" == typeof input.splitChunks && null !== input.splitChunks && false === Array.isArray(input.splitChunks) && _io122(input.splitChunks, _exceptionable)) && null !== input.runtimeChunk && (void 0 === input.runtimeChunk || "single" === input.runtimeChunk || "multiple" === input.runtimeChunk || "boolean" == typeof input.runtimeChunk || "object" == typeof input.runtimeChunk && null !== input.runtimeChunk && false === Array.isArray(input.runtimeChunk) && _io127(input.runtimeChunk, _exceptionable)) && (void 0 === input.removeAvailableModules || "boolean" == typeof input.removeAvailableModules) && (void 0 === input.removeEmptyChunks || "boolean" == typeof input.removeEmptyChunks) && (void 0 === input.realContentHash || "boolean" == typeof input.realContentHash) && (void 0 === input.sideEffects || "flag" === input.sideEffects || "boolean" == typeof input.sideEffects) && (void 0 === input.providedExports || "boolean" == typeof input.providedExports) && (void 0 === input.concatenateModules || "boolean" == typeof input.concatenateModules) && (void 0 === input.innerGraph || "boolean" == typeof input.innerGraph) && (void 0 === input.usedExports || "global" === input.usedExports || "boolean" == typeof input.usedExports) && (void 0 === input.mangleExports || "deterministic" === input.mangleExports || "size" === input.mangleExports || "boolean" == typeof input.mangleExports) && (void 0 === input.nodeEnv || false === input.nodeEnv || "string" == typeof input.nodeEnv) && (void 0 === input.emitOnErrors || "boolean" == typeof input.emitOnErrors) && (void 0 === input.avoidEntryIife || "boolean" == typeof input.avoidEntryIife) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "moduleIds",
                        "chunkIds",
                        "minimize",
                        "minimizer",
                        "mergeDuplicateChunks",
                        "splitChunks",
                        "runtimeChunk",
                        "removeAvailableModules",
                        "removeEmptyChunks",
                        "realContentHash",
                        "sideEffects",
                        "providedExports",
                        "concatenateModules",
                        "innerGraph",
                        "usedExports",
                        "mangleExports",
                        "nodeEnv",
                        "emitOnErrors",
                        "avoidEntryIife"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io120 = (input, _exceptionable = true)=>Object.keys(input).every((key)=>{
                    if ([
                        "apply"
                    ].some((prop)=>key === prop)) return true;
                    input[key];
                    return true;
                });
            const _io121 = (input, _exceptionable = true)=>Object.keys(input).every((key)=>{
                    if ([
                        "apply"
                    ].some((prop)=>key === prop)) return true;
                    input[key];
                    return true;
                });
            const _io122 = (input, _exceptionable = true)=>(void 0 === input.cacheGroups || "object" == typeof input.cacheGroups && null !== input.cacheGroups && false === Array.isArray(input.cacheGroups) && _io123(input.cacheGroups, _exceptionable)) && (void 0 === input.fallbackCacheGroup || "object" == typeof input.fallbackCacheGroup && null !== input.fallbackCacheGroup && false === Array.isArray(input.fallbackCacheGroup) && _io126(input.fallbackCacheGroup, _exceptionable)) && (void 0 === input.hidePathInfo || "boolean" == typeof input.hidePathInfo) && null !== input.chunks && (void 0 === input.chunks || "function" == typeof input.chunks || "all" === input.chunks || "initial" === input.chunks || "async" === input.chunks || input.chunks instanceof RegExp) && (void 0 === input.defaultSizeTypes || Array.isArray(input.defaultSizeTypes) && input.defaultSizeTypes.every((elem, _index86)=>"string" == typeof elem)) && (void 0 === input.minChunks || "number" == typeof input.minChunks) && (void 0 === input.usedExports || "boolean" == typeof input.usedExports) && null !== input.name && (void 0 === input.name || "function" == typeof input.name || false === input.name || "string" == typeof input.name) && null !== input.filename && (void 0 === input.filename || "function" == typeof input.filename || "string" == typeof input.filename) && null !== input.minSize && (void 0 === input.minSize || "number" == typeof input.minSize || "object" == typeof input.minSize && null !== input.minSize && false === Array.isArray(input.minSize) && _io125(input.minSize, _exceptionable)) && null !== input.minSizeReduction && (void 0 === input.minSizeReduction || "number" == typeof input.minSizeReduction || "object" == typeof input.minSizeReduction && null !== input.minSizeReduction && false === Array.isArray(input.minSizeReduction) && _io125(input.minSizeReduction, _exceptionable)) && null !== input.maxSize && (void 0 === input.maxSize || "number" == typeof input.maxSize || "object" == typeof input.maxSize && null !== input.maxSize && false === Array.isArray(input.maxSize) && _io125(input.maxSize, _exceptionable)) && null !== input.maxAsyncSize && (void 0 === input.maxAsyncSize || "number" == typeof input.maxAsyncSize || "object" == typeof input.maxAsyncSize && null !== input.maxAsyncSize && false === Array.isArray(input.maxAsyncSize) && _io125(input.maxAsyncSize, _exceptionable)) && null !== input.maxInitialSize && (void 0 === input.maxInitialSize || "number" == typeof input.maxInitialSize || "object" == typeof input.maxInitialSize && null !== input.maxInitialSize && false === Array.isArray(input.maxInitialSize) && _io125(input.maxInitialSize, _exceptionable)) && (void 0 === input.maxAsyncRequests || "number" == typeof input.maxAsyncRequests) && (void 0 === input.maxInitialRequests || "number" == typeof input.maxInitialRequests) && (void 0 === input.automaticNameDelimiter || "string" == typeof input.automaticNameDelimiter) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "cacheGroups",
                        "fallbackCacheGroup",
                        "hidePathInfo",
                        "chunks",
                        "defaultSizeTypes",
                        "minChunks",
                        "usedExports",
                        "name",
                        "filename",
                        "minSize",
                        "minSizeReduction",
                        "maxSize",
                        "maxAsyncSize",
                        "maxInitialSize",
                        "maxAsyncRequests",
                        "maxInitialRequests",
                        "automaticNameDelimiter"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io123 = (input, _exceptionable = true)=>Object.keys(input).every((key)=>{
                    const value = input[key];
                    if (void 0 === value) return true;
                    return null != value && (false === value || "object" == typeof value && null !== value && false === Array.isArray(value) && _io124(value, _exceptionable));
                });
            const _io124 = (input, _exceptionable = true)=>null !== input.test && (void 0 === input.test || "function" == typeof input.test || "string" == typeof input.test || input.test instanceof RegExp) && (void 0 === input.priority || "number" == typeof input.priority) && (void 0 === input.enforce || "boolean" == typeof input.enforce) && (void 0 === input.reuseExistingChunk || "boolean" == typeof input.reuseExistingChunk) && null !== input.type && (void 0 === input.type || "string" == typeof input.type || input.type instanceof RegExp) && (void 0 === input.idHint || "string" == typeof input.idHint) && null !== input.layer && (void 0 === input.layer || "function" == typeof input.layer || "string" == typeof input.layer || input.layer instanceof RegExp) && null !== input.chunks && (void 0 === input.chunks || "function" == typeof input.chunks || "all" === input.chunks || "initial" === input.chunks || "async" === input.chunks || input.chunks instanceof RegExp) && (void 0 === input.defaultSizeTypes || Array.isArray(input.defaultSizeTypes) && input.defaultSizeTypes.every((elem, _index87)=>"string" == typeof elem)) && (void 0 === input.minChunks || "number" == typeof input.minChunks) && (void 0 === input.usedExports || "boolean" == typeof input.usedExports) && null !== input.name && (void 0 === input.name || "function" == typeof input.name || false === input.name || "string" == typeof input.name) && null !== input.filename && (void 0 === input.filename || "function" == typeof input.filename || "string" == typeof input.filename) && null !== input.minSize && (void 0 === input.minSize || "number" == typeof input.minSize || "object" == typeof input.minSize && null !== input.minSize && false === Array.isArray(input.minSize) && _io125(input.minSize, _exceptionable)) && null !== input.minSizeReduction && (void 0 === input.minSizeReduction || "number" == typeof input.minSizeReduction || "object" == typeof input.minSizeReduction && null !== input.minSizeReduction && false === Array.isArray(input.minSizeReduction) && _io125(input.minSizeReduction, _exceptionable)) && null !== input.maxSize && (void 0 === input.maxSize || "number" == typeof input.maxSize || "object" == typeof input.maxSize && null !== input.maxSize && false === Array.isArray(input.maxSize) && _io125(input.maxSize, _exceptionable)) && null !== input.maxAsyncSize && (void 0 === input.maxAsyncSize || "number" == typeof input.maxAsyncSize || "object" == typeof input.maxAsyncSize && null !== input.maxAsyncSize && false === Array.isArray(input.maxAsyncSize) && _io125(input.maxAsyncSize, _exceptionable)) && null !== input.maxInitialSize && (void 0 === input.maxInitialSize || "number" == typeof input.maxInitialSize || "object" == typeof input.maxInitialSize && null !== input.maxInitialSize && false === Array.isArray(input.maxInitialSize) && _io125(input.maxInitialSize, _exceptionable)) && (void 0 === input.maxAsyncRequests || "number" == typeof input.maxAsyncRequests) && (void 0 === input.maxInitialRequests || "number" == typeof input.maxInitialRequests) && (void 0 === input.automaticNameDelimiter || "string" == typeof input.automaticNameDelimiter) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "test",
                        "priority",
                        "enforce",
                        "reuseExistingChunk",
                        "type",
                        "idHint",
                        "layer",
                        "chunks",
                        "defaultSizeTypes",
                        "minChunks",
                        "usedExports",
                        "name",
                        "filename",
                        "minSize",
                        "minSizeReduction",
                        "maxSize",
                        "maxAsyncSize",
                        "maxInitialSize",
                        "maxAsyncRequests",
                        "maxInitialRequests",
                        "automaticNameDelimiter"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io125 = (input, _exceptionable = true)=>Object.keys(input).every((key)=>{
                    const value = input[key];
                    if (void 0 === value) return true;
                    return "number" == typeof value;
                });
            const _io126 = (input, _exceptionable = true)=>null !== input.chunks && (void 0 === input.chunks || "function" == typeof input.chunks || "all" === input.chunks || "initial" === input.chunks || "async" === input.chunks || input.chunks instanceof RegExp) && (void 0 === input.minSize || "number" == typeof input.minSize) && (void 0 === input.maxSize || "number" == typeof input.maxSize) && (void 0 === input.maxAsyncSize || "number" == typeof input.maxAsyncSize) && (void 0 === input.maxInitialSize || "number" == typeof input.maxInitialSize) && (void 0 === input.automaticNameDelimiter || "string" == typeof input.automaticNameDelimiter) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "chunks",
                        "minSize",
                        "maxSize",
                        "maxAsyncSize",
                        "maxInitialSize",
                        "automaticNameDelimiter"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io127 = (input, _exceptionable = true)=>null !== input.name && (void 0 === input.name || "function" == typeof input.name || "string" == typeof input.name) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "name"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io128 = (input, _exceptionable = true)=>null !== input.alias && (void 0 === input.alias || false === input.alias || "object" == typeof input.alias && null !== input.alias && false === Array.isArray(input.alias) && _io129(input.alias, _exceptionable)) && (void 0 === input.conditionNames || Array.isArray(input.conditionNames) && input.conditionNames.every((elem, _index88)=>"string" == typeof elem)) && (void 0 === input.extensions || Array.isArray(input.extensions) && input.extensions.every((elem, _index89)=>"string" == typeof elem)) && null !== input.fallback && (void 0 === input.fallback || false === input.fallback || "object" == typeof input.fallback && null !== input.fallback && false === Array.isArray(input.fallback) && _io129(input.fallback, _exceptionable)) && (void 0 === input.mainFields || Array.isArray(input.mainFields) && input.mainFields.every((elem, _index90)=>"string" == typeof elem)) && (void 0 === input.mainFiles || Array.isArray(input.mainFiles) && input.mainFiles.every((elem, _index91)=>"string" == typeof elem)) && (void 0 === input.modules || Array.isArray(input.modules) && input.modules.every((elem, _index92)=>"string" == typeof elem)) && (void 0 === input.preferRelative || "boolean" == typeof input.preferRelative) && (void 0 === input.preferAbsolute || "boolean" == typeof input.preferAbsolute) && (void 0 === input.symlinks || "boolean" == typeof input.symlinks) && (void 0 === input.enforceExtension || "boolean" == typeof input.enforceExtension) && (void 0 === input.importsFields || Array.isArray(input.importsFields) && input.importsFields.every((elem, _index93)=>"string" == typeof elem)) && (void 0 === input.descriptionFiles || Array.isArray(input.descriptionFiles) && input.descriptionFiles.every((elem, _index94)=>"string" == typeof elem)) && null !== input.tsConfig && (void 0 === input.tsConfig || "string" == typeof input.tsConfig || "object" == typeof input.tsConfig && null !== input.tsConfig && _io130(input.tsConfig, _exceptionable)) && (void 0 === input.fullySpecified || "boolean" == typeof input.fullySpecified) && (void 0 === input.exportsFields || Array.isArray(input.exportsFields) && input.exportsFields.every((elem, _index95)=>"string" == typeof elem)) && (void 0 === input.extensionAlias || "object" == typeof input.extensionAlias && null !== input.extensionAlias && false === Array.isArray(input.extensionAlias) && _io131(input.extensionAlias, _exceptionable)) && (void 0 === input.aliasFields || Array.isArray(input.aliasFields) && input.aliasFields.every((elem, _index96)=>"string" == typeof elem)) && (void 0 === input.restrictions || Array.isArray(input.restrictions) && input.restrictions.every((elem, _index97)=>"string" == typeof elem)) && (void 0 === input.roots || Array.isArray(input.roots) && input.roots.every((elem, _index98)=>"string" == typeof elem)) && (void 0 === input.byDependency || "object" == typeof input.byDependency && null !== input.byDependency && false === Array.isArray(input.byDependency) && _io132(input.byDependency, _exceptionable)) && (void 0 === input.pnp || "boolean" == typeof input.pnp) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "alias",
                        "conditionNames",
                        "extensions",
                        "fallback",
                        "mainFields",
                        "mainFiles",
                        "modules",
                        "preferRelative",
                        "preferAbsolute",
                        "symlinks",
                        "enforceExtension",
                        "importsFields",
                        "descriptionFiles",
                        "tsConfig",
                        "fullySpecified",
                        "exportsFields",
                        "extensionAlias",
                        "aliasFields",
                        "restrictions",
                        "roots",
                        "byDependency",
                        "pnp"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io129 = (input, _exceptionable = true)=>Object.keys(input).every((key)=>{
                    const value = input[key];
                    if (void 0 === value) return true;
                    return null != value && (false === value || "string" == typeof value || Array.isArray(value) && value.every((elem, _index99)=>false === elem || "string" == typeof elem));
                });
            const _io130 = (input, _exceptionable = true)=>"string" == typeof input.configFile && null !== input.references && (void 0 === input.references || "auto" === input.references || Array.isArray(input.references) && input.references.every((elem, _index100)=>"string" == typeof elem)) && (1 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "configFile",
                        "references"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io131 = (input, _exceptionable = true)=>Object.keys(input).every((key)=>{
                    const value = input[key];
                    if (void 0 === value) return true;
                    return null != value && ("string" == typeof value || Array.isArray(value) && value.every((elem, _index101)=>"string" == typeof elem));
                });
            const _io132 = (input, _exceptionable = true)=>Object.keys(input).every((key)=>{
                    const value = input[key];
                    if (void 0 === value) return true;
                    return "object" == typeof value && null !== value && false === Array.isArray(value) && _io128(value, _exceptionable);
                });
            const _io133 = (input, _exceptionable = true)=>(void 0 === input.ipc || "string" == typeof input.ipc || "boolean" == typeof input.ipc) && (void 0 === input.host || "string" == typeof input.host) && (void 0 === input.port || "string" == typeof input.port || "number" == typeof input.port) && (void 0 === input.hot || "only" === input.hot || "boolean" == typeof input.hot) && (void 0 === input.liveReload || "boolean" == typeof input.liveReload) && (void 0 === input.devMiddleware || "object" == typeof input.devMiddleware && null !== input.devMiddleware && false === Array.isArray(input.devMiddleware) && _io134(input.devMiddleware, _exceptionable)) && (void 0 === input.compress || "boolean" == typeof input.compress) && null !== input.allowedHosts && (void 0 === input.allowedHosts || "string" == typeof input.allowedHosts || Array.isArray(input.allowedHosts) && input.allowedHosts.every((elem, _index102)=>"string" == typeof elem)) && null !== input.historyApiFallback && (void 0 === input.historyApiFallback || "boolean" == typeof input.historyApiFallback || "object" == typeof input.historyApiFallback && null !== input.historyApiFallback && false === Array.isArray(input.historyApiFallback) && _io139(input.historyApiFallback, _exceptionable)) && true && null !== input.watchFiles && (void 0 === input.watchFiles || "string" == typeof input.watchFiles || Array.isArray(input.watchFiles) && (_ip0(input.watchFiles, _exceptionable) || false) || "object" == typeof input.watchFiles && null !== input.watchFiles && _io141(input.watchFiles, _exceptionable)) && null !== input.static && (void 0 === input.static || "string" == typeof input.static || "boolean" == typeof input.static || Array.isArray(input.static) && input.static.every((elem, _index107)=>null != elem && ("string" == typeof elem || "object" == typeof elem && null !== elem && false === Array.isArray(elem) && _io143(elem, _exceptionable))) || "object" == typeof input.static && null !== input.static && false === Array.isArray(input.static) && _io143(input.static, _exceptionable)) && null !== input.server && (void 0 === input.server || "function" == typeof input.server || "string" == typeof input.server || "object" == typeof input.server && null !== input.server && false === Array.isArray(input.server) && _io147(input.server, _exceptionable)) && (void 0 === input.app || true) && null !== input.webSocketServer && (void 0 === input.webSocketServer || "string" == typeof input.webSocketServer || "boolean" == typeof input.webSocketServer || "object" == typeof input.webSocketServer && null !== input.webSocketServer && false === Array.isArray(input.webSocketServer) && _io164(input.webSocketServer, _exceptionable)) && (void 0 === input.proxy || Array.isArray(input.proxy) && input.proxy.every((elem, _index108)=>null != elem && ("function" == typeof elem || "object" == typeof elem && null !== elem && false === Array.isArray(elem) && _io165(elem, _exceptionable)))) && null !== input.open && (void 0 === input.open || "string" == typeof input.open || "boolean" == typeof input.open || Array.isArray(input.open) && input.open.every((elem, _index109)=>null != elem && ("string" == typeof elem || "object" == typeof elem && null !== elem && false === Array.isArray(elem) && _io166(elem, _exceptionable))) || "object" == typeof input.open && null !== input.open && false === Array.isArray(input.open) && _io166(input.open, _exceptionable)) && (void 0 === input.setupExitSignals || "boolean" == typeof input.setupExitSignals) && null !== input.client && (void 0 === input.client || "boolean" == typeof input.client || "object" == typeof input.client && null !== input.client && false === Array.isArray(input.client) && _io168(input.client, _exceptionable)) && null !== input.headers && (void 0 === input.headers || "function" == typeof input.headers || Array.isArray(input.headers) && input.headers.every((elem, _index110)=>"object" == typeof elem && null !== elem && _io171(elem, _exceptionable)) || "object" == typeof input.headers && null !== input.headers && false === Array.isArray(input.headers) && _io131(input.headers, _exceptionable)) && (void 0 === input.onListening || true) && (void 0 === input.setupMiddlewares || true) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "ipc",
                        "host",
                        "port",
                        "hot",
                        "liveReload",
                        "devMiddleware",
                        "compress",
                        "allowedHosts",
                        "historyApiFallback",
                        "bonjour",
                        "watchFiles",
                        "static",
                        "server",
                        "app",
                        "webSocketServer",
                        "proxy",
                        "open",
                        "setupExitSignals",
                        "client",
                        "headers",
                        "onListening",
                        "setupMiddlewares"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io134 = (input, _exceptionable = true)=>(void 0 === input.mimeTypes || "object" == typeof input.mimeTypes && null !== input.mimeTypes && false === Array.isArray(input.mimeTypes) && _io135(input.mimeTypes, _exceptionable)) && (void 0 === input.mimeTypeDefault || "string" == typeof input.mimeTypeDefault) && null !== input.writeToDisk && (void 0 === input.writeToDisk || "function" == typeof input.writeToDisk || "boolean" == typeof input.writeToDisk) && (void 0 === input.methods || Array.isArray(input.methods) && input.methods.every((elem, _index111)=>"string" == typeof elem)) && true && null !== input.publicPath && (void 0 === input.publicPath || "function" == typeof input.publicPath || "string" == typeof input.publicPath) && null !== input.stats && (void 0 === input.stats || "none" === input.stats || "verbose" === input.stats || "normal" === input.stats || "errors-only" === input.stats || "errors-warnings" === input.stats || "minimal" === input.stats || "detailed" === input.stats || "summary" === input.stats || "boolean" == typeof input.stats || "object" == typeof input.stats && null !== input.stats && false === Array.isArray(input.stats) && _io117(input.stats, _exceptionable)) && (void 0 === input.serverSideRender || "boolean" == typeof input.serverSideRender) && (void 0 === input.outputFileSystem || "object" == typeof input.outputFileSystem && null !== input.outputFileSystem && _io136(input.outputFileSystem, _exceptionable)) && (void 0 === input.index || "string" == typeof input.index || "boolean" == typeof input.index) && (void 0 === input.modifyResponseData || true) && (void 0 === input.etag || "strong" === input.etag || "weak" === input.etag) && (void 0 === input.lastModified || "boolean" == typeof input.lastModified) && null !== input.cacheControl && (void 0 === input.cacheControl || "string" == typeof input.cacheControl || "number" == typeof input.cacheControl || "boolean" == typeof input.cacheControl || "object" == typeof input.cacheControl && null !== input.cacheControl && false === Array.isArray(input.cacheControl) && _io138(input.cacheControl, _exceptionable)) && (void 0 === input.cacheImmutable || "boolean" == typeof input.cacheImmutable) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "mimeTypes",
                        "mimeTypeDefault",
                        "writeToDisk",
                        "methods",
                        "headers",
                        "publicPath",
                        "stats",
                        "serverSideRender",
                        "outputFileSystem",
                        "index",
                        "modifyResponseData",
                        "etag",
                        "lastModified",
                        "cacheControl",
                        "cacheImmutable"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io135 = (input, _exceptionable = true)=>Object.keys(input).every((key)=>{
                    const value = input[key];
                    if (void 0 === value) return true;
                    return "string" == typeof value;
                });
            const _io136 = (input, _exceptionable = true)=>(input.lstat, input.join, input.relative, input.dirname, input.createReadStream, "object" == typeof input.statSync && null !== input.statSync && _io137(input.statSync, _exceptionable) && true && (10 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "writeFile",
                        "mkdir",
                        "readdir",
                        "rmdir",
                        "unlink",
                        "stat",
                        "lstat",
                        "readFile",
                        "chmod",
                        "join",
                        "relative",
                        "dirname",
                        "createReadStream",
                        "statSync",
                        "readFileSync"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                })));
            const _io137 = (input, _exceptionable = true)=>"number" == typeof input.length && true && "object" == typeof input.caller && null !== input.caller && _io33(input.caller, _exceptionable) && "string" == typeof input.name && (5 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "prototype",
                        "length",
                        "arguments",
                        "caller",
                        "name"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io138 = (input, _exceptionable = true)=>(void 0 === input.maxAge || "number" == typeof input.maxAge) && (void 0 === input.immutable || "boolean" == typeof input.immutable) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "maxAge",
                        "immutable"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io139 = (input, _exceptionable = true)=>(void 0 === input.disableDotRule || true === input.disableDotRule) && (void 0 === input.htmlAcceptHeaders || Array.isArray(input.htmlAcceptHeaders) && input.htmlAcceptHeaders.every((elem, _index112)=>"string" == typeof elem)) && (void 0 === input.index || "string" == typeof input.index) && (void 0 === input.logger || true) && (void 0 === input.rewrites || Array.isArray(input.rewrites) && input.rewrites.every((elem, _index113)=>"object" == typeof elem && null !== elem && _io140(elem, _exceptionable))) && (void 0 === input.verbose || "boolean" == typeof input.verbose) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "disableDotRule",
                        "htmlAcceptHeaders",
                        "index",
                        "logger",
                        "rewrites",
                        "verbose"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io140 = (input, _exceptionable = true)=>input.from instanceof RegExp && null !== input.to && void 0 !== input.to && ("function" == typeof input.to || "string" == typeof input.to || input.to instanceof RegExp) && (2 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "from",
                        "to"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io141 = (input, _exceptionable = true)=>null !== input.paths && void 0 !== input.paths && ("string" == typeof input.paths || Array.isArray(input.paths) && input.paths.every((elem, _index114)=>"string" == typeof elem)) && (void 0 === input.options || "object" == typeof input.options && null !== input.options && false === Array.isArray(input.options) && _io142(input.options, _exceptionable)) && (1 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "paths",
                        "options"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io142 = (input, _exceptionable = true)=>(void 0 === input.aggregateTimeout || "number" == typeof input.aggregateTimeout) && true && (void 0 === input.poll || "number" == typeof input.poll || "boolean" == typeof input.poll) && Object.keys(input).every((key)=>{
                    if ([
                        "aggregateTimeout",
                        "ignored",
                        "poll"
                    ].some((prop)=>key === prop)) return true;
                    input[key];
                    return true;
                });
            const _io143 = (input, _exceptionable = true)=>(void 0 === input.directory || "string" == typeof input.directory) && null !== input.publicPath && (void 0 === input.publicPath || "string" == typeof input.publicPath || Array.isArray(input.publicPath) && input.publicPath.every((elem, _index115)=>"string" == typeof elem)) && null !== input.serveIndex && (void 0 === input.serveIndex || "boolean" == typeof input.serveIndex || "object" == typeof input.serveIndex && null !== input.serveIndex && false === Array.isArray(input.serveIndex) && _io144(input.serveIndex, _exceptionable)) && (void 0 === input.staticOptions || "object" == typeof input.staticOptions && null !== input.staticOptions && false === Array.isArray(input.staticOptions) && _io145(input.staticOptions, _exceptionable)) && null !== input.watch && (void 0 === input.watch || "boolean" == typeof input.watch || "object" == typeof input.watch && null !== input.watch && false === Array.isArray(input.watch) && _io146(input.watch, _exceptionable)) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "directory",
                        "publicPath",
                        "serveIndex",
                        "staticOptions",
                        "watch"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io144 = (input, _exceptionable = true)=>Object.keys(input).every((key)=>{
                    input[key];
                    return true;
                });
            const _io145 = (input, _exceptionable = true)=>Object.keys(input).every((key)=>{
                    input[key];
                    return true;
                });
            const _io146 = (input, _exceptionable = true)=>(void 0 === input.aggregateTimeout || "number" == typeof input.aggregateTimeout) && true && (void 0 === input.poll || "number" == typeof input.poll || "boolean" == typeof input.poll) && Object.keys(input).every((key)=>{
                    if ([
                        "aggregateTimeout",
                        "ignored",
                        "poll"
                    ].some((prop)=>key === prop)) return true;
                    input[key];
                    return true;
                });
            const _io147 = (input, _exceptionable = true)=>null !== input.type && (void 0 === input.type || "function" == typeof input.type || "string" == typeof input.type) && (void 0 === input.options || "object" == typeof input.options && null !== input.options && false === Array.isArray(input.options) && _io148(input.options, _exceptionable)) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "type",
                        "options"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io148 = (input, _exceptionable = true)=>(input.ALPNCallback, (void 0 === input.allowPartialTrustChain || "boolean" == typeof input.allowPartialTrustChain) && null !== input.ca && (void 0 === input.ca || "string" == typeof input.ca || Array.isArray(input.ca) && input.ca.every((elem, _index116)=>null != elem && ("string" == typeof elem || "object" == typeof elem && null !== elem && _io149(elem, _exceptionable))) || "object" == typeof input.ca && null !== input.ca && _io149(input.ca, _exceptionable)) && null !== input.cert && (void 0 === input.cert || "string" == typeof input.cert || Array.isArray(input.cert) && input.cert.every((elem, _index117)=>null != elem && ("string" == typeof elem || "object" == typeof elem && null !== elem && _io149(elem, _exceptionable))) || "object" == typeof input.cert && null !== input.cert && _io149(input.cert, _exceptionable)) && (void 0 === input.sigalgs || "string" == typeof input.sigalgs) && (void 0 === input.ciphers || "string" == typeof input.ciphers) && (void 0 === input.clientCertEngine || "string" == typeof input.clientCertEngine) && null !== input.crl && (void 0 === input.crl || "string" == typeof input.crl || Array.isArray(input.crl) && input.crl.every((elem, _index118)=>null != elem && ("string" == typeof elem || "object" == typeof elem && null !== elem && _io149(elem, _exceptionable))) || "object" == typeof input.crl && null !== input.crl && _io149(input.crl, _exceptionable)) && null !== input.dhparam && (void 0 === input.dhparam || "string" == typeof input.dhparam || "object" == typeof input.dhparam && null !== input.dhparam && _io149(input.dhparam, _exceptionable)) && (void 0 === input.ecdhCurve || "string" == typeof input.ecdhCurve) && (void 0 === input.honorCipherOrder || "boolean" == typeof input.honorCipherOrder) && null !== input.key && (void 0 === input.key || "string" == typeof input.key || Array.isArray(input.key) && input.key.every((elem, _index119)=>null != elem && ("string" == typeof elem || "object" == typeof elem && null !== elem && _iu1(elem, _exceptionable))) || "object" == typeof input.key && null !== input.key && _io149(input.key, _exceptionable)) && (void 0 === input.privateKeyEngine || "string" == typeof input.privateKeyEngine) && (void 0 === input.privateKeyIdentifier || "string" == typeof input.privateKeyIdentifier) && (void 0 === input.maxVersion || "TLSv1.3" === input.maxVersion || "TLSv1.2" === input.maxVersion || "TLSv1.1" === input.maxVersion || "TLSv1" === input.maxVersion) && (void 0 === input.minVersion || "TLSv1.3" === input.minVersion || "TLSv1.2" === input.minVersion || "TLSv1.1" === input.minVersion || "TLSv1" === input.minVersion) && (void 0 === input.passphrase || "string" == typeof input.passphrase) && null !== input.pfx && (void 0 === input.pfx || "string" == typeof input.pfx || Array.isArray(input.pfx) && input.pfx.every((elem, _index120)=>null != elem && ("string" == typeof elem || "object" == typeof elem && null !== elem && _iu2(elem, _exceptionable))) || "object" == typeof input.pfx && null !== input.pfx && _io149(input.pfx, _exceptionable)) && (void 0 === input.secureOptions || "number" == typeof input.secureOptions) && (void 0 === input.secureProtocol || "string" == typeof input.secureProtocol) && (void 0 === input.sessionIdContext || "string" == typeof input.sessionIdContext) && (void 0 === input.ticketKeys || "object" == typeof input.ticketKeys && null !== input.ticketKeys && _io149(input.ticketKeys, _exceptionable)) && (void 0 === input.sessionTimeout || "number" == typeof input.sessionTimeout) && (void 0 === input.handshakeTimeout || "number" == typeof input.handshakeTimeout) && (void 0 === input.pskIdentityHint || "string" == typeof input.pskIdentityHint) && (void 0 === input.secureContext || "object" == typeof input.secureContext && null !== input.secureContext && _io152(input.secureContext, _exceptionable)) && (void 0 === input.enableTrace || "boolean" == typeof input.enableTrace) && (void 0 === input.requestCert || "boolean" == typeof input.requestCert) && null !== input.ALPNProtocols && (void 0 === input.ALPNProtocols || input.ALPNProtocols instanceof Uint8Array || Array.isArray(input.ALPNProtocols) && (_ip1(input.ALPNProtocols, _exceptionable) || false)) && (void 0 === input.SNICallback || true) && (void 0 === input.rejectUnauthorized || "boolean" == typeof input.rejectUnauthorized) && (void 0 === input.allowHalfOpen || "boolean" == typeof input.allowHalfOpen) && (void 0 === input.pauseOnConnect || "boolean" == typeof input.pauseOnConnect) && (void 0 === input.noDelay || "boolean" == typeof input.noDelay) && (void 0 === input.keepAlive || "boolean" == typeof input.keepAlive) && (void 0 === input.keepAliveInitialDelay || "number" == typeof input.keepAliveInitialDelay) && (void 0 === input.highWaterMark || "number" == typeof input.highWaterMark) && (void 0 === input.blockList || "object" == typeof input.blockList && null !== input.blockList && _io153(input.blockList, _exceptionable)) && (void 0 === input.IncomingMessage || "object" == typeof input.IncomingMessage && null !== input.IncomingMessage && _io154(input.IncomingMessage, _exceptionable)) && (void 0 === input.ServerResponse || "object" == typeof input.ServerResponse && null !== input.ServerResponse && _io161(input.ServerResponse, _exceptionable)) && (void 0 === input.requestTimeout || "number" == typeof input.requestTimeout) && (void 0 === input.joinDuplicateHeaders || "boolean" == typeof input.joinDuplicateHeaders) && (void 0 === input.keepAliveTimeout || "number" == typeof input.keepAliveTimeout) && (void 0 === input.connectionsCheckingInterval || "number" == typeof input.connectionsCheckingInterval) && (void 0 === input.headersTimeout || "number" == typeof input.headersTimeout) && (void 0 === input.insecureHTTPParser || "boolean" == typeof input.insecureHTTPParser) && (void 0 === input.maxHeaderSize || "number" == typeof input.maxHeaderSize) && (void 0 === input.requireHostHeader || "boolean" == typeof input.requireHostHeader) && (void 0 === input.uniqueHeaders || Array.isArray(input.uniqueHeaders) && input.uniqueHeaders.every((elem, _index125)=>null != elem && ("string" == typeof elem || Array.isArray(elem) && elem.every((elem, _index126)=>"string" == typeof elem)))) && (void 0 === input.rejectNonStandardBodyWrites || "boolean" == typeof input.rejectNonStandardBodyWrites) && (void 0 === input.spdy || "object" == typeof input.spdy && null !== input.spdy && false === Array.isArray(input.spdy) && _io163(input.spdy, _exceptionable)) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "ALPNCallback",
                        "allowPartialTrustChain",
                        "ca",
                        "cert",
                        "sigalgs",
                        "ciphers",
                        "clientCertEngine",
                        "crl",
                        "dhparam",
                        "ecdhCurve",
                        "honorCipherOrder",
                        "key",
                        "privateKeyEngine",
                        "privateKeyIdentifier",
                        "maxVersion",
                        "minVersion",
                        "passphrase",
                        "pfx",
                        "secureOptions",
                        "secureProtocol",
                        "sessionIdContext",
                        "ticketKeys",
                        "sessionTimeout",
                        "handshakeTimeout",
                        "pskIdentityHint",
                        "secureContext",
                        "enableTrace",
                        "requestCert",
                        "ALPNProtocols",
                        "SNICallback",
                        "rejectUnauthorized",
                        "allowHalfOpen",
                        "pauseOnConnect",
                        "noDelay",
                        "keepAlive",
                        "keepAliveInitialDelay",
                        "highWaterMark",
                        "blockList",
                        "IncomingMessage",
                        "ServerResponse",
                        "requestTimeout",
                        "joinDuplicateHeaders",
                        "keepAliveTimeout",
                        "connectionsCheckingInterval",
                        "headersTimeout",
                        "insecureHTTPParser",
                        "maxHeaderSize",
                        "requireHostHeader",
                        "uniqueHeaders",
                        "rejectNonStandardBodyWrites",
                        "spdy"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                })));
            const _io149 = (input, _exceptionable = true)=>"number" == typeof input.BYTES_PER_ELEMENT && (input.buffer instanceof ArrayBuffer || input.buffer instanceof SharedArrayBuffer) && "number" == typeof input.byteLength && "number" == typeof input.byteOffset && "number" == typeof input.length && "Uint8Array" === input["__@toStringTag@6659"] && Object.keys(input).every((key)=>{
                    if ([
                        "BYTES_PER_ELEMENT",
                        "buffer",
                        "byteLength",
                        "byteOffset",
                        "length",
                        "__@toStringTag@6659"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    if ("number" == typeof Number(key)) return "number" == typeof value;
                    return false;
                });
            const _io150 = (input, _exceptionable = true)=>null !== input.pem && void 0 !== input.pem && ("string" == typeof input.pem || "object" == typeof input.pem && null !== input.pem && _io149(input.pem, _exceptionable)) && (void 0 === input.passphrase || "string" == typeof input.passphrase) && (1 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "pem",
                        "passphrase"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io151 = (input, _exceptionable = true)=>null !== input.buf && void 0 !== input.buf && ("string" == typeof input.buf || "object" == typeof input.buf && null !== input.buf && _io149(input.buf, _exceptionable)) && (void 0 === input.passphrase || "string" == typeof input.passphrase) && (1 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "buf",
                        "passphrase"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io152 = (input, _exceptionable = true)=>1 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "context"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                });
            const _io153 = (input, _exceptionable = true)=>Array.isArray(input.rules) && input.rules.every((elem, _index127)=>"string" == typeof elem) && (1 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "rules"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io154 = (input, _exceptionable = true)=>"object" == typeof input.prototype && null !== input.prototype && _io155(input.prototype, _exceptionable) && true && true && "boolean" == typeof input.captureRejections && "number" == typeof input.defaultMaxListeners && "number" == typeof input.length && true && "object" == typeof input.caller && null !== input.caller && _io33(input.caller, _exceptionable) && "string" == typeof input.name && (9 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "prototype",
                        "errorMonitor",
                        "captureRejectionSymbol",
                        "captureRejections",
                        "defaultMaxListeners",
                        "length",
                        "arguments",
                        "caller",
                        "name"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io155 = (input, _exceptionable = true)=>"boolean" == typeof input.aborted && "string" == typeof input.httpVersion && "number" == typeof input.httpVersionMajor && "number" == typeof input.httpVersionMinor && "boolean" == typeof input.complete && "object" == typeof input.connection && null !== input.connection && _io156(input.connection, _exceptionable) && "object" == typeof input.socket && null !== input.socket && _io156(input.socket, _exceptionable) && "object" == typeof input.headers && null !== input.headers && false === Array.isArray(input.headers) && _io158(input.headers, _exceptionable) && "object" == typeof input.headersDistinct && null !== input.headersDistinct && false === Array.isArray(input.headersDistinct) && _io159(input.headersDistinct, _exceptionable) && Array.isArray(input.rawHeaders) && input.rawHeaders.every((elem, _index128)=>"string" == typeof elem) && "object" == typeof input.trailers && null !== input.trailers && false === Array.isArray(input.trailers) && _io160(input.trailers, _exceptionable) && "object" == typeof input.trailersDistinct && null !== input.trailersDistinct && false === Array.isArray(input.trailersDistinct) && _io159(input.trailersDistinct, _exceptionable) && Array.isArray(input.rawTrailers) && input.rawTrailers.every((elem, _index129)=>"string" == typeof elem) && (void 0 === input.method || "string" == typeof input.method) && (void 0 === input.url || "string" == typeof input.url) && (void 0 === input.statusCode || "number" == typeof input.statusCode) && (void 0 === input.statusMessage || "string" == typeof input.statusMessage) && "boolean" == typeof input.readableAborted && "boolean" == typeof input.readable && "boolean" == typeof input.readableDidRead && (null === input.readableEncoding || true === _iv130.has(input.readableEncoding)) && "boolean" == typeof input.readableEnded && (null === input.readableFlowing || "boolean" == typeof input.readableFlowing) && "number" == typeof input.readableHighWaterMark && "number" == typeof input.readableLength && "boolean" == typeof input.readableObjectMode && "boolean" == typeof input.destroyed && "boolean" == typeof input.closed && (null === input.errored || "object" == typeof input.errored && null !== input.errored && _io157(input.errored, _exceptionable)) && (25 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "aborted",
                        "httpVersion",
                        "httpVersionMajor",
                        "httpVersionMinor",
                        "complete",
                        "connection",
                        "socket",
                        "headers",
                        "headersDistinct",
                        "rawHeaders",
                        "trailers",
                        "trailersDistinct",
                        "rawTrailers",
                        "method",
                        "url",
                        "statusCode",
                        "statusMessage",
                        "readableAborted",
                        "readable",
                        "readableDidRead",
                        "readableEncoding",
                        "readableEnded",
                        "readableFlowing",
                        "readableHighWaterMark",
                        "readableLength",
                        "readableObjectMode",
                        "destroyed",
                        "closed",
                        "errored"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io156 = (input, _exceptionable = true)=>Array.isArray(input.autoSelectFamilyAttemptedAddresses) && input.autoSelectFamilyAttemptedAddresses.every((elem, _index131)=>"string" == typeof elem) && "number" == typeof input.bufferSize && "number" == typeof input.bytesRead && "number" == typeof input.bytesWritten && "boolean" == typeof input.connecting && "boolean" == typeof input.pending && "boolean" == typeof input.destroyed && (void 0 === input.localAddress || "string" == typeof input.localAddress) && (void 0 === input.localPort || "number" == typeof input.localPort) && (void 0 === input.localFamily || "string" == typeof input.localFamily) && ("opening" === input.readyState || "open" === input.readyState || "readOnly" === input.readyState || "writeOnly" === input.readyState || "closed" === input.readyState) && (void 0 === input.remoteAddress || "string" == typeof input.remoteAddress) && (void 0 === input.remoteFamily || "string" == typeof input.remoteFamily) && (void 0 === input.remotePort || "number" == typeof input.remotePort) && (void 0 === input.timeout || "number" == typeof input.timeout) && "boolean" == typeof input.allowHalfOpen && "boolean" == typeof input.readableAborted && "boolean" == typeof input.readable && "boolean" == typeof input.readableDidRead && (null === input.readableEncoding || true === _iv132.has(input.readableEncoding)) && "boolean" == typeof input.readableEnded && (null === input.readableFlowing || "boolean" == typeof input.readableFlowing) && "number" == typeof input.readableHighWaterMark && "number" == typeof input.readableLength && "boolean" == typeof input.readableObjectMode && "boolean" == typeof input.closed && (null === input.errored || "object" == typeof input.errored && null !== input.errored && _io157(input.errored, _exceptionable)) && "boolean" == typeof input.writable && "boolean" == typeof input.writableAborted && "boolean" == typeof input.writableEnded && "boolean" == typeof input.writableFinished && "number" == typeof input.writableHighWaterMark && "number" == typeof input.writableLength && "boolean" == typeof input.writableObjectMode && "number" == typeof input.writableCorked && "boolean" == typeof input.writableNeedDrain && (29 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "autoSelectFamilyAttemptedAddresses",
                        "bufferSize",
                        "bytesRead",
                        "bytesWritten",
                        "connecting",
                        "pending",
                        "destroyed",
                        "localAddress",
                        "localPort",
                        "localFamily",
                        "readyState",
                        "remoteAddress",
                        "remoteFamily",
                        "remotePort",
                        "timeout",
                        "allowHalfOpen",
                        "readableAborted",
                        "readable",
                        "readableDidRead",
                        "readableEncoding",
                        "readableEnded",
                        "readableFlowing",
                        "readableHighWaterMark",
                        "readableLength",
                        "readableObjectMode",
                        "closed",
                        "errored",
                        "writable",
                        "writableAborted",
                        "writableEnded",
                        "writableFinished",
                        "writableHighWaterMark",
                        "writableLength",
                        "writableObjectMode",
                        "writableCorked",
                        "writableNeedDrain"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io157 = (input, _exceptionable = true)=>"string" == typeof input.name && "string" == typeof input.message && (void 0 === input.stack || "string" == typeof input.stack) && true && (2 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "name",
                        "message",
                        "stack",
                        "cause"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io158 = (input, _exceptionable = true)=>(void 0 === input.accept || "string" == typeof input.accept) && (void 0 === input["accept-encoding"] || "string" == typeof input["accept-encoding"]) && (void 0 === input["accept-language"] || "string" == typeof input["accept-language"]) && (void 0 === input["accept-patch"] || "string" == typeof input["accept-patch"]) && (void 0 === input["accept-ranges"] || "string" == typeof input["accept-ranges"]) && (void 0 === input["access-control-allow-credentials"] || "string" == typeof input["access-control-allow-credentials"]) && (void 0 === input["access-control-allow-headers"] || "string" == typeof input["access-control-allow-headers"]) && (void 0 === input["access-control-allow-methods"] || "string" == typeof input["access-control-allow-methods"]) && (void 0 === input["access-control-allow-origin"] || "string" == typeof input["access-control-allow-origin"]) && (void 0 === input["access-control-expose-headers"] || "string" == typeof input["access-control-expose-headers"]) && (void 0 === input["access-control-max-age"] || "string" == typeof input["access-control-max-age"]) && (void 0 === input["access-control-request-headers"] || "string" == typeof input["access-control-request-headers"]) && (void 0 === input["access-control-request-method"] || "string" == typeof input["access-control-request-method"]) && (void 0 === input.age || "string" == typeof input.age) && (void 0 === input.allow || "string" == typeof input.allow) && (void 0 === input["alt-svc"] || "string" == typeof input["alt-svc"]) && (void 0 === input.authorization || "string" == typeof input.authorization) && (void 0 === input["cache-control"] || "string" == typeof input["cache-control"]) && (void 0 === input.connection || "string" == typeof input.connection) && (void 0 === input["content-disposition"] || "string" == typeof input["content-disposition"]) && (void 0 === input["content-encoding"] || "string" == typeof input["content-encoding"]) && (void 0 === input["content-language"] || "string" == typeof input["content-language"]) && (void 0 === input["content-length"] || "string" == typeof input["content-length"]) && (void 0 === input["content-location"] || "string" == typeof input["content-location"]) && (void 0 === input["content-range"] || "string" == typeof input["content-range"]) && (void 0 === input["content-type"] || "string" == typeof input["content-type"]) && (void 0 === input.cookie || "string" == typeof input.cookie) && (void 0 === input.date || "string" == typeof input.date) && (void 0 === input.etag || "string" == typeof input.etag) && (void 0 === input.expect || "string" == typeof input.expect) && (void 0 === input.expires || "string" == typeof input.expires) && (void 0 === input.forwarded || "string" == typeof input.forwarded) && (void 0 === input.from || "string" == typeof input.from) && (void 0 === input.host || "string" == typeof input.host) && (void 0 === input["if-match"] || "string" == typeof input["if-match"]) && (void 0 === input["if-modified-since"] || "string" == typeof input["if-modified-since"]) && (void 0 === input["if-none-match"] || "string" == typeof input["if-none-match"]) && (void 0 === input["if-unmodified-since"] || "string" == typeof input["if-unmodified-since"]) && (void 0 === input["last-modified"] || "string" == typeof input["last-modified"]) && (void 0 === input.location || "string" == typeof input.location) && (void 0 === input.origin || "string" == typeof input.origin) && (void 0 === input.pragma || "string" == typeof input.pragma) && (void 0 === input["proxy-authenticate"] || "string" == typeof input["proxy-authenticate"]) && (void 0 === input["proxy-authorization"] || "string" == typeof input["proxy-authorization"]) && (void 0 === input["public-key-pins"] || "string" == typeof input["public-key-pins"]) && (void 0 === input.range || "string" == typeof input.range) && (void 0 === input.referer || "string" == typeof input.referer) && (void 0 === input["retry-after"] || "string" == typeof input["retry-after"]) && (void 0 === input["sec-fetch-site"] || "string" == typeof input["sec-fetch-site"]) && (void 0 === input["sec-fetch-mode"] || "string" == typeof input["sec-fetch-mode"]) && (void 0 === input["sec-fetch-user"] || "string" == typeof input["sec-fetch-user"]) && (void 0 === input["sec-fetch-dest"] || "string" == typeof input["sec-fetch-dest"]) && (void 0 === input["sec-websocket-accept"] || "string" == typeof input["sec-websocket-accept"]) && (void 0 === input["sec-websocket-extensions"] || "string" == typeof input["sec-websocket-extensions"]) && (void 0 === input["sec-websocket-key"] || "string" == typeof input["sec-websocket-key"]) && (void 0 === input["sec-websocket-protocol"] || "string" == typeof input["sec-websocket-protocol"]) && (void 0 === input["sec-websocket-version"] || "string" == typeof input["sec-websocket-version"]) && (void 0 === input["set-cookie"] || Array.isArray(input["set-cookie"]) && input["set-cookie"].every((elem, _index133)=>"string" == typeof elem)) && (void 0 === input["strict-transport-security"] || "string" == typeof input["strict-transport-security"]) && (void 0 === input.tk || "string" == typeof input.tk) && (void 0 === input.trailer || "string" == typeof input.trailer) && (void 0 === input["transfer-encoding"] || "string" == typeof input["transfer-encoding"]) && (void 0 === input.upgrade || "string" == typeof input.upgrade) && (void 0 === input["user-agent"] || "string" == typeof input["user-agent"]) && (void 0 === input.vary || "string" == typeof input.vary) && (void 0 === input.via || "string" == typeof input.via) && (void 0 === input.warning || "string" == typeof input.warning) && (void 0 === input["www-authenticate"] || "string" == typeof input["www-authenticate"]) && Object.keys(input).every((key)=>{
                    if ([
                        "accept",
                        "accept-encoding",
                        "accept-language",
                        "accept-patch",
                        "accept-ranges",
                        "access-control-allow-credentials",
                        "access-control-allow-headers",
                        "access-control-allow-methods",
                        "access-control-allow-origin",
                        "access-control-expose-headers",
                        "access-control-max-age",
                        "access-control-request-headers",
                        "access-control-request-method",
                        "age",
                        "allow",
                        "alt-svc",
                        "authorization",
                        "cache-control",
                        "connection",
                        "content-disposition",
                        "content-encoding",
                        "content-language",
                        "content-length",
                        "content-location",
                        "content-range",
                        "content-type",
                        "cookie",
                        "date",
                        "etag",
                        "expect",
                        "expires",
                        "forwarded",
                        "from",
                        "host",
                        "if-match",
                        "if-modified-since",
                        "if-none-match",
                        "if-unmodified-since",
                        "last-modified",
                        "location",
                        "origin",
                        "pragma",
                        "proxy-authenticate",
                        "proxy-authorization",
                        "public-key-pins",
                        "range",
                        "referer",
                        "retry-after",
                        "sec-fetch-site",
                        "sec-fetch-mode",
                        "sec-fetch-user",
                        "sec-fetch-dest",
                        "sec-websocket-accept",
                        "sec-websocket-extensions",
                        "sec-websocket-key",
                        "sec-websocket-protocol",
                        "sec-websocket-version",
                        "set-cookie",
                        "strict-transport-security",
                        "tk",
                        "trailer",
                        "transfer-encoding",
                        "upgrade",
                        "user-agent",
                        "vary",
                        "via",
                        "warning",
                        "www-authenticate"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return null !== value && (void 0 === value || "string" == typeof value || Array.isArray(value) && value.every((elem, _index134)=>"string" == typeof elem));
                });
            const _io159 = (input, _exceptionable = true)=>Object.keys(input).every((key)=>{
                    const value = input[key];
                    if (void 0 === value) return true;
                    return void 0 === value || Array.isArray(value) && value.every((elem, _index135)=>"string" == typeof elem);
                });
            const _io160 = (input, _exceptionable = true)=>Object.keys(input).every((key)=>{
                    const value = input[key];
                    if (void 0 === value) return true;
                    return void 0 === value || "string" == typeof value;
                });
            const _io161 = (input, _exceptionable = true)=>"object" == typeof input.prototype && null !== input.prototype && _io162(input.prototype, _exceptionable) && true && true && "boolean" == typeof input.captureRejections && "number" == typeof input.defaultMaxListeners && "number" == typeof input.length && true && "object" == typeof input.caller && null !== input.caller && _io33(input.caller, _exceptionable) && "string" == typeof input.name && (9 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "prototype",
                        "errorMonitor",
                        "captureRejectionSymbol",
                        "captureRejections",
                        "defaultMaxListeners",
                        "length",
                        "arguments",
                        "caller",
                        "name"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io162 = (input, _exceptionable = true)=>"number" == typeof input.statusCode && "string" == typeof input.statusMessage && "boolean" == typeof input.strictContentLength && true && "boolean" == typeof input.chunkedEncoding && "boolean" == typeof input.shouldKeepAlive && "boolean" == typeof input.useChunkedEncodingByDefault && "boolean" == typeof input.sendDate && "boolean" == typeof input.finished && "boolean" == typeof input.headersSent && (null === input.connection || "object" == typeof input.connection && null !== input.connection && _io156(input.connection, _exceptionable)) && (null === input.socket || "object" == typeof input.socket && null !== input.socket && _io156(input.socket, _exceptionable)) && "boolean" == typeof input.writable && "boolean" == typeof input.writableAborted && "boolean" == typeof input.writableEnded && "boolean" == typeof input.writableFinished && "number" == typeof input.writableHighWaterMark && "number" == typeof input.writableLength && "boolean" == typeof input.writableObjectMode && "number" == typeof input.writableCorked && "boolean" == typeof input.destroyed && "boolean" == typeof input.closed && (null === input.errored || "object" == typeof input.errored && null !== input.errored && _io157(input.errored, _exceptionable)) && "boolean" == typeof input.writableNeedDrain && (24 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "statusCode",
                        "statusMessage",
                        "strictContentLength",
                        "req",
                        "chunkedEncoding",
                        "shouldKeepAlive",
                        "useChunkedEncodingByDefault",
                        "sendDate",
                        "finished",
                        "headersSent",
                        "connection",
                        "socket",
                        "writable",
                        "writableAborted",
                        "writableEnded",
                        "writableFinished",
                        "writableHighWaterMark",
                        "writableLength",
                        "writableObjectMode",
                        "writableCorked",
                        "destroyed",
                        "closed",
                        "errored",
                        "writableNeedDrain"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io163 = (input, _exceptionable = true)=>(void 0 === input.plain || "boolean" == typeof input.plain) && (void 0 === input.ssl || "boolean" == typeof input.ssl) && (void 0 === input["x-forwarded-for"] || "string" == typeof input["x-forwarded-for"]) && (void 0 === input.protocol || "string" == typeof input.protocol) && (void 0 === input.protocols || Array.isArray(input.protocols) && input.protocols.every((elem, _index136)=>"string" == typeof elem)) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "plain",
                        "ssl",
                        "x-forwarded-for",
                        "protocol",
                        "protocols"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io164 = (input, _exceptionable = true)=>null !== input.type && (void 0 === input.type || "string" == typeof input.type || "object" == typeof input.type && null !== input.type && _io33(input.type, _exceptionable)) && (void 0 === input.options || "object" == typeof input.options && null !== input.options && false === Array.isArray(input.options) && _io19(input.options, _exceptionable)) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "type",
                        "options"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io165 = (input, _exceptionable = true)=>(input.bypass, Object.keys(input).every((key)=>{
                    if ([
                        "path",
                        "context",
                        "bypass"
                    ].some((prop)=>key === prop)) return true;
                    input[key];
                    return true;
                }));
            const _io166 = (input, _exceptionable = true)=>null !== input.app && (void 0 === input.app || "string" == typeof input.app || Array.isArray(input.app) && input.app.every((elem, _index137)=>"string" == typeof elem) || "object" == typeof input.app && null !== input.app && false === Array.isArray(input.app) && _io167(input.app, _exceptionable)) && null !== input.target && (void 0 === input.target || "string" == typeof input.target || Array.isArray(input.target) && input.target.every((elem, _index138)=>"string" == typeof elem)) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "app",
                        "target"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io167 = (input, _exceptionable = true)=>(void 0 === input.name || "string" == typeof input.name) && (void 0 === input.arguments || Array.isArray(input.arguments) && input.arguments.every((elem, _index139)=>"string" == typeof elem)) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "name",
                        "arguments"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io168 = (input, _exceptionable = true)=>(void 0 === input.logging || "none" === input.logging || "verbose" === input.logging || "error" === input.logging || "warn" === input.logging || "info" === input.logging || "log" === input.logging) && null !== input.overlay && (void 0 === input.overlay || "boolean" == typeof input.overlay || "object" == typeof input.overlay && null !== input.overlay && false === Array.isArray(input.overlay) && _io169(input.overlay, _exceptionable)) && (void 0 === input.progress || "boolean" == typeof input.progress) && (void 0 === input.reconnect || "number" == typeof input.reconnect || "boolean" == typeof input.reconnect) && (void 0 === input.webSocketTransport || "string" == typeof input.webSocketTransport) && null !== input.webSocketURL && (void 0 === input.webSocketURL || "string" == typeof input.webSocketURL || "object" == typeof input.webSocketURL && null !== input.webSocketURL && false === Array.isArray(input.webSocketURL) && _io170(input.webSocketURL, _exceptionable)) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "logging",
                        "overlay",
                        "progress",
                        "reconnect",
                        "webSocketTransport",
                        "webSocketURL"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io169 = (input, _exceptionable = true)=>null !== input.warnings && (void 0 === input.warnings || "function" == typeof input.warnings || "boolean" == typeof input.warnings) && null !== input.errors && (void 0 === input.errors || "function" == typeof input.errors || "boolean" == typeof input.errors) && null !== input.runtimeErrors && (void 0 === input.runtimeErrors || "function" == typeof input.runtimeErrors || "boolean" == typeof input.runtimeErrors) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "warnings",
                        "errors",
                        "runtimeErrors"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io170 = (input, _exceptionable = true)=>(void 0 === input.hostname || "string" == typeof input.hostname) && (void 0 === input.password || "string" == typeof input.password) && (void 0 === input.pathname || "string" == typeof input.pathname) && (void 0 === input.port || "string" == typeof input.port || "number" == typeof input.port) && (void 0 === input.protocol || "string" == typeof input.protocol) && (void 0 === input.username || "string" == typeof input.username) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "hostname",
                        "password",
                        "pathname",
                        "port",
                        "protocol",
                        "username"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io171 = (input, _exceptionable = true)=>"string" == typeof input.key && "string" == typeof input.value && (2 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "key",
                        "value"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io172 = (input, _exceptionable = true)=>(void 0 === input.defaultRules || Array.isArray(input.defaultRules) && input.defaultRules.every((elem, _index140)=>null == elem || false === elem || "" === elem || "..." === elem || 0 === elem || "object" == typeof elem && null !== elem && false === Array.isArray(elem) && _io173(elem, _exceptionable))) && (void 0 === input.rules || Array.isArray(input.rules) && input.rules.every((elem, _index141)=>null == elem || false === elem || "" === elem || "..." === elem || 0 === elem || "object" == typeof elem && null !== elem && false === Array.isArray(elem) && _io173(elem, _exceptionable))) && (void 0 === input.parser || "object" == typeof input.parser && null !== input.parser && false === Array.isArray(input.parser) && _iu11(input.parser, _exceptionable)) && (void 0 === input.generator || "object" == typeof input.generator && null !== input.generator && false === Array.isArray(input.generator) && _iu12(input.generator, _exceptionable)) && null !== input.noParse && (void 0 === input.noParse || "function" == typeof input.noParse || "string" == typeof input.noParse || input.noParse instanceof RegExp || Array.isArray(input.noParse) && input.noParse.every((elem, _index142)=>null != elem && ("function" == typeof elem || "string" == typeof elem || elem instanceof RegExp))) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "defaultRules",
                        "rules",
                        "parser",
                        "generator",
                        "noParse"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io173 = (input, _exceptionable = true)=>null !== input.test && (void 0 === input.test || "function" == typeof input.test || "string" == typeof input.test || input.test instanceof RegExp || Array.isArray(input.test) && (_ia0(input.test, _exceptionable) || false) || "object" == typeof input.test && null !== input.test && false === Array.isArray(input.test) && _io174(input.test, _exceptionable)) && null !== input.exclude && (void 0 === input.exclude || "function" == typeof input.exclude || "string" == typeof input.exclude || input.exclude instanceof RegExp || Array.isArray(input.exclude) && (_ia0(input.exclude, _exceptionable) || false) || "object" == typeof input.exclude && null !== input.exclude && false === Array.isArray(input.exclude) && _io174(input.exclude, _exceptionable)) && null !== input.include && (void 0 === input.include || "function" == typeof input.include || "string" == typeof input.include || input.include instanceof RegExp || Array.isArray(input.include) && (_ia0(input.include, _exceptionable) || false) || "object" == typeof input.include && null !== input.include && false === Array.isArray(input.include) && _io174(input.include, _exceptionable)) && null !== input.issuer && (void 0 === input.issuer || "function" == typeof input.issuer || "string" == typeof input.issuer || input.issuer instanceof RegExp || Array.isArray(input.issuer) && (_ia0(input.issuer, _exceptionable) || false) || "object" == typeof input.issuer && null !== input.issuer && false === Array.isArray(input.issuer) && _io174(input.issuer, _exceptionable)) && null !== input.issuerLayer && (void 0 === input.issuerLayer || "function" == typeof input.issuerLayer || "string" == typeof input.issuerLayer || input.issuerLayer instanceof RegExp || Array.isArray(input.issuerLayer) && (_ia0(input.issuerLayer, _exceptionable) || false) || "object" == typeof input.issuerLayer && null !== input.issuerLayer && false === Array.isArray(input.issuerLayer) && _io174(input.issuerLayer, _exceptionable)) && null !== input.dependency && (void 0 === input.dependency || "function" == typeof input.dependency || "string" == typeof input.dependency || input.dependency instanceof RegExp || Array.isArray(input.dependency) && (_ia0(input.dependency, _exceptionable) || false) || "object" == typeof input.dependency && null !== input.dependency && false === Array.isArray(input.dependency) && _io174(input.dependency, _exceptionable)) && null !== input.resource && (void 0 === input.resource || "function" == typeof input.resource || "string" == typeof input.resource || input.resource instanceof RegExp || Array.isArray(input.resource) && (_ia0(input.resource, _exceptionable) || false) || "object" == typeof input.resource && null !== input.resource && false === Array.isArray(input.resource) && _io174(input.resource, _exceptionable)) && null !== input.resourceFragment && (void 0 === input.resourceFragment || "function" == typeof input.resourceFragment || "string" == typeof input.resourceFragment || input.resourceFragment instanceof RegExp || Array.isArray(input.resourceFragment) && (_ia0(input.resourceFragment, _exceptionable) || false) || "object" == typeof input.resourceFragment && null !== input.resourceFragment && false === Array.isArray(input.resourceFragment) && _io174(input.resourceFragment, _exceptionable)) && null !== input.resourceQuery && (void 0 === input.resourceQuery || "function" == typeof input.resourceQuery || "string" == typeof input.resourceQuery || input.resourceQuery instanceof RegExp || Array.isArray(input.resourceQuery) && (_ia0(input.resourceQuery, _exceptionable) || false) || "object" == typeof input.resourceQuery && null !== input.resourceQuery && false === Array.isArray(input.resourceQuery) && _io174(input.resourceQuery, _exceptionable)) && null !== input.mimetype && (void 0 === input.mimetype || "function" == typeof input.mimetype || "string" == typeof input.mimetype || input.mimetype instanceof RegExp || Array.isArray(input.mimetype) && (_ia0(input.mimetype, _exceptionable) || false) || "object" == typeof input.mimetype && null !== input.mimetype && false === Array.isArray(input.mimetype) && _io174(input.mimetype, _exceptionable)) && null !== input.scheme && (void 0 === input.scheme || "function" == typeof input.scheme || "string" == typeof input.scheme || input.scheme instanceof RegExp || Array.isArray(input.scheme) && (_ia0(input.scheme, _exceptionable) || false) || "object" == typeof input.scheme && null !== input.scheme && false === Array.isArray(input.scheme) && _io174(input.scheme, _exceptionable)) && (void 0 === input.descriptionData || "object" == typeof input.descriptionData && null !== input.descriptionData && false === Array.isArray(input.descriptionData) && _io175(input.descriptionData, _exceptionable)) && (void 0 === input["with"] || "object" == typeof input["with"] && null !== input["with"] && false === Array.isArray(input["with"]) && _io175(input["with"], _exceptionable)) && (void 0 === input.type || "string" == typeof input.type) && (void 0 === input.layer || "string" == typeof input.layer) && (void 0 === input.loader || "string" == typeof input.loader) && null !== input.options && (void 0 === input.options || "string" == typeof input.options || "object" == typeof input.options && null !== input.options && false === Array.isArray(input.options) && _io19(input.options, _exceptionable)) && null !== input.use && (void 0 === input.use || "function" == typeof input.use || "string" == typeof input.use || Array.isArray(input.use) && input.use.every((elem, _index143)=>null != elem && ("string" == typeof elem || "object" == typeof elem && null !== elem && _io176(elem, _exceptionable))) || "object" == typeof input.use && null !== input.use && _io176(input.use, _exceptionable)) && (void 0 === input.parser || "object" == typeof input.parser && null !== input.parser && false === Array.isArray(input.parser) && _io19(input.parser, _exceptionable)) && (void 0 === input.generator || "object" == typeof input.generator && null !== input.generator && false === Array.isArray(input.generator) && _io19(input.generator, _exceptionable)) && (void 0 === input.resolve || "object" == typeof input.resolve && null !== input.resolve && false === Array.isArray(input.resolve) && _io128(input.resolve, _exceptionable)) && (void 0 === input.sideEffects || "boolean" == typeof input.sideEffects) && (void 0 === input.enforce || "pre" === input.enforce || "post" === input.enforce) && (void 0 === input.oneOf || Array.isArray(input.oneOf) && input.oneOf.every((elem, _index144)=>null == elem || false === elem || "" === elem || 0 === elem || "object" == typeof elem && null !== elem && false === Array.isArray(elem) && _io173(elem, _exceptionable))) && (void 0 === input.rules || Array.isArray(input.rules) && input.rules.every((elem, _index145)=>null == elem || false === elem || "" === elem || 0 === elem || "object" == typeof elem && null !== elem && false === Array.isArray(elem) && _io173(elem, _exceptionable))) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "test",
                        "exclude",
                        "include",
                        "issuer",
                        "issuerLayer",
                        "dependency",
                        "resource",
                        "resourceFragment",
                        "resourceQuery",
                        "mimetype",
                        "scheme",
                        "descriptionData",
                        "with",
                        "type",
                        "layer",
                        "loader",
                        "options",
                        "use",
                        "parser",
                        "generator",
                        "resolve",
                        "sideEffects",
                        "enforce",
                        "oneOf",
                        "rules"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io174 = (input, _exceptionable = true)=>(void 0 === input.and || Array.isArray(input.and) && (_ia0(input.and, _exceptionable) || false)) && (void 0 === input.or || Array.isArray(input.or) && (_ia0(input.or, _exceptionable) || false)) && null !== input.not && (void 0 === input.not || "function" == typeof input.not || "string" == typeof input.not || input.not instanceof RegExp || Array.isArray(input.not) && (_ia0(input.not, _exceptionable) || false) || "object" == typeof input.not && null !== input.not && false === Array.isArray(input.not) && _io174(input.not, _exceptionable)) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "and",
                        "or",
                        "not"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io175 = (input, _exceptionable = true)=>Object.keys(input).every((key)=>{
                    const value = input[key];
                    if (void 0 === value) return true;
                    return null != value && ("function" == typeof value || "string" == typeof value || value instanceof RegExp || Array.isArray(value) && (_ia0(value, _exceptionable) || false) || "object" == typeof value && null !== value && false === Array.isArray(value) && _io174(value, _exceptionable));
                });
            const _io176 = (input, _exceptionable = true)=>(void 0 === input.ident || "string" == typeof input.ident) && "string" == typeof input.loader && (void 0 === input.parallel || "boolean" == typeof input.parallel) && null !== input.options && (void 0 === input.options || "string" == typeof input.options || "object" == typeof input.options && null !== input.options && false === Array.isArray(input.options) && _io19(input.options, _exceptionable)) && (1 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "ident",
                        "loader",
                        "parallel",
                        "options"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io177 = (input, _exceptionable = true)=>(void 0 === input.asset || "object" == typeof input.asset && null !== input.asset && false === Array.isArray(input.asset) && _io178(input.asset, _exceptionable)) && (void 0 === input.css || "object" == typeof input.css && null !== input.css && false === Array.isArray(input.css) && _io180(input.css, _exceptionable)) && (void 0 === input["css/auto"] || "object" == typeof input["css/auto"] && null !== input["css/auto"] && false === Array.isArray(input["css/auto"]) && _io181(input["css/auto"], _exceptionable)) && (void 0 === input["css/module"] || "object" == typeof input["css/module"] && null !== input["css/module"] && false === Array.isArray(input["css/module"]) && _io182(input["css/module"], _exceptionable)) && (void 0 === input.javascript || "object" == typeof input.javascript && null !== input.javascript && false === Array.isArray(input.javascript) && _io183(input.javascript, _exceptionable)) && (void 0 === input["javascript/auto"] || "object" == typeof input["javascript/auto"] && null !== input["javascript/auto"] && false === Array.isArray(input["javascript/auto"]) && _io183(input["javascript/auto"], _exceptionable)) && (void 0 === input["javascript/dynamic"] || "object" == typeof input["javascript/dynamic"] && null !== input["javascript/dynamic"] && false === Array.isArray(input["javascript/dynamic"]) && _io183(input["javascript/dynamic"], _exceptionable)) && (void 0 === input["javascript/esm"] || "object" == typeof input["javascript/esm"] && null !== input["javascript/esm"] && false === Array.isArray(input["javascript/esm"]) && _io183(input["javascript/esm"], _exceptionable)) && (void 0 === input.json || "object" == typeof input.json && null !== input.json && false === Array.isArray(input.json) && _io184(input.json, _exceptionable)) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "asset",
                        "css",
                        "css/auto",
                        "css/module",
                        "javascript",
                        "javascript/auto",
                        "javascript/dynamic",
                        "javascript/esm",
                        "json"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io178 = (input, _exceptionable = true)=>(void 0 === input.dataUrlCondition || "object" == typeof input.dataUrlCondition && null !== input.dataUrlCondition && false === Array.isArray(input.dataUrlCondition) && _io179(input.dataUrlCondition, _exceptionable)) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "dataUrlCondition"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io179 = (input, _exceptionable = true)=>(void 0 === input.maxSize || "number" == typeof input.maxSize) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "maxSize"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io180 = (input, _exceptionable = true)=>(void 0 === input.namedExports || "boolean" == typeof input.namedExports) && (void 0 === input.url || "boolean" == typeof input.url) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "namedExports",
                        "url"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io181 = (input, _exceptionable = true)=>(void 0 === input.namedExports || "boolean" == typeof input.namedExports) && (void 0 === input.url || "boolean" == typeof input.url) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "namedExports",
                        "url"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io182 = (input, _exceptionable = true)=>(void 0 === input.namedExports || "boolean" == typeof input.namedExports) && (void 0 === input.url || "boolean" == typeof input.url) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "namedExports",
                        "url"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io183 = (input, _exceptionable = true)=>(void 0 === input.dynamicImportMode || "weak" === input.dynamicImportMode || "eager" === input.dynamicImportMode || "lazy" === input.dynamicImportMode || "lazy-once" === input.dynamicImportMode) && (void 0 === input.dynamicImportPreload || "number" == typeof input.dynamicImportPreload || "boolean" == typeof input.dynamicImportPreload) && (void 0 === input.dynamicImportPrefetch || "number" == typeof input.dynamicImportPrefetch || "boolean" == typeof input.dynamicImportPrefetch) && (void 0 === input.dynamicImportFetchPriority || "auto" === input.dynamicImportFetchPriority || "low" === input.dynamicImportFetchPriority || "high" === input.dynamicImportFetchPriority) && (void 0 === input.importMeta || "boolean" == typeof input.importMeta) && (void 0 === input.url || "relative" === input.url || "boolean" == typeof input.url) && (void 0 === input.exprContextCritical || "boolean" == typeof input.exprContextCritical) && (void 0 === input.unknownContextCritical || "boolean" == typeof input.unknownContextCritical) && (void 0 === input.wrappedContextCritical || "boolean" == typeof input.wrappedContextCritical) && (void 0 === input.wrappedContextRegExp || input.wrappedContextRegExp instanceof RegExp) && (void 0 === input.exportsPresence || false === input.exportsPresence || "auto" === input.exportsPresence || "error" === input.exportsPresence || "warn" === input.exportsPresence) && (void 0 === input.importExportsPresence || false === input.importExportsPresence || "auto" === input.importExportsPresence || "error" === input.importExportsPresence || "warn" === input.importExportsPresence) && (void 0 === input.reexportExportsPresence || false === input.reexportExportsPresence || "auto" === input.reexportExportsPresence || "error" === input.reexportExportsPresence || "warn" === input.reexportExportsPresence) && (void 0 === input.strictExportPresence || "boolean" == typeof input.strictExportPresence) && null !== input.worker && (void 0 === input.worker || "boolean" == typeof input.worker || Array.isArray(input.worker) && input.worker.every((elem, _index146)=>"string" == typeof elem)) && (void 0 === input.overrideStrict || "strict" === input.overrideStrict || "non-strict" === input.overrideStrict) && (void 0 === input.requireAsExpression || "boolean" == typeof input.requireAsExpression) && (void 0 === input.requireDynamic || "boolean" == typeof input.requireDynamic) && (void 0 === input.requireResolve || "boolean" == typeof input.requireResolve) && (void 0 === input.importDynamic || "boolean" == typeof input.importDynamic) && (void 0 === input.inlineConst || "boolean" == typeof input.inlineConst) && (void 0 === input.typeReexportsPresence || "no-tolerant" === input.typeReexportsPresence || "tolerant" === input.typeReexportsPresence || "tolerant-no-check" === input.typeReexportsPresence) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "dynamicImportMode",
                        "dynamicImportPreload",
                        "dynamicImportPrefetch",
                        "dynamicImportFetchPriority",
                        "importMeta",
                        "url",
                        "exprContextCritical",
                        "unknownContextCritical",
                        "wrappedContextCritical",
                        "wrappedContextRegExp",
                        "exportsPresence",
                        "importExportsPresence",
                        "reexportExportsPresence",
                        "strictExportPresence",
                        "worker",
                        "overrideStrict",
                        "requireAsExpression",
                        "requireDynamic",
                        "requireResolve",
                        "importDynamic",
                        "inlineConst",
                        "typeReexportsPresence"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io184 = (input, _exceptionable = true)=>(void 0 === input.exportsDepth || "number" == typeof input.exportsDepth) && (void 0 === input.parse || true) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "exportsDepth",
                        "parse"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io185 = (input, _exceptionable = true)=>Object.keys(input).every((key)=>{
                    const value = input[key];
                    if (void 0 === value) return true;
                    return "object" == typeof value && null !== value && false === Array.isArray(value) && _io19(value, _exceptionable);
                });
            const _io186 = (input, _exceptionable = true)=>(void 0 === input.asset || "object" == typeof input.asset && null !== input.asset && false === Array.isArray(input.asset) && _io187(input.asset, _exceptionable)) && (void 0 === input["asset/inline"] || "object" == typeof input["asset/inline"] && null !== input["asset/inline"] && false === Array.isArray(input["asset/inline"]) && _io189(input["asset/inline"], _exceptionable)) && (void 0 === input["asset/resource"] || "object" == typeof input["asset/resource"] && null !== input["asset/resource"] && false === Array.isArray(input["asset/resource"]) && _io190(input["asset/resource"], _exceptionable)) && (void 0 === input.css || "object" == typeof input.css && null !== input.css && false === Array.isArray(input.css) && _io191(input.css, _exceptionable)) && (void 0 === input["css/auto"] || "object" == typeof input["css/auto"] && null !== input["css/auto"] && false === Array.isArray(input["css/auto"]) && _io192(input["css/auto"], _exceptionable)) && (void 0 === input["css/module"] || "object" == typeof input["css/module"] && null !== input["css/module"] && false === Array.isArray(input["css/module"]) && _io192(input["css/module"], _exceptionable)) && (void 0 === input.json || "object" == typeof input.json && null !== input.json && false === Array.isArray(input.json) && _io193(input.json, _exceptionable)) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "asset",
                        "asset/inline",
                        "asset/resource",
                        "css",
                        "css/auto",
                        "css/module",
                        "json"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io187 = (input, _exceptionable = true)=>null !== input.dataUrl && (void 0 === input.dataUrl || "function" == typeof input.dataUrl || "object" == typeof input.dataUrl && null !== input.dataUrl && false === Array.isArray(input.dataUrl) && _io188(input.dataUrl, _exceptionable)) && (void 0 === input.binary || "boolean" == typeof input.binary) && (void 0 === input.emit || "boolean" == typeof input.emit) && null !== input.filename && (void 0 === input.filename || "function" == typeof input.filename || "string" == typeof input.filename) && null !== input.outputPath && (void 0 === input.outputPath || "function" == typeof input.outputPath || "string" == typeof input.outputPath) && null !== input.publicPath && (void 0 === input.publicPath || "function" == typeof input.publicPath || "string" == typeof input.publicPath) && (void 0 === input.importMode || "url" === input.importMode || "preserve" === input.importMode) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "dataUrl",
                        "binary",
                        "emit",
                        "filename",
                        "outputPath",
                        "publicPath",
                        "importMode"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io188 = (input, _exceptionable = true)=>(void 0 === input.encoding || false === input.encoding || "base64" === input.encoding) && (void 0 === input.mimetype || "string" == typeof input.mimetype) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "encoding",
                        "mimetype"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io189 = (input, _exceptionable = true)=>null !== input.dataUrl && (void 0 === input.dataUrl || "function" == typeof input.dataUrl || "object" == typeof input.dataUrl && null !== input.dataUrl && false === Array.isArray(input.dataUrl) && _io188(input.dataUrl, _exceptionable)) && (void 0 === input.binary || "boolean" == typeof input.binary) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "dataUrl",
                        "binary"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io190 = (input, _exceptionable = true)=>(void 0 === input.emit || "boolean" == typeof input.emit) && null !== input.filename && (void 0 === input.filename || "function" == typeof input.filename || "string" == typeof input.filename) && null !== input.outputPath && (void 0 === input.outputPath || "function" == typeof input.outputPath || "string" == typeof input.outputPath) && null !== input.publicPath && (void 0 === input.publicPath || "function" == typeof input.publicPath || "string" == typeof input.publicPath) && (void 0 === input.importMode || "url" === input.importMode || "preserve" === input.importMode) && (void 0 === input.binary || "boolean" == typeof input.binary) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "emit",
                        "filename",
                        "outputPath",
                        "publicPath",
                        "importMode",
                        "binary"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io191 = (input, _exceptionable = true)=>(void 0 === input.exportsOnly || "boolean" == typeof input.exportsOnly) && (void 0 === input.esModule || "boolean" == typeof input.esModule) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "exportsOnly",
                        "esModule"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io192 = (input, _exceptionable = true)=>(void 0 === input.exportsConvention || "as-is" === input.exportsConvention || "camel-case" === input.exportsConvention || "camel-case-only" === input.exportsConvention || "dashes" === input.exportsConvention || "dashes-only" === input.exportsConvention) && (void 0 === input.exportsOnly || "boolean" == typeof input.exportsOnly) && (void 0 === input.localIdentName || "string" == typeof input.localIdentName) && (void 0 === input.esModule || "boolean" == typeof input.esModule) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "exportsConvention",
                        "exportsOnly",
                        "localIdentName",
                        "esModule"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io193 = (input, _exceptionable = true)=>(void 0 === input.JSONParse || "boolean" == typeof input.JSONParse) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "JSONParse"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io194 = (input, _exceptionable = true)=>Object.keys(input).every((key)=>{
                    const value = input[key];
                    if (void 0 === value) return true;
                    return "object" == typeof value && null !== value && false === Array.isArray(value) && _io19(value, _exceptionable);
                });
            const _io195 = (input, _exceptionable = true)=>(input.assetFilter, (void 0 === input.hints || false === input.hints || "error" === input.hints || "warning" === input.hints) && (void 0 === input.maxAssetSize || "number" == typeof input.maxAssetSize) && (void 0 === input.maxEntrypointSize || "number" == typeof input.maxEntrypointSize) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "assetFilter",
                        "hints",
                        "maxAssetSize",
                        "maxEntrypointSize"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                })));
            const _io196 = (input, _exceptionable = true)=>null !== input.amd && (void 0 === input.amd || false === input.amd || "object" == typeof input.amd && null !== input.amd && false === Array.isArray(input.amd) && _io197(input.amd, _exceptionable)) && (void 0 === input.bail || "boolean" == typeof input.bail) && null !== input.cache && (void 0 === input.cache || "boolean" == typeof input.cache || "object" == typeof input.cache && null !== input.cache && _iu13(input.cache, _exceptionable)) && (void 0 === input.context || "string" == typeof input.context) && (void 0 === input.dependencies || Array.isArray(input.dependencies) && input.dependencies.every((elem, _index147)=>"string" == typeof elem)) && (void 0 === input.devtool || false === input.devtool || "string" == typeof input.devtool) && null !== input.entry && (void 0 === input.entry || "function" == typeof input.entry || "string" == typeof input.entry || Array.isArray(input.entry) && input.entry.every((elem, _index148)=>"string" == typeof elem) || "object" == typeof input.entry && null !== input.entry && false === Array.isArray(input.entry) && _io201(input.entry, _exceptionable)) && (void 0 === input.experiments || "object" == typeof input.experiments && null !== input.experiments && false === Array.isArray(input.experiments) && _io206(input.experiments, _exceptionable)) && null !== input["extends"] && (void 0 === input["extends"] || "string" == typeof input["extends"] || Array.isArray(input["extends"]) && input["extends"].every((elem, _index149)=>"string" == typeof elem)) && null !== input.externals && (void 0 === input.externals || "function" == typeof input.externals || "string" == typeof input.externals || input.externals instanceof RegExp || Array.isArray(input.externals) && input.externals.every((elem, _index150)=>null != elem && ("function" == typeof elem || "string" == typeof elem || elem instanceof RegExp || "object" == typeof elem && null !== elem && false === Array.isArray(elem) && _io214(elem, _exceptionable))) || "object" == typeof input.externals && null !== input.externals && false === Array.isArray(input.externals) && _io214(input.externals, _exceptionable)) && (void 0 === input.externalsPresets || "object" == typeof input.externalsPresets && null !== input.externalsPresets && false === Array.isArray(input.externalsPresets) && _io217(input.externalsPresets, _exceptionable)) && (void 0 === input.externalsType || true === _iv151.has(input.externalsType)) && (void 0 === input.ignoreWarnings || Array.isArray(input.ignoreWarnings) && input.ignoreWarnings.every((elem, _index152)=>null != elem && ("function" == typeof elem || elem instanceof RegExp || "object" == typeof elem && null !== elem && false === Array.isArray(elem) && _io218(elem, _exceptionable)))) && (void 0 === input.infrastructureLogging || "object" == typeof input.infrastructureLogging && null !== input.infrastructureLogging && false === Array.isArray(input.infrastructureLogging) && _io219(input.infrastructureLogging, _exceptionable)) && (void 0 === input.loader || "object" == typeof input.loader && null !== input.loader && false === Array.isArray(input.loader) && _io221(input.loader, _exceptionable)) && (void 0 === input.mode || "none" === input.mode || "development" === input.mode || "production" === input.mode) && (void 0 === input["module"] || "object" == typeof input["module"] && null !== input["module"] && false === Array.isArray(input["module"]) && _io222(input["module"], _exceptionable)) && (void 0 === input.name || "string" == typeof input.name) && null !== input.node && (void 0 === input.node || false === input.node || "object" == typeof input.node && null !== input.node && false === Array.isArray(input.node) && _io307(input.node, _exceptionable)) && (void 0 === input.optimization || "object" == typeof input.optimization && null !== input.optimization && false === Array.isArray(input.optimization) && _io310(input.optimization, _exceptionable)) && (void 0 === input.output || "object" == typeof input.output && null !== input.output && false === Array.isArray(input.output) && _io336(input.output, _exceptionable)) && (void 0 === input.parallelism || "number" == typeof input.parallelism) && null !== input.performance && (void 0 === input.performance || false === input.performance || "object" == typeof input.performance && null !== input.performance && false === Array.isArray(input.performance) && _io342(input.performance, _exceptionable)) && (void 0 === input.plugins || Array.isArray(input.plugins) && input.plugins.every((elem, _index153)=>null == elem || "function" == typeof elem || false === elem || "" === elem || 0 === elem || "object" == typeof elem && null !== elem && _io311(elem, _exceptionable))) && (void 0 === input.profile || "boolean" == typeof input.profile) && (void 0 === input.recordsInputPath || false === input.recordsInputPath || "string" == typeof input.recordsInputPath) && (void 0 === input.recordsOutputPath || false === input.recordsOutputPath || "string" == typeof input.recordsOutputPath) && (void 0 === input.recordsPath || false === input.recordsPath || "string" == typeof input.recordsPath) && (void 0 === input.resolve || "object" == typeof input.resolve && null !== input.resolve && false === Array.isArray(input.resolve) && _io231(input.resolve, _exceptionable)) && (void 0 === input.resolveLoader || "object" == typeof input.resolveLoader && null !== input.resolveLoader && false === Array.isArray(input.resolveLoader) && _io231(input.resolveLoader, _exceptionable)) && (void 0 === input.snapshot || "object" == typeof input.snapshot && null !== input.snapshot && false === Array.isArray(input.snapshot) && _io343(input.snapshot, _exceptionable)) && null !== input.stats && (void 0 === input.stats || "none" === input.stats || "verbose" === input.stats || "normal" === input.stats || "errors-only" === input.stats || "errors-warnings" === input.stats || "minimal" === input.stats || "detailed" === input.stats || "summary" === input.stats || "boolean" == typeof input.stats || "object" == typeof input.stats && null !== input.stats && false === Array.isArray(input.stats) && _io348(input.stats, _exceptionable)) && null !== input.target && (void 0 === input.target || false === input.target || "string" == typeof input.target || Array.isArray(input.target) && input.target.every((elem, _index154)=>"string" == typeof elem)) && (void 0 === input.watch || "boolean" == typeof input.watch) && (void 0 === input.watchOptions || "object" == typeof input.watchOptions && null !== input.watchOptions && false === Array.isArray(input.watchOptions) && _io350(input.watchOptions, _exceptionable)) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "amd",
                        "bail",
                        "cache",
                        "context",
                        "dependencies",
                        "devtool",
                        "entry",
                        "experiments",
                        "extends",
                        "externals",
                        "externalsPresets",
                        "externalsType",
                        "ignoreWarnings",
                        "infrastructureLogging",
                        "loader",
                        "mode",
                        "module",
                        "name",
                        "node",
                        "optimization",
                        "output",
                        "parallelism",
                        "performance",
                        "plugins",
                        "profile",
                        "recordsInputPath",
                        "recordsOutputPath",
                        "recordsPath",
                        "resolve",
                        "resolveLoader",
                        "snapshot",
                        "stats",
                        "target",
                        "watch",
                        "watchOptions"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io197 = (input, _exceptionable = true)=>Object.keys(input).every((key)=>{
                    input[key];
                    return true;
                });
            const _io198 = (input, _exceptionable = true)=>(void 0 === input.allowCollectingMemory || "boolean" == typeof input.allowCollectingMemory) && (void 0 === input.buildDependencies || "object" == typeof input.buildDependencies && null !== input.buildDependencies && false === Array.isArray(input.buildDependencies) && _io199(input.buildDependencies, _exceptionable)) && (void 0 === input.cacheDirectory || "string" == typeof input.cacheDirectory) && (void 0 === input.cacheLocation || "string" == typeof input.cacheLocation) && (void 0 === input.compression || false === input.compression || "gzip" === input.compression || "brotli" === input.compression) && (void 0 === input.hashAlgorithm || "string" == typeof input.hashAlgorithm) && (void 0 === input.idleTimeout || "number" == typeof input.idleTimeout) && (void 0 === input.idleTimeoutAfterLargeChanges || "number" == typeof input.idleTimeoutAfterLargeChanges) && (void 0 === input.idleTimeoutForInitialStore || "number" == typeof input.idleTimeoutForInitialStore) && (void 0 === input.immutablePaths || Array.isArray(input.immutablePaths) && input.immutablePaths.every((elem, _index155)=>null != elem && ("string" == typeof elem || elem instanceof RegExp))) && (void 0 === input.managedPaths || Array.isArray(input.managedPaths) && input.managedPaths.every((elem, _index156)=>null != elem && ("string" == typeof elem || elem instanceof RegExp))) && (void 0 === input.maxAge || "number" == typeof input.maxAge) && (void 0 === input.maxMemoryGenerations || "number" == typeof input.maxMemoryGenerations) && (void 0 === input.memoryCacheUnaffected || "boolean" == typeof input.memoryCacheUnaffected) && (void 0 === input.name || "string" == typeof input.name) && (void 0 === input.profile || "boolean" == typeof input.profile) && (void 0 === input.readonly || "boolean" == typeof input.readonly) && (void 0 === input.store || "pack" === input.store) && "filesystem" === input.type && (void 0 === input.version || "string" == typeof input.version) && (1 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "allowCollectingMemory",
                        "buildDependencies",
                        "cacheDirectory",
                        "cacheLocation",
                        "compression",
                        "hashAlgorithm",
                        "idleTimeout",
                        "idleTimeoutAfterLargeChanges",
                        "idleTimeoutForInitialStore",
                        "immutablePaths",
                        "managedPaths",
                        "maxAge",
                        "maxMemoryGenerations",
                        "memoryCacheUnaffected",
                        "name",
                        "profile",
                        "readonly",
                        "store",
                        "type",
                        "version"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io199 = (input, _exceptionable = true)=>Object.keys(input).every((key)=>{
                    const value = input[key];
                    if (void 0 === value) return true;
                    return Array.isArray(value) && value.every((elem, _index157)=>"string" == typeof elem);
                });
            const _io200 = (input, _exceptionable = true)=>(void 0 === input.cacheUnaffected || "boolean" == typeof input.cacheUnaffected) && (void 0 === input.maxGenerations || "number" == typeof input.maxGenerations) && "memory" === input.type && (1 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "cacheUnaffected",
                        "maxGenerations",
                        "type"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io201 = (input, _exceptionable = true)=>Object.keys(input).every((key)=>{
                    const value = input[key];
                    if (void 0 === value) return true;
                    return null != value && ("string" == typeof value || Array.isArray(value) && value.every((elem, _index158)=>"string" == typeof elem) || "object" == typeof value && null !== value && _io202(value, _exceptionable));
                });
            const _io202 = (input, _exceptionable = true)=>(void 0 === input.asyncChunks || "boolean" == typeof input.asyncChunks) && (void 0 === input.baseUri || "string" == typeof input.baseUri) && (void 0 === input.chunkLoading || false === input.chunkLoading || "string" == typeof input.chunkLoading) && null !== input.dependOn && (void 0 === input.dependOn || "string" == typeof input.dependOn || Array.isArray(input.dependOn) && input.dependOn.every((elem, _index159)=>"string" == typeof elem)) && null !== input.filename && (void 0 === input.filename || "function" == typeof input.filename || "string" == typeof input.filename) && null !== input["import"] && void 0 !== input["import"] && ("string" == typeof input["import"] || Array.isArray(input["import"]) && input["import"].every((elem, _index160)=>"string" == typeof elem)) && (null === input.layer || void 0 === input.layer || "string" == typeof input.layer) && (void 0 === input.library || "object" == typeof input.library && null !== input.library && _io203(input.library, _exceptionable)) && null !== input.publicPath && (void 0 === input.publicPath || "function" == typeof input.publicPath || "string" == typeof input.publicPath) && (void 0 === input.runtime || false === input.runtime || "string" == typeof input.runtime) && (void 0 === input.wasmLoading || false === input.wasmLoading || "string" == typeof input.wasmLoading) && (1 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "asyncChunks",
                        "baseUri",
                        "chunkLoading",
                        "dependOn",
                        "filename",
                        "import",
                        "layer",
                        "library",
                        "publicPath",
                        "runtime",
                        "wasmLoading"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io203 = (input, _exceptionable = true)=>(void 0 === input.amdContainer || "string" == typeof input.amdContainer) && null !== input.auxiliaryComment && (void 0 === input.auxiliaryComment || "string" == typeof input.auxiliaryComment || "object" == typeof input.auxiliaryComment && null !== input.auxiliaryComment && false === Array.isArray(input.auxiliaryComment) && _io204(input.auxiliaryComment, _exceptionable)) && null !== input["export"] && (void 0 === input["export"] || "string" == typeof input["export"] || Array.isArray(input["export"]) && input["export"].every((elem, _index161)=>"string" == typeof elem)) && null !== input.name && (void 0 === input.name || "string" == typeof input.name || Array.isArray(input.name) && input.name.every((elem, _index162)=>"string" == typeof elem) || "object" == typeof input.name && null !== input.name && false === Array.isArray(input.name) && _io205(input.name, _exceptionable)) && "string" == typeof input.type && (void 0 === input.umdNamedDefine || "boolean" == typeof input.umdNamedDefine) && (1 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "amdContainer",
                        "auxiliaryComment",
                        "export",
                        "name",
                        "type",
                        "umdNamedDefine"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io204 = (input, _exceptionable = true)=>(void 0 === input.amd || "string" == typeof input.amd) && (void 0 === input.commonjs || "string" == typeof input.commonjs) && (void 0 === input.commonjs2 || "string" == typeof input.commonjs2) && (void 0 === input.root || "string" == typeof input.root) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "amd",
                        "commonjs",
                        "commonjs2",
                        "root"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io205 = (input, _exceptionable = true)=>(void 0 === input.amd || "string" == typeof input.amd) && (void 0 === input.commonjs || "string" == typeof input.commonjs) && null !== input.root && (void 0 === input.root || "string" == typeof input.root || Array.isArray(input.root) && input.root.every((elem, _index163)=>"string" == typeof elem)) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "amd",
                        "commonjs",
                        "root"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io206 = (input, _exceptionable = true)=>(void 0 === input.asyncWebAssembly || "boolean" == typeof input.asyncWebAssembly) && (void 0 === input.backCompat || "boolean" == typeof input.backCompat) && (void 0 === input.cacheUnaffected || "boolean" == typeof input.cacheUnaffected) && (void 0 === input.futureDefaults || "boolean" == typeof input.futureDefaults) && (void 0 === input.layers || "boolean" == typeof input.layers) && (void 0 === input.outputModule || "boolean" == typeof input.outputModule) && (void 0 === input.syncWebAssembly || "boolean" == typeof input.syncWebAssembly) && (void 0 === input.topLevelAwait || "boolean" == typeof input.topLevelAwait) && null !== input.buildHttp && (void 0 === input.buildHttp || Array.isArray(input.buildHttp) && input.buildHttp.every((elem, _index164)=>null != elem && ("function" == typeof elem || "string" == typeof elem || elem instanceof RegExp)) || "object" == typeof input.buildHttp && null !== input.buildHttp && _io207(input.buildHttp, _exceptionable)) && (void 0 === input.css || "boolean" == typeof input.css) && (void 0 === input.deferImport || "boolean" == typeof input.deferImport) && null !== input.lazyCompilation && (void 0 === input.lazyCompilation || "boolean" == typeof input.lazyCompilation || "object" == typeof input.lazyCompilation && null !== input.lazyCompilation && false === Array.isArray(input.lazyCompilation) && _io208(input.lazyCompilation, _exceptionable)) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "asyncWebAssembly",
                        "backCompat",
                        "cacheUnaffected",
                        "futureDefaults",
                        "layers",
                        "outputModule",
                        "syncWebAssembly",
                        "topLevelAwait",
                        "buildHttp",
                        "css",
                        "deferImport",
                        "lazyCompilation"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io207 = (input, _exceptionable = true)=>Array.isArray(input.allowedUris) && input.allowedUris.every((elem, _index165)=>null != elem && ("function" == typeof elem || "string" == typeof elem || elem instanceof RegExp)) && (void 0 === input.cacheLocation || false === input.cacheLocation || "string" == typeof input.cacheLocation) && (void 0 === input.frozen || "boolean" == typeof input.frozen) && (void 0 === input.lockfileLocation || "string" == typeof input.lockfileLocation) && (void 0 === input.proxy || "string" == typeof input.proxy) && (void 0 === input.upgrade || "boolean" == typeof input.upgrade) && (1 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "allowedUris",
                        "cacheLocation",
                        "frozen",
                        "lockfileLocation",
                        "proxy",
                        "upgrade"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io208 = (input, _exceptionable = true)=>null !== input.backend && (void 0 === input.backend || "function" == typeof input.backend || "object" == typeof input.backend && null !== input.backend && false === Array.isArray(input.backend) && _io209(input.backend, _exceptionable)) && (void 0 === input.entries || "boolean" == typeof input.entries) && (void 0 === input.imports || "boolean" == typeof input.imports) && null !== input.test && (void 0 === input.test || "function" == typeof input.test || "string" == typeof input.test || input.test instanceof RegExp) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "backend",
                        "entries",
                        "imports",
                        "test"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io209 = (input, _exceptionable = true)=>(void 0 === input.client || "string" == typeof input.client) && null !== input.listen && (void 0 === input.listen || "function" == typeof input.listen || "number" == typeof input.listen || "object" == typeof input.listen && null !== input.listen && false === Array.isArray(input.listen) && _io210(input.listen, _exceptionable)) && (void 0 === input.protocol || "http" === input.protocol || "https" === input.protocol) && null !== input.server && (void 0 === input.server || "function" == typeof input.server || "object" == typeof input.server && null !== input.server && false === Array.isArray(input.server) && _iu14(input.server, _exceptionable)) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "client",
                        "listen",
                        "protocol",
                        "server"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io210 = (input, _exceptionable = true)=>(void 0 === input.backlog || "number" == typeof input.backlog) && (void 0 === input.exclusive || "boolean" == typeof input.exclusive) && (void 0 === input.host || "string" == typeof input.host) && (void 0 === input.ipv6Only || "boolean" == typeof input.ipv6Only) && (void 0 === input.reusePort || "boolean" == typeof input.reusePort) && (void 0 === input.path || "string" == typeof input.path) && (void 0 === input.port || "number" == typeof input.port) && (void 0 === input.readableAll || "boolean" == typeof input.readableAll) && (void 0 === input.writableAll || "boolean" == typeof input.writableAll) && (void 0 === input.signal || "object" == typeof input.signal && null !== input.signal && _io211(input.signal, _exceptionable)) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "backlog",
                        "exclusive",
                        "host",
                        "ipv6Only",
                        "reusePort",
                        "path",
                        "port",
                        "readableAll",
                        "writableAll",
                        "signal"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io211 = (input, _exceptionable = true)=>"boolean" == typeof input.aborted && (null === input.onabort || true) && true && (3 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "aborted",
                        "onabort",
                        "reason"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io212 = (input, _exceptionable = true)=>(void 0 === input.IncomingMessage || "object" == typeof input.IncomingMessage && null !== input.IncomingMessage && _io154(input.IncomingMessage, _exceptionable)) && (void 0 === input.ServerResponse || "object" == typeof input.ServerResponse && null !== input.ServerResponse && _io161(input.ServerResponse, _exceptionable)) && (void 0 === input.requestTimeout || "number" == typeof input.requestTimeout) && (void 0 === input.joinDuplicateHeaders || "boolean" == typeof input.joinDuplicateHeaders) && (void 0 === input.keepAliveTimeout || "number" == typeof input.keepAliveTimeout) && (void 0 === input.connectionsCheckingInterval || "number" == typeof input.connectionsCheckingInterval) && (void 0 === input.headersTimeout || "number" == typeof input.headersTimeout) && (void 0 === input.highWaterMark || "number" == typeof input.highWaterMark) && (void 0 === input.insecureHTTPParser || "boolean" == typeof input.insecureHTTPParser) && (void 0 === input.maxHeaderSize || "number" == typeof input.maxHeaderSize) && (void 0 === input.noDelay || "boolean" == typeof input.noDelay) && (void 0 === input.requireHostHeader || "boolean" == typeof input.requireHostHeader) && (void 0 === input.keepAlive || "boolean" == typeof input.keepAlive) && (void 0 === input.keepAliveInitialDelay || "number" == typeof input.keepAliveInitialDelay) && (void 0 === input.uniqueHeaders || Array.isArray(input.uniqueHeaders) && input.uniqueHeaders.every((elem, _index166)=>null != elem && ("string" == typeof elem || Array.isArray(elem) && elem.every((elem, _index167)=>"string" == typeof elem)))) && (void 0 === input.rejectNonStandardBodyWrites || "boolean" == typeof input.rejectNonStandardBodyWrites) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "IncomingMessage",
                        "ServerResponse",
                        "requestTimeout",
                        "joinDuplicateHeaders",
                        "keepAliveTimeout",
                        "connectionsCheckingInterval",
                        "headersTimeout",
                        "highWaterMark",
                        "insecureHTTPParser",
                        "maxHeaderSize",
                        "noDelay",
                        "requireHostHeader",
                        "keepAlive",
                        "keepAliveInitialDelay",
                        "uniqueHeaders",
                        "rejectNonStandardBodyWrites"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io213 = (input, _exceptionable = true)=>(input.ALPNCallback, (void 0 === input.allowPartialTrustChain || "boolean" == typeof input.allowPartialTrustChain) && null !== input.ca && (void 0 === input.ca || "string" == typeof input.ca || Array.isArray(input.ca) && input.ca.every((elem, _index168)=>null != elem && ("string" == typeof elem || "object" == typeof elem && null !== elem && _io149(elem, _exceptionable))) || "object" == typeof input.ca && null !== input.ca && _io149(input.ca, _exceptionable)) && null !== input.cert && (void 0 === input.cert || "string" == typeof input.cert || Array.isArray(input.cert) && input.cert.every((elem, _index169)=>null != elem && ("string" == typeof elem || "object" == typeof elem && null !== elem && _io149(elem, _exceptionable))) || "object" == typeof input.cert && null !== input.cert && _io149(input.cert, _exceptionable)) && (void 0 === input.sigalgs || "string" == typeof input.sigalgs) && (void 0 === input.ciphers || "string" == typeof input.ciphers) && (void 0 === input.clientCertEngine || "string" == typeof input.clientCertEngine) && null !== input.crl && (void 0 === input.crl || "string" == typeof input.crl || Array.isArray(input.crl) && input.crl.every((elem, _index170)=>null != elem && ("string" == typeof elem || "object" == typeof elem && null !== elem && _io149(elem, _exceptionable))) || "object" == typeof input.crl && null !== input.crl && _io149(input.crl, _exceptionable)) && null !== input.dhparam && (void 0 === input.dhparam || "string" == typeof input.dhparam || "object" == typeof input.dhparam && null !== input.dhparam && _io149(input.dhparam, _exceptionable)) && (void 0 === input.ecdhCurve || "string" == typeof input.ecdhCurve) && (void 0 === input.honorCipherOrder || "boolean" == typeof input.honorCipherOrder) && null !== input.key && (void 0 === input.key || "string" == typeof input.key || Array.isArray(input.key) && input.key.every((elem, _index171)=>null != elem && ("string" == typeof elem || "object" == typeof elem && null !== elem && _iu1(elem, _exceptionable))) || "object" == typeof input.key && null !== input.key && _io149(input.key, _exceptionable)) && (void 0 === input.privateKeyEngine || "string" == typeof input.privateKeyEngine) && (void 0 === input.privateKeyIdentifier || "string" == typeof input.privateKeyIdentifier) && (void 0 === input.maxVersion || "TLSv1.3" === input.maxVersion || "TLSv1.2" === input.maxVersion || "TLSv1.1" === input.maxVersion || "TLSv1" === input.maxVersion) && (void 0 === input.minVersion || "TLSv1.3" === input.minVersion || "TLSv1.2" === input.minVersion || "TLSv1.1" === input.minVersion || "TLSv1" === input.minVersion) && (void 0 === input.passphrase || "string" == typeof input.passphrase) && null !== input.pfx && (void 0 === input.pfx || "string" == typeof input.pfx || Array.isArray(input.pfx) && input.pfx.every((elem, _index172)=>null != elem && ("string" == typeof elem || "object" == typeof elem && null !== elem && _iu2(elem, _exceptionable))) || "object" == typeof input.pfx && null !== input.pfx && _io149(input.pfx, _exceptionable)) && (void 0 === input.secureOptions || "number" == typeof input.secureOptions) && (void 0 === input.secureProtocol || "string" == typeof input.secureProtocol) && (void 0 === input.sessionIdContext || "string" == typeof input.sessionIdContext) && (void 0 === input.ticketKeys || "object" == typeof input.ticketKeys && null !== input.ticketKeys && _io149(input.ticketKeys, _exceptionable)) && (void 0 === input.sessionTimeout || "number" == typeof input.sessionTimeout) && (void 0 === input.handshakeTimeout || "number" == typeof input.handshakeTimeout) && (void 0 === input.pskIdentityHint || "string" == typeof input.pskIdentityHint) && (void 0 === input.secureContext || "object" == typeof input.secureContext && null !== input.secureContext && _io152(input.secureContext, _exceptionable)) && (void 0 === input.enableTrace || "boolean" == typeof input.enableTrace) && (void 0 === input.requestCert || "boolean" == typeof input.requestCert) && null !== input.ALPNProtocols && (void 0 === input.ALPNProtocols || input.ALPNProtocols instanceof Uint8Array || Array.isArray(input.ALPNProtocols) && (_ip1(input.ALPNProtocols, _exceptionable) || false)) && (void 0 === input.SNICallback || true) && (void 0 === input.rejectUnauthorized || "boolean" == typeof input.rejectUnauthorized) && (void 0 === input.allowHalfOpen || "boolean" == typeof input.allowHalfOpen) && (void 0 === input.pauseOnConnect || "boolean" == typeof input.pauseOnConnect) && (void 0 === input.noDelay || "boolean" == typeof input.noDelay) && (void 0 === input.keepAlive || "boolean" == typeof input.keepAlive) && (void 0 === input.keepAliveInitialDelay || "number" == typeof input.keepAliveInitialDelay) && (void 0 === input.highWaterMark || "number" == typeof input.highWaterMark) && (void 0 === input.blockList || "object" == typeof input.blockList && null !== input.blockList && _io153(input.blockList, _exceptionable)) && (void 0 === input.IncomingMessage || "object" == typeof input.IncomingMessage && null !== input.IncomingMessage && _io154(input.IncomingMessage, _exceptionable)) && (void 0 === input.ServerResponse || "object" == typeof input.ServerResponse && null !== input.ServerResponse && _io161(input.ServerResponse, _exceptionable)) && (void 0 === input.requestTimeout || "number" == typeof input.requestTimeout) && (void 0 === input.joinDuplicateHeaders || "boolean" == typeof input.joinDuplicateHeaders) && (void 0 === input.keepAliveTimeout || "number" == typeof input.keepAliveTimeout) && (void 0 === input.connectionsCheckingInterval || "number" == typeof input.connectionsCheckingInterval) && (void 0 === input.headersTimeout || "number" == typeof input.headersTimeout) && (void 0 === input.insecureHTTPParser || "boolean" == typeof input.insecureHTTPParser) && (void 0 === input.maxHeaderSize || "number" == typeof input.maxHeaderSize) && (void 0 === input.requireHostHeader || "boolean" == typeof input.requireHostHeader) && (void 0 === input.uniqueHeaders || Array.isArray(input.uniqueHeaders) && input.uniqueHeaders.every((elem, _index175)=>null != elem && ("string" == typeof elem || Array.isArray(elem) && elem.every((elem, _index176)=>"string" == typeof elem)))) && (void 0 === input.rejectNonStandardBodyWrites || "boolean" == typeof input.rejectNonStandardBodyWrites) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "ALPNCallback",
                        "allowPartialTrustChain",
                        "ca",
                        "cert",
                        "sigalgs",
                        "ciphers",
                        "clientCertEngine",
                        "crl",
                        "dhparam",
                        "ecdhCurve",
                        "honorCipherOrder",
                        "key",
                        "privateKeyEngine",
                        "privateKeyIdentifier",
                        "maxVersion",
                        "minVersion",
                        "passphrase",
                        "pfx",
                        "secureOptions",
                        "secureProtocol",
                        "sessionIdContext",
                        "ticketKeys",
                        "sessionTimeout",
                        "handshakeTimeout",
                        "pskIdentityHint",
                        "secureContext",
                        "enableTrace",
                        "requestCert",
                        "ALPNProtocols",
                        "SNICallback",
                        "rejectUnauthorized",
                        "allowHalfOpen",
                        "pauseOnConnect",
                        "noDelay",
                        "keepAlive",
                        "keepAliveInitialDelay",
                        "highWaterMark",
                        "blockList",
                        "IncomingMessage",
                        "ServerResponse",
                        "requestTimeout",
                        "joinDuplicateHeaders",
                        "keepAliveTimeout",
                        "connectionsCheckingInterval",
                        "headersTimeout",
                        "insecureHTTPParser",
                        "maxHeaderSize",
                        "requireHostHeader",
                        "uniqueHeaders",
                        "rejectNonStandardBodyWrites"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                })));
            const _io214 = (input, _exceptionable = true)=>null !== input.byLayer && (void 0 === input.byLayer || "function" == typeof input.byLayer || "object" == typeof input.byLayer && null !== input.byLayer && false === Array.isArray(input.byLayer) && _io215(input.byLayer, _exceptionable)) && Object.keys(input).every((key)=>{
                    if ([
                        "byLayer"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return null != value && ("string" == typeof value || "boolean" == typeof value || Array.isArray(value) && value.every((elem, _index177)=>"string" == typeof elem) || "object" == typeof value && null !== value && false === Array.isArray(value) && _io216(value, _exceptionable));
                });
            const _io215 = (input, _exceptionable = true)=>Object.keys(input).every((key)=>{
                    const value = input[key];
                    if (void 0 === value) return true;
                    return null != value && ("function" == typeof value || "string" == typeof value || value instanceof RegExp || "object" == typeof value && null !== value && false === Array.isArray(value) && _io214(value, _exceptionable));
                });
            const _io216 = (input, _exceptionable = true)=>Object.keys(input).every((key)=>{
                    input[key];
                    return true;
                });
            const _io217 = (input, _exceptionable = true)=>(void 0 === input.electron || "boolean" == typeof input.electron) && (void 0 === input.electronMain || "boolean" == typeof input.electronMain) && (void 0 === input.electronPreload || "boolean" == typeof input.electronPreload) && (void 0 === input.electronRenderer || "boolean" == typeof input.electronRenderer) && (void 0 === input.node || "boolean" == typeof input.node) && (void 0 === input.nwjs || "boolean" == typeof input.nwjs) && (void 0 === input.web || "boolean" == typeof input.web) && (void 0 === input.webAsync || "boolean" == typeof input.webAsync) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "electron",
                        "electronMain",
                        "electronPreload",
                        "electronRenderer",
                        "node",
                        "nwjs",
                        "web",
                        "webAsync"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io218 = (input, _exceptionable = true)=>(void 0 === input.file || input.file instanceof RegExp) && (void 0 === input.message || input.message instanceof RegExp) && (void 0 === input["module"] || input["module"] instanceof RegExp) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "file",
                        "message",
                        "module"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io219 = (input, _exceptionable = true)=>(void 0 === input.appendOnly || "boolean" == typeof input.appendOnly) && (void 0 === input.colors || "boolean" == typeof input.colors) && (void 0 === input.console || "object" == typeof input.console && null !== input.console && _io110(input.console, _exceptionable)) && null !== input.debug && (void 0 === input.debug || "function" == typeof input.debug || "string" == typeof input.debug || "boolean" == typeof input.debug || input.debug instanceof RegExp || Array.isArray(input.debug) && input.debug.every((elem, _index178)=>null != elem && ("function" == typeof elem || "string" == typeof elem || elem instanceof RegExp))) && (void 0 === input.level || "none" === input.level || "verbose" === input.level || "error" === input.level || "warn" === input.level || "info" === input.level || "log" === input.level) && (void 0 === input.stream || "object" == typeof input.stream && null !== input.stream && _io220(input.stream, _exceptionable)) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "appendOnly",
                        "colors",
                        "console",
                        "debug",
                        "level",
                        "stream"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io220 = (input, _exceptionable = true)=>"boolean" == typeof input.writable && (void 0 === input.isTTY || "boolean" == typeof input.isTTY) && (void 0 === input.columns || "number" == typeof input.columns) && (void 0 === input.rows || "number" == typeof input.rows) && (1 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "writable",
                        "isTTY",
                        "columns",
                        "rows"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io221 = (input, _exceptionable = true)=>Object.keys(input).every((key)=>{
                    input[key];
                    return true;
                });
            const _io222 = (input, _exceptionable = true)=>(void 0 === input.defaultRules || Array.isArray(input.defaultRules) && input.defaultRules.every((elem, _index179)=>null == elem || false === elem || "" === elem || "..." === elem || 0 === elem || "object" == typeof elem && null !== elem && false === Array.isArray(elem) && _io223(elem, _exceptionable))) && (void 0 === input.exprContextCritical || "boolean" == typeof input.exprContextCritical) && (void 0 === input.exprContextRecursive || "boolean" == typeof input.exprContextRecursive) && null !== input.exprContextRegExp && (void 0 === input.exprContextRegExp || "boolean" == typeof input.exprContextRegExp || input.exprContextRegExp instanceof RegExp) && (void 0 === input.exprContextRequest || "string" == typeof input.exprContextRequest) && (void 0 === input.generator || "object" == typeof input.generator && null !== input.generator && false === Array.isArray(input.generator) && _io285(input.generator, _exceptionable)) && null !== input.noParse && (void 0 === input.noParse || "function" == typeof input.noParse || "string" == typeof input.noParse || input.noParse instanceof RegExp || Array.isArray(input.noParse) && input.noParse.every((elem, _index180)=>null != elem && ("function" == typeof elem || "string" == typeof elem || elem instanceof RegExp))) && (void 0 === input.parser || "object" == typeof input.parser && null !== input.parser && false === Array.isArray(input.parser) && _io297(input.parser, _exceptionable)) && (void 0 === input.rules || Array.isArray(input.rules) && input.rules.every((elem, _index181)=>null == elem || false === elem || "" === elem || "..." === elem || 0 === elem || "object" == typeof elem && null !== elem && false === Array.isArray(elem) && _io223(elem, _exceptionable))) && (void 0 === input.strictExportPresence || "boolean" == typeof input.strictExportPresence) && (void 0 === input.strictThisContextOnImports || "boolean" == typeof input.strictThisContextOnImports) && (void 0 === input.unknownContextCritical || "boolean" == typeof input.unknownContextCritical) && (void 0 === input.unknownContextRecursive || "boolean" == typeof input.unknownContextRecursive) && null !== input.unknownContextRegExp && (void 0 === input.unknownContextRegExp || "boolean" == typeof input.unknownContextRegExp || input.unknownContextRegExp instanceof RegExp) && (void 0 === input.unknownContextRequest || "string" == typeof input.unknownContextRequest) && null !== input.unsafeCache && (void 0 === input.unsafeCache || "function" == typeof input.unsafeCache || "boolean" == typeof input.unsafeCache) && (void 0 === input.wrappedContextCritical || "boolean" == typeof input.wrappedContextCritical) && (void 0 === input.wrappedContextRecursive || "boolean" == typeof input.wrappedContextRecursive) && (void 0 === input.wrappedContextRegExp || input.wrappedContextRegExp instanceof RegExp) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "defaultRules",
                        "exprContextCritical",
                        "exprContextRecursive",
                        "exprContextRegExp",
                        "exprContextRequest",
                        "generator",
                        "noParse",
                        "parser",
                        "rules",
                        "strictExportPresence",
                        "strictThisContextOnImports",
                        "unknownContextCritical",
                        "unknownContextRecursive",
                        "unknownContextRegExp",
                        "unknownContextRequest",
                        "unsafeCache",
                        "wrappedContextCritical",
                        "wrappedContextRecursive",
                        "wrappedContextRegExp"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io223 = (input, _exceptionable = true)=>(void 0 === input.assert || "object" == typeof input.assert && null !== input.assert && false === Array.isArray(input.assert) && _io224(input.assert, _exceptionable)) && null !== input.compiler && (void 0 === input.compiler || "function" == typeof input.compiler || "string" == typeof input.compiler || input.compiler instanceof RegExp || Array.isArray(input.compiler) && input.compiler.every((elem, _index182)=>null != elem && ("function" == typeof elem || "string" == typeof elem || elem instanceof RegExp || Array.isArray(elem) && (_ia1(elem, _exceptionable) || false) || "object" == typeof elem && null !== elem && false === Array.isArray(elem) && _io225(elem, _exceptionable))) || "object" == typeof input.compiler && null !== input.compiler && false === Array.isArray(input.compiler) && _io225(input.compiler, _exceptionable)) && null !== input.dependency && (void 0 === input.dependency || "function" == typeof input.dependency || "string" == typeof input.dependency || input.dependency instanceof RegExp || Array.isArray(input.dependency) && input.dependency.every((elem, _index183)=>null != elem && ("function" == typeof elem || "string" == typeof elem || elem instanceof RegExp || Array.isArray(elem) && (_ia1(elem, _exceptionable) || false) || "object" == typeof elem && null !== elem && false === Array.isArray(elem) && _io225(elem, _exceptionable))) || "object" == typeof input.dependency && null !== input.dependency && false === Array.isArray(input.dependency) && _io225(input.dependency, _exceptionable)) && (void 0 === input.descriptionData || "object" == typeof input.descriptionData && null !== input.descriptionData && false === Array.isArray(input.descriptionData) && _io226(input.descriptionData, _exceptionable)) && (void 0 === input.enforce || "pre" === input.enforce || "post" === input.enforce) && null !== input.exclude && (void 0 === input.exclude || "function" == typeof input.exclude || "string" == typeof input.exclude || input.exclude instanceof RegExp || Array.isArray(input.exclude) && input.exclude.every((elem, _index184)=>null != elem && ("function" == typeof elem || "string" == typeof elem || elem instanceof RegExp || Array.isArray(elem) && (_ia2(elem, _exceptionable) || false) || "object" == typeof elem && null !== elem && false === Array.isArray(elem) && _io227(elem, _exceptionable))) || "object" == typeof input.exclude && null !== input.exclude && false === Array.isArray(input.exclude) && _io227(input.exclude, _exceptionable)) && (void 0 === input.generator || "object" == typeof input.generator && null !== input.generator && false === Array.isArray(input.generator) && _io228(input.generator, _exceptionable)) && null !== input.include && (void 0 === input.include || "function" == typeof input.include || "string" == typeof input.include || input.include instanceof RegExp || Array.isArray(input.include) && input.include.every((elem, _index185)=>null != elem && ("function" == typeof elem || "string" == typeof elem || elem instanceof RegExp || Array.isArray(elem) && (_ia2(elem, _exceptionable) || false) || "object" == typeof elem && null !== elem && false === Array.isArray(elem) && _io227(elem, _exceptionable))) || "object" == typeof input.include && null !== input.include && false === Array.isArray(input.include) && _io227(input.include, _exceptionable)) && null !== input.issuer && (void 0 === input.issuer || "function" == typeof input.issuer || "string" == typeof input.issuer || input.issuer instanceof RegExp || Array.isArray(input.issuer) && input.issuer.every((elem, _index186)=>null != elem && ("function" == typeof elem || "string" == typeof elem || elem instanceof RegExp || Array.isArray(elem) && (_ia2(elem, _exceptionable) || false) || "object" == typeof elem && null !== elem && false === Array.isArray(elem) && _io227(elem, _exceptionable))) || "object" == typeof input.issuer && null !== input.issuer && false === Array.isArray(input.issuer) && _io227(input.issuer, _exceptionable)) && null !== input.issuerLayer && (void 0 === input.issuerLayer || "function" == typeof input.issuerLayer || "string" == typeof input.issuerLayer || input.issuerLayer instanceof RegExp || Array.isArray(input.issuerLayer) && input.issuerLayer.every((elem, _index187)=>null != elem && ("function" == typeof elem || "string" == typeof elem || elem instanceof RegExp || Array.isArray(elem) && (_ia1(elem, _exceptionable) || false) || "object" == typeof elem && null !== elem && false === Array.isArray(elem) && _io225(elem, _exceptionable))) || "object" == typeof input.issuerLayer && null !== input.issuerLayer && false === Array.isArray(input.issuerLayer) && _io225(input.issuerLayer, _exceptionable)) && (void 0 === input.layer || "string" == typeof input.layer) && (void 0 === input.loader || "string" == typeof input.loader) && null !== input.mimetype && (void 0 === input.mimetype || "function" == typeof input.mimetype || "string" == typeof input.mimetype || input.mimetype instanceof RegExp || Array.isArray(input.mimetype) && input.mimetype.every((elem, _index188)=>null != elem && ("function" == typeof elem || "string" == typeof elem || elem instanceof RegExp || Array.isArray(elem) && (_ia1(elem, _exceptionable) || false) || "object" == typeof elem && null !== elem && false === Array.isArray(elem) && _io225(elem, _exceptionable))) || "object" == typeof input.mimetype && null !== input.mimetype && false === Array.isArray(input.mimetype) && _io225(input.mimetype, _exceptionable)) && (void 0 === input.oneOf || Array.isArray(input.oneOf) && input.oneOf.every((elem, _index189)=>null == elem || false === elem || "" === elem || 0 === elem || "object" == typeof elem && null !== elem && false === Array.isArray(elem) && _io223(elem, _exceptionable))) && null !== input.options && (void 0 === input.options || "string" == typeof input.options || "object" == typeof input.options && null !== input.options && false === Array.isArray(input.options) && _io229(input.options, _exceptionable)) && (void 0 === input.parser || "object" == typeof input.parser && null !== input.parser && false === Array.isArray(input.parser) && _io230(input.parser, _exceptionable)) && null !== input.realResource && (void 0 === input.realResource || "function" == typeof input.realResource || "string" == typeof input.realResource || input.realResource instanceof RegExp || Array.isArray(input.realResource) && input.realResource.every((elem, _index190)=>null != elem && ("function" == typeof elem || "string" == typeof elem || elem instanceof RegExp || Array.isArray(elem) && (_ia2(elem, _exceptionable) || false) || "object" == typeof elem && null !== elem && false === Array.isArray(elem) && _io227(elem, _exceptionable))) || "object" == typeof input.realResource && null !== input.realResource && false === Array.isArray(input.realResource) && _io227(input.realResource, _exceptionable)) && (void 0 === input.resolve || "object" == typeof input.resolve && null !== input.resolve && false === Array.isArray(input.resolve) && _io231(input.resolve, _exceptionable)) && null !== input.resource && (void 0 === input.resource || "function" == typeof input.resource || "string" == typeof input.resource || input.resource instanceof RegExp || Array.isArray(input.resource) && input.resource.every((elem, _index191)=>null != elem && ("function" == typeof elem || "string" == typeof elem || elem instanceof RegExp || Array.isArray(elem) && (_ia2(elem, _exceptionable) || false) || "object" == typeof elem && null !== elem && false === Array.isArray(elem) && _io227(elem, _exceptionable))) || "object" == typeof input.resource && null !== input.resource && false === Array.isArray(input.resource) && _io227(input.resource, _exceptionable)) && null !== input.resourceFragment && (void 0 === input.resourceFragment || "function" == typeof input.resourceFragment || "string" == typeof input.resourceFragment || input.resourceFragment instanceof RegExp || Array.isArray(input.resourceFragment) && input.resourceFragment.every((elem, _index192)=>null != elem && ("function" == typeof elem || "string" == typeof elem || elem instanceof RegExp || Array.isArray(elem) && (_ia1(elem, _exceptionable) || false) || "object" == typeof elem && null !== elem && false === Array.isArray(elem) && _io225(elem, _exceptionable))) || "object" == typeof input.resourceFragment && null !== input.resourceFragment && false === Array.isArray(input.resourceFragment) && _io225(input.resourceFragment, _exceptionable)) && null !== input.resourceQuery && (void 0 === input.resourceQuery || "function" == typeof input.resourceQuery || "string" == typeof input.resourceQuery || input.resourceQuery instanceof RegExp || Array.isArray(input.resourceQuery) && input.resourceQuery.every((elem, _index193)=>null != elem && ("function" == typeof elem || "string" == typeof elem || elem instanceof RegExp || Array.isArray(elem) && (_ia1(elem, _exceptionable) || false) || "object" == typeof elem && null !== elem && false === Array.isArray(elem) && _io225(elem, _exceptionable))) || "object" == typeof input.resourceQuery && null !== input.resourceQuery && false === Array.isArray(input.resourceQuery) && _io225(input.resourceQuery, _exceptionable)) && (void 0 === input.rules || Array.isArray(input.rules) && input.rules.every((elem, _index194)=>null == elem || false === elem || "" === elem || 0 === elem || "object" == typeof elem && null !== elem && false === Array.isArray(elem) && _io223(elem, _exceptionable))) && null !== input.scheme && (void 0 === input.scheme || "function" == typeof input.scheme || "string" == typeof input.scheme || input.scheme instanceof RegExp || Array.isArray(input.scheme) && input.scheme.every((elem, _index195)=>null != elem && ("function" == typeof elem || "string" == typeof elem || elem instanceof RegExp || Array.isArray(elem) && (_ia1(elem, _exceptionable) || false) || "object" == typeof elem && null !== elem && false === Array.isArray(elem) && _io225(elem, _exceptionable))) || "object" == typeof input.scheme && null !== input.scheme && false === Array.isArray(input.scheme) && _io225(input.scheme, _exceptionable)) && (void 0 === input.sideEffects || "boolean" == typeof input.sideEffects) && null !== input.test && (void 0 === input.test || "function" == typeof input.test || "string" == typeof input.test || input.test instanceof RegExp || Array.isArray(input.test) && input.test.every((elem, _index196)=>null != elem && ("function" == typeof elem || "string" == typeof elem || elem instanceof RegExp || Array.isArray(elem) && (_ia2(elem, _exceptionable) || false) || "object" == typeof elem && null !== elem && false === Array.isArray(elem) && _io227(elem, _exceptionable))) || "object" == typeof input.test && null !== input.test && false === Array.isArray(input.test) && _io227(input.test, _exceptionable)) && (void 0 === input.type || "string" == typeof input.type) && null !== input.use && (void 0 === input.use || "function" == typeof input.use || "string" == typeof input.use || Array.isArray(input.use) && input.use.every((elem, _index197)=>null == elem || "function" == typeof elem || false === elem || 0 === elem || "string" == typeof elem || "object" == typeof elem && null !== elem && false === Array.isArray(elem) && _io280(elem, _exceptionable)) || "object" == typeof input.use && null !== input.use && false === Array.isArray(input.use) && _io282(input.use, _exceptionable)) && (void 0 === input["with"] || "object" == typeof input["with"] && null !== input["with"] && false === Array.isArray(input["with"]) && _io284(input["with"], _exceptionable)) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "assert",
                        "compiler",
                        "dependency",
                        "descriptionData",
                        "enforce",
                        "exclude",
                        "generator",
                        "include",
                        "issuer",
                        "issuerLayer",
                        "layer",
                        "loader",
                        "mimetype",
                        "oneOf",
                        "options",
                        "parser",
                        "realResource",
                        "resolve",
                        "resource",
                        "resourceFragment",
                        "resourceQuery",
                        "rules",
                        "scheme",
                        "sideEffects",
                        "test",
                        "type",
                        "use",
                        "with"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io224 = (input, _exceptionable = true)=>Object.keys(input).every((key)=>{
                    const value = input[key];
                    if (void 0 === value) return true;
                    return null != value && ("function" == typeof value || "string" == typeof value || value instanceof RegExp || Array.isArray(value) && value.every((elem, _index198)=>null != elem && ("function" == typeof elem || "string" == typeof elem || elem instanceof RegExp || Array.isArray(elem) && (_ia1(elem, _exceptionable) || false) || "object" == typeof elem && null !== elem && false === Array.isArray(elem) && _io225(elem, _exceptionable))) || "object" == typeof value && null !== value && false === Array.isArray(value) && _io225(value, _exceptionable));
                });
            const _io225 = (input, _exceptionable = true)=>(void 0 === input.and || Array.isArray(input.and) && input.and.every((elem, _index199)=>null != elem && ("function" == typeof elem || "string" == typeof elem || elem instanceof RegExp || Array.isArray(elem) && (_ia1(elem, _exceptionable) || false) || "object" == typeof elem && null !== elem && false === Array.isArray(elem) && _io225(elem, _exceptionable)))) && null !== input.not && (void 0 === input.not || "function" == typeof input.not || "string" == typeof input.not || input.not instanceof RegExp || Array.isArray(input.not) && input.not.every((elem, _index200)=>null != elem && ("function" == typeof elem || "string" == typeof elem || elem instanceof RegExp || Array.isArray(elem) && (_ia1(elem, _exceptionable) || false) || "object" == typeof elem && null !== elem && false === Array.isArray(elem) && _io225(elem, _exceptionable))) || "object" == typeof input.not && null !== input.not && false === Array.isArray(input.not) && _io225(input.not, _exceptionable)) && (void 0 === input.or || Array.isArray(input.or) && input.or.every((elem, _index201)=>null != elem && ("function" == typeof elem || "string" == typeof elem || elem instanceof RegExp || Array.isArray(elem) && (_ia1(elem, _exceptionable) || false) || "object" == typeof elem && null !== elem && false === Array.isArray(elem) && _io225(elem, _exceptionable)))) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "and",
                        "not",
                        "or"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io226 = (input, _exceptionable = true)=>Object.keys(input).every((key)=>{
                    const value = input[key];
                    if (void 0 === value) return true;
                    return null != value && ("function" == typeof value || "string" == typeof value || value instanceof RegExp || Array.isArray(value) && value.every((elem, _index202)=>null != elem && ("function" == typeof elem || "string" == typeof elem || elem instanceof RegExp || Array.isArray(elem) && (_ia1(elem, _exceptionable) || false) || "object" == typeof elem && null !== elem && false === Array.isArray(elem) && _io225(elem, _exceptionable))) || "object" == typeof value && null !== value && false === Array.isArray(value) && _io225(value, _exceptionable));
                });
            const _io227 = (input, _exceptionable = true)=>(void 0 === input.and || Array.isArray(input.and) && input.and.every((elem, _index203)=>null != elem && ("function" == typeof elem || "string" == typeof elem || elem instanceof RegExp || Array.isArray(elem) && (_ia2(elem, _exceptionable) || false) || "object" == typeof elem && null !== elem && false === Array.isArray(elem) && _io227(elem, _exceptionable)))) && null !== input.not && (void 0 === input.not || "function" == typeof input.not || "string" == typeof input.not || input.not instanceof RegExp || Array.isArray(input.not) && input.not.every((elem, _index204)=>null != elem && ("function" == typeof elem || "string" == typeof elem || elem instanceof RegExp || Array.isArray(elem) && (_ia2(elem, _exceptionable) || false) || "object" == typeof elem && null !== elem && false === Array.isArray(elem) && _io227(elem, _exceptionable))) || "object" == typeof input.not && null !== input.not && false === Array.isArray(input.not) && _io227(input.not, _exceptionable)) && (void 0 === input.or || Array.isArray(input.or) && input.or.every((elem, _index205)=>null != elem && ("function" == typeof elem || "string" == typeof elem || elem instanceof RegExp || Array.isArray(elem) && (_ia2(elem, _exceptionable) || false) || "object" == typeof elem && null !== elem && false === Array.isArray(elem) && _io227(elem, _exceptionable)))) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "and",
                        "not",
                        "or"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io228 = (input, _exceptionable = true)=>Object.keys(input).every((key)=>{
                    input[key];
                    return true;
                });
            const _io229 = (input, _exceptionable = true)=>Object.keys(input).every((key)=>{
                    input[key];
                    return true;
                });
            const _io230 = (input, _exceptionable = true)=>Object.keys(input).every((key)=>{
                    input[key];
                    return true;
                });
            const _io231 = (input, _exceptionable = true)=>null !== input.alias && (void 0 === input.alias || Array.isArray(input.alias) && input.alias.every((elem, _index206)=>"object" == typeof elem && null !== elem && _io232(elem, _exceptionable)) || "object" == typeof input.alias && null !== input.alias && false === Array.isArray(input.alias) && _io233(input.alias, _exceptionable)) && (void 0 === input.aliasFields || Array.isArray(input.aliasFields) && input.aliasFields.every((elem, _index207)=>null != elem && ("string" == typeof elem || Array.isArray(elem) && elem.every((elem, _index208)=>"string" == typeof elem)))) && (void 0 === input.byDependency || "object" == typeof input.byDependency && null !== input.byDependency && false === Array.isArray(input.byDependency) && _io234(input.byDependency, _exceptionable)) && (void 0 === input.cache || "boolean" == typeof input.cache) && (void 0 === input.cachePredicate || true) && (void 0 === input.cacheWithContext || "boolean" == typeof input.cacheWithContext) && (void 0 === input.conditionNames || Array.isArray(input.conditionNames) && input.conditionNames.every((elem, _index209)=>"string" == typeof elem)) && (void 0 === input.descriptionFiles || Array.isArray(input.descriptionFiles) && input.descriptionFiles.every((elem, _index210)=>"string" == typeof elem)) && (void 0 === input.enforceExtension || "boolean" == typeof input.enforceExtension) && (void 0 === input.exportsFields || Array.isArray(input.exportsFields) && input.exportsFields.every((elem, _index211)=>"string" == typeof elem)) && (void 0 === input.extensionAlias || "object" == typeof input.extensionAlias && null !== input.extensionAlias && false === Array.isArray(input.extensionAlias) && _io235(input.extensionAlias, _exceptionable)) && (void 0 === input.extensions || Array.isArray(input.extensions) && input.extensions.every((elem, _index212)=>"string" == typeof elem)) && null !== input.fallback && (void 0 === input.fallback || Array.isArray(input.fallback) && input.fallback.every((elem, _index213)=>"object" == typeof elem && null !== elem && _io236(elem, _exceptionable)) || "object" == typeof input.fallback && null !== input.fallback && false === Array.isArray(input.fallback) && _io237(input.fallback, _exceptionable)) && (void 0 === input.fileSystem || "object" == typeof input.fileSystem && null !== input.fileSystem && _io238(input.fileSystem, _exceptionable)) && (void 0 === input.fullySpecified || "boolean" == typeof input.fullySpecified) && (void 0 === input.importsFields || Array.isArray(input.importsFields) && input.importsFields.every((elem, _index214)=>"string" == typeof elem)) && (void 0 === input.mainFields || Array.isArray(input.mainFields) && input.mainFields.every((elem, _index215)=>null != elem && ("string" == typeof elem || Array.isArray(elem) && elem.every((elem, _index216)=>"string" == typeof elem)))) && (void 0 === input.mainFiles || Array.isArray(input.mainFiles) && input.mainFiles.every((elem, _index217)=>"string" == typeof elem)) && (void 0 === input.modules || Array.isArray(input.modules) && input.modules.every((elem, _index218)=>"string" == typeof elem)) && (void 0 === input.plugins || Array.isArray(input.plugins) && input.plugins.every((elem, _index219)=>null == elem || "function" == typeof elem || false === elem || "" === elem || "..." === elem || 0 === elem || "object" == typeof elem && null !== elem && _io251(elem, _exceptionable))) && (void 0 === input.preferAbsolute || "boolean" == typeof input.preferAbsolute) && (void 0 === input.preferRelative || "boolean" == typeof input.preferRelative) && (void 0 === input.resolver || "object" == typeof input.resolver && null !== input.resolver && _io252(input.resolver, _exceptionable)) && (void 0 === input.restrictions || Array.isArray(input.restrictions) && input.restrictions.every((elem, _index220)=>null != elem && ("string" == typeof elem || elem instanceof RegExp))) && (void 0 === input.roots || Array.isArray(input.roots) && input.roots.every((elem, _index221)=>"string" == typeof elem)) && (void 0 === input.symlinks || "boolean" == typeof input.symlinks) && null !== input.unsafeCache && (void 0 === input.unsafeCache || "boolean" == typeof input.unsafeCache || "object" == typeof input.unsafeCache && null !== input.unsafeCache && false === Array.isArray(input.unsafeCache) && _io279(input.unsafeCache, _exceptionable)) && (void 0 === input.useSyncFileSystemCalls || "boolean" == typeof input.useSyncFileSystemCalls) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "alias",
                        "aliasFields",
                        "byDependency",
                        "cache",
                        "cachePredicate",
                        "cacheWithContext",
                        "conditionNames",
                        "descriptionFiles",
                        "enforceExtension",
                        "exportsFields",
                        "extensionAlias",
                        "extensions",
                        "fallback",
                        "fileSystem",
                        "fullySpecified",
                        "importsFields",
                        "mainFields",
                        "mainFiles",
                        "modules",
                        "plugins",
                        "preferAbsolute",
                        "preferRelative",
                        "resolver",
                        "restrictions",
                        "roots",
                        "symlinks",
                        "unsafeCache",
                        "useSyncFileSystemCalls"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io232 = (input, _exceptionable = true)=>null !== input.alias && void 0 !== input.alias && (false === input.alias || "string" == typeof input.alias || Array.isArray(input.alias) && input.alias.every((elem, _index222)=>"string" == typeof elem)) && "string" == typeof input.name && (void 0 === input.onlyModule || "boolean" == typeof input.onlyModule) && (2 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "alias",
                        "name",
                        "onlyModule"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io233 = (input, _exceptionable = true)=>Object.keys(input).every((key)=>{
                    const value = input[key];
                    if (void 0 === value) return true;
                    return null != value && (false === value || "string" == typeof value || Array.isArray(value) && value.every((elem, _index223)=>"string" == typeof elem));
                });
            const _io234 = (input, _exceptionable = true)=>Object.keys(input).every((key)=>{
                    const value = input[key];
                    if (void 0 === value) return true;
                    return "object" == typeof value && null !== value && false === Array.isArray(value) && _io231(value, _exceptionable);
                });
            const _io235 = (input, _exceptionable = true)=>Object.keys(input).every((key)=>{
                    const value = input[key];
                    if (void 0 === value) return true;
                    return null != value && ("string" == typeof value || Array.isArray(value) && value.every((elem, _index224)=>"string" == typeof elem));
                });
            const _io236 = (input, _exceptionable = true)=>null !== input.alias && void 0 !== input.alias && (false === input.alias || "string" == typeof input.alias || Array.isArray(input.alias) && input.alias.every((elem, _index225)=>"string" == typeof elem)) && "string" == typeof input.name && (void 0 === input.onlyModule || "boolean" == typeof input.onlyModule) && (2 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "alias",
                        "name",
                        "onlyModule"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io237 = (input, _exceptionable = true)=>Object.keys(input).every((key)=>{
                    const value = input[key];
                    if (void 0 === value) return true;
                    return null != value && (false === value || "string" == typeof value || Array.isArray(value) && value.every((elem, _index226)=>"string" == typeof elem));
                });
            const _io238 = (input, _exceptionable = true)=>"object" == typeof input.readFile && null !== input.readFile && _io239(input.readFile, _exceptionable) && (void 0 === input.readFileSync || "object" == typeof input.readFileSync && null !== input.readFileSync && _io240(input.readFileSync, _exceptionable)) && "object" == typeof input.readlink && null !== input.readlink && _io241(input.readlink, _exceptionable) && (void 0 === input.readlinkSync || "object" == typeof input.readlinkSync && null !== input.readlinkSync && _io242(input.readlinkSync, _exceptionable)) && "object" == typeof input.readdir && null !== input.readdir && _io243(input.readdir, _exceptionable) && (void 0 === input.readdirSync || "object" == typeof input.readdirSync && null !== input.readdirSync && _io244(input.readdirSync, _exceptionable)) && "object" == typeof input.stat && null !== input.stat && _io245(input.stat, _exceptionable) && (void 0 === input.statSync || "object" == typeof input.statSync && null !== input.statSync && _io246(input.statSync, _exceptionable)) && (void 0 === input.lstat || "object" == typeof input.lstat && null !== input.lstat && _io247(input.lstat, _exceptionable)) && (void 0 === input.lstatSync || "object" == typeof input.lstatSync && null !== input.lstatSync && _io248(input.lstatSync, _exceptionable)) && (void 0 === input.realpath || "object" == typeof input.realpath && null !== input.realpath && _io249(input.realpath, _exceptionable)) && (void 0 === input.realpathSync || "object" == typeof input.realpathSync && null !== input.realpathSync && _io250(input.realpathSync, _exceptionable)) && (void 0 === input.readJson || true) && (void 0 === input.readJsonSync || true) && (void 0 === input.purge || true) && (void 0 === input.join || true) && (void 0 === input.relative || true) && (void 0 === input.dirname || true) && (4 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "readFile",
                        "readFileSync",
                        "readlink",
                        "readlinkSync",
                        "readdir",
                        "readdirSync",
                        "stat",
                        "statSync",
                        "lstat",
                        "lstatSync",
                        "realpath",
                        "realpathSync",
                        "readJson",
                        "readJsonSync",
                        "purge",
                        "join",
                        "relative",
                        "dirname"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io239 = (input, _exceptionable = true)=>"number" == typeof input.length && true && "object" == typeof input.caller && null !== input.caller && _io33(input.caller, _exceptionable) && "string" == typeof input.name && (5 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "prototype",
                        "length",
                        "arguments",
                        "caller",
                        "name"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io240 = (input, _exceptionable = true)=>"number" == typeof input.length && true && "object" == typeof input.caller && null !== input.caller && _io33(input.caller, _exceptionable) && "string" == typeof input.name && (5 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "prototype",
                        "length",
                        "arguments",
                        "caller",
                        "name"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io241 = (input, _exceptionable = true)=>"number" == typeof input.length && true && "object" == typeof input.caller && null !== input.caller && _io33(input.caller, _exceptionable) && "string" == typeof input.name && (5 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "prototype",
                        "length",
                        "arguments",
                        "caller",
                        "name"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io242 = (input, _exceptionable = true)=>"number" == typeof input.length && true && "object" == typeof input.caller && null !== input.caller && _io33(input.caller, _exceptionable) && "string" == typeof input.name && (5 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "prototype",
                        "length",
                        "arguments",
                        "caller",
                        "name"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io243 = (input, _exceptionable = true)=>"number" == typeof input.length && true && "object" == typeof input.caller && null !== input.caller && _io33(input.caller, _exceptionable) && "string" == typeof input.name && (5 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "prototype",
                        "length",
                        "arguments",
                        "caller",
                        "name"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io244 = (input, _exceptionable = true)=>"number" == typeof input.length && true && "object" == typeof input.caller && null !== input.caller && _io33(input.caller, _exceptionable) && "string" == typeof input.name && (5 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "prototype",
                        "length",
                        "arguments",
                        "caller",
                        "name"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io245 = (input, _exceptionable = true)=>"number" == typeof input.length && true && "object" == typeof input.caller && null !== input.caller && _io33(input.caller, _exceptionable) && "string" == typeof input.name && (5 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "prototype",
                        "length",
                        "arguments",
                        "caller",
                        "name"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io246 = (input, _exceptionable = true)=>"number" == typeof input.length && true && "object" == typeof input.caller && null !== input.caller && _io33(input.caller, _exceptionable) && "string" == typeof input.name && (5 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "prototype",
                        "length",
                        "arguments",
                        "caller",
                        "name"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io247 = (input, _exceptionable = true)=>"number" == typeof input.length && true && "object" == typeof input.caller && null !== input.caller && _io33(input.caller, _exceptionable) && "string" == typeof input.name && (5 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "prototype",
                        "length",
                        "arguments",
                        "caller",
                        "name"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io248 = (input, _exceptionable = true)=>"number" == typeof input.length && true && "object" == typeof input.caller && null !== input.caller && _io33(input.caller, _exceptionable) && "string" == typeof input.name && (5 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "prototype",
                        "length",
                        "arguments",
                        "caller",
                        "name"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io249 = (input, _exceptionable = true)=>"number" == typeof input.length && true && "object" == typeof input.caller && null !== input.caller && _io33(input.caller, _exceptionable) && "string" == typeof input.name && (5 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "prototype",
                        "length",
                        "arguments",
                        "caller",
                        "name"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io250 = (input, _exceptionable = true)=>"number" == typeof input.length && true && "object" == typeof input.caller && null !== input.caller && _io33(input.caller, _exceptionable) && "string" == typeof input.name && (5 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "prototype",
                        "length",
                        "arguments",
                        "caller",
                        "name"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io251 = (input, _exceptionable = true)=>Object.keys(input).every((key)=>{
                    if ([
                        "apply"
                    ].some((prop)=>key === prop)) return true;
                    input[key];
                    return true;
                });
            const _io252 = (input, _exceptionable = true)=>"object" == typeof input.fileSystem && null !== input.fileSystem && _io253(input.fileSystem, _exceptionable) && "object" == typeof input.options && null !== input.options && _io260(input.options, _exceptionable) && "object" == typeof input.hooks && null !== input.hooks && _io269(input.hooks, _exceptionable) && (3 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "fileSystem",
                        "options",
                        "hooks"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io253 = (input, _exceptionable = true)=>"object" == typeof input.readFile && null !== input.readFile && _io254(input.readFile, _exceptionable) && "object" == typeof input.readdir && null !== input.readdir && _io255(input.readdir, _exceptionable) && (void 0 === input.readJson || true) && "object" == typeof input.readlink && null !== input.readlink && _io256(input.readlink, _exceptionable) && (void 0 === input.lstat || "object" == typeof input.lstat && null !== input.lstat && _io257(input.lstat, _exceptionable)) && "object" == typeof input.stat && null !== input.stat && _io258(input.stat, _exceptionable) && (void 0 === input.realpath || "object" == typeof input.realpath && null !== input.realpath && _io259(input.realpath, _exceptionable)) && (4 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "readFile",
                        "readdir",
                        "readJson",
                        "readlink",
                        "lstat",
                        "stat",
                        "realpath"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io254 = (input, _exceptionable = true)=>"number" == typeof input.length && true && "object" == typeof input.caller && null !== input.caller && _io33(input.caller, _exceptionable) && "string" == typeof input.name && (5 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "prototype",
                        "length",
                        "arguments",
                        "caller",
                        "name"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io255 = (input, _exceptionable = true)=>"number" == typeof input.length && true && "object" == typeof input.caller && null !== input.caller && _io33(input.caller, _exceptionable) && "string" == typeof input.name && (5 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "prototype",
                        "length",
                        "arguments",
                        "caller",
                        "name"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io256 = (input, _exceptionable = true)=>"number" == typeof input.length && true && "object" == typeof input.caller && null !== input.caller && _io33(input.caller, _exceptionable) && "string" == typeof input.name && (5 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "prototype",
                        "length",
                        "arguments",
                        "caller",
                        "name"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io257 = (input, _exceptionable = true)=>"number" == typeof input.length && true && "object" == typeof input.caller && null !== input.caller && _io33(input.caller, _exceptionable) && "string" == typeof input.name && (5 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "prototype",
                        "length",
                        "arguments",
                        "caller",
                        "name"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io258 = (input, _exceptionable = true)=>"number" == typeof input.length && true && "object" == typeof input.caller && null !== input.caller && _io33(input.caller, _exceptionable) && "string" == typeof input.name && (5 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "prototype",
                        "length",
                        "arguments",
                        "caller",
                        "name"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io259 = (input, _exceptionable = true)=>"number" == typeof input.length && true && "object" == typeof input.caller && null !== input.caller && _io33(input.caller, _exceptionable) && "string" == typeof input.name && (5 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "prototype",
                        "length",
                        "arguments",
                        "caller",
                        "name"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io260 = (input, _exceptionable = true)=>Array.isArray(input.alias) && input.alias.every((elem, _index227)=>"object" == typeof elem && null !== elem && _io261(elem, _exceptionable)) && Array.isArray(input.fallback) && input.fallback.every((elem, _index228)=>"object" == typeof elem && null !== elem && _io261(elem, _exceptionable)) && input.aliasFields instanceof Set && (()=>[
                        ...input.aliasFields
                    ].every((elem, _index229)=>null != elem && ("string" == typeof elem || Array.isArray(elem) && elem.every((elem, _index230)=>"string" == typeof elem))))() && Array.isArray(input.extensionAlias) && input.extensionAlias.every((elem, _index231)=>"object" == typeof elem && null !== elem && _io262(elem, _exceptionable)) && true && "boolean" == typeof input.cacheWithContext && input.conditionNames instanceof Set && (()=>[
                        ...input.conditionNames
                    ].every((elem, _index232)=>"string" == typeof elem))() && Array.isArray(input.descriptionFiles) && input.descriptionFiles.every((elem, _index233)=>"string" == typeof elem) && "boolean" == typeof input.enforceExtension && input.exportsFields instanceof Set && (()=>[
                        ...input.exportsFields
                    ].every((elem, _index234)=>null != elem && ("string" == typeof elem || Array.isArray(elem) && elem.every((elem, _index235)=>"string" == typeof elem))))() && input.importsFields instanceof Set && (()=>[
                        ...input.importsFields
                    ].every((elem, _index236)=>null != elem && ("string" == typeof elem || Array.isArray(elem) && elem.every((elem, _index237)=>"string" == typeof elem))))() && input.extensions instanceof Set && (()=>[
                        ...input.extensions
                    ].every((elem, _index238)=>"string" == typeof elem))() && "object" == typeof input.fileSystem && null !== input.fileSystem && _io253(input.fileSystem, _exceptionable) && null !== input.unsafeCache && void 0 !== input.unsafeCache && (false === input.unsafeCache || "object" == typeof input.unsafeCache && null !== input.unsafeCache && false === Array.isArray(input.unsafeCache) && _io263(input.unsafeCache, _exceptionable)) && "boolean" == typeof input.symlinks && (void 0 === input.resolver || "object" == typeof input.resolver && null !== input.resolver && _io252(input.resolver, _exceptionable)) && Array.isArray(input.modules) && input.modules.every((elem, _index239)=>null != elem && ("string" == typeof elem || Array.isArray(elem) && elem.every((elem, _index240)=>"string" == typeof elem))) && Array.isArray(input.mainFields) && input.mainFields.every((elem, _index241)=>"object" == typeof elem && null !== elem && _io266(elem, _exceptionable)) && input.mainFiles instanceof Set && (()=>[
                        ...input.mainFiles
                    ].every((elem, _index242)=>"string" == typeof elem))() && Array.isArray(input.plugins) && input.plugins.every((elem, _index243)=>null == elem || "function" == typeof elem || false === elem || "" === elem || 0 === elem || "object" == typeof elem && null !== elem && _io267(elem, _exceptionable)) && (null === input.pnpApi || "object" == typeof input.pnpApi && null !== input.pnpApi && _io268(input.pnpApi, _exceptionable)) && input.roots instanceof Set && (()=>[
                        ...input.roots
                    ].every((elem, _index244)=>"string" == typeof elem))() && "boolean" == typeof input.fullySpecified && "boolean" == typeof input.resolveToContext && input.restrictions instanceof Set && (()=>[
                        ...input.restrictions
                    ].every((elem, _index245)=>null != elem && ("string" == typeof elem || elem instanceof RegExp)))() && "boolean" == typeof input.preferRelative && "boolean" == typeof input.preferAbsolute && (26 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "alias",
                        "fallback",
                        "aliasFields",
                        "extensionAlias",
                        "cachePredicate",
                        "cacheWithContext",
                        "conditionNames",
                        "descriptionFiles",
                        "enforceExtension",
                        "exportsFields",
                        "importsFields",
                        "extensions",
                        "fileSystem",
                        "unsafeCache",
                        "symlinks",
                        "resolver",
                        "modules",
                        "mainFields",
                        "mainFiles",
                        "plugins",
                        "pnpApi",
                        "roots",
                        "fullySpecified",
                        "resolveToContext",
                        "restrictions",
                        "preferRelative",
                        "preferAbsolute"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io261 = (input, _exceptionable = true)=>null !== input.alias && void 0 !== input.alias && (false === input.alias || "string" == typeof input.alias || Array.isArray(input.alias) && input.alias.every((elem, _index246)=>"string" == typeof elem)) && "string" == typeof input.name && (void 0 === input.onlyModule || "boolean" == typeof input.onlyModule) && (2 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "alias",
                        "name",
                        "onlyModule"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io262 = (input, _exceptionable = true)=>null !== input.alias && void 0 !== input.alias && ("string" == typeof input.alias || Array.isArray(input.alias) && input.alias.every((elem, _index247)=>"string" == typeof elem)) && "string" == typeof input.extension && (2 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "alias",
                        "extension"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io263 = (input, _exceptionable = true)=>Object.keys(input).every((key)=>{
                    const value = input[key];
                    if (void 0 === value) return true;
                    return null !== value && (void 0 === value || Array.isArray(value) && value.every((elem, _index248)=>"object" == typeof elem && null !== elem && _io264(elem, _exceptionable)) || "object" == typeof value && null !== value && _io264(value, _exceptionable));
                });
            const _io264 = (input, _exceptionable = true)=>(false === input.path || "string" == typeof input.path) && (void 0 === input.context || "object" == typeof input.context && null !== input.context && false === Array.isArray(input.context) && _io31(input.context, _exceptionable)) && (void 0 === input.descriptionFilePath || "string" == typeof input.descriptionFilePath) && (void 0 === input.descriptionFileRoot || "string" == typeof input.descriptionFileRoot) && (void 0 === input.descriptionFileData || "object" == typeof input.descriptionFileData && null !== input.descriptionFileData && false === Array.isArray(input.descriptionFileData) && _io265(input.descriptionFileData, _exceptionable)) && (void 0 === input.relativePath || "string" == typeof input.relativePath) && (void 0 === input.ignoreSymlinks || "boolean" == typeof input.ignoreSymlinks) && (void 0 === input.fullySpecified || "boolean" == typeof input.fullySpecified) && (void 0 === input.__innerRequest || "string" == typeof input.__innerRequest) && (void 0 === input.__innerRequest_request || "string" == typeof input.__innerRequest_request) && (void 0 === input.__innerRequest_relativePath || "string" == typeof input.__innerRequest_relativePath) && (void 0 === input.request || "string" == typeof input.request) && (void 0 === input.query || "string" == typeof input.query) && (void 0 === input.fragment || "string" == typeof input.fragment) && (void 0 === input.directory || "boolean" == typeof input.directory) && (void 0 === input["module"] || "boolean" == typeof input["module"]) && (void 0 === input.file || "boolean" == typeof input.file) && (void 0 === input.internal || "boolean" == typeof input.internal) && (1 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "path",
                        "context",
                        "descriptionFilePath",
                        "descriptionFileRoot",
                        "descriptionFileData",
                        "relativePath",
                        "ignoreSymlinks",
                        "fullySpecified",
                        "__innerRequest",
                        "__innerRequest_request",
                        "__innerRequest_relativePath",
                        "request",
                        "query",
                        "fragment",
                        "directory",
                        "module",
                        "file",
                        "internal"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io265 = (input, _exceptionable = true)=>Object.keys(input).every((key)=>{
                    const value = input[key];
                    if (void 0 === value) return true;
                    return null == value || "string" == typeof value || "number" == typeof value || "boolean" == typeof value || Array.isArray(value) && value.every((elem, _index249)=>void 0 !== elem && (null === elem || "string" == typeof elem || "number" == typeof elem || "boolean" == typeof elem || Array.isArray(elem) && (_ia3(elem, _exceptionable) || false) || "object" == typeof elem && null !== elem && false === Array.isArray(elem) && _io265(elem, _exceptionable))) || "object" == typeof value && null !== value && false === Array.isArray(value) && _io265(value, _exceptionable);
                });
            const _io266 = (input, _exceptionable = true)=>Array.isArray(input.name) && input.name.every((elem, _index250)=>"string" == typeof elem) && "boolean" == typeof input.forceRelative && (2 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "name",
                        "forceRelative"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io267 = (input, _exceptionable = true)=>1 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "apply"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                });
            const _io268 = (input, _exceptionable = true)=>1 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "resolveToUnqualified"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                });
            const _io269 = (input, _exceptionable = true)=>"object" == typeof input.resolveStep && null !== input.resolveStep && _io270(input.resolveStep, _exceptionable) && "object" == typeof input.noResolve && null !== input.noResolve && _io273(input.noResolve, _exceptionable) && "object" == typeof input.resolve && null !== input.resolve && _io275(input.resolve, _exceptionable) && "object" == typeof input.result && null !== input.result && _io277(input.result, _exceptionable) && (4 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "resolveStep",
                        "noResolve",
                        "resolve",
                        "result"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io270 = (input, _exceptionable = true)=>(void 0 === input.name || "string" == typeof input.name) && Array.isArray(input.interceptors) && input.interceptors.every((elem, _index251)=>"object" == typeof elem && null !== elem && false === Array.isArray(elem) && _io271(elem, _exceptionable)) && Array.isArray(input.taps) && input.taps.every((elem, _index252)=>"object" == typeof elem && null !== elem && _io272(elem, _exceptionable)) && (2 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "name",
                        "interceptors",
                        "taps"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io271 = (input, _exceptionable = true)=>(void 0 === input.name || "string" == typeof input.name) && (void 0 === input.tap || true) && (void 0 === input.call || true) && (void 0 === input.loop || true) && (void 0 === input.error || true) && (void 0 === input.result || true) && (void 0 === input.done || true) && (void 0 === input.register || true) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "name",
                        "tap",
                        "call",
                        "loop",
                        "error",
                        "result",
                        "done",
                        "register"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io272 = (input, _exceptionable = true)=>(void 0 === input.before || "string" == typeof input.before) && (void 0 === input.stage || "number" == typeof input.stage) && "string" == typeof input.name && ("promise" === input.type || "async" === input.type || "sync" === input.type) && "object" == typeof input.fn && null !== input.fn && _io33(input.fn, _exceptionable) && (3 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "before",
                        "stage",
                        "name",
                        "type",
                        "fn"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io273 = (input, _exceptionable = true)=>(void 0 === input.name || "string" == typeof input.name) && Array.isArray(input.interceptors) && input.interceptors.every((elem, _index253)=>"object" == typeof elem && null !== elem && false === Array.isArray(elem) && _io274(elem, _exceptionable)) && Array.isArray(input.taps) && input.taps.every((elem, _index254)=>"object" == typeof elem && null !== elem && _io272(elem, _exceptionable)) && (2 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "name",
                        "interceptors",
                        "taps"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io274 = (input, _exceptionable = true)=>(void 0 === input.name || "string" == typeof input.name) && (void 0 === input.tap || true) && (void 0 === input.call || true) && (void 0 === input.loop || true) && (void 0 === input.error || true) && (void 0 === input.result || true) && (void 0 === input.done || true) && (void 0 === input.register || true) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "name",
                        "tap",
                        "call",
                        "loop",
                        "error",
                        "result",
                        "done",
                        "register"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io275 = (input, _exceptionable = true)=>(void 0 === input.name || "string" == typeof input.name) && Array.isArray(input.interceptors) && input.interceptors.every((elem, _index255)=>"object" == typeof elem && null !== elem && false === Array.isArray(elem) && _io276(elem, _exceptionable)) && Array.isArray(input.taps) && input.taps.every((elem, _index256)=>"object" == typeof elem && null !== elem && _io272(elem, _exceptionable)) && (2 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "name",
                        "interceptors",
                        "taps"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io276 = (input, _exceptionable = true)=>(void 0 === input.name || "string" == typeof input.name) && (void 0 === input.tap || true) && (void 0 === input.call || true) && (void 0 === input.loop || true) && (void 0 === input.error || true) && (void 0 === input.result || true) && (void 0 === input.done || true) && (void 0 === input.register || true) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "name",
                        "tap",
                        "call",
                        "loop",
                        "error",
                        "result",
                        "done",
                        "register"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io277 = (input, _exceptionable = true)=>(void 0 === input.name || "string" == typeof input.name) && Array.isArray(input.interceptors) && input.interceptors.every((elem, _index257)=>"object" == typeof elem && null !== elem && false === Array.isArray(elem) && _io278(elem, _exceptionable)) && Array.isArray(input.taps) && input.taps.every((elem, _index258)=>"object" == typeof elem && null !== elem && _io272(elem, _exceptionable)) && (2 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "name",
                        "interceptors",
                        "taps"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io278 = (input, _exceptionable = true)=>(void 0 === input.name || "string" == typeof input.name) && (void 0 === input.tap || true) && (void 0 === input.call || true) && (void 0 === input.loop || true) && (void 0 === input.error || true) && (void 0 === input.result || true) && (void 0 === input.done || true) && (void 0 === input.register || true) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "name",
                        "tap",
                        "call",
                        "loop",
                        "error",
                        "result",
                        "done",
                        "register"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io279 = (input, _exceptionable = true)=>Object.keys(input).every((key)=>{
                    input[key];
                    return true;
                });
            const _io280 = (input, _exceptionable = true)=>(void 0 === input.ident || "string" == typeof input.ident) && (void 0 === input.loader || "string" == typeof input.loader) && null !== input.options && (void 0 === input.options || "string" == typeof input.options || "object" == typeof input.options && null !== input.options && false === Array.isArray(input.options) && _io281(input.options, _exceptionable)) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "ident",
                        "loader",
                        "options"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io281 = (input, _exceptionable = true)=>Object.keys(input).every((key)=>{
                    input[key];
                    return true;
                });
            const _io282 = (input, _exceptionable = true)=>(void 0 === input.ident || "string" == typeof input.ident) && (void 0 === input.loader || "string" == typeof input.loader) && null !== input.options && (void 0 === input.options || "string" == typeof input.options || "object" == typeof input.options && null !== input.options && false === Array.isArray(input.options) && _io283(input.options, _exceptionable)) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "ident",
                        "loader",
                        "options"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io283 = (input, _exceptionable = true)=>Object.keys(input).every((key)=>{
                    input[key];
                    return true;
                });
            const _io284 = (input, _exceptionable = true)=>Object.keys(input).every((key)=>{
                    const value = input[key];
                    if (void 0 === value) return true;
                    return null != value && ("function" == typeof value || "string" == typeof value || value instanceof RegExp || Array.isArray(value) && value.every((elem, _index259)=>null != elem && ("function" == typeof elem || "string" == typeof elem || elem instanceof RegExp || Array.isArray(elem) && (_ia1(elem, _exceptionable) || false) || "object" == typeof elem && null !== elem && false === Array.isArray(elem) && _io225(elem, _exceptionable))) || "object" == typeof value && null !== value && false === Array.isArray(value) && _io225(value, _exceptionable));
                });
            const _io285 = (input, _exceptionable = true)=>(void 0 === input.asset || "object" == typeof input.asset && null !== input.asset && false === Array.isArray(input.asset) && _io286(input.asset, _exceptionable)) && (void 0 === input["asset/inline"] || "object" == typeof input["asset/inline"] && null !== input["asset/inline"] && false === Array.isArray(input["asset/inline"]) && _io288(input["asset/inline"], _exceptionable)) && (void 0 === input["asset/resource"] || "object" == typeof input["asset/resource"] && null !== input["asset/resource"] && false === Array.isArray(input["asset/resource"]) && _io289(input["asset/resource"], _exceptionable)) && (void 0 === input.css || "object" == typeof input.css && null !== input.css && false === Array.isArray(input.css) && _io290(input.css, _exceptionable)) && (void 0 === input["css/auto"] || "object" == typeof input["css/auto"] && null !== input["css/auto"] && false === Array.isArray(input["css/auto"]) && _io291(input["css/auto"], _exceptionable)) && (void 0 === input["css/global"] || "object" == typeof input["css/global"] && null !== input["css/global"] && false === Array.isArray(input["css/global"]) && _io292(input["css/global"], _exceptionable)) && (void 0 === input["css/module"] || "object" == typeof input["css/module"] && null !== input["css/module"] && false === Array.isArray(input["css/module"]) && _io293(input["css/module"], _exceptionable)) && (void 0 === input.javascript || "object" == typeof input.javascript && null !== input.javascript && false === Array.isArray(input.javascript) && _io294(input.javascript, _exceptionable)) && (void 0 === input["javascript/auto"] || "object" == typeof input["javascript/auto"] && null !== input["javascript/auto"] && false === Array.isArray(input["javascript/auto"]) && _io294(input["javascript/auto"], _exceptionable)) && (void 0 === input["javascript/dynamic"] || "object" == typeof input["javascript/dynamic"] && null !== input["javascript/dynamic"] && false === Array.isArray(input["javascript/dynamic"]) && _io294(input["javascript/dynamic"], _exceptionable)) && (void 0 === input["javascript/esm"] || "object" == typeof input["javascript/esm"] && null !== input["javascript/esm"] && false === Array.isArray(input["javascript/esm"]) && _io294(input["javascript/esm"], _exceptionable)) && (void 0 === input.json || "object" == typeof input.json && null !== input.json && false === Array.isArray(input.json) && _io295(input.json, _exceptionable)) && Object.keys(input).every((key)=>{
                    if ([
                        "asset",
                        "asset/inline",
                        "asset/resource",
                        "css",
                        "css/auto",
                        "css/global",
                        "css/module",
                        "javascript",
                        "javascript/auto",
                        "javascript/dynamic",
                        "javascript/esm",
                        "json"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return "object" == typeof value && null !== value && false === Array.isArray(value) && _io296(value, _exceptionable);
                });
            const _io286 = (input, _exceptionable = true)=>(void 0 === input.binary || "boolean" == typeof input.binary) && null !== input.dataUrl && (void 0 === input.dataUrl || "function" == typeof input.dataUrl || "object" == typeof input.dataUrl && null !== input.dataUrl && false === Array.isArray(input.dataUrl) && _io287(input.dataUrl, _exceptionable)) && (void 0 === input.emit || "boolean" == typeof input.emit) && null !== input.filename && (void 0 === input.filename || "function" == typeof input.filename || "string" == typeof input.filename) && null !== input.outputPath && (void 0 === input.outputPath || "function" == typeof input.outputPath || "string" == typeof input.outputPath) && null !== input.publicPath && (void 0 === input.publicPath || "function" == typeof input.publicPath || "string" == typeof input.publicPath) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "binary",
                        "dataUrl",
                        "emit",
                        "filename",
                        "outputPath",
                        "publicPath"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io287 = (input, _exceptionable = true)=>(void 0 === input.encoding || false === input.encoding || "base64" === input.encoding) && (void 0 === input.mimetype || "string" == typeof input.mimetype) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "encoding",
                        "mimetype"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io288 = (input, _exceptionable = true)=>(void 0 === input.binary || "boolean" == typeof input.binary) && null !== input.dataUrl && (void 0 === input.dataUrl || "function" == typeof input.dataUrl || "object" == typeof input.dataUrl && null !== input.dataUrl && false === Array.isArray(input.dataUrl) && _io287(input.dataUrl, _exceptionable)) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "binary",
                        "dataUrl"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io289 = (input, _exceptionable = true)=>(void 0 === input.binary || "boolean" == typeof input.binary) && (void 0 === input.emit || "boolean" == typeof input.emit) && null !== input.filename && (void 0 === input.filename || "function" == typeof input.filename || "string" == typeof input.filename) && null !== input.outputPath && (void 0 === input.outputPath || "function" == typeof input.outputPath || "string" == typeof input.outputPath) && null !== input.publicPath && (void 0 === input.publicPath || "function" == typeof input.publicPath || "string" == typeof input.publicPath) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "binary",
                        "emit",
                        "filename",
                        "outputPath",
                        "publicPath"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io290 = (input, _exceptionable = true)=>(void 0 === input.esModule || "boolean" == typeof input.esModule) && (void 0 === input.exportsOnly || "boolean" == typeof input.exportsOnly) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "esModule",
                        "exportsOnly"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io291 = (input, _exceptionable = true)=>(void 0 === input.esModule || "boolean" == typeof input.esModule) && null !== input.exportsConvention && (void 0 === input.exportsConvention || "function" == typeof input.exportsConvention || "as-is" === input.exportsConvention || "camel-case" === input.exportsConvention || "camel-case-only" === input.exportsConvention || "dashes" === input.exportsConvention || "dashes-only" === input.exportsConvention) && (void 0 === input.exportsOnly || "boolean" == typeof input.exportsOnly) && (void 0 === input.localIdentName || "string" == typeof input.localIdentName) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "esModule",
                        "exportsConvention",
                        "exportsOnly",
                        "localIdentName"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io292 = (input, _exceptionable = true)=>(void 0 === input.esModule || "boolean" == typeof input.esModule) && null !== input.exportsConvention && (void 0 === input.exportsConvention || "function" == typeof input.exportsConvention || "as-is" === input.exportsConvention || "camel-case" === input.exportsConvention || "camel-case-only" === input.exportsConvention || "dashes" === input.exportsConvention || "dashes-only" === input.exportsConvention) && (void 0 === input.exportsOnly || "boolean" == typeof input.exportsOnly) && (void 0 === input.localIdentName || "string" == typeof input.localIdentName) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "esModule",
                        "exportsConvention",
                        "exportsOnly",
                        "localIdentName"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io293 = (input, _exceptionable = true)=>(void 0 === input.esModule || "boolean" == typeof input.esModule) && null !== input.exportsConvention && (void 0 === input.exportsConvention || "function" == typeof input.exportsConvention || "as-is" === input.exportsConvention || "camel-case" === input.exportsConvention || "camel-case-only" === input.exportsConvention || "dashes" === input.exportsConvention || "dashes-only" === input.exportsConvention) && (void 0 === input.exportsOnly || "boolean" == typeof input.exportsOnly) && (void 0 === input.localIdentName || "string" == typeof input.localIdentName) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "esModule",
                        "exportsConvention",
                        "exportsOnly",
                        "localIdentName"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io294 = (input, _exceptionable = true)=>0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                });
            const _io295 = (input, _exceptionable = true)=>(void 0 === input.JSONParse || "boolean" == typeof input.JSONParse) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "JSONParse"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io296 = (input, _exceptionable = true)=>Object.keys(input).every((key)=>{
                    input[key];
                    return true;
                });
            const _io297 = (input, _exceptionable = true)=>(void 0 === input.asset || "object" == typeof input.asset && null !== input.asset && false === Array.isArray(input.asset) && _io298(input.asset, _exceptionable)) && (void 0 === input["asset/inline"] || "object" == typeof input["asset/inline"] && null !== input["asset/inline"] && false === Array.isArray(input["asset/inline"]) && _io300(input["asset/inline"], _exceptionable)) && (void 0 === input["asset/resource"] || "object" == typeof input["asset/resource"] && null !== input["asset/resource"] && false === Array.isArray(input["asset/resource"]) && _io300(input["asset/resource"], _exceptionable)) && (void 0 === input["asset/source"] || "object" == typeof input["asset/source"] && null !== input["asset/source"] && false === Array.isArray(input["asset/source"]) && _io300(input["asset/source"], _exceptionable)) && (void 0 === input.css || "object" == typeof input.css && null !== input.css && false === Array.isArray(input.css) && _io301(input.css, _exceptionable)) && (void 0 === input["css/auto"] || "object" == typeof input["css/auto"] && null !== input["css/auto"] && false === Array.isArray(input["css/auto"]) && _io302(input["css/auto"], _exceptionable)) && (void 0 === input["css/global"] || "object" == typeof input["css/global"] && null !== input["css/global"] && false === Array.isArray(input["css/global"]) && _io303(input["css/global"], _exceptionable)) && (void 0 === input["css/module"] || "object" == typeof input["css/module"] && null !== input["css/module"] && false === Array.isArray(input["css/module"]) && _io304(input["css/module"], _exceptionable)) && (void 0 === input.javascript || "object" == typeof input.javascript && null !== input.javascript && false === Array.isArray(input.javascript) && _io305(input.javascript, _exceptionable)) && (void 0 === input["javascript/auto"] || "object" == typeof input["javascript/auto"] && null !== input["javascript/auto"] && false === Array.isArray(input["javascript/auto"]) && _io305(input["javascript/auto"], _exceptionable)) && (void 0 === input["javascript/dynamic"] || "object" == typeof input["javascript/dynamic"] && null !== input["javascript/dynamic"] && false === Array.isArray(input["javascript/dynamic"]) && _io305(input["javascript/dynamic"], _exceptionable)) && (void 0 === input["javascript/esm"] || "object" == typeof input["javascript/esm"] && null !== input["javascript/esm"] && false === Array.isArray(input["javascript/esm"]) && _io305(input["javascript/esm"], _exceptionable)) && (void 0 === input.json || "object" == typeof input.json && null !== input.json && false === Array.isArray(input.json) && _io308(input.json, _exceptionable)) && Object.keys(input).every((key)=>{
                    if ([
                        "asset",
                        "asset/inline",
                        "asset/resource",
                        "asset/source",
                        "css",
                        "css/auto",
                        "css/global",
                        "css/module",
                        "javascript",
                        "javascript/auto",
                        "javascript/dynamic",
                        "javascript/esm",
                        "json"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return "object" == typeof value && null !== value && false === Array.isArray(value) && _io309(value, _exceptionable);
                });
            const _io298 = (input, _exceptionable = true)=>null !== input.dataUrlCondition && (void 0 === input.dataUrlCondition || "function" == typeof input.dataUrlCondition || "object" == typeof input.dataUrlCondition && null !== input.dataUrlCondition && false === Array.isArray(input.dataUrlCondition) && _io299(input.dataUrlCondition, _exceptionable)) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "dataUrlCondition"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io299 = (input, _exceptionable = true)=>(void 0 === input.maxSize || "number" == typeof input.maxSize) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "maxSize"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io300 = (input, _exceptionable = true)=>0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                });
            const _io301 = (input, _exceptionable = true)=>(void 0 === input["import"] || "boolean" == typeof input["import"]) && (void 0 === input.namedExports || "boolean" == typeof input.namedExports) && (void 0 === input.url || "boolean" == typeof input.url) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "import",
                        "namedExports",
                        "url"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io302 = (input, _exceptionable = true)=>(void 0 === input["import"] || "boolean" == typeof input["import"]) && (void 0 === input.namedExports || "boolean" == typeof input.namedExports) && (void 0 === input.url || "boolean" == typeof input.url) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "import",
                        "namedExports",
                        "url"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io303 = (input, _exceptionable = true)=>(void 0 === input["import"] || "boolean" == typeof input["import"]) && (void 0 === input.namedExports || "boolean" == typeof input.namedExports) && (void 0 === input.url || "boolean" == typeof input.url) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "import",
                        "namedExports",
                        "url"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io304 = (input, _exceptionable = true)=>(void 0 === input["import"] || "boolean" == typeof input["import"]) && (void 0 === input.namedExports || "boolean" == typeof input.namedExports) && (void 0 === input.url || "boolean" == typeof input.url) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "import",
                        "namedExports",
                        "url"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io305 = (input, _exceptionable = true)=>null !== input.amd && (void 0 === input.amd || false === input.amd || "object" == typeof input.amd && null !== input.amd && false === Array.isArray(input.amd) && _io306(input.amd, _exceptionable)) && (void 0 === input.browserify || "boolean" == typeof input.browserify) && (void 0 === input.commonjs || "boolean" == typeof input.commonjs) && (void 0 === input.commonjsMagicComments || "boolean" == typeof input.commonjsMagicComments) && (void 0 === input.createRequire || "string" == typeof input.createRequire || "boolean" == typeof input.createRequire) && (void 0 === input.deferImport || "boolean" == typeof input.deferImport) && (void 0 === input.dynamicImportFetchPriority || false === input.dynamicImportFetchPriority || "auto" === input.dynamicImportFetchPriority || "low" === input.dynamicImportFetchPriority || "high" === input.dynamicImportFetchPriority) && (void 0 === input.dynamicImportMode || "weak" === input.dynamicImportMode || "eager" === input.dynamicImportMode || "lazy" === input.dynamicImportMode || "lazy-once" === input.dynamicImportMode) && (void 0 === input.dynamicImportPrefetch || "number" == typeof input.dynamicImportPrefetch || "boolean" == typeof input.dynamicImportPrefetch) && (void 0 === input.dynamicImportPreload || "number" == typeof input.dynamicImportPreload || "boolean" == typeof input.dynamicImportPreload) && (void 0 === input.dynamicUrl || "boolean" == typeof input.dynamicUrl) && (void 0 === input.exportsPresence || false === input.exportsPresence || "auto" === input.exportsPresence || "error" === input.exportsPresence || "warn" === input.exportsPresence) && (void 0 === input.exprContextCritical || "boolean" == typeof input.exprContextCritical) && (void 0 === input.exprContextRecursive || "boolean" == typeof input.exprContextRecursive) && null !== input.exprContextRegExp && (void 0 === input.exprContextRegExp || "boolean" == typeof input.exprContextRegExp || input.exprContextRegExp instanceof RegExp) && (void 0 === input.exprContextRequest || "string" == typeof input.exprContextRequest) && (void 0 === input.harmony || "boolean" == typeof input.harmony) && (void 0 === input["import"] || "boolean" == typeof input["import"]) && (void 0 === input.importExportsPresence || false === input.importExportsPresence || "auto" === input.importExportsPresence || "error" === input.importExportsPresence || "warn" === input.importExportsPresence) && (void 0 === input.importMeta || "boolean" == typeof input.importMeta) && (void 0 === input.importMetaContext || "boolean" == typeof input.importMetaContext) && null !== input.node && (void 0 === input.node || false === input.node || "object" == typeof input.node && null !== input.node && false === Array.isArray(input.node) && _io307(input.node, _exceptionable)) && (void 0 === input.overrideStrict || "strict" === input.overrideStrict || "non-strict" === input.overrideStrict) && (void 0 === input.reexportExportsPresence || false === input.reexportExportsPresence || "auto" === input.reexportExportsPresence || "error" === input.reexportExportsPresence || "warn" === input.reexportExportsPresence) && (void 0 === input.requireContext || "boolean" == typeof input.requireContext) && (void 0 === input.requireEnsure || "boolean" == typeof input.requireEnsure) && (void 0 === input.requireInclude || "boolean" == typeof input.requireInclude) && (void 0 === input.requireJs || "boolean" == typeof input.requireJs) && (void 0 === input.strictExportPresence || "boolean" == typeof input.strictExportPresence) && (void 0 === input.strictThisContextOnImports || "boolean" == typeof input.strictThisContextOnImports) && (void 0 === input.system || "boolean" == typeof input.system) && (void 0 === input.unknownContextCritical || "boolean" == typeof input.unknownContextCritical) && (void 0 === input.unknownContextRecursive || "boolean" == typeof input.unknownContextRecursive) && null !== input.unknownContextRegExp && (void 0 === input.unknownContextRegExp || "boolean" == typeof input.unknownContextRegExp || input.unknownContextRegExp instanceof RegExp) && (void 0 === input.unknownContextRequest || "string" == typeof input.unknownContextRequest) && (void 0 === input.url || "relative" === input.url || "boolean" == typeof input.url) && null !== input.worker && (void 0 === input.worker || "boolean" == typeof input.worker || Array.isArray(input.worker) && input.worker.every((elem, _index260)=>"string" == typeof elem)) && (void 0 === input.wrappedContextCritical || "boolean" == typeof input.wrappedContextCritical) && (void 0 === input.wrappedContextRecursive || "boolean" == typeof input.wrappedContextRecursive) && (void 0 === input.wrappedContextRegExp || input.wrappedContextRegExp instanceof RegExp) && Object.keys(input).every((key)=>{
                    if ([
                        "amd",
                        "browserify",
                        "commonjs",
                        "commonjsMagicComments",
                        "createRequire",
                        "deferImport",
                        "dynamicImportFetchPriority",
                        "dynamicImportMode",
                        "dynamicImportPrefetch",
                        "dynamicImportPreload",
                        "dynamicUrl",
                        "exportsPresence",
                        "exprContextCritical",
                        "exprContextRecursive",
                        "exprContextRegExp",
                        "exprContextRequest",
                        "harmony",
                        "import",
                        "importExportsPresence",
                        "importMeta",
                        "importMetaContext",
                        "node",
                        "overrideStrict",
                        "reexportExportsPresence",
                        "requireContext",
                        "requireEnsure",
                        "requireInclude",
                        "requireJs",
                        "strictExportPresence",
                        "strictThisContextOnImports",
                        "system",
                        "unknownContextCritical",
                        "unknownContextRecursive",
                        "unknownContextRegExp",
                        "unknownContextRequest",
                        "url",
                        "worker",
                        "wrappedContextCritical",
                        "wrappedContextRecursive",
                        "wrappedContextRegExp"
                    ].some((prop)=>key === prop)) return true;
                    input[key];
                    return true;
                });
            const _io306 = (input, _exceptionable = true)=>Object.keys(input).every((key)=>{
                    input[key];
                    return true;
                });
            const _io307 = (input, _exceptionable = true)=>(void 0 === input.__dirname || "warn-mock" === input.__dirname || "mock" === input.__dirname || "eval-only" === input.__dirname || "node-module" === input.__dirname || "boolean" == typeof input.__dirname) && (void 0 === input.__filename || "warn-mock" === input.__filename || "mock" === input.__filename || "eval-only" === input.__filename || "node-module" === input.__filename || "boolean" == typeof input.__filename) && (void 0 === input.global || "warn" === input.global || "boolean" == typeof input.global) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "__dirname",
                        "__filename",
                        "global"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io308 = (input, _exceptionable = true)=>(void 0 === input.exportsDepth || "number" == typeof input.exportsDepth) && (void 0 === input.parse || true) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "exportsDepth",
                        "parse"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io309 = (input, _exceptionable = true)=>Object.keys(input).every((key)=>{
                    input[key];
                    return true;
                });
            const _io310 = (input, _exceptionable = true)=>(void 0 === input.avoidEntryIife || "boolean" == typeof input.avoidEntryIife) && (void 0 === input.checkWasmTypes || "boolean" == typeof input.checkWasmTypes) && (void 0 === input.chunkIds || false === input.chunkIds || "named" === input.chunkIds || "natural" === input.chunkIds || "deterministic" === input.chunkIds || "size" === input.chunkIds || "total-size" === input.chunkIds) && (void 0 === input.concatenateModules || "boolean" == typeof input.concatenateModules) && (void 0 === input.emitOnErrors || "boolean" == typeof input.emitOnErrors) && (void 0 === input.flagIncludedChunks || "boolean" == typeof input.flagIncludedChunks) && (void 0 === input.innerGraph || "boolean" == typeof input.innerGraph) && (void 0 === input.mangleExports || "deterministic" === input.mangleExports || "size" === input.mangleExports || "boolean" == typeof input.mangleExports) && (void 0 === input.mangleWasmImports || "boolean" == typeof input.mangleWasmImports) && (void 0 === input.mergeDuplicateChunks || "boolean" == typeof input.mergeDuplicateChunks) && (void 0 === input.minimize || "boolean" == typeof input.minimize) && (void 0 === input.minimizer || Array.isArray(input.minimizer) && input.minimizer.every((elem, _index261)=>null == elem || "function" == typeof elem || false === elem || "" === elem || "..." === elem || 0 === elem || "object" == typeof elem && null !== elem && _io311(elem, _exceptionable))) && (void 0 === input.moduleIds || false === input.moduleIds || "named" === input.moduleIds || "natural" === input.moduleIds || "deterministic" === input.moduleIds || "size" === input.moduleIds || "hashed" === input.moduleIds) && (void 0 === input.noEmitOnErrors || "boolean" == typeof input.noEmitOnErrors) && (void 0 === input.nodeEnv || false === input.nodeEnv || "string" == typeof input.nodeEnv) && (void 0 === input.portableRecords || "boolean" == typeof input.portableRecords) && (void 0 === input.providedExports || "boolean" == typeof input.providedExports) && (void 0 === input.realContentHash || "boolean" == typeof input.realContentHash) && (void 0 === input.removeAvailableModules || "boolean" == typeof input.removeAvailableModules) && (void 0 === input.removeEmptyChunks || "boolean" == typeof input.removeEmptyChunks) && null !== input.runtimeChunk && (void 0 === input.runtimeChunk || "single" === input.runtimeChunk || "multiple" === input.runtimeChunk || "boolean" == typeof input.runtimeChunk || "object" == typeof input.runtimeChunk && null !== input.runtimeChunk && false === Array.isArray(input.runtimeChunk) && _io312(input.runtimeChunk, _exceptionable)) && (void 0 === input.sideEffects || "flag" === input.sideEffects || "boolean" == typeof input.sideEffects) && null !== input.splitChunks && (void 0 === input.splitChunks || false === input.splitChunks || "object" == typeof input.splitChunks && null !== input.splitChunks && false === Array.isArray(input.splitChunks) && _io313(input.splitChunks, _exceptionable)) && (void 0 === input.usedExports || "global" === input.usedExports || "boolean" == typeof input.usedExports) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "avoidEntryIife",
                        "checkWasmTypes",
                        "chunkIds",
                        "concatenateModules",
                        "emitOnErrors",
                        "flagIncludedChunks",
                        "innerGraph",
                        "mangleExports",
                        "mangleWasmImports",
                        "mergeDuplicateChunks",
                        "minimize",
                        "minimizer",
                        "moduleIds",
                        "noEmitOnErrors",
                        "nodeEnv",
                        "portableRecords",
                        "providedExports",
                        "realContentHash",
                        "removeAvailableModules",
                        "removeEmptyChunks",
                        "runtimeChunk",
                        "sideEffects",
                        "splitChunks",
                        "usedExports"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io311 = (input, _exceptionable = true)=>Object.keys(input).every((key)=>{
                    if ([
                        "apply"
                    ].some((prop)=>key === prop)) return true;
                    input[key];
                    return true;
                });
            const _io312 = (input, _exceptionable = true)=>null !== input.name && (void 0 === input.name || "function" == typeof input.name || "string" == typeof input.name) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "name"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io313 = (input, _exceptionable = true)=>(void 0 === input.automaticNameDelimiter || "string" == typeof input.automaticNameDelimiter) && (void 0 === input.cacheGroups || "object" == typeof input.cacheGroups && null !== input.cacheGroups && false === Array.isArray(input.cacheGroups) && _io314(input.cacheGroups, _exceptionable)) && null !== input.chunks && (void 0 === input.chunks || "function" == typeof input.chunks || "all" === input.chunks || "initial" === input.chunks || "async" === input.chunks || input.chunks instanceof RegExp) && (void 0 === input.defaultSizeTypes || Array.isArray(input.defaultSizeTypes) && input.defaultSizeTypes.every((elem, _index262)=>"string" == typeof elem)) && null !== input.enforceSizeThreshold && (void 0 === input.enforceSizeThreshold || "number" == typeof input.enforceSizeThreshold || "object" == typeof input.enforceSizeThreshold && null !== input.enforceSizeThreshold && false === Array.isArray(input.enforceSizeThreshold) && _io323(input.enforceSizeThreshold, _exceptionable)) && (void 0 === input.fallbackCacheGroup || "object" == typeof input.fallbackCacheGroup && null !== input.fallbackCacheGroup && false === Array.isArray(input.fallbackCacheGroup) && _io324(input.fallbackCacheGroup, _exceptionable)) && null !== input.filename && (void 0 === input.filename || "function" == typeof input.filename || "string" == typeof input.filename) && (void 0 === input.hidePathInfo || "boolean" == typeof input.hidePathInfo) && (void 0 === input.maxAsyncRequests || "number" == typeof input.maxAsyncRequests) && null !== input.maxAsyncSize && (void 0 === input.maxAsyncSize || "number" == typeof input.maxAsyncSize || "object" == typeof input.maxAsyncSize && null !== input.maxAsyncSize && false === Array.isArray(input.maxAsyncSize) && _io330(input.maxAsyncSize, _exceptionable)) && (void 0 === input.maxInitialRequests || "number" == typeof input.maxInitialRequests) && null !== input.maxInitialSize && (void 0 === input.maxInitialSize || "number" == typeof input.maxInitialSize || "object" == typeof input.maxInitialSize && null !== input.maxInitialSize && false === Array.isArray(input.maxInitialSize) && _io331(input.maxInitialSize, _exceptionable)) && null !== input.maxSize && (void 0 === input.maxSize || "number" == typeof input.maxSize || "object" == typeof input.maxSize && null !== input.maxSize && false === Array.isArray(input.maxSize) && _io332(input.maxSize, _exceptionable)) && (void 0 === input.minChunks || "number" == typeof input.minChunks) && null !== input.minRemainingSize && (void 0 === input.minRemainingSize || "number" == typeof input.minRemainingSize || "object" == typeof input.minRemainingSize && null !== input.minRemainingSize && false === Array.isArray(input.minRemainingSize) && _io333(input.minRemainingSize, _exceptionable)) && null !== input.minSize && (void 0 === input.minSize || "number" == typeof input.minSize || "object" == typeof input.minSize && null !== input.minSize && false === Array.isArray(input.minSize) && _io334(input.minSize, _exceptionable)) && null !== input.minSizeReduction && (void 0 === input.minSizeReduction || "number" == typeof input.minSizeReduction || "object" == typeof input.minSizeReduction && null !== input.minSizeReduction && false === Array.isArray(input.minSizeReduction) && _io335(input.minSizeReduction, _exceptionable)) && null !== input.name && (void 0 === input.name || "function" == typeof input.name || false === input.name || "string" == typeof input.name) && (void 0 === input.usedExports || "boolean" == typeof input.usedExports) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "automaticNameDelimiter",
                        "cacheGroups",
                        "chunks",
                        "defaultSizeTypes",
                        "enforceSizeThreshold",
                        "fallbackCacheGroup",
                        "filename",
                        "hidePathInfo",
                        "maxAsyncRequests",
                        "maxAsyncSize",
                        "maxInitialRequests",
                        "maxInitialSize",
                        "maxSize",
                        "minChunks",
                        "minRemainingSize",
                        "minSize",
                        "minSizeReduction",
                        "name",
                        "usedExports"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io314 = (input, _exceptionable = true)=>Object.keys(input).every((key)=>{
                    const value = input[key];
                    if (void 0 === value) return true;
                    return null != value && ("function" == typeof value || false === value || "string" == typeof value || value instanceof RegExp || "object" == typeof value && null !== value && false === Array.isArray(value) && _io315(value, _exceptionable));
                });
            const _io315 = (input, _exceptionable = true)=>(void 0 === input.automaticNameDelimiter || "string" == typeof input.automaticNameDelimiter) && null !== input.chunks && (void 0 === input.chunks || "function" == typeof input.chunks || "all" === input.chunks || "initial" === input.chunks || "async" === input.chunks || input.chunks instanceof RegExp) && (void 0 === input.enforce || "boolean" == typeof input.enforce) && null !== input.enforceSizeThreshold && (void 0 === input.enforceSizeThreshold || "number" == typeof input.enforceSizeThreshold || "object" == typeof input.enforceSizeThreshold && null !== input.enforceSizeThreshold && false === Array.isArray(input.enforceSizeThreshold) && _io316(input.enforceSizeThreshold, _exceptionable)) && null !== input.filename && (void 0 === input.filename || "function" == typeof input.filename || "string" == typeof input.filename) && (void 0 === input.idHint || "string" == typeof input.idHint) && null !== input.layer && (void 0 === input.layer || "function" == typeof input.layer || "string" == typeof input.layer || input.layer instanceof RegExp) && (void 0 === input.maxAsyncRequests || "number" == typeof input.maxAsyncRequests) && null !== input.maxAsyncSize && (void 0 === input.maxAsyncSize || "number" == typeof input.maxAsyncSize || "object" == typeof input.maxAsyncSize && null !== input.maxAsyncSize && false === Array.isArray(input.maxAsyncSize) && _io317(input.maxAsyncSize, _exceptionable)) && (void 0 === input.maxInitialRequests || "number" == typeof input.maxInitialRequests) && null !== input.maxInitialSize && (void 0 === input.maxInitialSize || "number" == typeof input.maxInitialSize || "object" == typeof input.maxInitialSize && null !== input.maxInitialSize && false === Array.isArray(input.maxInitialSize) && _io318(input.maxInitialSize, _exceptionable)) && null !== input.maxSize && (void 0 === input.maxSize || "number" == typeof input.maxSize || "object" == typeof input.maxSize && null !== input.maxSize && false === Array.isArray(input.maxSize) && _io319(input.maxSize, _exceptionable)) && (void 0 === input.minChunks || "number" == typeof input.minChunks) && null !== input.minRemainingSize && (void 0 === input.minRemainingSize || "number" == typeof input.minRemainingSize || "object" == typeof input.minRemainingSize && null !== input.minRemainingSize && false === Array.isArray(input.minRemainingSize) && _io320(input.minRemainingSize, _exceptionable)) && null !== input.minSize && (void 0 === input.minSize || "number" == typeof input.minSize || "object" == typeof input.minSize && null !== input.minSize && false === Array.isArray(input.minSize) && _io321(input.minSize, _exceptionable)) && null !== input.minSizeReduction && (void 0 === input.minSizeReduction || "number" == typeof input.minSizeReduction || "object" == typeof input.minSizeReduction && null !== input.minSizeReduction && false === Array.isArray(input.minSizeReduction) && _io322(input.minSizeReduction, _exceptionable)) && null !== input.name && (void 0 === input.name || "function" == typeof input.name || false === input.name || "string" == typeof input.name) && (void 0 === input.priority || "number" == typeof input.priority) && (void 0 === input.reuseExistingChunk || "boolean" == typeof input.reuseExistingChunk) && null !== input.test && (void 0 === input.test || "function" == typeof input.test || "string" == typeof input.test || input.test instanceof RegExp) && null !== input.type && (void 0 === input.type || "function" == typeof input.type || "string" == typeof input.type || input.type instanceof RegExp) && (void 0 === input.usedExports || "boolean" == typeof input.usedExports) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "automaticNameDelimiter",
                        "chunks",
                        "enforce",
                        "enforceSizeThreshold",
                        "filename",
                        "idHint",
                        "layer",
                        "maxAsyncRequests",
                        "maxAsyncSize",
                        "maxInitialRequests",
                        "maxInitialSize",
                        "maxSize",
                        "minChunks",
                        "minRemainingSize",
                        "minSize",
                        "minSizeReduction",
                        "name",
                        "priority",
                        "reuseExistingChunk",
                        "test",
                        "type",
                        "usedExports"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io316 = (input, _exceptionable = true)=>Object.keys(input).every((key)=>{
                    const value = input[key];
                    if (void 0 === value) return true;
                    return "number" == typeof value;
                });
            const _io317 = (input, _exceptionable = true)=>Object.keys(input).every((key)=>{
                    const value = input[key];
                    if (void 0 === value) return true;
                    return "number" == typeof value;
                });
            const _io318 = (input, _exceptionable = true)=>Object.keys(input).every((key)=>{
                    const value = input[key];
                    if (void 0 === value) return true;
                    return "number" == typeof value;
                });
            const _io319 = (input, _exceptionable = true)=>Object.keys(input).every((key)=>{
                    const value = input[key];
                    if (void 0 === value) return true;
                    return "number" == typeof value;
                });
            const _io320 = (input, _exceptionable = true)=>Object.keys(input).every((key)=>{
                    const value = input[key];
                    if (void 0 === value) return true;
                    return "number" == typeof value;
                });
            const _io321 = (input, _exceptionable = true)=>Object.keys(input).every((key)=>{
                    const value = input[key];
                    if (void 0 === value) return true;
                    return "number" == typeof value;
                });
            const _io322 = (input, _exceptionable = true)=>Object.keys(input).every((key)=>{
                    const value = input[key];
                    if (void 0 === value) return true;
                    return "number" == typeof value;
                });
            const _io323 = (input, _exceptionable = true)=>Object.keys(input).every((key)=>{
                    const value = input[key];
                    if (void 0 === value) return true;
                    return "number" == typeof value;
                });
            const _io324 = (input, _exceptionable = true)=>(void 0 === input.automaticNameDelimiter || "string" == typeof input.automaticNameDelimiter) && null !== input.chunks && (void 0 === input.chunks || "function" == typeof input.chunks || "all" === input.chunks || "initial" === input.chunks || "async" === input.chunks || input.chunks instanceof RegExp) && null !== input.maxAsyncSize && (void 0 === input.maxAsyncSize || "number" == typeof input.maxAsyncSize || "object" == typeof input.maxAsyncSize && null !== input.maxAsyncSize && false === Array.isArray(input.maxAsyncSize) && _io325(input.maxAsyncSize, _exceptionable)) && null !== input.maxInitialSize && (void 0 === input.maxInitialSize || "number" == typeof input.maxInitialSize || "object" == typeof input.maxInitialSize && null !== input.maxInitialSize && false === Array.isArray(input.maxInitialSize) && _io326(input.maxInitialSize, _exceptionable)) && null !== input.maxSize && (void 0 === input.maxSize || "number" == typeof input.maxSize || "object" == typeof input.maxSize && null !== input.maxSize && false === Array.isArray(input.maxSize) && _io327(input.maxSize, _exceptionable)) && null !== input.minSize && (void 0 === input.minSize || "number" == typeof input.minSize || "object" == typeof input.minSize && null !== input.minSize && false === Array.isArray(input.minSize) && _io328(input.minSize, _exceptionable)) && null !== input.minSizeReduction && (void 0 === input.minSizeReduction || "number" == typeof input.minSizeReduction || "object" == typeof input.minSizeReduction && null !== input.minSizeReduction && false === Array.isArray(input.minSizeReduction) && _io329(input.minSizeReduction, _exceptionable)) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "automaticNameDelimiter",
                        "chunks",
                        "maxAsyncSize",
                        "maxInitialSize",
                        "maxSize",
                        "minSize",
                        "minSizeReduction"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io325 = (input, _exceptionable = true)=>Object.keys(input).every((key)=>{
                    const value = input[key];
                    if (void 0 === value) return true;
                    return "number" == typeof value;
                });
            const _io326 = (input, _exceptionable = true)=>Object.keys(input).every((key)=>{
                    const value = input[key];
                    if (void 0 === value) return true;
                    return "number" == typeof value;
                });
            const _io327 = (input, _exceptionable = true)=>Object.keys(input).every((key)=>{
                    const value = input[key];
                    if (void 0 === value) return true;
                    return "number" == typeof value;
                });
            const _io328 = (input, _exceptionable = true)=>Object.keys(input).every((key)=>{
                    const value = input[key];
                    if (void 0 === value) return true;
                    return "number" == typeof value;
                });
            const _io329 = (input, _exceptionable = true)=>Object.keys(input).every((key)=>{
                    const value = input[key];
                    if (void 0 === value) return true;
                    return "number" == typeof value;
                });
            const _io330 = (input, _exceptionable = true)=>Object.keys(input).every((key)=>{
                    const value = input[key];
                    if (void 0 === value) return true;
                    return "number" == typeof value;
                });
            const _io331 = (input, _exceptionable = true)=>Object.keys(input).every((key)=>{
                    const value = input[key];
                    if (void 0 === value) return true;
                    return "number" == typeof value;
                });
            const _io332 = (input, _exceptionable = true)=>Object.keys(input).every((key)=>{
                    const value = input[key];
                    if (void 0 === value) return true;
                    return "number" == typeof value;
                });
            const _io333 = (input, _exceptionable = true)=>Object.keys(input).every((key)=>{
                    const value = input[key];
                    if (void 0 === value) return true;
                    return "number" == typeof value;
                });
            const _io334 = (input, _exceptionable = true)=>Object.keys(input).every((key)=>{
                    const value = input[key];
                    if (void 0 === value) return true;
                    return "number" == typeof value;
                });
            const _io335 = (input, _exceptionable = true)=>Object.keys(input).every((key)=>{
                    const value = input[key];
                    if (void 0 === value) return true;
                    return "number" == typeof value;
                });
            const _io336 = (input, _exceptionable = true)=>(void 0 === input.amdContainer || "string" == typeof input.amdContainer) && null !== input.assetModuleFilename && (void 0 === input.assetModuleFilename || "function" == typeof input.assetModuleFilename || "string" == typeof input.assetModuleFilename) && (void 0 === input.asyncChunks || "boolean" == typeof input.asyncChunks) && null !== input.auxiliaryComment && (void 0 === input.auxiliaryComment || "string" == typeof input.auxiliaryComment || "object" == typeof input.auxiliaryComment && null !== input.auxiliaryComment && false === Array.isArray(input.auxiliaryComment) && _io204(input.auxiliaryComment, _exceptionable)) && (void 0 === input.charset || "boolean" == typeof input.charset) && null !== input.chunkFilename && (void 0 === input.chunkFilename || "function" == typeof input.chunkFilename || "string" == typeof input.chunkFilename) && (void 0 === input.chunkFormat || false === input.chunkFormat || "string" == typeof input.chunkFormat) && (void 0 === input.chunkLoadTimeout || "number" == typeof input.chunkLoadTimeout) && (void 0 === input.chunkLoading || false === input.chunkLoading || "string" == typeof input.chunkLoading) && (void 0 === input.chunkLoadingGlobal || "string" == typeof input.chunkLoadingGlobal) && null !== input.clean && (void 0 === input.clean || "boolean" == typeof input.clean || "object" == typeof input.clean && null !== input.clean && false === Array.isArray(input.clean) && _io337(input.clean, _exceptionable)) && (void 0 === input.compareBeforeEmit || "boolean" == typeof input.compareBeforeEmit) && (void 0 === input.crossOriginLoading || false === input.crossOriginLoading || "anonymous" === input.crossOriginLoading || "use-credentials" === input.crossOriginLoading) && null !== input.cssChunkFilename && (void 0 === input.cssChunkFilename || "function" == typeof input.cssChunkFilename || "string" == typeof input.cssChunkFilename) && null !== input.cssFilename && (void 0 === input.cssFilename || "function" == typeof input.cssFilename || "string" == typeof input.cssFilename) && null !== input.devtoolFallbackModuleFilenameTemplate && (void 0 === input.devtoolFallbackModuleFilenameTemplate || "function" == typeof input.devtoolFallbackModuleFilenameTemplate || "string" == typeof input.devtoolFallbackModuleFilenameTemplate) && null !== input.devtoolModuleFilenameTemplate && (void 0 === input.devtoolModuleFilenameTemplate || "function" == typeof input.devtoolModuleFilenameTemplate || "string" == typeof input.devtoolModuleFilenameTemplate) && (void 0 === input.devtoolNamespace || "string" == typeof input.devtoolNamespace) && (void 0 === input.enabledChunkLoadingTypes || Array.isArray(input.enabledChunkLoadingTypes) && input.enabledChunkLoadingTypes.every((elem, _index263)=>"string" == typeof elem)) && (void 0 === input.enabledLibraryTypes || Array.isArray(input.enabledLibraryTypes) && input.enabledLibraryTypes.every((elem, _index264)=>"string" == typeof elem)) && (void 0 === input.enabledWasmLoadingTypes || Array.isArray(input.enabledWasmLoadingTypes) && input.enabledWasmLoadingTypes.every((elem, _index265)=>"string" == typeof elem)) && (void 0 === input.environment || "object" == typeof input.environment && null !== input.environment && false === Array.isArray(input.environment) && _io338(input.environment, _exceptionable)) && null !== input.filename && (void 0 === input.filename || "function" == typeof input.filename || "string" == typeof input.filename) && (void 0 === input.globalObject || "string" == typeof input.globalObject) && (void 0 === input.hashDigest || "string" == typeof input.hashDigest) && (void 0 === input.hashDigestLength || "number" == typeof input.hashDigestLength) && null !== input.hashFunction && (void 0 === input.hashFunction || "string" == typeof input.hashFunction || "object" == typeof input.hashFunction && null !== input.hashFunction && _io339(input.hashFunction, _exceptionable)) && (void 0 === input.hashSalt || "string" == typeof input.hashSalt) && (void 0 === input.hotUpdateChunkFilename || "string" == typeof input.hotUpdateChunkFilename) && (void 0 === input.hotUpdateGlobal || "string" == typeof input.hotUpdateGlobal) && (void 0 === input.hotUpdateMainFilename || "string" == typeof input.hotUpdateMainFilename) && (void 0 === input.ignoreBrowserWarnings || "boolean" == typeof input.ignoreBrowserWarnings) && (void 0 === input.iife || "boolean" == typeof input.iife) && (void 0 === input.importFunctionName || "string" == typeof input.importFunctionName) && (void 0 === input.importMetaName || "string" == typeof input.importMetaName) && null !== input.library && (void 0 === input.library || "string" == typeof input.library || Array.isArray(input.library) && input.library.every((elem, _index266)=>"string" == typeof elem) || "object" == typeof input.library && null !== input.library && false === Array.isArray(input.library) && _iu15(input.library, _exceptionable)) && null !== input.libraryExport && (void 0 === input.libraryExport || "string" == typeof input.libraryExport || Array.isArray(input.libraryExport) && input.libraryExport.every((elem, _index267)=>"string" == typeof elem)) && (void 0 === input.libraryTarget || "string" == typeof input.libraryTarget) && (void 0 === input["module"] || "boolean" == typeof input["module"]) && (void 0 === input.path || "string" == typeof input.path) && (void 0 === input.pathinfo || "verbose" === input.pathinfo || "boolean" == typeof input.pathinfo) && null !== input.publicPath && (void 0 === input.publicPath || "function" == typeof input.publicPath || "string" == typeof input.publicPath) && (void 0 === input.scriptType || false === input.scriptType || "module" === input.scriptType || "text/javascript" === input.scriptType) && (void 0 === input.sourceMapFilename || "string" == typeof input.sourceMapFilename) && (void 0 === input.sourcePrefix || "string" == typeof input.sourcePrefix) && (void 0 === input.strictModuleErrorHandling || "boolean" == typeof input.strictModuleErrorHandling) && (void 0 === input.strictModuleExceptionHandling || "boolean" == typeof input.strictModuleExceptionHandling) && null !== input.trustedTypes && (void 0 === input.trustedTypes || true === input.trustedTypes || "string" == typeof input.trustedTypes || "object" == typeof input.trustedTypes && null !== input.trustedTypes && false === Array.isArray(input.trustedTypes) && _io341(input.trustedTypes, _exceptionable)) && (void 0 === input.umdNamedDefine || "boolean" == typeof input.umdNamedDefine) && (void 0 === input.uniqueName || "string" == typeof input.uniqueName) && (void 0 === input.wasmLoading || false === input.wasmLoading || "string" == typeof input.wasmLoading) && (void 0 === input.webassemblyModuleFilename || "string" == typeof input.webassemblyModuleFilename) && (void 0 === input.workerChunkLoading || false === input.workerChunkLoading || "string" == typeof input.workerChunkLoading) && (void 0 === input.workerPublicPath || "string" == typeof input.workerPublicPath) && (void 0 === input.workerWasmLoading || false === input.workerWasmLoading || "string" == typeof input.workerWasmLoading) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "amdContainer",
                        "assetModuleFilename",
                        "asyncChunks",
                        "auxiliaryComment",
                        "charset",
                        "chunkFilename",
                        "chunkFormat",
                        "chunkLoadTimeout",
                        "chunkLoading",
                        "chunkLoadingGlobal",
                        "clean",
                        "compareBeforeEmit",
                        "crossOriginLoading",
                        "cssChunkFilename",
                        "cssFilename",
                        "devtoolFallbackModuleFilenameTemplate",
                        "devtoolModuleFilenameTemplate",
                        "devtoolNamespace",
                        "enabledChunkLoadingTypes",
                        "enabledLibraryTypes",
                        "enabledWasmLoadingTypes",
                        "environment",
                        "filename",
                        "globalObject",
                        "hashDigest",
                        "hashDigestLength",
                        "hashFunction",
                        "hashSalt",
                        "hotUpdateChunkFilename",
                        "hotUpdateGlobal",
                        "hotUpdateMainFilename",
                        "ignoreBrowserWarnings",
                        "iife",
                        "importFunctionName",
                        "importMetaName",
                        "library",
                        "libraryExport",
                        "libraryTarget",
                        "module",
                        "path",
                        "pathinfo",
                        "publicPath",
                        "scriptType",
                        "sourceMapFilename",
                        "sourcePrefix",
                        "strictModuleErrorHandling",
                        "strictModuleExceptionHandling",
                        "trustedTypes",
                        "umdNamedDefine",
                        "uniqueName",
                        "wasmLoading",
                        "webassemblyModuleFilename",
                        "workerChunkLoading",
                        "workerPublicPath",
                        "workerWasmLoading"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io337 = (input, _exceptionable = true)=>(void 0 === input.dry || "boolean" == typeof input.dry) && null !== input.keep && (void 0 === input.keep || "function" == typeof input.keep || "string" == typeof input.keep || input.keep instanceof RegExp) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "dry",
                        "keep"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io338 = (input, _exceptionable = true)=>(void 0 === input.arrowFunction || "boolean" == typeof input.arrowFunction) && (void 0 === input.asyncFunction || "boolean" == typeof input.asyncFunction) && (void 0 === input.bigIntLiteral || "boolean" == typeof input.bigIntLiteral) && (void 0 === input["const"] || "boolean" == typeof input["const"]) && (void 0 === input.destructuring || "boolean" == typeof input.destructuring) && (void 0 === input.document || "boolean" == typeof input.document) && (void 0 === input.dynamicImport || "boolean" == typeof input.dynamicImport) && (void 0 === input.dynamicImportInWorker || "boolean" == typeof input.dynamicImportInWorker) && (void 0 === input.forOf || "boolean" == typeof input.forOf) && (void 0 === input.globalThis || "boolean" == typeof input.globalThis) && (void 0 === input["module"] || "boolean" == typeof input["module"]) && (void 0 === input.nodePrefixForCoreModules || "boolean" == typeof input.nodePrefixForCoreModules) && (void 0 === input.optionalChaining || "boolean" == typeof input.optionalChaining) && (void 0 === input.templateLiteral || "boolean" == typeof input.templateLiteral) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "arrowFunction",
                        "asyncFunction",
                        "bigIntLiteral",
                        "const",
                        "destructuring",
                        "document",
                        "dynamicImport",
                        "dynamicImportInWorker",
                        "forOf",
                        "globalThis",
                        "module",
                        "nodePrefixForCoreModules",
                        "optionalChaining",
                        "templateLiteral"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io339 = (input, _exceptionable = true)=>"object" == typeof input.prototype && null !== input.prototype && false === Array.isArray(input.prototype) && _io340(input.prototype, _exceptionable) && "number" == typeof input.length && true && "object" == typeof input.caller && null !== input.caller && _io33(input.caller, _exceptionable) && "string" == typeof input.name && (5 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "prototype",
                        "length",
                        "arguments",
                        "caller",
                        "name"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io340 = (input, _exceptionable = true)=>0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                });
            const _io341 = (input, _exceptionable = true)=>(void 0 === input.onPolicyCreationFailure || "continue" === input.onPolicyCreationFailure || "stop" === input.onPolicyCreationFailure) && (void 0 === input.policyName || "string" == typeof input.policyName) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "onPolicyCreationFailure",
                        "policyName"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io342 = (input, _exceptionable = true)=>(input.assetFilter, (void 0 === input.hints || false === input.hints || "error" === input.hints || "warning" === input.hints) && (void 0 === input.maxAssetSize || "number" == typeof input.maxAssetSize) && (void 0 === input.maxEntrypointSize || "number" == typeof input.maxEntrypointSize) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "assetFilter",
                        "hints",
                        "maxAssetSize",
                        "maxEntrypointSize"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                })));
            const _io343 = (input, _exceptionable = true)=>(void 0 === input.buildDependencies || "object" == typeof input.buildDependencies && null !== input.buildDependencies && false === Array.isArray(input.buildDependencies) && _io344(input.buildDependencies, _exceptionable)) && (void 0 === input.immutablePaths || Array.isArray(input.immutablePaths) && input.immutablePaths.every((elem, _index268)=>null != elem && ("string" == typeof elem || elem instanceof RegExp))) && (void 0 === input.managedPaths || Array.isArray(input.managedPaths) && input.managedPaths.every((elem, _index269)=>null != elem && ("string" == typeof elem || elem instanceof RegExp))) && (void 0 === input["module"] || "object" == typeof input["module"] && null !== input["module"] && false === Array.isArray(input["module"]) && _io345(input["module"], _exceptionable)) && (void 0 === input.resolve || "object" == typeof input.resolve && null !== input.resolve && false === Array.isArray(input.resolve) && _io346(input.resolve, _exceptionable)) && (void 0 === input.resolveBuildDependencies || "object" == typeof input.resolveBuildDependencies && null !== input.resolveBuildDependencies && false === Array.isArray(input.resolveBuildDependencies) && _io347(input.resolveBuildDependencies, _exceptionable)) && (void 0 === input.unmanagedPaths || Array.isArray(input.unmanagedPaths) && input.unmanagedPaths.every((elem, _index270)=>null != elem && ("string" == typeof elem || elem instanceof RegExp))) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "buildDependencies",
                        "immutablePaths",
                        "managedPaths",
                        "module",
                        "resolve",
                        "resolveBuildDependencies",
                        "unmanagedPaths"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io344 = (input, _exceptionable = true)=>(void 0 === input.hash || "boolean" == typeof input.hash) && (void 0 === input.timestamp || "boolean" == typeof input.timestamp) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "hash",
                        "timestamp"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io345 = (input, _exceptionable = true)=>(void 0 === input.hash || "boolean" == typeof input.hash) && (void 0 === input.timestamp || "boolean" == typeof input.timestamp) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "hash",
                        "timestamp"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io346 = (input, _exceptionable = true)=>(void 0 === input.hash || "boolean" == typeof input.hash) && (void 0 === input.timestamp || "boolean" == typeof input.timestamp) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "hash",
                        "timestamp"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io347 = (input, _exceptionable = true)=>(void 0 === input.hash || "boolean" == typeof input.hash) && (void 0 === input.timestamp || "boolean" == typeof input.timestamp) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "hash",
                        "timestamp"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io348 = (input, _exceptionable = true)=>(void 0 === input.all || "boolean" == typeof input.all) && (void 0 === input.assets || "boolean" == typeof input.assets) && (void 0 === input.assetsSort || false === input.assetsSort || "string" == typeof input.assetsSort) && (void 0 === input.assetsSpace || "number" == typeof input.assetsSpace) && (void 0 === input.builtAt || "boolean" == typeof input.builtAt) && (void 0 === input.cached || "boolean" == typeof input.cached) && (void 0 === input.cachedAssets || "boolean" == typeof input.cachedAssets) && (void 0 === input.cachedModules || "boolean" == typeof input.cachedModules) && (void 0 === input.children || "boolean" == typeof input.children) && (void 0 === input.chunkGroupAuxiliary || "boolean" == typeof input.chunkGroupAuxiliary) && (void 0 === input.chunkGroupChildren || "boolean" == typeof input.chunkGroupChildren) && (void 0 === input.chunkGroupMaxAssets || "number" == typeof input.chunkGroupMaxAssets) && (void 0 === input.chunkGroups || "boolean" == typeof input.chunkGroups) && (void 0 === input.chunkModules || "boolean" == typeof input.chunkModules) && (void 0 === input.chunkModulesSpace || "number" == typeof input.chunkModulesSpace) && (void 0 === input.chunkOrigins || "boolean" == typeof input.chunkOrigins) && (void 0 === input.chunkRelations || "boolean" == typeof input.chunkRelations) && (void 0 === input.chunks || "boolean" == typeof input.chunks) && (void 0 === input.chunksSort || false === input.chunksSort || "string" == typeof input.chunksSort) && null !== input.colors && (void 0 === input.colors || "boolean" == typeof input.colors || "object" == typeof input.colors && null !== input.colors && false === Array.isArray(input.colors) && _io349(input.colors, _exceptionable)) && (void 0 === input.context || "string" == typeof input.context) && (void 0 === input.dependentModules || "boolean" == typeof input.dependentModules) && (void 0 === input.depth || "boolean" == typeof input.depth) && (void 0 === input.entrypoints || "auto" === input.entrypoints || "boolean" == typeof input.entrypoints) && (void 0 === input.env || "boolean" == typeof input.env) && (void 0 === input.errorCause || "auto" === input.errorCause || "boolean" == typeof input.errorCause) && (void 0 === input.errorDetails || "auto" === input.errorDetails || "boolean" == typeof input.errorDetails) && (void 0 === input.errorErrors || "auto" === input.errorErrors || "boolean" == typeof input.errorErrors) && (void 0 === input.errorStack || "boolean" == typeof input.errorStack) && (void 0 === input.errors || "boolean" == typeof input.errors) && (void 0 === input.errorsCount || "boolean" == typeof input.errorsCount) && (void 0 === input.errorsSpace || "number" == typeof input.errorsSpace) && null !== input.exclude && (void 0 === input.exclude || "function" == typeof input.exclude || "string" == typeof input.exclude || "boolean" == typeof input.exclude || input.exclude instanceof RegExp || Array.isArray(input.exclude) && input.exclude.every((elem, _index271)=>null != elem && ("function" == typeof elem || "string" == typeof elem || elem instanceof RegExp))) && null !== input.excludeAssets && (void 0 === input.excludeAssets || "function" == typeof input.excludeAssets || "string" == typeof input.excludeAssets || input.excludeAssets instanceof RegExp || Array.isArray(input.excludeAssets) && input.excludeAssets.every((elem, _index272)=>null != elem && ("function" == typeof elem || "string" == typeof elem || elem instanceof RegExp))) && null !== input.excludeModules && (void 0 === input.excludeModules || "function" == typeof input.excludeModules || "string" == typeof input.excludeModules || "boolean" == typeof input.excludeModules || input.excludeModules instanceof RegExp || Array.isArray(input.excludeModules) && input.excludeModules.every((elem, _index273)=>null != elem && ("function" == typeof elem || "string" == typeof elem || elem instanceof RegExp))) && (void 0 === input.groupAssetsByChunk || "boolean" == typeof input.groupAssetsByChunk) && (void 0 === input.groupAssetsByEmitStatus || "boolean" == typeof input.groupAssetsByEmitStatus) && (void 0 === input.groupAssetsByExtension || "boolean" == typeof input.groupAssetsByExtension) && (void 0 === input.groupAssetsByInfo || "boolean" == typeof input.groupAssetsByInfo) && (void 0 === input.groupAssetsByPath || "boolean" == typeof input.groupAssetsByPath) && (void 0 === input.groupModulesByAttributes || "boolean" == typeof input.groupModulesByAttributes) && (void 0 === input.groupModulesByCacheStatus || "boolean" == typeof input.groupModulesByCacheStatus) && (void 0 === input.groupModulesByExtension || "boolean" == typeof input.groupModulesByExtension) && (void 0 === input.groupModulesByLayer || "boolean" == typeof input.groupModulesByLayer) && (void 0 === input.groupModulesByPath || "boolean" == typeof input.groupModulesByPath) && (void 0 === input.groupModulesByType || "boolean" == typeof input.groupModulesByType) && (void 0 === input.groupReasonsByOrigin || "boolean" == typeof input.groupReasonsByOrigin) && (void 0 === input.hash || "boolean" == typeof input.hash) && (void 0 === input.ids || "boolean" == typeof input.ids) && (void 0 === input.logging || "none" === input.logging || "verbose" === input.logging || "error" === input.logging || "warn" === input.logging || "info" === input.logging || "log" === input.logging || "boolean" == typeof input.logging) && null !== input.loggingDebug && (void 0 === input.loggingDebug || "function" == typeof input.loggingDebug || "string" == typeof input.loggingDebug || "boolean" == typeof input.loggingDebug || input.loggingDebug instanceof RegExp || Array.isArray(input.loggingDebug) && input.loggingDebug.every((elem, _index274)=>null != elem && ("function" == typeof elem || "string" == typeof elem || elem instanceof RegExp))) && (void 0 === input.loggingTrace || "boolean" == typeof input.loggingTrace) && (void 0 === input.moduleAssets || "boolean" == typeof input.moduleAssets) && (void 0 === input.moduleTrace || "boolean" == typeof input.moduleTrace) && (void 0 === input.modules || "boolean" == typeof input.modules) && (void 0 === input.modulesSort || false === input.modulesSort || "string" == typeof input.modulesSort) && (void 0 === input.modulesSpace || "number" == typeof input.modulesSpace) && (void 0 === input.nestedModules || "boolean" == typeof input.nestedModules) && (void 0 === input.nestedModulesSpace || "number" == typeof input.nestedModulesSpace) && (void 0 === input.optimizationBailout || "boolean" == typeof input.optimizationBailout) && (void 0 === input.orphanModules || "boolean" == typeof input.orphanModules) && (void 0 === input.outputPath || "boolean" == typeof input.outputPath) && (void 0 === input.performance || "boolean" == typeof input.performance) && (void 0 === input.preset || "string" == typeof input.preset || "boolean" == typeof input.preset) && (void 0 === input.providedExports || "boolean" == typeof input.providedExports) && (void 0 === input.publicPath || "boolean" == typeof input.publicPath) && (void 0 === input.reasons || "boolean" == typeof input.reasons) && (void 0 === input.reasonsSpace || "number" == typeof input.reasonsSpace) && (void 0 === input.relatedAssets || "boolean" == typeof input.relatedAssets) && (void 0 === input.runtime || "boolean" == typeof input.runtime) && (void 0 === input.runtimeModules || "boolean" == typeof input.runtimeModules) && (void 0 === input.source || "boolean" == typeof input.source) && (void 0 === input.timings || "boolean" == typeof input.timings) && (void 0 === input.usedExports || "boolean" == typeof input.usedExports) && (void 0 === input.version || "boolean" == typeof input.version) && (void 0 === input.warnings || "boolean" == typeof input.warnings) && (void 0 === input.warningsCount || "boolean" == typeof input.warningsCount) && null !== input.warningsFilter && (void 0 === input.warningsFilter || "function" == typeof input.warningsFilter || "string" == typeof input.warningsFilter || input.warningsFilter instanceof RegExp || Array.isArray(input.warningsFilter) && input.warningsFilter.every((elem, _index275)=>null != elem && ("function" == typeof elem || "string" == typeof elem || elem instanceof RegExp))) && (void 0 === input.warningsSpace || "number" == typeof input.warningsSpace) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "all",
                        "assets",
                        "assetsSort",
                        "assetsSpace",
                        "builtAt",
                        "cached",
                        "cachedAssets",
                        "cachedModules",
                        "children",
                        "chunkGroupAuxiliary",
                        "chunkGroupChildren",
                        "chunkGroupMaxAssets",
                        "chunkGroups",
                        "chunkModules",
                        "chunkModulesSpace",
                        "chunkOrigins",
                        "chunkRelations",
                        "chunks",
                        "chunksSort",
                        "colors",
                        "context",
                        "dependentModules",
                        "depth",
                        "entrypoints",
                        "env",
                        "errorCause",
                        "errorDetails",
                        "errorErrors",
                        "errorStack",
                        "errors",
                        "errorsCount",
                        "errorsSpace",
                        "exclude",
                        "excludeAssets",
                        "excludeModules",
                        "groupAssetsByChunk",
                        "groupAssetsByEmitStatus",
                        "groupAssetsByExtension",
                        "groupAssetsByInfo",
                        "groupAssetsByPath",
                        "groupModulesByAttributes",
                        "groupModulesByCacheStatus",
                        "groupModulesByExtension",
                        "groupModulesByLayer",
                        "groupModulesByPath",
                        "groupModulesByType",
                        "groupReasonsByOrigin",
                        "hash",
                        "ids",
                        "logging",
                        "loggingDebug",
                        "loggingTrace",
                        "moduleAssets",
                        "moduleTrace",
                        "modules",
                        "modulesSort",
                        "modulesSpace",
                        "nestedModules",
                        "nestedModulesSpace",
                        "optimizationBailout",
                        "orphanModules",
                        "outputPath",
                        "performance",
                        "preset",
                        "providedExports",
                        "publicPath",
                        "reasons",
                        "reasonsSpace",
                        "relatedAssets",
                        "runtime",
                        "runtimeModules",
                        "source",
                        "timings",
                        "usedExports",
                        "version",
                        "warnings",
                        "warningsCount",
                        "warningsFilter",
                        "warningsSpace"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io349 = (input, _exceptionable = true)=>(void 0 === input.bold || "string" == typeof input.bold) && (void 0 === input.cyan || "string" == typeof input.cyan) && (void 0 === input.green || "string" == typeof input.green) && (void 0 === input.magenta || "string" == typeof input.magenta) && (void 0 === input.red || "string" == typeof input.red) && (void 0 === input.yellow || "string" == typeof input.yellow) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "bold",
                        "cyan",
                        "green",
                        "magenta",
                        "red",
                        "yellow"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io350 = (input, _exceptionable = true)=>(void 0 === input.aggregateTimeout || "number" == typeof input.aggregateTimeout) && (void 0 === input.followSymlinks || "boolean" == typeof input.followSymlinks) && null !== input.ignored && (void 0 === input.ignored || "string" == typeof input.ignored || input.ignored instanceof RegExp || Array.isArray(input.ignored) && input.ignored.every((elem, _index276)=>"string" == typeof elem)) && (void 0 === input.poll || "number" == typeof input.poll || "boolean" == typeof input.poll) && (void 0 === input.stdin || "boolean" == typeof input.stdin) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "aggregateTimeout",
                        "followSymlinks",
                        "ignored",
                        "poll",
                        "stdin"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io351 = (input, _exceptionable = true)=>(void 0 === input.dedupe || Array.isArray(input.dedupe) && input.dedupe.every((elem, _index277)=>"string" == typeof elem)) && null !== input.alias && (void 0 === input.alias || "function" == typeof input.alias || Array.isArray(input.alias) && input.alias.every((elem, _index278)=>null != elem && ("function" == typeof elem || "object" == typeof elem && null !== elem && false === Array.isArray(elem) && _io352(elem, _exceptionable))) || "object" == typeof input.alias && null !== input.alias && false === Array.isArray(input.alias) && _io352(input.alias, _exceptionable)) && (void 0 === input.aliasStrategy || "prefer-tsconfig" === input.aliasStrategy || "prefer-alias" === input.aliasStrategy) && (void 0 === input.extensions || Array.isArray(input.extensions) && input.extensions.every((elem, _index279)=>"string" == typeof elem)) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "dedupe",
                        "alias",
                        "aliasStrategy",
                        "extensions"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io352 = (input, _exceptionable = true)=>Object.keys(input).every((key)=>{
                    const value = input[key];
                    if (void 0 === value) return true;
                    return null != value && (false === value || "string" == typeof value || Array.isArray(value) && value.every((elem, _index280)=>false === elem || "string" == typeof elem));
                });
            const _io353 = (input, _exceptionable = true)=>null !== input.alias && (void 0 === input.alias || "function" == typeof input.alias || Array.isArray(input.alias) && input.alias.every((elem, _index281)=>null != elem && ("function" == typeof elem || "object" == typeof elem && null !== elem && false === Array.isArray(elem) && _io352(elem, _exceptionable))) || "object" == typeof input.alias && null !== input.alias && false === Array.isArray(input.alias) && _io352(input.alias, _exceptionable)) && (void 0 === input.aliasStrategy || "prefer-tsconfig" === input.aliasStrategy || "prefer-alias" === input.aliasStrategy) && null !== input.assetsInclude && (void 0 === input.assetsInclude || "function" == typeof input.assetsInclude || "string" == typeof input.assetsInclude || input.assetsInclude instanceof RegExp || Array.isArray(input.assetsInclude) && (_ia0(input.assetsInclude, _exceptionable) || false) || "object" == typeof input.assetsInclude && null !== input.assetsInclude && false === Array.isArray(input.assetsInclude) && _io174(input.assetsInclude, _exceptionable)) && (void 0 === input.include || Array.isArray(input.include) && input.include.every((elem, _index282)=>null != elem && ("function" == typeof elem || "string" == typeof elem || elem instanceof RegExp || Array.isArray(elem) && (_ia0(elem, _exceptionable) || false) || "object" == typeof elem && null !== elem && false === Array.isArray(elem) && _io174(elem, _exceptionable)))) && (void 0 === input.entry || "object" == typeof input.entry && null !== input.entry && false === Array.isArray(input.entry) && _io354(input.entry, _exceptionable)) && (void 0 === input.exclude || Array.isArray(input.exclude) && input.exclude.every((elem, _index283)=>null != elem && ("function" == typeof elem || "string" == typeof elem || elem instanceof RegExp || Array.isArray(elem) && (_ia0(elem, _exceptionable) || false) || "object" == typeof elem && null !== elem && false === Array.isArray(elem) && _io174(elem, _exceptionable)))) && null !== input.preEntry && (void 0 === input.preEntry || "string" == typeof input.preEntry || Array.isArray(input.preEntry) && input.preEntry.every((elem, _index284)=>"string" == typeof elem)) && (void 0 === input.define || "object" == typeof input.define && null !== input.define && false === Array.isArray(input.define) && _io356(input.define, _exceptionable)) && (void 0 === input.decorators || "object" == typeof input.decorators && null !== input.decorators && false === Array.isArray(input.decorators) && _io357(input.decorators, _exceptionable)) && null !== input.transformImport && (void 0 === input.transformImport || "function" == typeof input.transformImport || Array.isArray(input.transformImport) && input.transformImport.every((elem, _index285)=>null != elem && ("function" == typeof elem || "object" == typeof elem && null !== elem && _io358(elem, _exceptionable)))) && (void 0 === input.tsconfigPath || "string" == typeof input.tsconfigPath) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "alias",
                        "aliasStrategy",
                        "assetsInclude",
                        "include",
                        "entry",
                        "exclude",
                        "preEntry",
                        "define",
                        "decorators",
                        "transformImport",
                        "tsconfigPath"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io354 = (input, _exceptionable = true)=>Object.keys(input).every((key)=>{
                    const value = input[key];
                    if (void 0 === value) return true;
                    return null != value && ("string" == typeof value || Array.isArray(value) && value.every((elem, _index286)=>"string" == typeof elem) || "object" == typeof value && null !== value && _io355(value, _exceptionable));
                });
            const _io355 = (input, _exceptionable = true)=>null !== input["import"] && void 0 !== input["import"] && ("string" == typeof input["import"] || Array.isArray(input["import"]) && input["import"].every((elem, _index287)=>"string" == typeof elem)) && (void 0 === input.runtime || false === input.runtime || "string" == typeof input.runtime) && null !== input.publicPath && (void 0 === input.publicPath || "function" == typeof input.publicPath || "string" == typeof input.publicPath) && (void 0 === input.baseUri || "string" == typeof input.baseUri) && (void 0 === input.chunkLoading || false === input.chunkLoading || "string" == typeof input.chunkLoading) && (void 0 === input.asyncChunks || "boolean" == typeof input.asyncChunks) && (void 0 === input.wasmLoading || false === input.wasmLoading || "string" == typeof input.wasmLoading) && null !== input.filename && (void 0 === input.filename || "function" == typeof input.filename || "string" == typeof input.filename) && (void 0 === input.library || "object" == typeof input.library && null !== input.library && _io89(input.library, _exceptionable)) && null !== input.dependOn && (void 0 === input.dependOn || "string" == typeof input.dependOn || Array.isArray(input.dependOn) && input.dependOn.every((elem, _index288)=>"string" == typeof elem)) && (null === input.layer || void 0 === input.layer || "string" == typeof input.layer) && (void 0 === input.html || "boolean" == typeof input.html) && (1 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "import",
                        "runtime",
                        "publicPath",
                        "baseUri",
                        "chunkLoading",
                        "asyncChunks",
                        "wasmLoading",
                        "filename",
                        "library",
                        "dependOn",
                        "layer",
                        "html"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io356 = (input, _exceptionable = true)=>Object.keys(input).every((key)=>{
                    input[key];
                    return true;
                });
            const _io357 = (input, _exceptionable = true)=>(void 0 === input.version || "2022-03" === input.version || "legacy" === input.version) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "version"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io358 = (input, _exceptionable = true)=>"string" == typeof input.libraryName && (void 0 === input.libraryDirectory || "string" == typeof input.libraryDirectory) && (void 0 === input.style || "string" == typeof input.style || "boolean" == typeof input.style) && (void 0 === input.styleLibraryDirectory || "string" == typeof input.styleLibraryDirectory) && (void 0 === input.camelToDashComponentName || "boolean" == typeof input.camelToDashComponentName) && (void 0 === input.transformToDefaultImport || "boolean" == typeof input.transformToDefaultImport) && true && true && (1 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "libraryName",
                        "libraryDirectory",
                        "style",
                        "styleLibraryDirectory",
                        "camelToDashComponentName",
                        "transformToDefaultImport",
                        "customName",
                        "customStyleName"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io359 = (input, _exceptionable = true)=>(void 0 === input.target || "node" === input.target || "web" === input.target || "web-worker" === input.target) && null !== input.externals && (void 0 === input.externals || "function" == typeof input.externals || "string" == typeof input.externals || input.externals instanceof RegExp || Array.isArray(input.externals) && input.externals.every((elem, _index289)=>null != elem && ("function" == typeof elem || "string" == typeof elem || elem instanceof RegExp || "object" == typeof elem && null !== elem && false === Array.isArray(elem) && _io105(elem, _exceptionable))) || "object" == typeof input.externals && null !== input.externals && false === Array.isArray(input.externals) && _io105(input.externals, _exceptionable)) && (void 0 === input.distPath || "object" == typeof input.distPath && null !== input.distPath && false === Array.isArray(input.distPath) && _io360(input.distPath, _exceptionable)) && (void 0 === input.filename || "object" == typeof input.filename && null !== input.filename && false === Array.isArray(input.filename) && _io361(input.filename, _exceptionable)) && (void 0 === input.charset || "utf8" === input.charset || "ascii" === input.charset) && (void 0 === input.polyfill || "usage" === input.polyfill || "entry" === input.polyfill || "off" === input.polyfill) && (void 0 === input.assetPrefix || "string" == typeof input.assetPrefix) && null !== input.dataUriLimit && (void 0 === input.dataUriLimit || "number" == typeof input.dataUriLimit || "object" == typeof input.dataUriLimit && null !== input.dataUriLimit && false === Array.isArray(input.dataUriLimit) && _io362(input.dataUriLimit, _exceptionable)) && (void 0 === input.legalComments || "none" === input.legalComments || "inline" === input.legalComments || "linked" === input.legalComments) && null !== input.cleanDistPath && (void 0 === input.cleanDistPath || "auto" === input.cleanDistPath || "boolean" == typeof input.cleanDistPath || "object" == typeof input.cleanDistPath && null !== input.cleanDistPath && false === Array.isArray(input.cleanDistPath) && _io363(input.cleanDistPath, _exceptionable)) && (void 0 === input.cssModules || "object" == typeof input.cssModules && null !== input.cssModules && false === Array.isArray(input.cssModules) && _io364(input.cssModules, _exceptionable)) && null !== input.minify && (void 0 === input.minify || "boolean" == typeof input.minify || "object" == typeof input.minify && null !== input.minify && false === Array.isArray(input.minify) && _io365(input.minify, _exceptionable)) && null !== input.manifest && (void 0 === input.manifest || "string" == typeof input.manifest || "boolean" == typeof input.manifest || "object" == typeof input.manifest && null !== input.manifest && false === Array.isArray(input.manifest) && _io375(input.manifest, _exceptionable)) && (void 0 === input["module"] || "boolean" == typeof input["module"]) && null !== input.sourceMap && (void 0 === input.sourceMap || "boolean" == typeof input.sourceMap || "object" == typeof input.sourceMap && null !== input.sourceMap && false === Array.isArray(input.sourceMap) && _io376(input.sourceMap, _exceptionable)) && (void 0 === input.filenameHash || "string" == typeof input.filenameHash || "boolean" == typeof input.filenameHash) && null !== input.inlineScripts && (void 0 === input.inlineScripts || "function" == typeof input.inlineScripts || "boolean" == typeof input.inlineScripts || input.inlineScripts instanceof RegExp || "object" == typeof input.inlineScripts && null !== input.inlineScripts && _io377(input.inlineScripts, _exceptionable)) && null !== input.inlineStyles && (void 0 === input.inlineStyles || "function" == typeof input.inlineStyles || "boolean" == typeof input.inlineStyles || input.inlineStyles instanceof RegExp || "object" == typeof input.inlineStyles && null !== input.inlineStyles && _io377(input.inlineStyles, _exceptionable)) && (void 0 === input.injectStyles || "boolean" == typeof input.injectStyles) && (void 0 === input.overrideBrowserslist || Array.isArray(input.overrideBrowserslist) && input.overrideBrowserslist.every((elem, _index290)=>"string" == typeof elem)) && null !== input.copy && (void 0 === input.copy || Array.isArray(input.copy) && input.copy.every((elem, _index291)=>null != elem && ("string" == typeof elem || "object" == typeof elem && null !== elem && _io379(elem, _exceptionable))) || "object" == typeof input.copy && null !== input.copy && _io378(input.copy, _exceptionable)) && (void 0 === input.emitAssets || "boolean" == typeof input.emitAssets) && (void 0 === input.emitCss || "boolean" == typeof input.emitCss) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "target",
                        "externals",
                        "distPath",
                        "filename",
                        "charset",
                        "polyfill",
                        "assetPrefix",
                        "dataUriLimit",
                        "legalComments",
                        "cleanDistPath",
                        "cssModules",
                        "minify",
                        "manifest",
                        "module",
                        "sourceMap",
                        "filenameHash",
                        "inlineScripts",
                        "inlineStyles",
                        "injectStyles",
                        "overrideBrowserslist",
                        "copy",
                        "emitAssets",
                        "emitCss"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io360 = (input, _exceptionable = true)=>(void 0 === input.root || "string" == typeof input.root) && (void 0 === input.js || "string" == typeof input.js) && (void 0 === input.jsAsync || "string" == typeof input.jsAsync) && (void 0 === input.css || "string" == typeof input.css) && (void 0 === input.cssAsync || "string" == typeof input.cssAsync) && (void 0 === input.svg || "string" == typeof input.svg) && (void 0 === input.font || "string" == typeof input.font) && (void 0 === input.html || "string" == typeof input.html) && (void 0 === input.wasm || "string" == typeof input.wasm) && (void 0 === input.image || "string" == typeof input.image) && (void 0 === input.media || "string" == typeof input.media) && (void 0 === input.assets || "string" == typeof input.assets) && (void 0 === input.favicon || "string" == typeof input.favicon) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "root",
                        "js",
                        "jsAsync",
                        "css",
                        "cssAsync",
                        "svg",
                        "font",
                        "html",
                        "wasm",
                        "image",
                        "media",
                        "assets",
                        "favicon"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io361 = (input, _exceptionable = true)=>(void 0 === input.html || "string" == typeof input.html) && null !== input.js && (void 0 === input.js || "function" == typeof input.js || "string" == typeof input.js) && null !== input.css && (void 0 === input.css || "function" == typeof input.css || "string" == typeof input.css) && null !== input.svg && (void 0 === input.svg || "function" == typeof input.svg || "string" == typeof input.svg) && null !== input.font && (void 0 === input.font || "function" == typeof input.font || "string" == typeof input.font) && null !== input.image && (void 0 === input.image || "function" == typeof input.image || "string" == typeof input.image) && null !== input.media && (void 0 === input.media || "function" == typeof input.media || "string" == typeof input.media) && (void 0 === input.wasm || "string" == typeof input.wasm) && null !== input.assets && (void 0 === input.assets || "function" == typeof input.assets || "string" == typeof input.assets) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "html",
                        "js",
                        "css",
                        "svg",
                        "font",
                        "image",
                        "media",
                        "wasm",
                        "assets"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io362 = (input, _exceptionable = true)=>(void 0 === input.svg || "number" == typeof input.svg) && (void 0 === input.font || "number" == typeof input.font) && (void 0 === input.image || "number" == typeof input.image) && (void 0 === input.media || "number" == typeof input.media) && (void 0 === input.assets || "number" == typeof input.assets) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "svg",
                        "font",
                        "image",
                        "media",
                        "assets"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io363 = (input, _exceptionable = true)=>(void 0 === input.enable || "auto" === input.enable || "boolean" == typeof input.enable) && (void 0 === input.keep || Array.isArray(input.keep) && input.keep.every((elem, _index292)=>elem instanceof RegExp)) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "enable",
                        "keep"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io364 = (input, _exceptionable = true)=>null !== input.auto && (void 0 === input.auto || "function" == typeof input.auto || "boolean" == typeof input.auto || input.auto instanceof RegExp) && (void 0 === input.exportGlobals || "boolean" == typeof input.exportGlobals) && (void 0 === input.exportLocalsConvention || "asIs" === input.exportLocalsConvention || "camelCase" === input.exportLocalsConvention || "camelCaseOnly" === input.exportLocalsConvention || "dashes" === input.exportLocalsConvention || "dashesOnly" === input.exportLocalsConvention) && (void 0 === input.localIdentName || "string" == typeof input.localIdentName) && null !== input.mode && (void 0 === input.mode || "function" == typeof input.mode || "local" === input.mode || "global" === input.mode || "pure" === input.mode || "icss" === input.mode) && (void 0 === input.namedExport || "boolean" == typeof input.namedExport) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "auto",
                        "exportGlobals",
                        "exportLocalsConvention",
                        "localIdentName",
                        "mode",
                        "namedExport"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io365 = (input, _exceptionable = true)=>(void 0 === input.js || "always" === input.js || "boolean" == typeof input.js) && (void 0 === input.jsOptions || "object" == typeof input.jsOptions && null !== input.jsOptions && false === Array.isArray(input.jsOptions) && _io366(input.jsOptions, _exceptionable)) && (void 0 === input.css || "always" === input.css || "boolean" == typeof input.css) && (void 0 === input.cssOptions || "object" == typeof input.cssOptions && null !== input.cssOptions && false === Array.isArray(input.cssOptions) && _io373(input.cssOptions, _exceptionable)) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "js",
                        "jsOptions",
                        "css",
                        "cssOptions"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io366 = (input, _exceptionable = true)=>null !== input.test && (void 0 === input.test || "string" == typeof input.test || input.test instanceof RegExp || Array.isArray(input.test) && input.test.every((elem, _index293)=>null != elem && ("string" == typeof elem || elem instanceof RegExp))) && null !== input.exclude && (void 0 === input.exclude || "string" == typeof input.exclude || input.exclude instanceof RegExp || Array.isArray(input.exclude) && input.exclude.every((elem, _index294)=>null != elem && ("string" == typeof elem || elem instanceof RegExp))) && null !== input.include && (void 0 === input.include || "string" == typeof input.include || input.include instanceof RegExp || Array.isArray(input.include) && input.include.every((elem, _index295)=>null != elem && ("string" == typeof elem || elem instanceof RegExp))) && null !== input.extractComments && (void 0 === input.extractComments || "boolean" == typeof input.extractComments || input.extractComments instanceof RegExp || "object" == typeof input.extractComments && null !== input.extractComments && false === Array.isArray(input.extractComments) && _io367(input.extractComments, _exceptionable)) && (void 0 === input.minimizerOptions || "object" == typeof input.minimizerOptions && null !== input.minimizerOptions && false === Array.isArray(input.minimizerOptions) && _io368(input.minimizerOptions, _exceptionable)) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "test",
                        "exclude",
                        "include",
                        "extractComments",
                        "minimizerOptions"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io367 = (input, _exceptionable = true)=>null !== input.condition && (void 0 === input.condition || "boolean" == typeof input.condition || input.condition instanceof RegExp) && (void 0 === input.banner || "string" == typeof input.banner || "boolean" == typeof input.banner) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "condition",
                        "banner"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io368 = (input, _exceptionable = true)=>(void 0 === input.minify || "boolean" == typeof input.minify) && (void 0 === input.ecma || "string" == typeof input.ecma || "number" == typeof input.ecma) && null !== input.compress && (void 0 === input.compress || "boolean" == typeof input.compress || "object" == typeof input.compress && null !== input.compress && false === Array.isArray(input.compress) && _io369(input.compress, _exceptionable)) && null !== input.mangle && (void 0 === input.mangle || "boolean" == typeof input.mangle || "object" == typeof input.mangle && null !== input.mangle && false === Array.isArray(input.mangle) && _io370(input.mangle, _exceptionable)) && (void 0 === input.format || "object" == typeof input.format && null !== input.format && false === Array.isArray(input.format) && _io372(input.format, _exceptionable)) && (void 0 === input["module"] || "boolean" == typeof input["module"]) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "minify",
                        "ecma",
                        "compress",
                        "mangle",
                        "format",
                        "module"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io369 = (input, _exceptionable = true)=>(void 0 === input.arguments || "boolean" == typeof input.arguments) && (void 0 === input.arrows || "boolean" == typeof input.arrows) && (void 0 === input.booleans || "boolean" == typeof input.booleans) && (void 0 === input.booleans_as_integers || "boolean" == typeof input.booleans_as_integers) && (void 0 === input.collapse_vars || "boolean" == typeof input.collapse_vars) && (void 0 === input.comparisons || "boolean" == typeof input.comparisons) && (void 0 === input.computed_props || "boolean" == typeof input.computed_props) && (void 0 === input.conditionals || "boolean" == typeof input.conditionals) && (void 0 === input.dead_code || "boolean" == typeof input.dead_code) && (void 0 === input.defaults || "boolean" == typeof input.defaults) && (void 0 === input.directives || "boolean" == typeof input.directives) && (void 0 === input.drop_console || "boolean" == typeof input.drop_console) && (void 0 === input.drop_debugger || "boolean" == typeof input.drop_debugger) && (void 0 === input.ecma || "string" == typeof input.ecma || "number" == typeof input.ecma) && (void 0 === input.evaluate || "boolean" == typeof input.evaluate) && (void 0 === input.expression || "boolean" == typeof input.expression) && true && (void 0 === input.hoist_funs || "boolean" == typeof input.hoist_funs) && (void 0 === input.hoist_props || "boolean" == typeof input.hoist_props) && (void 0 === input.hoist_vars || "boolean" == typeof input.hoist_vars) && (void 0 === input.ie8 || "boolean" == typeof input.ie8) && (void 0 === input.if_return || "boolean" == typeof input.if_return) && (void 0 === input.inline || 0 === input.inline || 1 === input.inline || 2 === input.inline || 3 === input.inline) && (void 0 === input.join_vars || "boolean" == typeof input.join_vars) && (void 0 === input.keep_classnames || "boolean" == typeof input.keep_classnames) && (void 0 === input.keep_fargs || "boolean" == typeof input.keep_fargs) && (void 0 === input.keep_fnames || "boolean" == typeof input.keep_fnames) && (void 0 === input.keep_infinity || "boolean" == typeof input.keep_infinity) && (void 0 === input.loops || "boolean" == typeof input.loops) && (void 0 === input.negate_iife || "boolean" == typeof input.negate_iife) && (void 0 === input.passes || "number" == typeof input.passes) && (void 0 === input.properties || "boolean" == typeof input.properties) && true && (void 0 === input.pure_funcs || Array.isArray(input.pure_funcs) && input.pure_funcs.every((elem, _index296)=>"string" == typeof elem)) && (void 0 === input.reduce_funcs || "boolean" == typeof input.reduce_funcs) && (void 0 === input.reduce_vars || "boolean" == typeof input.reduce_vars) && true && (void 0 === input.side_effects || "boolean" == typeof input.side_effects) && (void 0 === input.switches || "boolean" == typeof input.switches) && true && true && (void 0 === input.typeofs || "boolean" == typeof input.typeofs) && (void 0 === input.unsafe || "boolean" == typeof input.unsafe) && (void 0 === input.unsafe_passes || "boolean" == typeof input.unsafe_passes) && (void 0 === input.unsafe_arrows || "boolean" == typeof input.unsafe_arrows) && (void 0 === input.unsafe_comps || "boolean" == typeof input.unsafe_comps) && (void 0 === input.unsafe_function || "boolean" == typeof input.unsafe_function) && (void 0 === input.unsafe_math || "boolean" == typeof input.unsafe_math) && (void 0 === input.unsafe_symbols || "boolean" == typeof input.unsafe_symbols) && (void 0 === input.unsafe_methods || "boolean" == typeof input.unsafe_methods) && (void 0 === input.unsafe_proto || "boolean" == typeof input.unsafe_proto) && (void 0 === input.unsafe_regexp || "boolean" == typeof input.unsafe_regexp) && (void 0 === input.unsafe_undefined || "boolean" == typeof input.unsafe_undefined) && (void 0 === input.unused || "boolean" == typeof input.unused) && (void 0 === input.const_to_let || "boolean" == typeof input.const_to_let) && (void 0 === input["module"] || "boolean" == typeof input["module"]) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "arguments",
                        "arrows",
                        "booleans",
                        "booleans_as_integers",
                        "collapse_vars",
                        "comparisons",
                        "computed_props",
                        "conditionals",
                        "dead_code",
                        "defaults",
                        "directives",
                        "drop_console",
                        "drop_debugger",
                        "ecma",
                        "evaluate",
                        "expression",
                        "global_defs",
                        "hoist_funs",
                        "hoist_props",
                        "hoist_vars",
                        "ie8",
                        "if_return",
                        "inline",
                        "join_vars",
                        "keep_classnames",
                        "keep_fargs",
                        "keep_fnames",
                        "keep_infinity",
                        "loops",
                        "negate_iife",
                        "passes",
                        "properties",
                        "pure_getters",
                        "pure_funcs",
                        "reduce_funcs",
                        "reduce_vars",
                        "sequences",
                        "side_effects",
                        "switches",
                        "top_retain",
                        "toplevel",
                        "typeofs",
                        "unsafe",
                        "unsafe_passes",
                        "unsafe_arrows",
                        "unsafe_comps",
                        "unsafe_function",
                        "unsafe_math",
                        "unsafe_symbols",
                        "unsafe_methods",
                        "unsafe_proto",
                        "unsafe_regexp",
                        "unsafe_undefined",
                        "unused",
                        "const_to_let",
                        "module"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io370 = (input, _exceptionable = true)=>(void 0 === input.props || "object" == typeof input.props && null !== input.props && false === Array.isArray(input.props) && _io371(input.props, _exceptionable)) && (void 0 === input.toplevel || "boolean" == typeof input.toplevel) && (void 0 === input.keep_classnames || "boolean" == typeof input.keep_classnames) && (void 0 === input.keep_fnames || "boolean" == typeof input.keep_fnames) && (void 0 === input.keep_private_props || "boolean" == typeof input.keep_private_props) && (void 0 === input.ie8 || "boolean" == typeof input.ie8) && (void 0 === input.safari10 || "boolean" == typeof input.safari10) && (void 0 === input.reserved || Array.isArray(input.reserved) && input.reserved.every((elem, _index297)=>"string" == typeof elem)) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "props",
                        "toplevel",
                        "keep_classnames",
                        "keep_fnames",
                        "keep_private_props",
                        "ie8",
                        "safari10",
                        "reserved"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io371 = (input, _exceptionable = true)=>0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                });
            const _io372 = (input, _exceptionable = true)=>(void 0 === input.asciiOnly || "boolean" == typeof input.asciiOnly) && (void 0 === input.beautify || "boolean" == typeof input.beautify) && (void 0 === input.braces || "boolean" == typeof input.braces) && (void 0 === input.comments || false === input.comments || "all" === input.comments || "some" === input.comments) && (void 0 === input.ecma || "string" == typeof input.ecma || "number" == typeof input.ecma) && (void 0 === input.indentLevel || "number" == typeof input.indentLevel) && (void 0 === input.indentStart || "number" == typeof input.indentStart) && (void 0 === input.inlineScript || "number" == typeof input.inlineScript) && (void 0 === input.keepNumbers || "number" == typeof input.keepNumbers) && (void 0 === input.keepQuotedProps || "boolean" == typeof input.keepQuotedProps) && (void 0 === input.maxLineLen || false === input.maxLineLen || "number" == typeof input.maxLineLen) && (void 0 === input.preamble || "string" == typeof input.preamble) && (void 0 === input.quoteKeys || "boolean" == typeof input.quoteKeys) && (void 0 === input.quoteStyle || "boolean" == typeof input.quoteStyle) && (void 0 === input.preserveAnnotations || "boolean" == typeof input.preserveAnnotations) && (void 0 === input.safari10 || "boolean" == typeof input.safari10) && (void 0 === input.semicolons || "boolean" == typeof input.semicolons) && (void 0 === input.shebang || "boolean" == typeof input.shebang) && (void 0 === input.webkit || "boolean" == typeof input.webkit) && (void 0 === input.wrapIife || "boolean" == typeof input.wrapIife) && (void 0 === input.wrapFuncArgs || "boolean" == typeof input.wrapFuncArgs) && (void 0 === input.ascii_only || "boolean" == typeof input.ascii_only) && (void 0 === input.indent_level || "number" == typeof input.indent_level) && (void 0 === input.indent_start || "number" == typeof input.indent_start) && (void 0 === input.inline_script || "number" == typeof input.inline_script) && (void 0 === input.keep_numbers || "number" == typeof input.keep_numbers) && (void 0 === input.keep_quoted_props || "boolean" == typeof input.keep_quoted_props) && (void 0 === input.max_line_len || false === input.max_line_len || "number" == typeof input.max_line_len) && (void 0 === input.quote_keys || "boolean" == typeof input.quote_keys) && (void 0 === input.quote_style || "boolean" == typeof input.quote_style) && (void 0 === input.preserve_annotations || "boolean" == typeof input.preserve_annotations) && (void 0 === input.wrap_iife || "boolean" == typeof input.wrap_iife) && (void 0 === input.wrap_func_args || "boolean" == typeof input.wrap_func_args) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "asciiOnly",
                        "beautify",
                        "braces",
                        "comments",
                        "ecma",
                        "indentLevel",
                        "indentStart",
                        "inlineScript",
                        "keepNumbers",
                        "keepQuotedProps",
                        "maxLineLen",
                        "preamble",
                        "quoteKeys",
                        "quoteStyle",
                        "preserveAnnotations",
                        "safari10",
                        "semicolons",
                        "shebang",
                        "webkit",
                        "wrapIife",
                        "wrapFuncArgs",
                        "ascii_only",
                        "indent_level",
                        "indent_start",
                        "inline_script",
                        "keep_numbers",
                        "keep_quoted_props",
                        "max_line_len",
                        "quote_keys",
                        "quote_style",
                        "preserve_annotations",
                        "wrap_iife",
                        "wrap_func_args"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io373 = (input, _exceptionable = true)=>null !== input.test && (void 0 === input.test || "string" == typeof input.test || input.test instanceof RegExp || Array.isArray(input.test) && input.test.every((elem, _index298)=>null != elem && ("string" == typeof elem || elem instanceof RegExp))) && null !== input.include && (void 0 === input.include || "string" == typeof input.include || input.include instanceof RegExp || Array.isArray(input.include) && input.include.every((elem, _index299)=>null != elem && ("string" == typeof elem || elem instanceof RegExp))) && null !== input.exclude && (void 0 === input.exclude || "string" == typeof input.exclude || input.exclude instanceof RegExp || Array.isArray(input.exclude) && input.exclude.every((elem, _index300)=>null != elem && ("string" == typeof elem || elem instanceof RegExp))) && (void 0 === input.removeUnusedLocalIdents || "boolean" == typeof input.removeUnusedLocalIdents) && (void 0 === input.minimizerOptions || "object" == typeof input.minimizerOptions && null !== input.minimizerOptions && false === Array.isArray(input.minimizerOptions) && _io374(input.minimizerOptions, _exceptionable)) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "test",
                        "include",
                        "exclude",
                        "removeUnusedLocalIdents",
                        "minimizerOptions"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io374 = (input, _exceptionable = true)=>(void 0 === input.errorRecovery || "boolean" == typeof input.errorRecovery) && null !== input.targets && (void 0 === input.targets || "string" == typeof input.targets || Array.isArray(input.targets) && input.targets.every((elem, _index301)=>"string" == typeof elem)) && (void 0 === input.include || "object" == typeof input.include && null !== input.include && false === Array.isArray(input.include) && _io79(input.include, _exceptionable)) && (void 0 === input.exclude || "object" == typeof input.exclude && null !== input.exclude && false === Array.isArray(input.exclude) && _io79(input.exclude, _exceptionable)) && (void 0 === input.draft || "object" == typeof input.draft && null !== input.draft && false === Array.isArray(input.draft) && _io80(input.draft, _exceptionable)) && (void 0 === input.drafts || "object" == typeof input.drafts && null !== input.drafts && false === Array.isArray(input.drafts) && _io80(input.drafts, _exceptionable)) && (void 0 === input.nonStandard || "object" == typeof input.nonStandard && null !== input.nonStandard && false === Array.isArray(input.nonStandard) && _io81(input.nonStandard, _exceptionable)) && (void 0 === input.pseudoClasses || "object" == typeof input.pseudoClasses && null !== input.pseudoClasses && false === Array.isArray(input.pseudoClasses) && _io82(input.pseudoClasses, _exceptionable)) && (void 0 === input.unusedSymbols || Array.isArray(input.unusedSymbols) && input.unusedSymbols.every((elem, _index302)=>"string" == typeof elem)) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "errorRecovery",
                        "targets",
                        "include",
                        "exclude",
                        "draft",
                        "drafts",
                        "nonStandard",
                        "pseudoClasses",
                        "unusedSymbols"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io375 = (input, _exceptionable = true)=>(void 0 === input.filename || "string" == typeof input.filename) && (void 0 === input.generate || true) && (void 0 === input.filter || true) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "filename",
                        "generate",
                        "filter"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io376 = (input, _exceptionable = true)=>(void 0 === input.js || true === _iv303.has(input.js)) && (void 0 === input.css || "boolean" == typeof input.css) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "js",
                        "css"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io377 = (input, _exceptionable = true)=>(void 0 === input.enable || "auto" === input.enable || "boolean" == typeof input.enable) && null !== input.test && void 0 !== input.test && ("function" == typeof input.test || input.test instanceof RegExp) && (1 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "enable",
                        "test"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io378 = (input, _exceptionable = true)=>Array.isArray(input.patterns) && input.patterns.every((elem, _index304)=>null != elem && ("string" == typeof elem || "object" == typeof elem && null !== elem && _io379(elem, _exceptionable))) && (1 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "patterns"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io379 = (input, _exceptionable = true)=>"string" == typeof input.from && (void 0 === input.info || "object" == typeof input.info && null !== input.info && false === Array.isArray(input.info) && _io380(input.info, _exceptionable)) && (void 0 === input.context || "string" == typeof input.context) && null !== input.to && (void 0 === input.to || "function" == typeof input.to || "string" == typeof input.to) && (void 0 === input.toType || "string" == typeof input.toType) && (void 0 === input.noErrorOnMissing || "boolean" == typeof input.noErrorOnMissing) && (void 0 === input.force || "boolean" == typeof input.force) && (void 0 === input.priority || "number" == typeof input.priority) && (void 0 === input.globOptions || "object" == typeof input.globOptions && null !== input.globOptions && false === Array.isArray(input.globOptions) && _io382(input.globOptions, _exceptionable)) && (void 0 === input.copyPermissions || "boolean" == typeof input.copyPermissions) && null !== input.transform && (void 0 === input.transform || "function" == typeof input.transform || "object" == typeof input.transform && null !== input.transform && _io383(input.transform, _exceptionable)) && (1 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "from",
                        "info",
                        "context",
                        "to",
                        "toType",
                        "noErrorOnMissing",
                        "force",
                        "priority",
                        "globOptions",
                        "copyPermissions",
                        "transform"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io380 = (input, _exceptionable = true)=>(void 0 === input.immutable || "boolean" == typeof input.immutable) && (void 0 === input.minimized || "boolean" == typeof input.minimized) && (void 0 === input.chunkHash || Array.isArray(input.chunkHash) && input.chunkHash.every((elem, _index305)=>"string" == typeof elem)) && (void 0 === input.contentHash || Array.isArray(input.contentHash) && input.contentHash.every((elem, _index306)=>"string" == typeof elem)) && (void 0 === input.development || "boolean" == typeof input.development) && (void 0 === input.hotModuleReplacement || "boolean" == typeof input.hotModuleReplacement) && (void 0 === input.related || "object" == typeof input.related && null !== input.related && false === Array.isArray(input.related) && _io381(input.related, _exceptionable)) && (void 0 === input.version || "string" == typeof input.version) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "immutable",
                        "minimized",
                        "chunkHash",
                        "contentHash",
                        "development",
                        "hotModuleReplacement",
                        "related",
                        "version"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io381 = (input, _exceptionable = true)=>(void 0 === input.sourceMap || "string" == typeof input.sourceMap) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "sourceMap"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io382 = (input, _exceptionable = true)=>(void 0 === input.caseSensitiveMatch || "boolean" == typeof input.caseSensitiveMatch) && (void 0 === input.dot || "boolean" == typeof input.dot) && (void 0 === input.ignore || Array.isArray(input.ignore) && input.ignore.every((elem, _index307)=>"string" == typeof elem)) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "caseSensitiveMatch",
                        "dot",
                        "ignore"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io383 = (input, _exceptionable = true)=>1 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "transformer"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                });
            const _io384 = (input, _exceptionable = true)=>(void 0 === input.nonce || "string" == typeof input.nonce) && (void 0 === input.sri || "object" == typeof input.sri && null !== input.sri && false === Array.isArray(input.sri) && _io385(input.sri, _exceptionable)) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "nonce",
                        "sri"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io385 = (input, _exceptionable = true)=>(void 0 === input.algorithm || "sha256" === input.algorithm || "sha384" === input.algorithm || "sha512" === input.algorithm) && (void 0 === input.enable || "auto" === input.enable || "boolean" == typeof input.enable) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "algorithm",
                        "enable"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io386 = (input, _exceptionable = true)=>null !== input.removeConsole && (void 0 === input.removeConsole || "boolean" == typeof input.removeConsole || Array.isArray(input.removeConsole) && input.removeConsole.every((elem, _index308)=>"error" === elem || "warn" === elem || "info" === elem || "log" === elem || "table" === elem || "group" === elem)) && (void 0 === input.removeMomentLocale || "boolean" == typeof input.removeMomentLocale) && null !== input.buildCache && (void 0 === input.buildCache || "boolean" == typeof input.buildCache || "object" == typeof input.buildCache && null !== input.buildCache && false === Array.isArray(input.buildCache) && _io387(input.buildCache, _exceptionable)) && null !== input.printFileSize && (void 0 === input.printFileSize || "boolean" == typeof input.printFileSize || "object" == typeof input.printFileSize && null !== input.printFileSize && false === Array.isArray(input.printFileSize) && _io388(input.printFileSize, _exceptionable)) && (void 0 === input.chunkSplit || "object" == typeof input.chunkSplit && null !== input.chunkSplit && false === Array.isArray(input.chunkSplit) && _iu16(input.chunkSplit, _exceptionable)) && (void 0 === input.bundleAnalyze || "object" == typeof input.bundleAnalyze && null !== input.bundleAnalyze && false === Array.isArray(input.bundleAnalyze) && _io393(input.bundleAnalyze, _exceptionable)) && (void 0 === input.preconnect || Array.isArray(input.preconnect) && input.preconnect.every((elem, _index309)=>null != elem && ("string" == typeof elem || "object" == typeof elem && null !== elem && _io394(elem, _exceptionable)))) && (void 0 === input.dnsPrefetch || Array.isArray(input.dnsPrefetch) && input.dnsPrefetch.every((elem, _index310)=>"string" == typeof elem)) && null !== input.preload && (void 0 === input.preload || true === input.preload || "object" == typeof input.preload && null !== input.preload && false === Array.isArray(input.preload) && _io395(input.preload, _exceptionable)) && null !== input.prefetch && (void 0 === input.prefetch || true === input.prefetch || "object" == typeof input.prefetch && null !== input.prefetch && false === Array.isArray(input.prefetch) && _io396(input.prefetch, _exceptionable)) && (void 0 === input.profile || "boolean" == typeof input.profile) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "removeConsole",
                        "removeMomentLocale",
                        "buildCache",
                        "printFileSize",
                        "chunkSplit",
                        "bundleAnalyze",
                        "preconnect",
                        "dnsPrefetch",
                        "preload",
                        "prefetch",
                        "profile"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io387 = (input, _exceptionable = true)=>(void 0 === input.cacheDirectory || "string" == typeof input.cacheDirectory) && (void 0 === input.cacheDigest || Array.isArray(input.cacheDigest) && input.cacheDigest.every((elem, _index311)=>void 0 === elem || "string" == typeof elem)) && (void 0 === input.buildDependencies || Array.isArray(input.buildDependencies) && input.buildDependencies.every((elem, _index312)=>"string" == typeof elem)) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "cacheDirectory",
                        "cacheDigest",
                        "buildDependencies"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io388 = (input, _exceptionable = true)=>null !== input.total && (void 0 === input.total || "function" == typeof input.total || "boolean" == typeof input.total) && (void 0 === input.detail || "boolean" == typeof input.detail) && (void 0 === input.compressed || "boolean" == typeof input.compressed) && (void 0 === input.include || true) && (void 0 === input.exclude || true) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "total",
                        "detail",
                        "compressed",
                        "include",
                        "exclude"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io389 = (input, _exceptionable = true)=>(void 0 === input.strategy || "split-by-module" === input.strategy || "split-by-experience" === input.strategy || "all-in-one" === input.strategy || "single-vendor" === input.strategy) && null !== input.forceSplitting && (void 0 === input.forceSplitting || Array.isArray(input.forceSplitting) && input.forceSplitting.every((elem, _index313)=>elem instanceof RegExp) || "object" == typeof input.forceSplitting && null !== input.forceSplitting && false === Array.isArray(input.forceSplitting) && _io390(input.forceSplitting, _exceptionable)) && null !== input.override && (void 0 === input.override || false === input.override || "object" == typeof input.override && null !== input.override && false === Array.isArray(input.override) && _io122(input.override, _exceptionable)) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "strategy",
                        "forceSplitting",
                        "override"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io390 = (input, _exceptionable = true)=>Object.keys(input).every((key)=>{
                    const value = input[key];
                    if (void 0 === value) return true;
                    return value instanceof RegExp;
                });
            const _io391 = (input, _exceptionable = true)=>"split-by-size" === input.strategy && (void 0 === input.minSize || "number" == typeof input.minSize) && (void 0 === input.maxSize || "number" == typeof input.maxSize) && null !== input.forceSplitting && (void 0 === input.forceSplitting || Array.isArray(input.forceSplitting) && input.forceSplitting.every((elem, _index314)=>elem instanceof RegExp) || "object" == typeof input.forceSplitting && null !== input.forceSplitting && false === Array.isArray(input.forceSplitting) && _io390(input.forceSplitting, _exceptionable)) && null !== input.override && (void 0 === input.override || false === input.override || "object" == typeof input.override && null !== input.override && false === Array.isArray(input.override) && _io122(input.override, _exceptionable)) && (1 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "strategy",
                        "minSize",
                        "maxSize",
                        "forceSplitting",
                        "override"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io392 = (input, _exceptionable = true)=>"custom" === input.strategy && null !== input.splitChunks && (void 0 === input.splitChunks || false === input.splitChunks || "object" == typeof input.splitChunks && null !== input.splitChunks && false === Array.isArray(input.splitChunks) && _io122(input.splitChunks, _exceptionable)) && null !== input.forceSplitting && (void 0 === input.forceSplitting || Array.isArray(input.forceSplitting) && input.forceSplitting.every((elem, _index315)=>elem instanceof RegExp) || "object" == typeof input.forceSplitting && null !== input.forceSplitting && false === Array.isArray(input.forceSplitting) && _io390(input.forceSplitting, _exceptionable)) && null !== input.override && (void 0 === input.override || false === input.override || "object" == typeof input.override && null !== input.override && false === Array.isArray(input.override) && _io122(input.override, _exceptionable)) && (1 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "strategy",
                        "splitChunks",
                        "forceSplitting",
                        "override"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io393 = (input, _exceptionable = true)=>(void 0 === input.analyzerMode || "server" === input.analyzerMode || "static" === input.analyzerMode || "json" === input.analyzerMode || "disabled" === input.analyzerMode) && (void 0 === input.analyzerHost || "string" == typeof input.analyzerHost) && (void 0 === input.analyzerPort || "auto" === input.analyzerPort || "number" == typeof input.analyzerPort) && (void 0 === input.analyzerUrl || true) && (void 0 === input.reportFilename || "string" == typeof input.reportFilename) && null !== input.reportTitle && (void 0 === input.reportTitle || "function" == typeof input.reportTitle || "string" == typeof input.reportTitle) && (void 0 === input.defaultSizes || "gzip" === input.defaultSizes || "parsed" === input.defaultSizes || "stat" === input.defaultSizes) && (void 0 === input.openAnalyzer || "boolean" == typeof input.openAnalyzer) && (void 0 === input.generateStatsFile || "boolean" == typeof input.generateStatsFile) && (void 0 === input.statsFilename || "string" == typeof input.statsFilename) && (null === input.statsOptions || void 0 === input.statsOptions || "none" === input.statsOptions || "verbose" === input.statsOptions || "normal" === input.statsOptions || "errors-only" === input.statsOptions || "errors-warnings" === input.statsOptions || "minimal" === input.statsOptions || "boolean" == typeof input.statsOptions || "object" == typeof input.statsOptions && null !== input.statsOptions && false === Array.isArray(input.statsOptions) && _io117(input.statsOptions, _exceptionable)) && (null === input.excludeAssets || void 0 === input.excludeAssets || "function" == typeof input.excludeAssets || "string" == typeof input.excludeAssets || input.excludeAssets instanceof RegExp || Array.isArray(input.excludeAssets) && input.excludeAssets.every((elem, _index316)=>null != elem && ("function" == typeof elem || "string" == typeof elem || elem instanceof RegExp))) && (void 0 === input.logLevel || "error" === input.logLevel || "warn" === input.logLevel || "info" === input.logLevel || "silent" === input.logLevel) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "analyzerMode",
                        "analyzerHost",
                        "analyzerPort",
                        "analyzerUrl",
                        "reportFilename",
                        "reportTitle",
                        "defaultSizes",
                        "openAnalyzer",
                        "generateStatsFile",
                        "statsFilename",
                        "statsOptions",
                        "excludeAssets",
                        "logLevel"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io394 = (input, _exceptionable = true)=>"string" == typeof input.href && (void 0 === input.crossorigin || "boolean" == typeof input.crossorigin) && (1 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "href",
                        "crossorigin"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io395 = (input, _exceptionable = true)=>(void 0 === input.type || "initial" === input.type || "async-chunks" === input.type || "all-assets" === input.type || "all-chunks" === input.type) && null !== input.include && (void 0 === input.include || "function" == typeof input.include || "string" == typeof input.include || input.include instanceof RegExp || Array.isArray(input.include) && input.include.every((elem, _index317)=>null != elem && ("function" == typeof elem || "string" == typeof elem || elem instanceof RegExp))) && null !== input.exclude && (void 0 === input.exclude || "function" == typeof input.exclude || "string" == typeof input.exclude || input.exclude instanceof RegExp || Array.isArray(input.exclude) && input.exclude.every((elem, _index318)=>null != elem && ("function" == typeof elem || "string" == typeof elem || elem instanceof RegExp))) && (void 0 === input.dedupe || "boolean" == typeof input.dedupe) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "type",
                        "include",
                        "exclude",
                        "dedupe"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io396 = (input, _exceptionable = true)=>(void 0 === input.type || "initial" === input.type || "async-chunks" === input.type || "all-assets" === input.type || "all-chunks" === input.type) && null !== input.include && (void 0 === input.include || "function" == typeof input.include || "string" == typeof input.include || input.include instanceof RegExp || Array.isArray(input.include) && input.include.every((elem, _index319)=>null != elem && ("function" == typeof elem || "string" == typeof elem || elem instanceof RegExp))) && null !== input.exclude && (void 0 === input.exclude || "function" == typeof input.exclude || "string" == typeof input.exclude || input.exclude instanceof RegExp || Array.isArray(input.exclude) && input.exclude.every((elem, _index320)=>null != elem && ("function" == typeof elem || "string" == typeof elem || elem instanceof RegExp))) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "type",
                        "include",
                        "exclude"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io397 = (input, _exceptionable = true)=>"object" == typeof input.options && null !== input.options && _io398(input.options, _exceptionable) && (1 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "options"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io398 = (input, _exceptionable = true)=>(void 0 === input.runtimePlugins || Array.isArray(input.runtimePlugins) && input.runtimePlugins.every((elem, _index321)=>"string" == typeof elem)) && (void 0 === input.implementation || "string" == typeof input.implementation) && (void 0 === input.shareStrategy || "version-first" === input.shareStrategy || "loaded-first" === input.shareStrategy) && (void 0 === input.filename || "string" == typeof input.filename) && "string" == typeof input.name && null !== input.exposes && (void 0 === input.exposes || Array.isArray(input.exposes) && input.exposes.every((elem, _index322)=>null != elem && ("string" == typeof elem || "object" == typeof elem && null !== elem && false === Array.isArray(elem) && _io399(elem, _exceptionable))) || "object" == typeof input.exposes && null !== input.exposes && false === Array.isArray(input.exposes) && _io399(input.exposes, _exceptionable)) && (void 0 === input.library || "object" == typeof input.library && null !== input.library && _io89(input.library, _exceptionable)) && (void 0 === input.remoteType || true === _iv323.has(input.remoteType)) && null !== input.remotes && (void 0 === input.remotes || Array.isArray(input.remotes) && input.remotes.every((elem, _index324)=>null != elem && ("string" == typeof elem || "object" == typeof elem && null !== elem && false === Array.isArray(elem) && _io401(elem, _exceptionable))) || "object" == typeof input.remotes && null !== input.remotes && false === Array.isArray(input.remotes) && _io401(input.remotes, _exceptionable)) && (void 0 === input.runtime || false === input.runtime || "string" == typeof input.runtime) && (void 0 === input.shareScope || "string" == typeof input.shareScope) && null !== input.shared && (void 0 === input.shared || Array.isArray(input.shared) && input.shared.every((elem, _index325)=>null != elem && ("string" == typeof elem || "object" == typeof elem && null !== elem && false === Array.isArray(elem) && _io403(elem, _exceptionable))) || "object" == typeof input.shared && null !== input.shared && false === Array.isArray(input.shared) && _io403(input.shared, _exceptionable)) && (1 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "runtimePlugins",
                        "implementation",
                        "shareStrategy",
                        "filename",
                        "name",
                        "exposes",
                        "library",
                        "remoteType",
                        "remotes",
                        "runtime",
                        "shareScope",
                        "shared"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io399 = (input, _exceptionable = true)=>Object.keys(input).every((key)=>{
                    const value = input[key];
                    if (void 0 === value) return true;
                    return null != value && ("string" == typeof value || Array.isArray(value) && value.every((elem, _index326)=>"string" == typeof elem) || "object" == typeof value && null !== value && _io400(value, _exceptionable));
                });
            const _io400 = (input, _exceptionable = true)=>null !== input["import"] && void 0 !== input["import"] && ("string" == typeof input["import"] || Array.isArray(input["import"]) && input["import"].every((elem, _index327)=>"string" == typeof elem)) && (void 0 === input.name || "string" == typeof input.name) && (1 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "import",
                        "name"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io401 = (input, _exceptionable = true)=>Object.keys(input).every((key)=>{
                    const value = input[key];
                    if (void 0 === value) return true;
                    return null != value && ("string" == typeof value || Array.isArray(value) && value.every((elem, _index328)=>"string" == typeof elem) || "object" == typeof value && null !== value && _io402(value, _exceptionable));
                });
            const _io402 = (input, _exceptionable = true)=>null !== input.external && void 0 !== input.external && ("string" == typeof input.external || Array.isArray(input.external) && input.external.every((elem, _index329)=>"string" == typeof elem)) && (void 0 === input.shareScope || "string" == typeof input.shareScope) && (1 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "external",
                        "shareScope"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io403 = (input, _exceptionable = true)=>Object.keys(input).every((key)=>{
                    const value = input[key];
                    if (void 0 === value) return true;
                    return null != value && ("string" == typeof value || "object" == typeof value && null !== value && false === Array.isArray(value) && _io404(value, _exceptionable));
                });
            const _io404 = (input, _exceptionable = true)=>(void 0 === input.eager || "boolean" == typeof input.eager) && (void 0 === input["import"] || false === input["import"] || "string" == typeof input["import"]) && (void 0 === input.packageName || "string" == typeof input.packageName) && (void 0 === input.requiredVersion || false === input.requiredVersion || "string" == typeof input.requiredVersion) && (void 0 === input.shareKey || "string" == typeof input.shareKey) && (void 0 === input.shareScope || "string" == typeof input.shareScope) && (void 0 === input.singleton || "boolean" == typeof input.singleton) && (void 0 === input.strictVersion || "boolean" == typeof input.strictVersion) && (void 0 === input.version || false === input.version || "string" == typeof input.version) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "eager",
                        "import",
                        "packageName",
                        "requiredVersion",
                        "shareKey",
                        "shareScope",
                        "singleton",
                        "strictVersion",
                        "version"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io405 = (input, _exceptionable = true)=>(void 0 === input.pre || Array.isArray(input.pre) && input.pre.every((elem, _index330)=>"string" == typeof elem)) && (void 0 === input.post || Array.isArray(input.post) && input.post.every((elem, _index331)=>"string" == typeof elem)) && "string" == typeof input.name && (void 0 === input.enforce || "pre" === input.enforce || "post" === input.enforce) && (void 0 === input.remove || Array.isArray(input.remove) && input.remove.every((elem, _index332)=>"string" == typeof elem)) && true && true && (2 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "pre",
                        "post",
                        "name",
                        "enforce",
                        "remove",
                        "apply",
                        "setup"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io406 = (input, _exceptionable = true)=>"string" == typeof input["__@toStringTag@6659"] && (1 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "__@toStringTag@6659"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io407 = (input, _exceptionable = true)=>(void 0 === input.assetPrefix || "string" == typeof input.assetPrefix) && (void 0 === input.cleanDistPath || "boolean" == typeof input.cleanDistPath) && null !== input.copy && (void 0 === input.copy || Array.isArray(input.copy) && input.copy.every((elem, _index333)=>null != elem && ("string" == typeof elem || "object" == typeof elem && null !== elem && _io379(elem, _exceptionable))) || "object" == typeof input.copy && null !== input.copy && _io378(input.copy, _exceptionable)) && (void 0 === input.cssModules || "object" == typeof input.cssModules && null !== input.cssModules && false === Array.isArray(input.cssModules) && _io408(input.cssModules, _exceptionable)) && (void 0 === input.dataUriLimit || "number" == typeof input.dataUriLimit) && (void 0 === input.distPath || "object" == typeof input.distPath && null !== input.distPath && false === Array.isArray(input.distPath) && _io409(input.distPath, _exceptionable)) && null !== input.filename && (void 0 === input.filename || "string" == typeof input.filename || "object" == typeof input.filename && null !== input.filename && false === Array.isArray(input.filename) && _io410(input.filename, _exceptionable)) && (void 0 === input.filenameHash || "string" == typeof input.filenameHash || "boolean" == typeof input.filenameHash) && null !== input.inlineScripts && (void 0 === input.inlineScripts || "function" == typeof input.inlineScripts || "boolean" == typeof input.inlineScripts || input.inlineScripts instanceof RegExp || "object" == typeof input.inlineScripts && null !== input.inlineScripts && _io377(input.inlineScripts, _exceptionable)) && (void 0 === input.legalComments || "none" === input.legalComments || "inline" === input.legalComments || "linked" === input.legalComments) && null !== input.minify && (void 0 === input.minify || "boolean" == typeof input.minify || "object" == typeof input.minify && null !== input.minify && false === Array.isArray(input.minify) && _io411(input.minify, _exceptionable)) && null !== input.sourceMap && (void 0 === input.sourceMap || "boolean" == typeof input.sourceMap || "object" == typeof input.sourceMap && null !== input.sourceMap && false === Array.isArray(input.sourceMap) && _io412(input.sourceMap, _exceptionable)) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "assetPrefix",
                        "cleanDistPath",
                        "copy",
                        "cssModules",
                        "dataUriLimit",
                        "distPath",
                        "filename",
                        "filenameHash",
                        "inlineScripts",
                        "legalComments",
                        "minify",
                        "sourceMap"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io408 = (input, _exceptionable = true)=>null !== input.auto && (void 0 === input.auto || "function" == typeof input.auto || "boolean" == typeof input.auto || input.auto instanceof RegExp) && (void 0 === input.exportGlobals || "boolean" == typeof input.exportGlobals) && (void 0 === input.exportLocalsConvention || "asIs" === input.exportLocalsConvention || "camelCase" === input.exportLocalsConvention || "camelCaseOnly" === input.exportLocalsConvention || "dashes" === input.exportLocalsConvention || "dashesOnly" === input.exportLocalsConvention) && (void 0 === input.localIdentName || "string" == typeof input.localIdentName) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "auto",
                        "exportGlobals",
                        "exportLocalsConvention",
                        "localIdentName"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io409 = (input, _exceptionable = true)=>(void 0 === input.intermediate || "string" == typeof input.intermediate) && (void 0 === input.root || "string" == typeof input.root) && (void 0 === input.js || "string" == typeof input.js) && (void 0 === input.jsAsync || "string" == typeof input.jsAsync) && (void 0 === input.css || "string" == typeof input.css) && (void 0 === input.cssAsync || "string" == typeof input.cssAsync) && (void 0 === input.svg || "string" == typeof input.svg) && (void 0 === input.font || "string" == typeof input.font) && (void 0 === input.html || "string" == typeof input.html) && (void 0 === input.wasm || "string" == typeof input.wasm) && (void 0 === input.image || "string" == typeof input.image) && (void 0 === input.media || "string" == typeof input.media) && (void 0 === input.assets || "string" == typeof input.assets) && (void 0 === input.favicon || "string" == typeof input.favicon) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "intermediate",
                        "root",
                        "js",
                        "jsAsync",
                        "css",
                        "cssAsync",
                        "svg",
                        "font",
                        "html",
                        "wasm",
                        "image",
                        "media",
                        "assets",
                        "favicon"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io410 = (input, _exceptionable = true)=>(void 0 === input.bundle || "string" == typeof input.bundle) && (void 0 === input.template || "string" == typeof input.template) && null !== input.js && (void 0 === input.js || "function" == typeof input.js || "string" == typeof input.js) && null !== input.css && (void 0 === input.css || "function" == typeof input.css || "string" == typeof input.css) && null !== input.svg && (void 0 === input.svg || "function" == typeof input.svg || "string" == typeof input.svg) && null !== input.font && (void 0 === input.font || "function" == typeof input.font || "string" == typeof input.font) && null !== input.image && (void 0 === input.image || "function" == typeof input.image || "string" == typeof input.image) && null !== input.media && (void 0 === input.media || "function" == typeof input.media || "string" == typeof input.media) && (void 0 === input.wasm || "string" == typeof input.wasm) && null !== input.assets && (void 0 === input.assets || "function" == typeof input.assets || "string" == typeof input.assets) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "bundle",
                        "template",
                        "js",
                        "css",
                        "svg",
                        "font",
                        "image",
                        "media",
                        "wasm",
                        "assets"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io411 = (input, _exceptionable = true)=>(void 0 === input.css || "boolean" == typeof input.css) && (void 0 === input.js || "boolean" == typeof input.js) && (void 0 === input.jsOptions || "object" == typeof input.jsOptions && null !== input.jsOptions && false === Array.isArray(input.jsOptions) && _io366(input.jsOptions, _exceptionable)) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "css",
                        "js",
                        "jsOptions"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io412 = (input, _exceptionable = true)=>(void 0 === input.js || true === _iv334.has(input.js)) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "js"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io413 = (input, _exceptionable = true)=>null !== input.buildCache && (void 0 === input.buildCache || "boolean" == typeof input.buildCache || "object" == typeof input.buildCache && null !== input.buildCache && false === Array.isArray(input.buildCache) && _io414(input.buildCache, _exceptionable)) && (void 0 === input.chunkSplit || "object" == typeof input.chunkSplit && null !== input.chunkSplit && false === Array.isArray(input.chunkSplit) && _iu17(input.chunkSplit, _exceptionable)) && (void 0 === input.profile || "boolean" == typeof input.profile) && null !== input.removeConsole && (void 0 === input.removeConsole || "boolean" == typeof input.removeConsole || Array.isArray(input.removeConsole) && input.removeConsole.every((elem, _index335)=>"string" == typeof elem)) && null !== input.printFileSize && (void 0 === input.printFileSize || "boolean" == typeof input.printFileSize || "object" == typeof input.printFileSize && null !== input.printFileSize && false === Array.isArray(input.printFileSize) && _io388(input.printFileSize, _exceptionable)) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "buildCache",
                        "chunkSplit",
                        "profile",
                        "removeConsole",
                        "printFileSize"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io414 = (input, _exceptionable = true)=>(void 0 === input.cacheDigest || Array.isArray(input.cacheDigest) && input.cacheDigest.every((elem, _index336)=>void 0 === elem || "string" == typeof elem)) && (void 0 === input.cacheDirectory || "string" == typeof input.cacheDirectory) && (void 0 === input.buildDependencies || Array.isArray(input.buildDependencies) && input.buildDependencies.every((elem, _index337)=>"string" == typeof elem)) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "cacheDigest",
                        "cacheDirectory",
                        "buildDependencies"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io415 = (input, _exceptionable = true)=>(void 0 === input.strategy || "split-by-module" === input.strategy || "split-by-experience" === input.strategy || "all-in-one" === input.strategy || "single-vendor" === input.strategy) && null !== input.override && (void 0 === input.override || false === input.override || "object" == typeof input.override && null !== input.override && false === Array.isArray(input.override) && _io122(input.override, _exceptionable)) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "strategy",
                        "override"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io416 = (input, _exceptionable = true)=>"split-by-size" === input.strategy && (void 0 === input.minSize || "number" == typeof input.minSize) && (void 0 === input.maxSize || "number" == typeof input.maxSize) && null !== input.override && (void 0 === input.override || false === input.override || "object" == typeof input.override && null !== input.override && false === Array.isArray(input.override) && _io122(input.override, _exceptionable)) && (1 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "strategy",
                        "minSize",
                        "maxSize",
                        "override"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io417 = (input, _exceptionable = true)=>"custom" === input.strategy && null !== input.splitChunks && (void 0 === input.splitChunks || false === input.splitChunks || "object" == typeof input.splitChunks && null !== input.splitChunks && false === Array.isArray(input.splitChunks) && _io122(input.splitChunks, _exceptionable)) && (1 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "strategy",
                        "splitChunks"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io418 = (input, _exceptionable = true)=>(void 0 === input.alias || "object" == typeof input.alias && null !== input.alias && false === Array.isArray(input.alias) && _io419(input.alias, _exceptionable)) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "alias"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io419 = (input, _exceptionable = true)=>Object.keys(input).every((key)=>{
                    const value = input[key];
                    if (void 0 === value) return true;
                    return null != value && (false === value || "string" == typeof value || Array.isArray(value) && value.every((elem, _index338)=>"string" == typeof elem));
                });
            const _io420 = (input, _exceptionable = true)=>(void 0 === input.base || "string" == typeof input.base) && (void 0 === input.headers || "object" == typeof input.headers && null !== input.headers && false === Array.isArray(input.headers) && _io131(input.headers, _exceptionable)) && (void 0 === input.host || "string" == typeof input.host) && (void 0 === input.port || "number" == typeof input.port) && (void 0 === input.strictPort || "boolean" == typeof input.strictPort) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "base",
                        "headers",
                        "host",
                        "port",
                        "strictPort"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io421 = (input, _exceptionable = true)=>(void 0 === input.alias || "object" == typeof input.alias && null !== input.alias && false === Array.isArray(input.alias) && _io419(input.alias, _exceptionable)) && null !== input.assetsInclude && (void 0 === input.assetsInclude || "function" == typeof input.assetsInclude || "string" == typeof input.assetsInclude || input.assetsInclude instanceof RegExp || Array.isArray(input.assetsInclude) && (_ia0(input.assetsInclude, _exceptionable) || false) || "object" == typeof input.assetsInclude && null !== input.assetsInclude && false === Array.isArray(input.assetsInclude) && _io174(input.assetsInclude, _exceptionable)) && (void 0 === input.decorators || "object" == typeof input.decorators && null !== input.decorators && false === Array.isArray(input.decorators) && _io422(input.decorators, _exceptionable)) && (void 0 === input.define || "object" == typeof input.define && null !== input.define && false === Array.isArray(input.define) && _io423(input.define, _exceptionable)) && null !== input.entry && (void 0 === input.entry || "string" == typeof input.entry || Array.isArray(input.entry) && input.entry.every((elem, _index339)=>"string" == typeof elem) || "object" == typeof input.entry && null !== input.entry && false === Array.isArray(input.entry) && _io424(input.entry, _exceptionable)) && (void 0 === input.exclude || Array.isArray(input.exclude) && input.exclude.every((elem, _index340)=>null != elem && ("function" == typeof elem || "string" == typeof elem || elem instanceof RegExp || Array.isArray(elem) && (_ia0(elem, _exceptionable) || false) || "object" == typeof elem && null !== elem && false === Array.isArray(elem) && _io174(elem, _exceptionable)))) && (void 0 === input.include || Array.isArray(input.include) && input.include.every((elem, _index341)=>null != elem && ("function" == typeof elem || "string" == typeof elem || elem instanceof RegExp || Array.isArray(elem) && (_ia0(elem, _exceptionable) || false) || "object" == typeof elem && null !== elem && false === Array.isArray(elem) && _io174(elem, _exceptionable)))) && null !== input.preEntry && (void 0 === input.preEntry || "string" == typeof input.preEntry || Array.isArray(input.preEntry) && input.preEntry.every((elem, _index342)=>"string" == typeof elem)) && (void 0 === input.transformImport || Array.isArray(input.transformImport) && input.transformImport.every((elem, _index343)=>"object" == typeof elem && null !== elem && _io426(elem, _exceptionable))) && (void 0 === input.tsconfigPath || "string" == typeof input.tsconfigPath) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "alias",
                        "assetsInclude",
                        "decorators",
                        "define",
                        "entry",
                        "exclude",
                        "include",
                        "preEntry",
                        "transformImport",
                        "tsconfigPath"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io422 = (input, _exceptionable = true)=>(void 0 === input.version || "2022-03" === input.version || "legacy" === input.version) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "version"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io423 = (input, _exceptionable = true)=>Object.keys(input).every((key)=>{
                    const value = input[key];
                    if (void 0 === value) return true;
                    return null !== value && (void 0 === value || "string" == typeof value || "number" == typeof value || "boolean" == typeof value || "object" == typeof value && null !== value && false === Array.isArray(value) && _io22(value, _exceptionable));
                });
            const _io424 = (input, _exceptionable = true)=>Object.keys(input).every((key)=>{
                    const value = input[key];
                    if (void 0 === value) return true;
                    return null != value && ("string" == typeof value || Array.isArray(value) && value.every((elem, _index344)=>"string" == typeof elem) || "object" == typeof value && null !== value && false === Array.isArray(value) && _io425(value, _exceptionable));
                });
            const _io425 = (input, _exceptionable = true)=>null !== input["import"] && (void 0 === input["import"] || "string" == typeof input["import"] || Array.isArray(input["import"]) && input["import"].every((elem, _index345)=>"string" == typeof elem)) && (void 0 === input.publicPath || "string" == typeof input.publicPath) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "import",
                        "publicPath"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io426 = (input, _exceptionable = true)=>(void 0 === input.camelToDashComponentName || "boolean" == typeof input.camelToDashComponentName) && (void 0 === input.customName || "string" == typeof input.customName) && "string" == typeof input.libraryName && (void 0 === input.libraryDirectory || "string" == typeof input.libraryDirectory) && (void 0 === input.transformToDefaultImport || "boolean" == typeof input.transformToDefaultImport) && (1 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "camelToDashComponentName",
                        "customName",
                        "libraryName",
                        "libraryDirectory",
                        "transformToDefaultImport"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io427 = (input, _exceptionable = true)=>null !== input.bundlerChain && (void 0 === input.bundlerChain || "function" == typeof input.bundlerChain || Array.isArray(input.bundlerChain) && input.bundlerChain.every((elem, _index346)=>true)) && (void 0 === input.cssLoader || "object" == typeof input.cssLoader && null !== input.cssLoader && false === Array.isArray(input.cssLoader) && _io428(input.cssLoader, _exceptionable)) && (void 0 === input.cssExtract || "object" == typeof input.cssExtract && null !== input.cssExtract && false === Array.isArray(input.cssExtract) && _io430(input.cssExtract, _exceptionable)) && (void 0 === input.rsdoctor || "object" == typeof input.rsdoctor && null !== input.rsdoctor && false === Array.isArray(input.rsdoctor) && _io433(input.rsdoctor, _exceptionable)) && null !== input.rspack && (void 0 === input.rspack || "function" == typeof input.rspack || Array.isArray(input.rspack) && input.rspack.every((elem, _index347)=>null != elem && ("function" == typeof elem || "object" == typeof elem && null !== elem && false === Array.isArray(elem) && _io86(elem, _exceptionable))) || "object" == typeof input.rspack && null !== input.rspack && false === Array.isArray(input.rspack) && _io86(input.rspack, _exceptionable)) && null !== input.swc && (void 0 === input.swc || "function" == typeof input.swc || Array.isArray(input.swc) && input.swc.every((elem, _index348)=>null != elem && ("function" == typeof elem || "object" == typeof elem && null !== elem && false === Array.isArray(elem) && _io43(elem, _exceptionable))) || "object" == typeof input.swc && null !== input.swc && false === Array.isArray(input.swc) && _io43(input.swc, _exceptionable)) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "bundlerChain",
                        "cssLoader",
                        "cssExtract",
                        "rsdoctor",
                        "rspack",
                        "swc"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io428 = (input, _exceptionable = true)=>(void 0 === input.importLoaders || 0 === input.importLoaders || 1 === input.importLoaders || 2 === input.importLoaders) && null !== input.modules && (void 0 === input.modules || "boolean" == typeof input.modules || "object" == typeof input.modules && null !== input.modules && false === Array.isArray(input.modules) && _io429(input.modules, _exceptionable)) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "importLoaders",
                        "modules"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io429 = (input, _exceptionable = true)=>null !== input.auto && (void 0 === input.auto || "function" == typeof input.auto || "boolean" == typeof input.auto || input.auto instanceof RegExp) && (void 0 === input.exportLocalsConvention || "asIs" === input.exportLocalsConvention || "camelCase" === input.exportLocalsConvention || "camelCaseOnly" === input.exportLocalsConvention || "dashes" === input.exportLocalsConvention || "dashesOnly" === input.exportLocalsConvention) && (void 0 === input.localIdentName || "string" == typeof input.localIdentName) && (void 0 === input.namedExport || "boolean" == typeof input.namedExport) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "auto",
                        "exportLocalsConvention",
                        "localIdentName",
                        "namedExport"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io430 = (input, _exceptionable = true)=>(void 0 === input.loaderOptions || "object" == typeof input.loaderOptions && null !== input.loaderOptions && false === Array.isArray(input.loaderOptions) && _io431(input.loaderOptions, _exceptionable)) && (void 0 === input.pluginOptions || "object" == typeof input.pluginOptions && null !== input.pluginOptions && false === Array.isArray(input.pluginOptions) && _io432(input.pluginOptions, _exceptionable)) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "loaderOptions",
                        "pluginOptions"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io431 = (input, _exceptionable = true)=>(void 0 === input.esModule || "boolean" == typeof input.esModule) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "esModule"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io432 = (input, _exceptionable = true)=>(void 0 === input.ignoreOrder || "boolean" == typeof input.ignoreOrder) && (void 0 === input.pathinfo || "boolean" == typeof input.pathinfo) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "ignoreOrder",
                        "pathinfo"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io433 = (input, _exceptionable = true)=>(void 0 === input.experiments || "object" == typeof input.experiments && null !== input.experiments && false === Array.isArray(input.experiments) && _io434(input.experiments, _exceptionable)) && (void 0 === input.linter || "object" == typeof input.linter && null !== input.linter && false === Array.isArray(input.linter) && _io435(input.linter, _exceptionable)) && null !== input.features && (void 0 === input.features || Array.isArray(input.features) && input.features.every((elem, _index349)=>"plugins" === elem || "loader" === elem || "bundle" === elem || "resolver" === elem || "treeShaking" === elem || "lite" === elem) || "object" == typeof input.features && null !== input.features && false === Array.isArray(input.features) && _io442(input.features, _exceptionable)) && (void 0 === input.mode || "normal" === input.mode || "lite" === input.mode || "brief" === input.mode) && (void 0 === input.loaderInterceptorOptions || "object" == typeof input.loaderInterceptorOptions && null !== input.loaderInterceptorOptions && false === Array.isArray(input.loaderInterceptorOptions) && _io443(input.loaderInterceptorOptions, _exceptionable)) && (void 0 === input.disableClientServer || "boolean" == typeof input.disableClientServer) && (void 0 === input.sdkInstance || "object" == typeof input.sdkInstance && null !== input.sdkInstance && _io444(input.sdkInstance, _exceptionable)) && (void 0 === input.supports || "object" == typeof input.supports && null !== input.supports && false === Array.isArray(input.supports) && _io457(input.supports, _exceptionable)) && (void 0 === input.port || "number" == typeof input.port) && (void 0 === input.printLog || "object" == typeof input.printLog && null !== input.printLog && _io447(input.printLog, _exceptionable)) && (void 0 === input.brief || "object" == typeof input.brief && null !== input.brief && _io448(input.brief, _exceptionable)) && (void 0 === input.innerClientPath || "string" == typeof input.innerClientPath) && (void 0 === input.output || "object" == typeof input.output && null !== input.output && false === Array.isArray(input.output) && _io458(input.output, _exceptionable)) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "experiments",
                        "linter",
                        "features",
                        "mode",
                        "loaderInterceptorOptions",
                        "disableClientServer",
                        "sdkInstance",
                        "supports",
                        "port",
                        "printLog",
                        "brief",
                        "innerClientPath",
                        "output"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io434 = (input, _exceptionable = true)=>(void 0 === input.enableNativePlugin || "boolean" == typeof input.enableNativePlugin) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "enableNativePlugin"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io435 = (input, _exceptionable = true)=>(void 0 === input.rules || "object" == typeof input.rules && null !== input.rules && false === Array.isArray(input.rules) && _io436(input.rules, _exceptionable)) && (void 0 === input.level || "Ignore" === input.level || "Warn" === input.level || "Error" === input.level) && (void 0 === input["extends"] || Array.isArray(input["extends"]) && 0 === input["extends"].length) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "rules",
                        "level",
                        "extends"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io436 = (input, _exceptionable = true)=>null !== input["duplicate-package"] && (void 0 === input["duplicate-package"] || "off" === input["duplicate-package"] || "Ignore" === input["duplicate-package"] || "Warn" === input["duplicate-package"] || "Error" === input["duplicate-package"] || "on" === input["duplicate-package"] || Array.isArray(input["duplicate-package"]) && 2 === input["duplicate-package"].length && ("off" === input["duplicate-package"][0] || "Ignore" === input["duplicate-package"][0] || "Warn" === input["duplicate-package"][0] || "Error" === input["duplicate-package"][0] || "on" === input["duplicate-package"][0]) && "object" == typeof input["duplicate-package"][1] && null !== input["duplicate-package"][1] && _io437(input["duplicate-package"][1], _exceptionable)) && null !== input["default-import-check"] && (void 0 === input["default-import-check"] || "off" === input["default-import-check"] || "Ignore" === input["default-import-check"] || "Warn" === input["default-import-check"] || "Error" === input["default-import-check"] || "on" === input["default-import-check"] || Array.isArray(input["default-import-check"]) && 2 === input["default-import-check"].length && ("off" === input["default-import-check"][0] || "Ignore" === input["default-import-check"][0] || "Warn" === input["default-import-check"][0] || "Error" === input["default-import-check"][0] || "on" === input["default-import-check"][0]) && "object" == typeof input["default-import-check"][1] && null !== input["default-import-check"][1] && _io438(input["default-import-check"][1], _exceptionable)) && null !== input["loader-performance-optimization"] && (void 0 === input["loader-performance-optimization"] || "off" === input["loader-performance-optimization"] || "Ignore" === input["loader-performance-optimization"] || "Warn" === input["loader-performance-optimization"] || "Error" === input["loader-performance-optimization"] || "on" === input["loader-performance-optimization"] || Array.isArray(input["loader-performance-optimization"]) && 2 === input["loader-performance-optimization"].length && ("off" === input["loader-performance-optimization"][0] || "Ignore" === input["loader-performance-optimization"][0] || "Warn" === input["loader-performance-optimization"][0] || "Error" === input["loader-performance-optimization"][0] || "on" === input["loader-performance-optimization"][0]) && "object" == typeof input["loader-performance-optimization"][1] && null !== input["loader-performance-optimization"][1] && false === Array.isArray(input["loader-performance-optimization"][1]) && _io439(input["loader-performance-optimization"][1], _exceptionable)) && null !== input["ecma-version-check"] && (void 0 === input["ecma-version-check"] || "off" === input["ecma-version-check"] || "Ignore" === input["ecma-version-check"] || "Warn" === input["ecma-version-check"] || "Error" === input["ecma-version-check"] || "on" === input["ecma-version-check"] || Array.isArray(input["ecma-version-check"]) && 2 === input["ecma-version-check"].length && ("off" === input["ecma-version-check"][0] || "Ignore" === input["ecma-version-check"][0] || "Warn" === input["ecma-version-check"][0] || "Error" === input["ecma-version-check"][0] || "on" === input["ecma-version-check"][0]) && "object" == typeof input["ecma-version-check"][1] && null !== input["ecma-version-check"][1] && false === Array.isArray(input["ecma-version-check"][1]) && _io440(input["ecma-version-check"][1], _exceptionable)) && null !== input["cross-chunks-package"] && (void 0 === input["cross-chunks-package"] || "off" === input["cross-chunks-package"] || "Ignore" === input["cross-chunks-package"] || "Warn" === input["cross-chunks-package"] || "Error" === input["cross-chunks-package"] || "on" === input["cross-chunks-package"] || Array.isArray(input["cross-chunks-package"]) && 2 === input["cross-chunks-package"].length && ("off" === input["cross-chunks-package"][0] || "Ignore" === input["cross-chunks-package"][0] || "Warn" === input["cross-chunks-package"][0] || "Error" === input["cross-chunks-package"][0] || "on" === input["cross-chunks-package"][0]) && "object" == typeof input["cross-chunks-package"][1] && null !== input["cross-chunks-package"][1] && _io441(input["cross-chunks-package"][1], _exceptionable)) && Object.keys(input).every((key)=>{
                    if ([
                        "duplicate-package",
                        "default-import-check",
                        "loader-performance-optimization",
                        "ecma-version-check",
                        "cross-chunks-package"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return null != value && ("off" === value || "Ignore" === value || "Warn" === value || "Error" === value || "on" === value || Array.isArray(value) && 2 === value.length && ("off" === value[0] || "Ignore" === value[0] || "Warn" === value[0] || "Error" === value[0] || "on" === value[0]) && true);
                });
            const _io437 = (input, _exceptionable = true)=>("null" === input.checkVersion || "prerelease" === input.checkVersion || "prepatch" === input.checkVersion || "patch" === input.checkVersion || "preminor" === input.checkVersion || "minor" === input.checkVersion || "premajor" === input.checkVersion || "major" === input.checkVersion) && Array.isArray(input.ignore) && input.ignore.every((elem, _index350)=>"string" == typeof elem) && (2 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "checkVersion",
                        "ignore"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io438 = (input, _exceptionable = true)=>Array.isArray(input.ignore) && input.ignore.every((elem, _index351)=>"string" == typeof elem) && (1 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "ignore"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io439 = (input, _exceptionable = true)=>(void 0 === input.ignore || Array.isArray(input.ignore) && input.ignore.every((elem, _index352)=>null != elem && ("string" == typeof elem || elem instanceof RegExp))) && (void 0 === input.threshold || "number" == typeof input.threshold) && (void 0 === input.extensions || Array.isArray(input.extensions) && input.extensions.every((elem, _index353)=>null != elem && ("string" == typeof elem || elem instanceof RegExp))) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "ignore",
                        "threshold",
                        "extensions"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io440 = (input, _exceptionable = true)=>(void 0 === input.targets || Array.isArray(input.targets) && input.targets.every((elem, _index354)=>"string" == typeof elem)) && null !== input.exclude && (void 0 === input.exclude || input.exclude instanceof RegExp || Array.isArray(input.exclude) && input.exclude.every((elem, _index355)=>elem instanceof RegExp)) && null !== input.excludeOutput && (void 0 === input.excludeOutput || input.excludeOutput instanceof RegExp || Array.isArray(input.excludeOutput) && input.excludeOutput.every((elem, _index356)=>elem instanceof RegExp)) && (void 0 === input.ecmaVersion || true === _iv357.has(input.ecmaVersion)) && (void 0 === input.excludeErrorLogs || Array.isArray(input.excludeErrorLogs) && input.excludeErrorLogs.every((elem, _index358)=>"output" === elem || "code" === elem || "source" === elem || "reason" === elem)) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "targets",
                        "exclude",
                        "excludeOutput",
                        "ecmaVersion",
                        "excludeErrorLogs"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io441 = (input, _exceptionable = true)=>Array.isArray(input.ignore) && input.ignore.every((elem, _index359)=>"string" == typeof elem) && (1 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "ignore"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io442 = (input, _exceptionable = true)=>(void 0 === input.loader || "boolean" == typeof input.loader) && (void 0 === input.plugins || "boolean" == typeof input.plugins) && (void 0 === input.resolver || "boolean" == typeof input.resolver) && (void 0 === input.bundle || "boolean" == typeof input.bundle) && (void 0 === input.treeShaking || "boolean" == typeof input.treeShaking) && (void 0 === input.lite || "boolean" == typeof input.lite) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "loader",
                        "plugins",
                        "resolver",
                        "bundle",
                        "treeShaking",
                        "lite"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io443 = (input, _exceptionable = true)=>(void 0 === input.skipLoaders || Array.isArray(input.skipLoaders) && input.skipLoaders.every((elem, _index360)=>"string" == typeof elem)) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "skipLoaders"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io444 = (input, _exceptionable = true)=>"object" == typeof input.server && null !== input.server && _io445(input.server, _exceptionable) && (void 0 === input.extraConfig || "object" == typeof input.extraConfig && null !== input.extraConfig && false === Array.isArray(input.extraConfig) && _io446(input.extraConfig, _exceptionable)) && (0 === input.type || 1 === input.type || 2 === input.type || 3 === input.type || 4 === input.type) && "string" == typeof input._root && true && true && true && true && true && true && true && true && true && true && true && true && "string" == typeof input._name && "string" == typeof input.hash && "string" == typeof input.root && "number" == typeof input.pid && "object" == typeof input.hooks && null !== input.hooks && _io449(input.hooks, _exceptionable) && "object" == typeof input._envinfo && null !== input._envinfo && _io452(input._envinfo, _exceptionable) && true && true && "string" == typeof input.diskManifestPath && (void 0 === input.cloudData || "object" == typeof input.cloudData && null !== input.cloudData && _io453(input.cloudData, _exceptionable)) && (24 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "server",
                        "extraConfig",
                        "type",
                        "_root",
                        "_summary",
                        "_configs",
                        "_errors",
                        "_loader",
                        "_loaderStart",
                        "_resolver",
                        "_plugin",
                        "_moduleGraph",
                        "_chunkGraph",
                        "_rawSourceMapCache",
                        "_sourceMap",
                        "_packageGraph",
                        "_name",
                        "hash",
                        "root",
                        "pid",
                        "hooks",
                        "_envinfo",
                        "_clientRoutes",
                        "_outputDir",
                        "diskManifestPath",
                        "cloudData"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io445 = (input, _exceptionable = true)=>"number" == typeof input.port && true && true && true && (4 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "port",
                        "get",
                        "post",
                        "dispose"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io446 = (input, _exceptionable = true)=>(void 0 === input.innerClientPath || "string" == typeof input.innerClientPath) && (void 0 === input.disableClientServer || "boolean" == typeof input.disableClientServer) && (void 0 === input.noServer || "boolean" == typeof input.noServer) && (void 0 === input.printLog || "object" == typeof input.printLog && null !== input.printLog && _io447(input.printLog, _exceptionable)) && (void 0 === input.mode || "normal" === input.mode || "lite" === input.mode || "brief" === input.mode) && (void 0 === input.brief || "object" == typeof input.brief && null !== input.brief && _io448(input.brief, _exceptionable)) && (void 0 === input.compressData || "boolean" == typeof input.compressData) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "innerClientPath",
                        "disableClientServer",
                        "noServer",
                        "printLog",
                        "mode",
                        "brief",
                        "compressData"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io447 = (input, _exceptionable = true)=>"boolean" == typeof input.serverUrls && (1 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "serverUrls"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io448 = (input, _exceptionable = true)=>(void 0 === input.reportHtmlName || "string" == typeof input.reportHtmlName) && "boolean" == typeof input.writeDataJson && (1 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "reportHtmlName",
                        "writeDataJson"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io449 = (input, _exceptionable = true)=>"object" == typeof input.afterSaveManifest && null !== input.afterSaveManifest && _io450(input.afterSaveManifest, _exceptionable) && (1 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "afterSaveManifest"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io450 = (input, _exceptionable = true)=>(void 0 === input.name || "string" == typeof input.name) && Array.isArray(input.interceptors) && input.interceptors.every((elem, _index361)=>"object" == typeof elem && null !== elem && false === Array.isArray(elem) && _io451(elem, _exceptionable)) && Array.isArray(input.taps) && input.taps.every((elem, _index362)=>"object" == typeof elem && null !== elem && _io272(elem, _exceptionable)) && (2 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "name",
                        "interceptors",
                        "taps"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io451 = (input, _exceptionable = true)=>(void 0 === input.name || "string" == typeof input.name) && (void 0 === input.tap || true) && (void 0 === input.call || true) && (void 0 === input.loop || true) && (void 0 === input.error || true) && (void 0 === input.result || true) && (void 0 === input.done || true) && (void 0 === input.register || true) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "name",
                        "tap",
                        "call",
                        "loop",
                        "error",
                        "result",
                        "done",
                        "register"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io452 = (input, _exceptionable = true)=>"string" == typeof input.os && "string" == typeof input.cpu && "string" == typeof input.memory && "string" == typeof input.nodeVersion && "string" == typeof input.yarnVersion && "string" == typeof input.npmVersion && "string" == typeof input.pnpmVersion && Object.keys(input).every((key)=>{
                    if ([
                        "os",
                        "cpu",
                        "memory",
                        "nodeVersion",
                        "yarnVersion",
                        "npmVersion",
                        "pnpmVersion"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return "string" == typeof value;
                });
            const _io453 = (input, _exceptionable = true)=>"object" == typeof input.data && null !== input.data && false === Array.isArray(input.data) && _io454(input.data, _exceptionable) && (void 0 === input.cloudData || "object" == typeof input.cloudData && null !== input.cloudData && false === Array.isArray(input.cloudData) && _io454(input.cloudData, _exceptionable)) && (void 0 === input.__LOCAL__SERVER__ || "boolean" == typeof input.__LOCAL__SERVER__) && (void 0 === input.__SOCKET__PORT__ || "string" == typeof input.__SOCKET__PORT__) && (void 0 === input.__SOCKET__URL__ || "string" == typeof input.__SOCKET__URL__) && "object" == typeof input.client && null !== input.client && _io455(input.client, _exceptionable) && (void 0 === input.name || "string" == typeof input.name) && (void 0 === input.cloudManifestUrl || "string" == typeof input.cloudManifestUrl) && (void 0 === input.series || Array.isArray(input.series) && input.series.every((elem, _index363)=>"object" == typeof elem && null !== elem && _io456(elem, _exceptionable))) && (2 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "data",
                        "cloudData",
                        "__LOCAL__SERVER__",
                        "__SOCKET__PORT__",
                        "__SOCKET__URL__",
                        "client",
                        "name",
                        "cloudManifestUrl",
                        "series"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io454 = (input, _exceptionable = true)=>Object.keys(input).every((key)=>{
                    const value = input[key];
                    if (void 0 === value) return true;
                    return null != value && ("string" == typeof value || Array.isArray(value) && value.every((elem, _index364)=>"string" == typeof elem));
                });
            const _io455 = (input, _exceptionable = true)=>Array.isArray(input.enableRoutes) && input.enableRoutes.every((elem, _index366)=>"Overall" === elem || "Compile.WebpackLoaders" === elem || "Compile.ModuleResolve" === elem || "Compile.WebpackPlugins" === elem || "Bundle.BundleSize" === elem || "Bundle.ModuleGraph" === elem || "Bundle.TreeShaking" === elem) && (1 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "enableRoutes"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io456 = (input, _exceptionable = true)=>"string" == typeof input.name && "string" == typeof input.path && "number" == typeof input.stage && (void 0 === input.origin || "string" == typeof input.origin) && (3 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "name",
                        "path",
                        "stage",
                        "origin"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io457 = (input, _exceptionable = true)=>(void 0 === input.banner || "boolean" == typeof input.banner) && (void 0 === input.parseBundle || "boolean" == typeof input.parseBundle) && (void 0 === input.generateTileGraph || "boolean" == typeof input.generateTileGraph) && (void 0 === input.gzip || "boolean" == typeof input.gzip) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "banner",
                        "parseBundle",
                        "generateTileGraph",
                        "gzip"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io458 = (input, _exceptionable = true)=>(void 0 === input.reportDir || "string" == typeof input.reportDir) && (void 0 === input.reportCodeType || "object" == typeof input.reportCodeType && null !== input.reportCodeType && false === Array.isArray(input.reportCodeType) && _io459(input.reportCodeType, _exceptionable)) && (void 0 === input.compressData || "boolean" == typeof input.compressData) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "reportDir",
                        "reportCodeType",
                        "compressData"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io459 = (input, _exceptionable = true)=>(void 0 === input.noModuleSource || "boolean" == typeof input.noModuleSource) && (void 0 === input.noAssetsAndModuleSource || "boolean" == typeof input.noAssetsAndModuleSource) && (void 0 === input.noCode || "boolean" == typeof input.noCode) && (0 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "noModuleSource",
                        "noAssetsAndModuleSource",
                        "noCode"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _io460 = (input, _exceptionable = true)=>"string" == typeof input["__@toStringTag@6659"] && (1 === Object.keys(input).length || Object.keys(input).every((key)=>{
                    if ([
                        "__@toStringTag@6659"
                    ].some((prop)=>key === prop)) return true;
                    const value = input[key];
                    if (void 0 === value) return true;
                    return false;
                }));
            const _iu0 = (input, _exceptionable = true)=>(()=>{
                    if (_io121(input, false)) return _io121(input, _exceptionable);
                    if (_io120(input, false)) return _io120(input, _exceptionable);
                    return false;
                })();
            const _iu1 = (input, _exceptionable = true)=>(()=>{
                    if (void 0 !== input["__@toStringTag@6659"]) return _io149(input, _exceptionable);
                    if (void 0 !== input.pem) return _io150(input, _exceptionable);
                    return false;
                })();
            const _iu2 = (input, _exceptionable = true)=>(()=>{
                    if (void 0 !== input["__@toStringTag@6659"]) return _io149(input, _exceptionable);
                    if (void 0 !== input.buf) return _io151(input, _exceptionable);
                    return false;
                })();
            const _iu3 = (input, _exceptionable = true)=>(()=>{
                    if (void 0 !== input.name) return _io405(input, _exceptionable);
                    if (void 0 !== input["__@toStringTag@6659"]) return _io406(input, _exceptionable);
                    return false;
                })();
            const _iu4 = (input, _exceptionable = true)=>(()=>{
                    if (void 0 !== input.prototype) return _io32(input, _exceptionable);
                    return _io34(input, _exceptionable);
                })();
            const _iu5 = (input, _exceptionable = true)=>(()=>{
                    if (void 0 !== input.prototype) return _io35(input, _exceptionable);
                    return _io34(input, _exceptionable);
                })();
            const _iu6 = (input, _exceptionable = true)=>(()=>{
                    if ("commonjs" === input.type) return _io68(input, _exceptionable);
                    if ("es6" === input.type) return _io67(input, _exceptionable);
                    if ("umd" === input.type) return _io69(input, _exceptionable);
                    if ("amd" === input.type) return _io71(input, _exceptionable);
                    if ("nodenext" === input.type) return _io72(input, _exceptionable);
                    else if ("systemjs" === input.type) return _io73(input, _exceptionable);
                    else return false;
                })();
            const _iu7 = (input, _exceptionable = true)=>(()=>{
                    if ("typescript" === input.syntax) return _io47(input, _exceptionable);
                    if ("ecmascript" === input.syntax) return _io48(input, _exceptionable);
                    return false;
                })();
            const _iu8 = (input, _exceptionable = true)=>(()=>{
                    if (void 0 !== input.type) return _io89(input, _exceptionable);
                    return _io91(input, _exceptionable);
                })();
            const _iu9 = (input, _exceptionable = true)=>(()=>{
                    if ("memory" === input.type) return _io97(input, _exceptionable);
                    if ("persistent" === input.type) return _io98(input, _exceptionable);
                    return false;
                })();
            const _iu10 = (input, _exceptionable = true)=>(()=>{
                    if (void 0 !== input.root) return _io106(input, _exceptionable);
                    return _io107(input, _exceptionable);
                })();
            const _iu11 = (input, _exceptionable = true)=>(()=>{
                    if (_io177(input, false)) return _io177(input, _exceptionable);
                    if (_io185(input, false)) return _io185(input, _exceptionable);
                    return false;
                })();
            const _iu12 = (input, _exceptionable = true)=>(()=>{
                    if (_io186(input, false)) return _io186(input, _exceptionable);
                    if (_io194(input, false)) return _io194(input, _exceptionable);
                    return false;
                })();
            const _iu13 = (input, _exceptionable = true)=>(()=>{
                    if ("filesystem" === input.type) return _io198(input, _exceptionable);
                    if ("memory" === input.type) return _io200(input, _exceptionable);
                    return false;
                })();
            const _iu14 = (input, _exceptionable = true)=>(()=>{
                    if (_io212(input, false)) return _io212(input, _exceptionable);
                    if (_io213(input, false)) return _io213(input, _exceptionable);
                    return false;
                })();
            const _iu15 = (input, _exceptionable = true)=>(()=>{
                    if (void 0 !== input.type) return _io203(input, _exceptionable);
                    return _io205(input, _exceptionable);
                })();
            const _iu16 = (input, _exceptionable = true)=>(()=>{
                    if ("split-by-size" === input.strategy) return _io391(input, _exceptionable);
                    if ("custom" === input.strategy) return _io392(input, _exceptionable);
                    return _io389(input, _exceptionable);
                })();
            const _iu17 = (input, _exceptionable = true)=>(()=>{
                    if ("split-by-size" === input.strategy) return _io416(input, _exceptionable);
                    if ("custom" === input.strategy) return _io417(input, _exceptionable);
                    return _io415(input, _exceptionable);
                })();
            const _iu18 = (input, _exceptionable = true)=>(()=>{
                    if (void 0 !== input["__@toStringTag@6659"]) return _io460(input, _exceptionable);
                    return _io0(input, _exceptionable);
                })();
            const _ia0 = (input, _exceptionable = true)=>input.every((elem, _index367)=>null != elem && ("function" == typeof elem || "string" == typeof elem || elem instanceof RegExp || Array.isArray(elem) && (_ia0(elem, _exceptionable) || false) || "object" == typeof elem && null !== elem && false === Array.isArray(elem) && _io174(elem, _exceptionable)));
            const _ia1 = (input, _exceptionable = true)=>input.every((elem, _index368)=>null != elem && ("function" == typeof elem || "string" == typeof elem || elem instanceof RegExp || Array.isArray(elem) && (_ia1(elem, _exceptionable) || false) || "object" == typeof elem && null !== elem && false === Array.isArray(elem) && _io225(elem, _exceptionable)));
            const _ia2 = (input, _exceptionable = true)=>input.every((elem, _index369)=>null != elem && ("function" == typeof elem || "string" == typeof elem || elem instanceof RegExp || Array.isArray(elem) && (_ia2(elem, _exceptionable) || false) || "object" == typeof elem && null !== elem && false === Array.isArray(elem) && _io227(elem, _exceptionable)));
            const _ia3 = (input, _exceptionable = true)=>input.every((elem, _index370)=>void 0 !== elem && (null === elem || "string" == typeof elem || "number" == typeof elem || "boolean" == typeof elem || Array.isArray(elem) && (_ia3(elem, _exceptionable) || false) || "object" == typeof elem && null !== elem && false === Array.isArray(elem) && _io265(elem, _exceptionable)));
            const _ia4 = (input, _exceptionable = true)=>input.every((elem, _index371)=>null == elem || false === elem || Array.isArray(elem) && (_ia4(elem, _exceptionable) || false) || "object" == typeof elem && null !== elem && _iu3(elem, _exceptionable));
            const _vo0 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.dev || ("object" == typeof input.dev && null !== input.dev && false === Array.isArray(input.dev) || _report(_exceptionable, {
                        path: _path + ".dev",
                        expected: "(Dev | undefined)",
                        value: input.dev
                    })) && _vo1(input.dev, _path + ".dev", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".dev",
                        expected: "(Dev | undefined)",
                        value: input.dev
                    }),
                    void 0 === input.environments || ("object" == typeof input.environments && null !== input.environments && false === Array.isArray(input.environments) || _report(_exceptionable, {
                        path: _path + ".environments",
                        expected: "(__type.o1 | undefined)",
                        value: input.environments
                    })) && _vo8(input.environments, _path + ".environments", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".environments",
                        expected: "(__type.o1 | undefined)",
                        value: input.environments
                    }),
                    void 0 === input.mode || "none" === input.mode || "development" === input.mode || "production" === input.mode || _report(_exceptionable, {
                        path: _path + ".mode",
                        expected: "(\"development\" | \"none\" | \"production\" | undefined)",
                        value: input.mode
                    }),
                    void 0 === input.output || ("object" == typeof input.output && null !== input.output && false === Array.isArray(input.output) || _report(_exceptionable, {
                        path: _path + ".output",
                        expected: "(Output.o2 | undefined)",
                        value: input.output
                    })) && _vo407(input.output, _path + ".output", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".output",
                        expected: "(Output.o2 | undefined)",
                        value: input.output
                    }),
                    void 0 === input.performance || ("object" == typeof input.performance && null !== input.performance && false === Array.isArray(input.performance) || _report(_exceptionable, {
                        path: _path + ".performance",
                        expected: "(Performance | undefined)",
                        value: input.performance
                    })) && _vo413(input.performance, _path + ".performance", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".performance",
                        expected: "(Performance | undefined)",
                        value: input.performance
                    }),
                    void 0 === input.resolve || ("object" == typeof input.resolve && null !== input.resolve && false === Array.isArray(input.resolve) || _report(_exceptionable, {
                        path: _path + ".resolve",
                        expected: "(Resolve | undefined)",
                        value: input.resolve
                    })) && _vo418(input.resolve, _path + ".resolve", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".resolve",
                        expected: "(Resolve | undefined)",
                        value: input.resolve
                    }),
                    void 0 === input.server || ("object" == typeof input.server && null !== input.server && false === Array.isArray(input.server) || _report(_exceptionable, {
                        path: _path + ".server",
                        expected: "(Server | undefined)",
                        value: input.server
                    })) && _vo420(input.server, _path + ".server", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".server",
                        expected: "(Server | undefined)",
                        value: input.server
                    }),
                    void 0 === input.source || ("object" == typeof input.source && null !== input.source && false === Array.isArray(input.source) || _report(_exceptionable, {
                        path: _path + ".source",
                        expected: "(Source | undefined)",
                        value: input.source
                    })) && _vo421(input.source, _path + ".source", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".source",
                        expected: "(Source | undefined)",
                        value: input.source
                    }),
                    void 0 === input.tools || ("object" == typeof input.tools && null !== input.tools && false === Array.isArray(input.tools) || _report(_exceptionable, {
                        path: _path + ".tools",
                        expected: "(Tools | undefined)",
                        value: input.tools
                    })) && _vo427(input.tools, _path + ".tools", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".tools",
                        expected: "(Tools | undefined)",
                        value: input.tools
                    }),
                    void 0 === input.plugins || (Array.isArray(input.plugins) || _report(_exceptionable, {
                        path: _path + ".plugins",
                        expected: "(RsbuildPlugins | undefined)",
                        value: input.plugins
                    })) && (_va4(input.plugins, _path + ".plugins", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".plugins",
                        expected: "RsbuildPlugins",
                        value: input.plugins
                    })) || _report(_exceptionable, {
                        path: _path + ".plugins",
                        expected: "(RsbuildPlugins | undefined)",
                        value: input.plugins
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "dev",
                            "environments",
                            "mode",
                            "output",
                            "performance",
                            "resolve",
                            "server",
                            "source",
                            "tools",
                            "plugins"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo1 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.assetPrefix || "string" == typeof input.assetPrefix || "boolean" == typeof input.assetPrefix || _report(_exceptionable, {
                        path: _path + ".assetPrefix",
                        expected: "(boolean | string | undefined)",
                        value: input.assetPrefix
                    }),
                    void 0 === input.client || ("object" == typeof input.client && null !== input.client && false === Array.isArray(input.client) || _report(_exceptionable, {
                        path: _path + ".client",
                        expected: "(Client | undefined)",
                        value: input.client
                    })) && _vo2(input.client, _path + ".client", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".client",
                        expected: "(Client | undefined)",
                        value: input.client
                    }),
                    void 0 === input.hmr || "boolean" == typeof input.hmr || _report(_exceptionable, {
                        path: _path + ".hmr",
                        expected: "(boolean | undefined)",
                        value: input.hmr
                    }),
                    void 0 === input.liveReload || "boolean" == typeof input.liveReload || _report(_exceptionable, {
                        path: _path + ".liveReload",
                        expected: "(boolean | undefined)",
                        value: input.liveReload
                    }),
                    (null !== input.watchFiles || _report(_exceptionable, {
                        path: _path + ".watchFiles",
                        expected: "(Array<WatchFiles> | WatchFiles | undefined)",
                        value: input.watchFiles
                    })) && (void 0 === input.watchFiles || Array.isArray(input.watchFiles) && input.watchFiles.map((elem, _index372)=>("object" == typeof elem && null !== elem || _report(_exceptionable, {
                            path: _path + ".watchFiles[" + _index372 + "]",
                            expected: "WatchFiles",
                            value: elem
                        })) && _vo3(elem, _path + ".watchFiles[" + _index372 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".watchFiles[" + _index372 + "]",
                            expected: "WatchFiles",
                            value: elem
                        })).every((flag)=>flag) || "object" == typeof input.watchFiles && null !== input.watchFiles && _vo3(input.watchFiles, _path + ".watchFiles", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".watchFiles",
                        expected: "(Array<WatchFiles> | WatchFiles | undefined)",
                        value: input.watchFiles
                    }) || _report(_exceptionable, {
                        path: _path + ".watchFiles",
                        expected: "(Array<WatchFiles> | WatchFiles | undefined)",
                        value: input.watchFiles
                    })),
                    (null !== input.writeToDisk || _report(_exceptionable, {
                        path: _path + ".writeToDisk",
                        expected: "(boolean | undefined)",
                        value: input.writeToDisk
                    })) && (void 0 === input.writeToDisk || "function" == typeof input.writeToDisk || "boolean" == typeof input.writeToDisk || _report(_exceptionable, {
                        path: _path + ".writeToDisk",
                        expected: "(boolean | undefined)",
                        value: input.writeToDisk
                    })),
                    (null !== input.progressBar || _report(_exceptionable, {
                        path: _path + ".progressBar",
                        expected: "(__type | boolean | undefined)",
                        value: input.progressBar
                    })) && (void 0 === input.progressBar || "boolean" == typeof input.progressBar || ("object" == typeof input.progressBar && null !== input.progressBar && false === Array.isArray(input.progressBar) || _report(_exceptionable, {
                        path: _path + ".progressBar",
                        expected: "(__type | boolean | undefined)",
                        value: input.progressBar
                    })) && _vo7(input.progressBar, _path + ".progressBar", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".progressBar",
                        expected: "(__type | boolean | undefined)",
                        value: input.progressBar
                    })),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "assetPrefix",
                            "client",
                            "hmr",
                            "liveReload",
                            "watchFiles",
                            "writeToDisk",
                            "progressBar"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo2 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.websocketTransport || "string" == typeof input.websocketTransport || _report(_exceptionable, {
                        path: _path + ".websocketTransport",
                        expected: "(string | undefined)",
                        value: input.websocketTransport
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "websocketTransport"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo3 = (input, _path, _exceptionable = true)=>[
                    (null !== input.paths || _report(_exceptionable, {
                        path: _path + ".paths",
                        expected: "(Array<string> | string)",
                        value: input.paths
                    })) && (void 0 !== input.paths || _report(_exceptionable, {
                        path: _path + ".paths",
                        expected: "(Array<string> | string)",
                        value: input.paths
                    })) && ("string" == typeof input.paths || (Array.isArray(input.paths) || _report(_exceptionable, {
                        path: _path + ".paths",
                        expected: "(Array<string> | string)",
                        value: input.paths
                    })) && input.paths.map((elem, _index373)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".paths[" + _index373 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".paths",
                        expected: "(Array<string> | string)",
                        value: input.paths
                    })),
                    void 0 === input.options || ("object" == typeof input.options && null !== input.options && false === Array.isArray(input.options) || _report(_exceptionable, {
                        path: _path + ".options",
                        expected: "(Partial<BasicOpts & { ignored: Matcher | Matcher[]; awaitWriteFinish: boolean | Partial<AWF>; }> | undefined)",
                        value: input.options
                    })) && _vo4(input.options, _path + ".options", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".options",
                        expected: "(Partial<BasicOpts & { ignored: Matcher | Matcher[]; awaitWriteFinish: boolean | Partial<AWF>; }> | undefined)",
                        value: input.options
                    }),
                    void 0 === input.type || "reload-page" === input.type || "reload-server" === input.type || _report(_exceptionable, {
                        path: _path + ".type",
                        expected: "(\"reload-page\" | \"reload-server\" | undefined)",
                        value: input.type
                    }),
                    1 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "paths",
                            "options",
                            "type"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo4 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.persistent || "boolean" == typeof input.persistent || _report(_exceptionable, {
                        path: _path + ".persistent",
                        expected: "(boolean | undefined)",
                        value: input.persistent
                    }),
                    void 0 === input.ignoreInitial || "boolean" == typeof input.ignoreInitial || _report(_exceptionable, {
                        path: _path + ".ignoreInitial",
                        expected: "(boolean | undefined)",
                        value: input.ignoreInitial
                    }),
                    void 0 === input.followSymlinks || "boolean" == typeof input.followSymlinks || _report(_exceptionable, {
                        path: _path + ".followSymlinks",
                        expected: "(boolean | undefined)",
                        value: input.followSymlinks
                    }),
                    void 0 === input.cwd || "string" == typeof input.cwd || _report(_exceptionable, {
                        path: _path + ".cwd",
                        expected: "(string | undefined)",
                        value: input.cwd
                    }),
                    void 0 === input.usePolling || "boolean" == typeof input.usePolling || _report(_exceptionable, {
                        path: _path + ".usePolling",
                        expected: "(boolean | undefined)",
                        value: input.usePolling
                    }),
                    void 0 === input.interval || "number" == typeof input.interval || _report(_exceptionable, {
                        path: _path + ".interval",
                        expected: "(number | undefined)",
                        value: input.interval
                    }),
                    void 0 === input.binaryInterval || "number" == typeof input.binaryInterval || _report(_exceptionable, {
                        path: _path + ".binaryInterval",
                        expected: "(number | undefined)",
                        value: input.binaryInterval
                    }),
                    void 0 === input.alwaysStat || "boolean" == typeof input.alwaysStat || _report(_exceptionable, {
                        path: _path + ".alwaysStat",
                        expected: "(boolean | undefined)",
                        value: input.alwaysStat
                    }),
                    void 0 === input.depth || "number" == typeof input.depth || _report(_exceptionable, {
                        path: _path + ".depth",
                        expected: "(number | undefined)",
                        value: input.depth
                    }),
                    void 0 === input.ignorePermissionErrors || "boolean" == typeof input.ignorePermissionErrors || _report(_exceptionable, {
                        path: _path + ".ignorePermissionErrors",
                        expected: "(boolean | undefined)",
                        value: input.ignorePermissionErrors
                    }),
                    void 0 === input.atomic || "number" == typeof input.atomic || "boolean" == typeof input.atomic || _report(_exceptionable, {
                        path: _path + ".atomic",
                        expected: "(boolean | number | undefined)",
                        value: input.atomic
                    }),
                    (null !== input.ignored || _report(_exceptionable, {
                        path: _path + ".ignored",
                        expected: "(Array<Matcher> | MatcherObject | RegExp | string | undefined)",
                        value: input.ignored
                    })) && (void 0 === input.ignored || "function" == typeof input.ignored || "string" == typeof input.ignored || input.ignored instanceof RegExp || Array.isArray(input.ignored) && input.ignored.map((elem, _index374)=>(null !== elem || _report(_exceptionable, {
                            path: _path + ".ignored[" + _index374 + "]",
                            expected: "(MatcherObject | RegExp | string)",
                            value: elem
                        })) && (void 0 !== elem || _report(_exceptionable, {
                            path: _path + ".ignored[" + _index374 + "]",
                            expected: "(MatcherObject | RegExp | string)",
                            value: elem
                        })) && ("function" == typeof elem || "string" == typeof elem || elem instanceof RegExp || ("object" == typeof elem && null !== elem || _report(_exceptionable, {
                            path: _path + ".ignored[" + _index374 + "]",
                            expected: "(MatcherObject | RegExp | string)",
                            value: elem
                        })) && _vo5(elem, _path + ".ignored[" + _index374 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".ignored[" + _index374 + "]",
                            expected: "(MatcherObject | RegExp | string)",
                            value: elem
                        }))).every((flag)=>flag) || "object" == typeof input.ignored && null !== input.ignored && _vo5(input.ignored, _path + ".ignored", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".ignored",
                        expected: "(Array<Matcher> | MatcherObject | RegExp | string | undefined)",
                        value: input.ignored
                    }) || _report(_exceptionable, {
                        path: _path + ".ignored",
                        expected: "(Array<Matcher> | MatcherObject | RegExp | string | undefined)",
                        value: input.ignored
                    })),
                    (null !== input.awaitWriteFinish || _report(_exceptionable, {
                        path: _path + ".awaitWriteFinish",
                        expected: "(Partial<AWF> | boolean | undefined)",
                        value: input.awaitWriteFinish
                    })) && (void 0 === input.awaitWriteFinish || "boolean" == typeof input.awaitWriteFinish || ("object" == typeof input.awaitWriteFinish && null !== input.awaitWriteFinish && false === Array.isArray(input.awaitWriteFinish) || _report(_exceptionable, {
                        path: _path + ".awaitWriteFinish",
                        expected: "(Partial<AWF> | boolean | undefined)",
                        value: input.awaitWriteFinish
                    })) && _vo6(input.awaitWriteFinish, _path + ".awaitWriteFinish", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".awaitWriteFinish",
                        expected: "(Partial<AWF> | boolean | undefined)",
                        value: input.awaitWriteFinish
                    })),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "persistent",
                            "ignoreInitial",
                            "followSymlinks",
                            "cwd",
                            "usePolling",
                            "interval",
                            "binaryInterval",
                            "alwaysStat",
                            "depth",
                            "ignorePermissionErrors",
                            "atomic",
                            "ignored",
                            "awaitWriteFinish"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo5 = (input, _path, _exceptionable = true)=>[
                    "string" == typeof input.path || _report(_exceptionable, {
                        path: _path + ".path",
                        expected: "string",
                        value: input.path
                    }),
                    void 0 === input.recursive || "boolean" == typeof input.recursive || _report(_exceptionable, {
                        path: _path + ".recursive",
                        expected: "(boolean | undefined)",
                        value: input.recursive
                    }),
                    1 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "path",
                            "recursive"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo6 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.stabilityThreshold || "number" == typeof input.stabilityThreshold || _report(_exceptionable, {
                        path: _path + ".stabilityThreshold",
                        expected: "(number | undefined)",
                        value: input.stabilityThreshold
                    }),
                    void 0 === input.pollInterval || "number" == typeof input.pollInterval || _report(_exceptionable, {
                        path: _path + ".pollInterval",
                        expected: "(number | undefined)",
                        value: input.pollInterval
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "stabilityThreshold",
                            "pollInterval"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo7 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.id || "string" == typeof input.id || _report(_exceptionable, {
                        path: _path + ".id",
                        expected: "(string | undefined)",
                        value: input.id
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "id"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo8 = (input, _path, _exceptionable = true)=>[
                    false === _exceptionable || Object.keys(input).map((key)=>{
                        const value = input[key];
                        if (void 0 === value) return true;
                        return ("object" == typeof value && null !== value && false === Array.isArray(value) || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "EnvironmentConfig",
                            value: value
                        })) && _vo9(value, _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key), _exceptionable) || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "EnvironmentConfig",
                            value: value
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo9 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.dev || ("object" == typeof input.dev && null !== input.dev && false === Array.isArray(input.dev) || _report(_exceptionable, {
                        path: _path + ".dev",
                        expected: "(Pick<DevConfig, AllowedEnvironmentDevKeys> | undefined)",
                        value: input.dev
                    })) && _vo10(input.dev, _path + ".dev", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".dev",
                        expected: "(Pick<DevConfig, AllowedEnvironmentDevKeys> | undefined)",
                        value: input.dev
                    }),
                    void 0 === input.html || ("object" == typeof input.html && null !== input.html && false === Array.isArray(input.html) || _report(_exceptionable, {
                        path: _path + ".html",
                        expected: "(HtmlConfig | undefined)",
                        value: input.html
                    })) && _vo14(input.html, _path + ".html", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".html",
                        expected: "(HtmlConfig | undefined)",
                        value: input.html
                    }),
                    void 0 === input.tools || ("object" == typeof input.tools && null !== input.tools && false === Array.isArray(input.tools) || _report(_exceptionable, {
                        path: _path + ".tools",
                        expected: "(ToolsConfig | undefined)",
                        value: input.tools
                    })) && _vo23(input.tools, _path + ".tools", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".tools",
                        expected: "(ToolsConfig | undefined)",
                        value: input.tools
                    }),
                    void 0 === input.resolve || ("object" == typeof input.resolve && null !== input.resolve && false === Array.isArray(input.resolve) || _report(_exceptionable, {
                        path: _path + ".resolve",
                        expected: "(ResolveConfig | undefined)",
                        value: input.resolve
                    })) && _vo351(input.resolve, _path + ".resolve", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".resolve",
                        expected: "(ResolveConfig | undefined)",
                        value: input.resolve
                    }),
                    void 0 === input.source || ("object" == typeof input.source && null !== input.source && false === Array.isArray(input.source) || _report(_exceptionable, {
                        path: _path + ".source",
                        expected: "(SourceConfig | undefined)",
                        value: input.source
                    })) && _vo353(input.source, _path + ".source", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".source",
                        expected: "(SourceConfig | undefined)",
                        value: input.source
                    }),
                    void 0 === input.output || ("object" == typeof input.output && null !== input.output && false === Array.isArray(input.output) || _report(_exceptionable, {
                        path: _path + ".output",
                        expected: "(OutputConfig | undefined)",
                        value: input.output
                    })) && _vo359(input.output, _path + ".output", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".output",
                        expected: "(OutputConfig | undefined)",
                        value: input.output
                    }),
                    void 0 === input.security || ("object" == typeof input.security && null !== input.security && false === Array.isArray(input.security) || _report(_exceptionable, {
                        path: _path + ".security",
                        expected: "(SecurityConfig | undefined)",
                        value: input.security
                    })) && _vo384(input.security, _path + ".security", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".security",
                        expected: "(SecurityConfig | undefined)",
                        value: input.security
                    }),
                    void 0 === input.performance || ("object" == typeof input.performance && null !== input.performance && false === Array.isArray(input.performance) || _report(_exceptionable, {
                        path: _path + ".performance",
                        expected: "(PerformanceConfig | undefined)",
                        value: input.performance
                    })) && _vo386(input.performance, _path + ".performance", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".performance",
                        expected: "(PerformanceConfig | undefined)",
                        value: input.performance
                    }),
                    void 0 === input.moduleFederation || ("object" == typeof input.moduleFederation && null !== input.moduleFederation || _report(_exceptionable, {
                        path: _path + ".moduleFederation",
                        expected: "(ModuleFederationConfig | undefined)",
                        value: input.moduleFederation
                    })) && _vo397(input.moduleFederation, _path + ".moduleFederation", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".moduleFederation",
                        expected: "(ModuleFederationConfig | undefined)",
                        value: input.moduleFederation
                    }),
                    void 0 === input.plugins || (Array.isArray(input.plugins) || _report(_exceptionable, {
                        path: _path + ".plugins",
                        expected: "(RsbuildPlugins | undefined)",
                        value: input.plugins
                    })) && (_va4(input.plugins, _path + ".plugins", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".plugins",
                        expected: "RsbuildPlugins",
                        value: input.plugins
                    })) || _report(_exceptionable, {
                        path: _path + ".plugins",
                        expected: "(RsbuildPlugins | undefined)",
                        value: input.plugins
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "dev",
                            "html",
                            "tools",
                            "resolve",
                            "source",
                            "output",
                            "security",
                            "performance",
                            "moduleFederation",
                            "plugins"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo10 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.hmr || "boolean" == typeof input.hmr || _report(_exceptionable, {
                        path: _path + ".hmr",
                        expected: "(boolean | undefined)",
                        value: input.hmr
                    }),
                    void 0 === input.client || ("object" == typeof input.client && null !== input.client && false === Array.isArray(input.client) || _report(_exceptionable, {
                        path: _path + ".client",
                        expected: "(ClientConfig | undefined)",
                        value: input.client
                    })) && _vo11(input.client, _path + ".client", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".client",
                        expected: "(ClientConfig | undefined)",
                        value: input.client
                    }),
                    void 0 === input.liveReload || "boolean" == typeof input.liveReload || _report(_exceptionable, {
                        path: _path + ".liveReload",
                        expected: "(boolean | undefined)",
                        value: input.liveReload
                    }),
                    void 0 === input.assetPrefix || "string" == typeof input.assetPrefix || "boolean" == typeof input.assetPrefix || _report(_exceptionable, {
                        path: _path + ".assetPrefix",
                        expected: "(boolean | string | undefined)",
                        value: input.assetPrefix
                    }),
                    (null !== input.progressBar || _report(_exceptionable, {
                        path: _path + ".progressBar",
                        expected: "(ProgressBarConfig | boolean | undefined)",
                        value: input.progressBar
                    })) && (void 0 === input.progressBar || "boolean" == typeof input.progressBar || ("object" == typeof input.progressBar && null !== input.progressBar && false === Array.isArray(input.progressBar) || _report(_exceptionable, {
                        path: _path + ".progressBar",
                        expected: "(ProgressBarConfig | boolean | undefined)",
                        value: input.progressBar
                    })) && _vo12(input.progressBar, _path + ".progressBar", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".progressBar",
                        expected: "(ProgressBarConfig | boolean | undefined)",
                        value: input.progressBar
                    })),
                    (null !== input.lazyCompilation || _report(_exceptionable, {
                        path: _path + ".lazyCompilation",
                        expected: "(LazyCompilationOptions | boolean | undefined)",
                        value: input.lazyCompilation
                    })) && (void 0 === input.lazyCompilation || "boolean" == typeof input.lazyCompilation || ("object" == typeof input.lazyCompilation && null !== input.lazyCompilation && false === Array.isArray(input.lazyCompilation) || _report(_exceptionable, {
                        path: _path + ".lazyCompilation",
                        expected: "(LazyCompilationOptions | boolean | undefined)",
                        value: input.lazyCompilation
                    })) && _vo13(input.lazyCompilation, _path + ".lazyCompilation", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".lazyCompilation",
                        expected: "(LazyCompilationOptions | boolean | undefined)",
                        value: input.lazyCompilation
                    })),
                    (null !== input.writeToDisk || _report(_exceptionable, {
                        path: _path + ".writeToDisk",
                        expected: "(boolean | undefined)",
                        value: input.writeToDisk
                    })) && (void 0 === input.writeToDisk || "function" == typeof input.writeToDisk || "boolean" == typeof input.writeToDisk || _report(_exceptionable, {
                        path: _path + ".writeToDisk",
                        expected: "(boolean | undefined)",
                        value: input.writeToDisk
                    })),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "hmr",
                            "client",
                            "liveReload",
                            "assetPrefix",
                            "progressBar",
                            "lazyCompilation",
                            "writeToDisk"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo11 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.path || "string" == typeof input.path || _report(_exceptionable, {
                        path: _path + ".path",
                        expected: "(string | undefined)",
                        value: input.path
                    }),
                    void 0 === input.port || "string" == typeof input.port || "number" == typeof input.port || _report(_exceptionable, {
                        path: _path + ".port",
                        expected: "(number | string | undefined)",
                        value: input.port
                    }),
                    void 0 === input.host || "string" == typeof input.host || _report(_exceptionable, {
                        path: _path + ".host",
                        expected: "(string | undefined)",
                        value: input.host
                    }),
                    void 0 === input.protocol || "ws" === input.protocol || "wss" === input.protocol || _report(_exceptionable, {
                        path: _path + ".protocol",
                        expected: "(\"ws\" | \"wss\" | undefined)",
                        value: input.protocol
                    }),
                    void 0 === input.reconnect || "number" == typeof input.reconnect || _report(_exceptionable, {
                        path: _path + ".reconnect",
                        expected: "(number | undefined)",
                        value: input.reconnect
                    }),
                    void 0 === input.overlay || "boolean" == typeof input.overlay || _report(_exceptionable, {
                        path: _path + ".overlay",
                        expected: "(boolean | undefined)",
                        value: input.overlay
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "path",
                            "port",
                            "host",
                            "protocol",
                            "reconnect",
                            "overlay"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo12 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.id || "string" == typeof input.id || _report(_exceptionable, {
                        path: _path + ".id",
                        expected: "(string | undefined)",
                        value: input.id
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "id"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo13 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.imports || "boolean" == typeof input.imports || _report(_exceptionable, {
                        path: _path + ".imports",
                        expected: "(boolean | undefined)",
                        value: input.imports
                    }),
                    void 0 === input.entries || "boolean" == typeof input.entries || _report(_exceptionable, {
                        path: _path + ".entries",
                        expected: "(boolean | undefined)",
                        value: input.entries
                    }),
                    (null !== input.test || _report(_exceptionable, {
                        path: _path + ".test",
                        expected: "(RegExp | undefined)",
                        value: input.test
                    })) && (void 0 === input.test || "function" == typeof input.test || input.test instanceof RegExp || _report(_exceptionable, {
                        path: _path + ".test",
                        expected: "(RegExp | undefined)",
                        value: input.test
                    })),
                    void 0 === input.client || "string" == typeof input.client || _report(_exceptionable, {
                        path: _path + ".client",
                        expected: "(string | undefined)",
                        value: input.client
                    }),
                    void 0 === input.serverUrl || "string" == typeof input.serverUrl || _report(_exceptionable, {
                        path: _path + ".serverUrl",
                        expected: "(string | undefined)",
                        value: input.serverUrl
                    }),
                    void 0 === input.prefix || "string" == typeof input.prefix || _report(_exceptionable, {
                        path: _path + ".prefix",
                        expected: "(string | undefined)",
                        value: input.prefix
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "imports",
                            "entries",
                            "test",
                            "client",
                            "serverUrl",
                            "prefix"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo14 = (input, _path, _exceptionable = true)=>[
                    (null !== input.meta || _report(_exceptionable, {
                        path: _path + ".meta",
                        expected: "(Array<MetaOptions | ((merged: { value: MetaOptions; } & { entryName: string; }) => void | MetaOptions)> | MetaOptions | undefined)",
                        value: input.meta
                    })) && (void 0 === input.meta || "function" == typeof input.meta || Array.isArray(input.meta) && input.meta.map((elem, _index375)=>(null !== elem || _report(_exceptionable, {
                            path: _path + ".meta[" + _index375 + "]",
                            expected: "MetaOptions",
                            value: elem
                        })) && (void 0 !== elem || _report(_exceptionable, {
                            path: _path + ".meta[" + _index375 + "]",
                            expected: "MetaOptions",
                            value: elem
                        })) && ("function" == typeof elem || ("object" == typeof elem && null !== elem && false === Array.isArray(elem) || _report(_exceptionable, {
                            path: _path + ".meta[" + _index375 + "]",
                            expected: "MetaOptions",
                            value: elem
                        })) && _vo15(elem, _path + ".meta[" + _index375 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".meta[" + _index375 + "]",
                            expected: "MetaOptions",
                            value: elem
                        }))).every((flag)=>flag) || "object" == typeof input.meta && null !== input.meta && false === Array.isArray(input.meta) && _vo15(input.meta, _path + ".meta", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".meta",
                        expected: "(Array<MetaOptions | ((merged: { value: MetaOptions; } & { entryName: string; }) => void | MetaOptions)> | MetaOptions | undefined)",
                        value: input.meta
                    }) || _report(_exceptionable, {
                        path: _path + ".meta",
                        expected: "(Array<MetaOptions | ((merged: { value: MetaOptions; } & { entryName: string; }) => void | MetaOptions)> | MetaOptions | undefined)",
                        value: input.meta
                    })),
                    (null !== input.title || _report(_exceptionable, {
                        path: _path + ".title",
                        expected: "(Array<string | ((merged: { value: string; } & { entryName: string; }) => string | void)> | string | undefined)",
                        value: input.title
                    })) && (void 0 === input.title || "function" == typeof input.title || "string" == typeof input.title || (Array.isArray(input.title) || _report(_exceptionable, {
                        path: _path + ".title",
                        expected: "(Array<string | ((merged: { value: string; } & { entryName: string; }) => string | void)> | string | undefined)",
                        value: input.title
                    })) && input.title.map((elem, _index376)=>(null !== elem || _report(_exceptionable, {
                            path: _path + ".title[" + _index376 + "]",
                            expected: "string",
                            value: elem
                        })) && (void 0 !== elem || _report(_exceptionable, {
                            path: _path + ".title[" + _index376 + "]",
                            expected: "string",
                            value: elem
                        })) && ("function" == typeof elem || "string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".title[" + _index376 + "]",
                            expected: "string",
                            value: elem
                        }))).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".title",
                        expected: "(Array<string | ((merged: { value: string; } & { entryName: string; }) => string | void)> | string | undefined)",
                        value: input.title
                    })),
                    (null !== input.inject || _report(_exceptionable, {
                        path: _path + ".inject",
                        expected: "(\"body\" | \"head\" | Array<ScriptInject | ((merged: { value: ScriptInject; } & { entryName: string; }) => void | ScriptInject)> | boolean | undefined)",
                        value: input.inject
                    })) && (void 0 === input.inject || "function" == typeof input.inject || "body" === input.inject || "head" === input.inject || "boolean" == typeof input.inject || (Array.isArray(input.inject) || _report(_exceptionable, {
                        path: _path + ".inject",
                        expected: "(\"body\" | \"head\" | Array<ScriptInject | ((merged: { value: ScriptInject; } & { entryName: string; }) => void | ScriptInject)> | boolean | undefined)",
                        value: input.inject
                    })) && input.inject.map((elem, _index377)=>(null !== elem || _report(_exceptionable, {
                            path: _path + ".inject[" + _index377 + "]",
                            expected: "(\"body\" | \"head\" | boolean)",
                            value: elem
                        })) && (void 0 !== elem || _report(_exceptionable, {
                            path: _path + ".inject[" + _index377 + "]",
                            expected: "(\"body\" | \"head\" | boolean)",
                            value: elem
                        })) && ("function" == typeof elem || "body" === elem || "head" === elem || "boolean" == typeof elem || _report(_exceptionable, {
                            path: _path + ".inject[" + _index377 + "]",
                            expected: "(\"body\" | \"head\" | boolean)",
                            value: elem
                        }))).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".inject",
                        expected: "(\"body\" | \"head\" | Array<ScriptInject | ((merged: { value: ScriptInject; } & { entryName: string; }) => void | ScriptInject)> | boolean | undefined)",
                        value: input.inject
                    })),
                    (null !== input.tags || _report(_exceptionable, {
                        path: _path + ".tags",
                        expected: "(Array<HtmlTagDescriptor> | HtmlTag | undefined)",
                        value: input.tags
                    })) && (void 0 === input.tags || "function" == typeof input.tags || Array.isArray(input.tags) && input.tags.map((elem, _index378)=>(null !== elem || _report(_exceptionable, {
                            path: _path + ".tags[" + _index378 + "]",
                            expected: "HtmlTag",
                            value: elem
                        })) && (void 0 !== elem || _report(_exceptionable, {
                            path: _path + ".tags[" + _index378 + "]",
                            expected: "HtmlTag",
                            value: elem
                        })) && ("function" == typeof elem || ("object" == typeof elem && null !== elem || _report(_exceptionable, {
                            path: _path + ".tags[" + _index378 + "]",
                            expected: "HtmlTag",
                            value: elem
                        })) && _vo17(elem, _path + ".tags[" + _index378 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".tags[" + _index378 + "]",
                            expected: "HtmlTag",
                            value: elem
                        }))).every((flag)=>flag) || "object" == typeof input.tags && null !== input.tags && _vo17(input.tags, _path + ".tags", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".tags",
                        expected: "(Array<HtmlTagDescriptor> | HtmlTag | undefined)",
                        value: input.tags
                    }) || _report(_exceptionable, {
                        path: _path + ".tags",
                        expected: "(Array<HtmlTagDescriptor> | HtmlTag | undefined)",
                        value: input.tags
                    })),
                    (null !== input.favicon || _report(_exceptionable, {
                        path: _path + ".favicon",
                        expected: "(Array<string | ((merged: { value: string; } & { entryName: string; }) => string | void)> | string | undefined)",
                        value: input.favicon
                    })) && (void 0 === input.favicon || "function" == typeof input.favicon || "string" == typeof input.favicon || (Array.isArray(input.favicon) || _report(_exceptionable, {
                        path: _path + ".favicon",
                        expected: "(Array<string | ((merged: { value: string; } & { entryName: string; }) => string | void)> | string | undefined)",
                        value: input.favicon
                    })) && input.favicon.map((elem, _index379)=>(null !== elem || _report(_exceptionable, {
                            path: _path + ".favicon[" + _index379 + "]",
                            expected: "string",
                            value: elem
                        })) && (void 0 !== elem || _report(_exceptionable, {
                            path: _path + ".favicon[" + _index379 + "]",
                            expected: "string",
                            value: elem
                        })) && ("function" == typeof elem || "string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".favicon[" + _index379 + "]",
                            expected: "string",
                            value: elem
                        }))).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".favicon",
                        expected: "(Array<string | ((merged: { value: string; } & { entryName: string; }) => string | void)> | string | undefined)",
                        value: input.favicon
                    })),
                    void 0 === input.appIcon || ("object" == typeof input.appIcon && null !== input.appIcon || _report(_exceptionable, {
                        path: _path + ".appIcon",
                        expected: "(AppIcon | undefined)",
                        value: input.appIcon
                    })) && _vo20(input.appIcon, _path + ".appIcon", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".appIcon",
                        expected: "(AppIcon | undefined)",
                        value: input.appIcon
                    }),
                    void 0 === input.mountId || "string" == typeof input.mountId || _report(_exceptionable, {
                        path: _path + ".mountId",
                        expected: "(string | undefined)",
                        value: input.mountId
                    }),
                    void 0 === input.crossorigin || "anonymous" === input.crossorigin || "use-credentials" === input.crossorigin || "boolean" == typeof input.crossorigin || _report(_exceptionable, {
                        path: _path + ".crossorigin",
                        expected: "(\"anonymous\" | \"use-credentials\" | boolean | undefined)",
                        value: input.crossorigin
                    }),
                    void 0 === input.outputStructure || "flat" === input.outputStructure || "nested" === input.outputStructure || _report(_exceptionable, {
                        path: _path + ".outputStructure",
                        expected: "(\"flat\" | \"nested\" | undefined)",
                        value: input.outputStructure
                    }),
                    (null !== input.template || _report(_exceptionable, {
                        path: _path + ".template",
                        expected: "(Array<string | ((merged: { value: string; } & { entryName: string; }) => string | void)> | string | undefined)",
                        value: input.template
                    })) && (void 0 === input.template || "function" == typeof input.template || "string" == typeof input.template || (Array.isArray(input.template) || _report(_exceptionable, {
                        path: _path + ".template",
                        expected: "(Array<string | ((merged: { value: string; } & { entryName: string; }) => string | void)> | string | undefined)",
                        value: input.template
                    })) && input.template.map((elem, _index380)=>(null !== elem || _report(_exceptionable, {
                            path: _path + ".template[" + _index380 + "]",
                            expected: "string",
                            value: elem
                        })) && (void 0 !== elem || _report(_exceptionable, {
                            path: _path + ".template[" + _index380 + "]",
                            expected: "string",
                            value: elem
                        })) && ("function" == typeof elem || "string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".template[" + _index380 + "]",
                            expected: "string",
                            value: elem
                        }))).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".template",
                        expected: "(Array<string | ((merged: { value: string; } & { entryName: string; }) => string | void)> | string | undefined)",
                        value: input.template
                    })),
                    (null !== input.templateParameters || _report(_exceptionable, {
                        path: _path + ".templateParameters",
                        expected: "(Array<Record<string, unknown> | ((config: Record<string, unknown>, ctx: { entryName: string; }) => void | Record<string, unknown>)> | Record<string, unknown> | undefined)",
                        value: input.templateParameters
                    })) && (void 0 === input.templateParameters || "function" == typeof input.templateParameters || Array.isArray(input.templateParameters) && input.templateParameters.map((elem, _index381)=>(null !== elem || _report(_exceptionable, {
                            path: _path + ".templateParameters[" + _index381 + "]",
                            expected: "Record<string, unknown>",
                            value: elem
                        })) && (void 0 !== elem || _report(_exceptionable, {
                            path: _path + ".templateParameters[" + _index381 + "]",
                            expected: "Record<string, unknown>",
                            value: elem
                        })) && ("function" == typeof elem || ("object" == typeof elem && null !== elem && false === Array.isArray(elem) || _report(_exceptionable, {
                            path: _path + ".templateParameters[" + _index381 + "]",
                            expected: "Record<string, unknown>",
                            value: elem
                        })) && _vo22(elem, _path + ".templateParameters[" + _index381 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".templateParameters[" + _index381 + "]",
                            expected: "Record<string, unknown>",
                            value: elem
                        }))).every((flag)=>flag) || "object" == typeof input.templateParameters && null !== input.templateParameters && false === Array.isArray(input.templateParameters) && _vo22(input.templateParameters, _path + ".templateParameters", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".templateParameters",
                        expected: "(Array<Record<string, unknown> | ((config: Record<string, unknown>, ctx: { entryName: string; }) => void | Record<string, unknown>)> | Record<string, unknown> | undefined)",
                        value: input.templateParameters
                    }) || _report(_exceptionable, {
                        path: _path + ".templateParameters",
                        expected: "(Array<Record<string, unknown> | ((config: Record<string, unknown>, ctx: { entryName: string; }) => void | Record<string, unknown>)> | Record<string, unknown> | undefined)",
                        value: input.templateParameters
                    })),
                    void 0 === input.scriptLoading || "defer" === input.scriptLoading || "module" === input.scriptLoading || "blocking" === input.scriptLoading || _report(_exceptionable, {
                        path: _path + ".scriptLoading",
                        expected: "(\"blocking\" | \"defer\" | \"module\" | undefined)",
                        value: input.scriptLoading
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "meta",
                            "title",
                            "inject",
                            "tags",
                            "favicon",
                            "appIcon",
                            "mountId",
                            "crossorigin",
                            "outputStructure",
                            "template",
                            "templateParameters",
                            "scriptLoading"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo15 = (input, _path, _exceptionable = true)=>[
                    false === _exceptionable || Object.keys(input).map((key)=>{
                        const value = input[key];
                        if (void 0 === value) return true;
                        return (null !== value || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(MetaAttrs | false | string)",
                            value: value
                        })) && (void 0 !== value || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(MetaAttrs | false | string)",
                            value: value
                        })) && (false === value || "string" == typeof value || ("object" == typeof value && null !== value && false === Array.isArray(value) || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(MetaAttrs | false | string)",
                            value: value
                        })) && _vo16(value, _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key), _exceptionable) || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(MetaAttrs | false | string)",
                            value: value
                        }));
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo16 = (input, _path, _exceptionable = true)=>[
                    false === _exceptionable || Object.keys(input).map((key)=>{
                        const value = input[key];
                        if (void 0 === value) return true;
                        return "string" == typeof value || "boolean" == typeof value || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(boolean | string)",
                            value: value
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo17 = (input, _path, _exceptionable = true)=>[
                    "string" == typeof input.tag || _report(_exceptionable, {
                        path: _path + ".tag",
                        expected: "string",
                        value: input.tag
                    }),
                    void 0 === input.attrs || ("object" == typeof input.attrs && null !== input.attrs && false === Array.isArray(input.attrs) || _report(_exceptionable, {
                        path: _path + ".attrs",
                        expected: "(Record<string, string | boolean | null | undefined> | undefined)",
                        value: input.attrs
                    })) && _vo18(input.attrs, _path + ".attrs", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".attrs",
                        expected: "(Record<string, string | boolean | null | undefined> | undefined)",
                        value: input.attrs
                    }),
                    void 0 === input.children || "string" == typeof input.children || _report(_exceptionable, {
                        path: _path + ".children",
                        expected: "(string | undefined)",
                        value: input.children
                    }),
                    void 0 === input.metadata || ("object" == typeof input.metadata && null !== input.metadata && false === Array.isArray(input.metadata) || _report(_exceptionable, {
                        path: _path + ".metadata",
                        expected: "(Record<string, any> | undefined)",
                        value: input.metadata
                    })) && _vo19(input.metadata, _path + ".metadata", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".metadata",
                        expected: "(Record<string, any> | undefined)",
                        value: input.metadata
                    }),
                    (null !== input.hash || _report(_exceptionable, {
                        path: _path + ".hash",
                        expected: "(boolean | string | undefined)",
                        value: input.hash
                    })) && (void 0 === input.hash || "function" == typeof input.hash || "string" == typeof input.hash || "boolean" == typeof input.hash || _report(_exceptionable, {
                        path: _path + ".hash",
                        expected: "(boolean | string | undefined)",
                        value: input.hash
                    })),
                    (null !== input.publicPath || _report(_exceptionable, {
                        path: _path + ".publicPath",
                        expected: "(boolean | string | undefined)",
                        value: input.publicPath
                    })) && (void 0 === input.publicPath || "function" == typeof input.publicPath || "string" == typeof input.publicPath || "boolean" == typeof input.publicPath || _report(_exceptionable, {
                        path: _path + ".publicPath",
                        expected: "(boolean | string | undefined)",
                        value: input.publicPath
                    })),
                    void 0 === input.append || "boolean" == typeof input.append || _report(_exceptionable, {
                        path: _path + ".append",
                        expected: "(boolean | undefined)",
                        value: input.append
                    }),
                    void 0 === input.head || "boolean" == typeof input.head || _report(_exceptionable, {
                        path: _path + ".head",
                        expected: "(boolean | undefined)",
                        value: input.head
                    }),
                    1 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "tag",
                            "attrs",
                            "children",
                            "metadata",
                            "hash",
                            "publicPath",
                            "append",
                            "head"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo18 = (input, _path, _exceptionable = true)=>[
                    false === _exceptionable || Object.keys(input).map((key)=>{
                        const value = input[key];
                        if (void 0 === value) return true;
                        return null == value || "string" == typeof value || "boolean" == typeof value || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(boolean | null | string | undefined)",
                            value: value
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo19 = (input, _path, _exceptionable = true)=>[
                    false === _exceptionable || Object.keys(input).map((key)=>{
                        input[key];
                        return true;
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo20 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.name || "string" == typeof input.name || _report(_exceptionable, {
                        path: _path + ".name",
                        expected: "(string | undefined)",
                        value: input.name
                    }),
                    (Array.isArray(input.icons) || _report(_exceptionable, {
                        path: _path + ".icons",
                        expected: "Array<AppIconItem>",
                        value: input.icons
                    })) && input.icons.map((elem, _index382)=>("object" == typeof elem && null !== elem || _report(_exceptionable, {
                            path: _path + ".icons[" + _index382 + "]",
                            expected: "AppIconItem",
                            value: elem
                        })) && _vo21(elem, _path + ".icons[" + _index382 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".icons[" + _index382 + "]",
                            expected: "AppIconItem",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".icons",
                        expected: "Array<AppIconItem>",
                        value: input.icons
                    }),
                    void 0 === input.filename || "string" == typeof input.filename || _report(_exceptionable, {
                        path: _path + ".filename",
                        expected: "(string | undefined)",
                        value: input.filename
                    }),
                    1 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "name",
                            "icons",
                            "filename"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo21 = (input, _path, _exceptionable = true)=>[
                    "string" == typeof input.src || _report(_exceptionable, {
                        path: _path + ".src",
                        expected: "string",
                        value: input.src
                    }),
                    "number" == typeof input.size || _report(_exceptionable, {
                        path: _path + ".size",
                        expected: "number",
                        value: input.size
                    }),
                    void 0 === input.target || "apple-touch-icon" === input.target || "web-app-manifest" === input.target || _report(_exceptionable, {
                        path: _path + ".target",
                        expected: "(\"apple-touch-icon\" | \"web-app-manifest\" | undefined)",
                        value: input.target
                    }),
                    2 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "src",
                            "size",
                            "target"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo22 = (input, _path, _exceptionable = true)=>[
                    false === _exceptionable || Object.keys(input).map((key)=>{
                        input[key];
                        return true;
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo23 = (input, _path, _exceptionable = true)=>[
                    (null !== input.bundlerChain || _report(_exceptionable, {
                        path: _path + ".bundlerChain",
                        expected: "(Array<__type> | undefined)",
                        value: input.bundlerChain
                    })) && (void 0 === input.bundlerChain || "function" == typeof input.bundlerChain || (Array.isArray(input.bundlerChain) || _report(_exceptionable, {
                        path: _path + ".bundlerChain",
                        expected: "(Array<__type> | undefined)",
                        value: input.bundlerChain
                    })) && input.bundlerChain.map((elem, _index383)=>true).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".bundlerChain",
                        expected: "(Array<__type> | undefined)",
                        value: input.bundlerChain
                    })),
                    (null !== input.cssLoader || _report(_exceptionable, {
                        path: _path + ".cssLoader",
                        expected: "(Array<CSSLoaderOptions | ((config: CSSLoaderOptions) => void | CSSLoaderOptions)> | CSSLoaderOptions | undefined)",
                        value: input.cssLoader
                    })) && (void 0 === input.cssLoader || "function" == typeof input.cssLoader || Array.isArray(input.cssLoader) && input.cssLoader.map((elem, _index384)=>(null !== elem || _report(_exceptionable, {
                            path: _path + ".cssLoader[" + _index384 + "]",
                            expected: "CSSLoaderOptions",
                            value: elem
                        })) && (void 0 !== elem || _report(_exceptionable, {
                            path: _path + ".cssLoader[" + _index384 + "]",
                            expected: "CSSLoaderOptions",
                            value: elem
                        })) && ("function" == typeof elem || ("object" == typeof elem && null !== elem && false === Array.isArray(elem) || _report(_exceptionable, {
                            path: _path + ".cssLoader[" + _index384 + "]",
                            expected: "CSSLoaderOptions",
                            value: elem
                        })) && _vo24(elem, _path + ".cssLoader[" + _index384 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".cssLoader[" + _index384 + "]",
                            expected: "CSSLoaderOptions",
                            value: elem
                        }))).every((flag)=>flag) || "object" == typeof input.cssLoader && null !== input.cssLoader && false === Array.isArray(input.cssLoader) && _vo24(input.cssLoader, _path + ".cssLoader", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".cssLoader",
                        expected: "(Array<CSSLoaderOptions | ((config: CSSLoaderOptions) => void | CSSLoaderOptions)> | CSSLoaderOptions | undefined)",
                        value: input.cssLoader
                    }) || _report(_exceptionable, {
                        path: _path + ".cssLoader",
                        expected: "(Array<CSSLoaderOptions | ((config: CSSLoaderOptions) => void | CSSLoaderOptions)> | CSSLoaderOptions | undefined)",
                        value: input.cssLoader
                    })),
                    (null !== input.postcss || _report(_exceptionable, {
                        path: _path + ".postcss",
                        expected: "(Array<PostCSSLoaderOptions | ((config: PostCSSLoaderOptions, ctx: { addPlugins: (plugins: any) => void; }) => void | PostCSSLoaderOptions)> | PostCSSLoaderOptions | undefined)",
                        value: input.postcss
                    })) && (void 0 === input.postcss || "function" == typeof input.postcss || Array.isArray(input.postcss) && input.postcss.map((elem, _index385)=>(null !== elem || _report(_exceptionable, {
                            path: _path + ".postcss[" + _index385 + "]",
                            expected: "PostCSSLoaderOptions",
                            value: elem
                        })) && (void 0 !== elem || _report(_exceptionable, {
                            path: _path + ".postcss[" + _index385 + "]",
                            expected: "PostCSSLoaderOptions",
                            value: elem
                        })) && ("function" == typeof elem || ("object" == typeof elem && null !== elem && false === Array.isArray(elem) || _report(_exceptionable, {
                            path: _path + ".postcss[" + _index385 + "]",
                            expected: "PostCSSLoaderOptions",
                            value: elem
                        })) && _vo28(elem, _path + ".postcss[" + _index385 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".postcss[" + _index385 + "]",
                            expected: "PostCSSLoaderOptions",
                            value: elem
                        }))).every((flag)=>flag) || "object" == typeof input.postcss && null !== input.postcss && false === Array.isArray(input.postcss) && _vo28(input.postcss, _path + ".postcss", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".postcss",
                        expected: "(Array<PostCSSLoaderOptions | ((config: PostCSSLoaderOptions, ctx: { addPlugins: (plugins: any) => void; }) => void | PostCSSLoaderOptions)> | PostCSSLoaderOptions | undefined)",
                        value: input.postcss
                    }) || _report(_exceptionable, {
                        path: _path + ".postcss",
                        expected: "(Array<PostCSSLoaderOptions | ((config: PostCSSLoaderOptions, ctx: { addPlugins: (plugins: any) => void; }) => void | PostCSSLoaderOptions)> | PostCSSLoaderOptions | undefined)",
                        value: input.postcss
                    })),
                    (null !== input.styleLoader || _report(_exceptionable, {
                        path: _path + ".styleLoader",
                        expected: "(Array<StyleLoaderOptions | ((config: StyleLoaderOptions) => void | StyleLoaderOptions)> | StyleLoaderOptions | undefined)",
                        value: input.styleLoader
                    })) && (void 0 === input.styleLoader || "function" == typeof input.styleLoader || Array.isArray(input.styleLoader) && input.styleLoader.map((elem, _index386)=>(null !== elem || _report(_exceptionable, {
                            path: _path + ".styleLoader[" + _index386 + "]",
                            expected: "StyleLoaderOptions",
                            value: elem
                        })) && (void 0 !== elem || _report(_exceptionable, {
                            path: _path + ".styleLoader[" + _index386 + "]",
                            expected: "StyleLoaderOptions",
                            value: elem
                        })) && ("function" == typeof elem || ("object" == typeof elem && null !== elem && false === Array.isArray(elem) || _report(_exceptionable, {
                            path: _path + ".styleLoader[" + _index386 + "]",
                            expected: "StyleLoaderOptions",
                            value: elem
                        })) && _vo36(elem, _path + ".styleLoader[" + _index386 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".styleLoader[" + _index386 + "]",
                            expected: "StyleLoaderOptions",
                            value: elem
                        }))).every((flag)=>flag) || "object" == typeof input.styleLoader && null !== input.styleLoader && false === Array.isArray(input.styleLoader) && _vo36(input.styleLoader, _path + ".styleLoader", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".styleLoader",
                        expected: "(Array<StyleLoaderOptions | ((config: StyleLoaderOptions) => void | StyleLoaderOptions)> | StyleLoaderOptions | undefined)",
                        value: input.styleLoader
                    }) || _report(_exceptionable, {
                        path: _path + ".styleLoader",
                        expected: "(Array<StyleLoaderOptions | ((config: StyleLoaderOptions) => void | StyleLoaderOptions)> | StyleLoaderOptions | undefined)",
                        value: input.styleLoader
                    })),
                    (null !== input.htmlPlugin || _report(_exceptionable, {
                        path: _path + ".htmlPlugin",
                        expected: "(Array<Options | ((config: Options, ctx: { entryName: string; entryValue: (string | string[] | EntryDescription)[]; }) => void | Options)> | HtmlRspackPlugin.Options | boolean | undefined)",
                        value: input.htmlPlugin
                    })) && (void 0 === input.htmlPlugin || "function" == typeof input.htmlPlugin || "boolean" == typeof input.htmlPlugin || Array.isArray(input.htmlPlugin) && input.htmlPlugin.map((elem, _index387)=>(null !== elem || _report(_exceptionable, {
                            path: _path + ".htmlPlugin[" + _index387 + "]",
                            expected: "HtmlRspackPlugin.Options",
                            value: elem
                        })) && (void 0 !== elem || _report(_exceptionable, {
                            path: _path + ".htmlPlugin[" + _index387 + "]",
                            expected: "HtmlRspackPlugin.Options",
                            value: elem
                        })) && ("function" == typeof elem || ("object" == typeof elem && null !== elem && false === Array.isArray(elem) || _report(_exceptionable, {
                            path: _path + ".htmlPlugin[" + _index387 + "]",
                            expected: "HtmlRspackPlugin.Options",
                            value: elem
                        })) && _vo38(elem, _path + ".htmlPlugin[" + _index387 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".htmlPlugin[" + _index387 + "]",
                            expected: "HtmlRspackPlugin.Options",
                            value: elem
                        }))).every((flag)=>flag) || "object" == typeof input.htmlPlugin && null !== input.htmlPlugin && false === Array.isArray(input.htmlPlugin) && _vo38(input.htmlPlugin, _path + ".htmlPlugin", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".htmlPlugin",
                        expected: "(Array<Options | ((config: Options, ctx: { entryName: string; entryValue: (string | string[] | EntryDescription)[]; }) => void | Options)> | HtmlRspackPlugin.Options | boolean | undefined)",
                        value: input.htmlPlugin
                    }) || _report(_exceptionable, {
                        path: _path + ".htmlPlugin",
                        expected: "(Array<Options | ((config: Options, ctx: { entryName: string; entryValue: (string | string[] | EntryDescription)[]; }) => void | Options)> | HtmlRspackPlugin.Options | boolean | undefined)",
                        value: input.htmlPlugin
                    })),
                    (null !== input.swc || _report(_exceptionable, {
                        path: _path + ".swc",
                        expected: "(Array<SwcLoaderOptions | ((config: SwcLoaderOptions) => void | SwcLoaderOptions)> | SwcLoaderOptions | undefined)",
                        value: input.swc
                    })) && (void 0 === input.swc || "function" == typeof input.swc || Array.isArray(input.swc) && input.swc.map((elem, _index388)=>(null !== elem || _report(_exceptionable, {
                            path: _path + ".swc[" + _index388 + "]",
                            expected: "SwcLoaderOptions",
                            value: elem
                        })) && (void 0 !== elem || _report(_exceptionable, {
                            path: _path + ".swc[" + _index388 + "]",
                            expected: "SwcLoaderOptions",
                            value: elem
                        })) && ("function" == typeof elem || ("object" == typeof elem && null !== elem && false === Array.isArray(elem) || _report(_exceptionable, {
                            path: _path + ".swc[" + _index388 + "]",
                            expected: "SwcLoaderOptions",
                            value: elem
                        })) && _vo43(elem, _path + ".swc[" + _index388 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".swc[" + _index388 + "]",
                            expected: "SwcLoaderOptions",
                            value: elem
                        }))).every((flag)=>flag) || "object" == typeof input.swc && null !== input.swc && false === Array.isArray(input.swc) && _vo43(input.swc, _path + ".swc", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".swc",
                        expected: "(Array<SwcLoaderOptions | ((config: SwcLoaderOptions) => void | SwcLoaderOptions)> | SwcLoaderOptions | undefined)",
                        value: input.swc
                    }) || _report(_exceptionable, {
                        path: _path + ".swc",
                        expected: "(Array<SwcLoaderOptions | ((config: SwcLoaderOptions) => void | SwcLoaderOptions)> | SwcLoaderOptions | undefined)",
                        value: input.swc
                    })),
                    (null !== input.lightningcssLoader || _report(_exceptionable, {
                        path: _path + ".lightningcssLoader",
                        expected: "(Array<LoaderOptions | ((config: LoaderOptions) => void | LoaderOptions)> | LoaderOptions | boolean | undefined)",
                        value: input.lightningcssLoader
                    })) && (void 0 === input.lightningcssLoader || "function" == typeof input.lightningcssLoader || "boolean" == typeof input.lightningcssLoader || Array.isArray(input.lightningcssLoader) && input.lightningcssLoader.map((elem, _index389)=>(null !== elem || _report(_exceptionable, {
                            path: _path + ".lightningcssLoader[" + _index389 + "]",
                            expected: "LoaderOptions",
                            value: elem
                        })) && (void 0 !== elem || _report(_exceptionable, {
                            path: _path + ".lightningcssLoader[" + _index389 + "]",
                            expected: "LoaderOptions",
                            value: elem
                        })) && ("function" == typeof elem || ("object" == typeof elem && null !== elem && false === Array.isArray(elem) || _report(_exceptionable, {
                            path: _path + ".lightningcssLoader[" + _index389 + "]",
                            expected: "LoaderOptions",
                            value: elem
                        })) && _vo77(elem, _path + ".lightningcssLoader[" + _index389 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".lightningcssLoader[" + _index389 + "]",
                            expected: "LoaderOptions",
                            value: elem
                        }))).every((flag)=>flag) || "object" == typeof input.lightningcssLoader && null !== input.lightningcssLoader && false === Array.isArray(input.lightningcssLoader) && _vo77(input.lightningcssLoader, _path + ".lightningcssLoader", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".lightningcssLoader",
                        expected: "(Array<LoaderOptions | ((config: LoaderOptions) => void | LoaderOptions)> | LoaderOptions | boolean | undefined)",
                        value: input.lightningcssLoader
                    }) || _report(_exceptionable, {
                        path: _path + ".lightningcssLoader",
                        expected: "(Array<LoaderOptions | ((config: LoaderOptions) => void | LoaderOptions)> | LoaderOptions | boolean | undefined)",
                        value: input.lightningcssLoader
                    })),
                    void 0 === input.cssExtract || ("object" == typeof input.cssExtract && null !== input.cssExtract && false === Array.isArray(input.cssExtract) || _report(_exceptionable, {
                        path: _path + ".cssExtract",
                        expected: "(CSSExtractOptions | undefined)",
                        value: input.cssExtract
                    })) && _vo83(input.cssExtract, _path + ".cssExtract", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".cssExtract",
                        expected: "(CSSExtractOptions | undefined)",
                        value: input.cssExtract
                    }),
                    (null !== input.rspack || _report(_exceptionable, {
                        path: _path + ".rspack",
                        expected: "(Array<RspackOptions | ((config: NarrowedRspackConfig, ctx: ModifyRspackConfigUtils) => MaybePromise<void | RspackOptions>)> | RspackOptions | undefined)",
                        value: input.rspack
                    })) && (void 0 === input.rspack || "function" == typeof input.rspack || Array.isArray(input.rspack) && input.rspack.map((elem, _index390)=>(null !== elem || _report(_exceptionable, {
                            path: _path + ".rspack[" + _index390 + "]",
                            expected: "RspackOptions",
                            value: elem
                        })) && (void 0 !== elem || _report(_exceptionable, {
                            path: _path + ".rspack[" + _index390 + "]",
                            expected: "RspackOptions",
                            value: elem
                        })) && ("function" == typeof elem || ("object" == typeof elem && null !== elem && false === Array.isArray(elem) || _report(_exceptionable, {
                            path: _path + ".rspack[" + _index390 + "]",
                            expected: "RspackOptions",
                            value: elem
                        })) && _vo86(elem, _path + ".rspack[" + _index390 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".rspack[" + _index390 + "]",
                            expected: "RspackOptions",
                            value: elem
                        }))).every((flag)=>flag) || "object" == typeof input.rspack && null !== input.rspack && false === Array.isArray(input.rspack) && _vo86(input.rspack, _path + ".rspack", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".rspack",
                        expected: "(Array<RspackOptions | ((config: NarrowedRspackConfig, ctx: ModifyRspackConfigUtils) => MaybePromise<void | RspackOptions>)> | RspackOptions | undefined)",
                        value: input.rspack
                    }) || _report(_exceptionable, {
                        path: _path + ".rspack",
                        expected: "(Array<RspackOptions | ((config: NarrowedRspackConfig, ctx: ModifyRspackConfigUtils) => MaybePromise<void | RspackOptions>)> | RspackOptions | undefined)",
                        value: input.rspack
                    })),
                    (null !== input.webpack || _report(_exceptionable, {
                        path: _path + ".webpack",
                        expected: "(Array<Configuration | ((config: Configuration, ctx: ModifyWebpackConfigUtils) => void | Configuration)> | Configuration | undefined)",
                        value: input.webpack
                    })) && (void 0 === input.webpack || "function" == typeof input.webpack || Array.isArray(input.webpack) && input.webpack.map((elem, _index391)=>(null !== elem || _report(_exceptionable, {
                            path: _path + ".webpack[" + _index391 + "]",
                            expected: "Configuration",
                            value: elem
                        })) && (void 0 !== elem || _report(_exceptionable, {
                            path: _path + ".webpack[" + _index391 + "]",
                            expected: "Configuration",
                            value: elem
                        })) && ("function" == typeof elem || ("object" == typeof elem && null !== elem && false === Array.isArray(elem) || _report(_exceptionable, {
                            path: _path + ".webpack[" + _index391 + "]",
                            expected: "Configuration",
                            value: elem
                        })) && _vo196(elem, _path + ".webpack[" + _index391 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".webpack[" + _index391 + "]",
                            expected: "Configuration",
                            value: elem
                        }))).every((flag)=>flag) || "object" == typeof input.webpack && null !== input.webpack && false === Array.isArray(input.webpack) && _vo196(input.webpack, _path + ".webpack", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".webpack",
                        expected: "(Array<Configuration | ((config: Configuration, ctx: ModifyWebpackConfigUtils) => void | Configuration)> | Configuration | undefined)",
                        value: input.webpack
                    }) || _report(_exceptionable, {
                        path: _path + ".webpack",
                        expected: "(Array<Configuration | ((config: Configuration, ctx: ModifyWebpackConfigUtils) => void | Configuration)> | Configuration | undefined)",
                        value: input.webpack
                    })),
                    (null !== input.webpackChain || _report(_exceptionable, {
                        path: _path + ".webpackChain",
                        expected: "(Array<__type>.o5 | undefined)",
                        value: input.webpackChain
                    })) && (void 0 === input.webpackChain || "function" == typeof input.webpackChain || (Array.isArray(input.webpackChain) || _report(_exceptionable, {
                        path: _path + ".webpackChain",
                        expected: "(Array<__type>.o5 | undefined)",
                        value: input.webpackChain
                    })) && input.webpackChain.map((elem, _index392)=>true).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".webpackChain",
                        expected: "(Array<__type>.o5 | undefined)",
                        value: input.webpackChain
                    })),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "bundlerChain",
                            "cssLoader",
                            "postcss",
                            "styleLoader",
                            "htmlPlugin",
                            "swc",
                            "lightningcssLoader",
                            "cssExtract",
                            "rspack",
                            "webpack",
                            "webpackChain"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo24 = (input, _path, _exceptionable = true)=>[
                    (null !== input.url || _report(_exceptionable, {
                        path: _path + ".url",
                        expected: "(__type.o3 | boolean | undefined)",
                        value: input.url
                    })) && (void 0 === input.url || "boolean" == typeof input.url || ("object" == typeof input.url && null !== input.url || _report(_exceptionable, {
                        path: _path + ".url",
                        expected: "(__type.o3 | boolean | undefined)",
                        value: input.url
                    })) && _vo25(input.url, _path + ".url", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".url",
                        expected: "(__type.o3 | boolean | undefined)",
                        value: input.url
                    })),
                    (null !== input["import"] || _report(_exceptionable, {
                        path: _path + "[\"import\"]",
                        expected: "(__type.o4 | boolean | undefined)",
                        value: input["import"]
                    })) && (void 0 === input["import"] || "boolean" == typeof input["import"] || ("object" == typeof input["import"] && null !== input["import"] || _report(_exceptionable, {
                        path: _path + "[\"import\"]",
                        expected: "(__type.o4 | boolean | undefined)",
                        value: input["import"]
                    })) && _vo26(input["import"], _path + "[\"import\"]", _exceptionable) || _report(_exceptionable, {
                        path: _path + "[\"import\"]",
                        expected: "(__type.o4 | boolean | undefined)",
                        value: input["import"]
                    })),
                    (null !== input.modules || _report(_exceptionable, {
                        path: _path + ".modules",
                        expected: "(CSSLoaderModulesOptions | boolean | string | undefined)",
                        value: input.modules
                    })) && (void 0 === input.modules || "string" == typeof input.modules || "boolean" == typeof input.modules || ("object" == typeof input.modules && null !== input.modules && false === Array.isArray(input.modules) || _report(_exceptionable, {
                        path: _path + ".modules",
                        expected: "(CSSLoaderModulesOptions | boolean | string | undefined)",
                        value: input.modules
                    })) && _vo27(input.modules, _path + ".modules", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".modules",
                        expected: "(CSSLoaderModulesOptions | boolean | string | undefined)",
                        value: input.modules
                    })),
                    void 0 === input.sourceMap || "boolean" == typeof input.sourceMap || _report(_exceptionable, {
                        path: _path + ".sourceMap",
                        expected: "(boolean | undefined)",
                        value: input.sourceMap
                    }),
                    void 0 === input.importLoaders || "number" == typeof input.importLoaders || _report(_exceptionable, {
                        path: _path + ".importLoaders",
                        expected: "(number | undefined)",
                        value: input.importLoaders
                    }),
                    void 0 === input.esModule || "boolean" == typeof input.esModule || _report(_exceptionable, {
                        path: _path + ".esModule",
                        expected: "(boolean | undefined)",
                        value: input.esModule
                    }),
                    void 0 === input.exportType || "string" === input.exportType || "array" === input.exportType || "css-style-sheet" === input.exportType || _report(_exceptionable, {
                        path: _path + ".exportType",
                        expected: "(\"array\" | \"css-style-sheet\" | \"string\" | undefined)",
                        value: input.exportType
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "url",
                            "import",
                            "modules",
                            "sourceMap",
                            "importLoaders",
                            "esModule",
                            "exportType"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo25 = (input, _path, _exceptionable = true)=>[
                    true,
                    1 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "filter"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo26 = (input, _path, _exceptionable = true)=>[
                    true,
                    1 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "filter"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo27 = (input, _path, _exceptionable = true)=>[
                    (null !== input.auto || _report(_exceptionable, {
                        path: _path + ".auto",
                        expected: "(RegExp | boolean | undefined)",
                        value: input.auto
                    })) && (void 0 === input.auto || "function" == typeof input.auto || "boolean" == typeof input.auto || input.auto instanceof RegExp || _report(_exceptionable, {
                        path: _path + ".auto",
                        expected: "(RegExp | boolean | undefined)",
                        value: input.auto
                    })),
                    void 0 === input.exportGlobals || "boolean" == typeof input.exportGlobals || _report(_exceptionable, {
                        path: _path + ".exportGlobals",
                        expected: "(boolean | undefined)",
                        value: input.exportGlobals
                    }),
                    (null !== input.exportLocalsConvention || _report(_exceptionable, {
                        path: _path + ".exportLocalsConvention",
                        expected: "(\"as-is\" | \"asIs\" | \"camel-case\" | \"camel-case-only\" | \"camelCase\" | \"camelCaseOnly\" | \"dashes\" | \"dashes-only\" | \"dashesOnly\" | undefined)",
                        value: input.exportLocalsConvention
                    })) && (void 0 === input.exportLocalsConvention || "function" == typeof input.exportLocalsConvention || "asIs" === input.exportLocalsConvention || "as-is" === input.exportLocalsConvention || "camelCase" === input.exportLocalsConvention || "camel-case" === input.exportLocalsConvention || "camelCaseOnly" === input.exportLocalsConvention || "camel-case-only" === input.exportLocalsConvention || "dashes" === input.exportLocalsConvention || "dashesOnly" === input.exportLocalsConvention || "dashes-only" === input.exportLocalsConvention || _report(_exceptionable, {
                        path: _path + ".exportLocalsConvention",
                        expected: "(\"as-is\" | \"asIs\" | \"camel-case\" | \"camel-case-only\" | \"camelCase\" | \"camelCaseOnly\" | \"dashes\" | \"dashes-only\" | \"dashesOnly\" | undefined)",
                        value: input.exportLocalsConvention
                    })),
                    void 0 === input.exportOnlyLocals || "boolean" == typeof input.exportOnlyLocals || _report(_exceptionable, {
                        path: _path + ".exportOnlyLocals",
                        expected: "(boolean | undefined)",
                        value: input.exportOnlyLocals
                    }),
                    void 0 === input.getLocalIdent || true,
                    void 0 === input.localIdentName || "string" == typeof input.localIdentName || _report(_exceptionable, {
                        path: _path + ".localIdentName",
                        expected: "(string | undefined)",
                        value: input.localIdentName
                    }),
                    void 0 === input.localIdentContext || "string" == typeof input.localIdentContext || _report(_exceptionable, {
                        path: _path + ".localIdentContext",
                        expected: "(string | undefined)",
                        value: input.localIdentContext
                    }),
                    void 0 === input.localIdentHashSalt || "string" == typeof input.localIdentHashSalt || _report(_exceptionable, {
                        path: _path + ".localIdentHashSalt",
                        expected: "(string | undefined)",
                        value: input.localIdentHashSalt
                    }),
                    void 0 === input.localIdentHashFunction || "string" == typeof input.localIdentHashFunction || _report(_exceptionable, {
                        path: _path + ".localIdentHashFunction",
                        expected: "(string | undefined)",
                        value: input.localIdentHashFunction
                    }),
                    void 0 === input.localIdentHashDigest || "string" == typeof input.localIdentHashDigest || _report(_exceptionable, {
                        path: _path + ".localIdentHashDigest",
                        expected: "(string | undefined)",
                        value: input.localIdentHashDigest
                    }),
                    (null !== input.localIdentRegExp || _report(_exceptionable, {
                        path: _path + ".localIdentRegExp",
                        expected: "(RegExp | string | undefined)",
                        value: input.localIdentRegExp
                    })) && (void 0 === input.localIdentRegExp || "string" == typeof input.localIdentRegExp || input.localIdentRegExp instanceof RegExp || _report(_exceptionable, {
                        path: _path + ".localIdentRegExp",
                        expected: "(RegExp | string | undefined)",
                        value: input.localIdentRegExp
                    })),
                    (null !== input.mode || _report(_exceptionable, {
                        path: _path + ".mode",
                        expected: "(\"global\" | \"icss\" | \"local\" | \"pure\" | undefined)",
                        value: input.mode
                    })) && (void 0 === input.mode || "function" == typeof input.mode || "local" === input.mode || "global" === input.mode || "pure" === input.mode || "icss" === input.mode || _report(_exceptionable, {
                        path: _path + ".mode",
                        expected: "(\"global\" | \"icss\" | \"local\" | \"pure\" | undefined)",
                        value: input.mode
                    })),
                    void 0 === input.namedExport || "boolean" == typeof input.namedExport || _report(_exceptionable, {
                        path: _path + ".namedExport",
                        expected: "(boolean | undefined)",
                        value: input.namedExport
                    }),
                    void 0 === input.getJSON || true,
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "auto",
                            "exportGlobals",
                            "exportLocalsConvention",
                            "exportOnlyLocals",
                            "getLocalIdent",
                            "localIdentName",
                            "localIdentContext",
                            "localIdentHashSalt",
                            "localIdentHashFunction",
                            "localIdentHashDigest",
                            "localIdentRegExp",
                            "mode",
                            "namedExport",
                            "getJSON"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo28 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.execute || "boolean" == typeof input.execute || _report(_exceptionable, {
                        path: _path + ".execute",
                        expected: "(boolean | undefined)",
                        value: input.execute
                    }),
                    void 0 === input.sourceMap || "boolean" == typeof input.sourceMap || _report(_exceptionable, {
                        path: _path + ".sourceMap",
                        expected: "(boolean | undefined)",
                        value: input.sourceMap
                    }),
                    true,
                    (null !== input.postcssOptions || _report(_exceptionable, {
                        path: _path + ".postcssOptions",
                        expected: "(PostCSSOptions | undefined)",
                        value: input.postcssOptions
                    })) && (void 0 === input.postcssOptions || "function" == typeof input.postcssOptions || ("object" == typeof input.postcssOptions && null !== input.postcssOptions && false === Array.isArray(input.postcssOptions) || _report(_exceptionable, {
                        path: _path + ".postcssOptions",
                        expected: "(PostCSSOptions | undefined)",
                        value: input.postcssOptions
                    })) && _vo29(input.postcssOptions, _path + ".postcssOptions", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".postcssOptions",
                        expected: "(PostCSSOptions | undefined)",
                        value: input.postcssOptions
                    })),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "execute",
                            "sourceMap",
                            "implementation",
                            "postcssOptions"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo29 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.document || "string" == typeof input.document || _report(_exceptionable, {
                        path: _path + ".document",
                        expected: "(string | undefined)",
                        value: input.document
                    }),
                    void 0 === input.from || "string" == typeof input.from || _report(_exceptionable, {
                        path: _path + ".from",
                        expected: "(string | undefined)",
                        value: input.from
                    }),
                    (null !== input.map || _report(_exceptionable, {
                        path: _path + ".map",
                        expected: "(boolean | postcss.SourceMapOptions | undefined)",
                        value: input.map
                    })) && (void 0 === input.map || "boolean" == typeof input.map || ("object" == typeof input.map && null !== input.map && false === Array.isArray(input.map) || _report(_exceptionable, {
                        path: _path + ".map",
                        expected: "(boolean | postcss.SourceMapOptions | undefined)",
                        value: input.map
                    })) && _vo30(input.map, _path + ".map", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".map",
                        expected: "(boolean | postcss.SourceMapOptions | undefined)",
                        value: input.map
                    })),
                    void 0 === input.parser || ("object" == typeof input.parser && null !== input.parser && false === Array.isArray(input.parser) || _report(_exceptionable, {
                        path: _path + ".parser",
                        expected: "(postcss.Parser<Document_ | Root_> | postcss.Syntax<Document_ | Root_> | undefined)",
                        value: input.parser
                    })) && _vu4(input.parser, _path + ".parser", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".parser",
                        expected: "(postcss.Parser<Document_ | Root_> | postcss.Syntax<Document_ | Root_> | undefined)",
                        value: input.parser
                    }),
                    void 0 === input.stringifier || ("object" == typeof input.stringifier && null !== input.stringifier && false === Array.isArray(input.stringifier) || _report(_exceptionable, {
                        path: _path + ".stringifier",
                        expected: "(postcss.Stringifier | postcss.Syntax<Document_ | Root_> | undefined)",
                        value: input.stringifier
                    })) && _vu5(input.stringifier, _path + ".stringifier", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".stringifier",
                        expected: "(postcss.Stringifier | postcss.Syntax<Document_ | Root_> | undefined)",
                        value: input.stringifier
                    }),
                    void 0 === input.syntax || ("object" == typeof input.syntax && null !== input.syntax && false === Array.isArray(input.syntax) || _report(_exceptionable, {
                        path: _path + ".syntax",
                        expected: "(postcss.Syntax<Document_ | Root_> | undefined)",
                        value: input.syntax
                    })) && _vo34(input.syntax, _path + ".syntax", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".syntax",
                        expected: "(postcss.Syntax<Document_ | Root_> | undefined)",
                        value: input.syntax
                    }),
                    void 0 === input.to || "string" == typeof input.to || _report(_exceptionable, {
                        path: _path + ".to",
                        expected: "(string | undefined)",
                        value: input.to
                    }),
                    void 0 === input.config || "boolean" == typeof input.config || _report(_exceptionable, {
                        path: _path + ".config",
                        expected: "(boolean | undefined)",
                        value: input.config
                    }),
                    void 0 === input.plugins || Array.isArray(input.plugins) || _report(_exceptionable, {
                        path: _path + ".plugins",
                        expected: "(Array<any> | undefined)",
                        value: input.plugins
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "document",
                            "from",
                            "map",
                            "parser",
                            "stringifier",
                            "syntax",
                            "to",
                            "config",
                            "plugins"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo30 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.absolute || "boolean" == typeof input.absolute || _report(_exceptionable, {
                        path: _path + ".absolute",
                        expected: "(boolean | undefined)",
                        value: input.absolute
                    }),
                    (null !== input.annotation || _report(_exceptionable, {
                        path: _path + ".annotation",
                        expected: "(boolean | string | undefined)",
                        value: input.annotation
                    })) && (void 0 === input.annotation || "function" == typeof input.annotation || "string" == typeof input.annotation || "boolean" == typeof input.annotation || _report(_exceptionable, {
                        path: _path + ".annotation",
                        expected: "(boolean | string | undefined)",
                        value: input.annotation
                    })),
                    void 0 === input.from || "string" == typeof input.from || _report(_exceptionable, {
                        path: _path + ".from",
                        expected: "(string | undefined)",
                        value: input.from
                    }),
                    void 0 === input.inline || "boolean" == typeof input.inline || _report(_exceptionable, {
                        path: _path + ".inline",
                        expected: "(boolean | undefined)",
                        value: input.inline
                    }),
                    (null !== input.prev || _report(_exceptionable, {
                        path: _path + ".prev",
                        expected: "(boolean | object | string | undefined)",
                        value: input.prev
                    })) && (void 0 === input.prev || "function" == typeof input.prev || "string" == typeof input.prev || "boolean" == typeof input.prev || ("object" == typeof input.prev && null !== input.prev && false === Array.isArray(input.prev) || _report(_exceptionable, {
                        path: _path + ".prev",
                        expected: "(boolean | object | string | undefined)",
                        value: input.prev
                    })) && _vo31(input.prev, _path + ".prev", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".prev",
                        expected: "(boolean | object | string | undefined)",
                        value: input.prev
                    })),
                    void 0 === input.sourcesContent || "boolean" == typeof input.sourcesContent || _report(_exceptionable, {
                        path: _path + ".sourcesContent",
                        expected: "(boolean | undefined)",
                        value: input.sourcesContent
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "absolute",
                            "annotation",
                            "from",
                            "inline",
                            "prev",
                            "sourcesContent"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo31 = (input, _path, _exceptionable = true)=>[
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo32 = (input, _path, _exceptionable = true)=>[
                    true,
                    "number" == typeof input.length || _report(_exceptionable, {
                        path: _path + ".length",
                        expected: "number",
                        value: input.length
                    }),
                    true,
                    ("object" == typeof input.caller && null !== input.caller || _report(_exceptionable, {
                        path: _path + ".caller",
                        expected: "Function",
                        value: input.caller
                    })) && _vo33(input.caller, _path + ".caller", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".caller",
                        expected: "Function",
                        value: input.caller
                    }),
                    "string" == typeof input.name || _report(_exceptionable, {
                        path: _path + ".name",
                        expected: "string",
                        value: input.name
                    }),
                    5 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "prototype",
                            "length",
                            "arguments",
                            "caller",
                            "name"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo33 = (input, _path, _exceptionable = true)=>[
                    true,
                    "number" == typeof input.length || _report(_exceptionable, {
                        path: _path + ".length",
                        expected: "number",
                        value: input.length
                    }),
                    true,
                    ("object" == typeof input.caller && null !== input.caller || _report(_exceptionable, {
                        path: _path + ".caller",
                        expected: "Function",
                        value: input.caller
                    })) && _vo33(input.caller, _path + ".caller", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".caller",
                        expected: "Function",
                        value: input.caller
                    }),
                    "string" == typeof input.name || _report(_exceptionable, {
                        path: _path + ".name",
                        expected: "string",
                        value: input.name
                    }),
                    5 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "prototype",
                            "length",
                            "arguments",
                            "caller",
                            "name"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo34 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.parse || ("object" == typeof input.parse && null !== input.parse || _report(_exceptionable, {
                        path: _path + ".parse",
                        expected: "(postcss.Parser<Document_ | Root_> | undefined)",
                        value: input.parse
                    })) && _vo32(input.parse, _path + ".parse", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".parse",
                        expected: "(postcss.Parser<Document_ | Root_> | undefined)",
                        value: input.parse
                    }),
                    void 0 === input.stringify || ("object" == typeof input.stringify && null !== input.stringify || _report(_exceptionable, {
                        path: _path + ".stringify",
                        expected: "(postcss.Stringifier | undefined)",
                        value: input.stringify
                    })) && _vo35(input.stringify, _path + ".stringify", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".stringify",
                        expected: "(postcss.Stringifier | undefined)",
                        value: input.stringify
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "parse",
                            "stringify"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo35 = (input, _path, _exceptionable = true)=>[
                    true,
                    "number" == typeof input.length || _report(_exceptionable, {
                        path: _path + ".length",
                        expected: "number",
                        value: input.length
                    }),
                    true,
                    ("object" == typeof input.caller && null !== input.caller || _report(_exceptionable, {
                        path: _path + ".caller",
                        expected: "Function",
                        value: input.caller
                    })) && _vo33(input.caller, _path + ".caller", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".caller",
                        expected: "Function",
                        value: input.caller
                    }),
                    "string" == typeof input.name || _report(_exceptionable, {
                        path: _path + ".name",
                        expected: "string",
                        value: input.name
                    }),
                    5 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "prototype",
                            "length",
                            "arguments",
                            "caller",
                            "name"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo36 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.esModule || "boolean" == typeof input.esModule || _report(_exceptionable, {
                        path: _path + ".esModule",
                        expected: "(boolean | undefined)",
                        value: input.esModule
                    }),
                    void 0 === input.injectType || "styleTag" === input.injectType || "singletonStyleTag" === input.injectType || "lazyStyleTag" === input.injectType || "lazySingletonStyleTag" === input.injectType || "linkTag" === input.injectType || _report(_exceptionable, {
                        path: _path + ".injectType",
                        expected: "(\"lazySingletonStyleTag\" | \"lazyStyleTag\" | \"linkTag\" | \"singletonStyleTag\" | \"styleTag\" | undefined)",
                        value: input.injectType
                    }),
                    void 0 === input.attributes || ("object" == typeof input.attributes && null !== input.attributes && false === Array.isArray(input.attributes) || _report(_exceptionable, {
                        path: _path + ".attributes",
                        expected: "(Record<string, string> | undefined)",
                        value: input.attributes
                    })) && _vo37(input.attributes, _path + ".attributes", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".attributes",
                        expected: "(Record<string, string> | undefined)",
                        value: input.attributes
                    }),
                    (null !== input.insert || _report(_exceptionable, {
                        path: _path + ".insert",
                        expected: "(string | undefined)",
                        value: input.insert
                    })) && (void 0 === input.insert || "function" == typeof input.insert || "string" == typeof input.insert || _report(_exceptionable, {
                        path: _path + ".insert",
                        expected: "(string | undefined)",
                        value: input.insert
                    })),
                    (null !== input.styleTagTransform || _report(_exceptionable, {
                        path: _path + ".styleTagTransform",
                        expected: "(string | undefined)",
                        value: input.styleTagTransform
                    })) && (void 0 === input.styleTagTransform || "function" == typeof input.styleTagTransform || "string" == typeof input.styleTagTransform || _report(_exceptionable, {
                        path: _path + ".styleTagTransform",
                        expected: "(string | undefined)",
                        value: input.styleTagTransform
                    })),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "esModule",
                            "injectType",
                            "attributes",
                            "insert",
                            "styleTagTransform"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo37 = (input, _path, _exceptionable = true)=>[
                    false === _exceptionable || Object.keys(input).map((key)=>{
                        const value = input[key];
                        if (void 0 === value) return true;
                        return "string" == typeof value || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "string",
                            value: value
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo38 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.cache || "boolean" == typeof input.cache || _report(_exceptionable, {
                        path: _path + ".cache",
                        expected: "(boolean | undefined)",
                        value: input.cache
                    }),
                    (null !== input.chunks || _report(_exceptionable, {
                        path: _path + ".chunks",
                        expected: "(\"all\" | Array<string> | undefined)",
                        value: input.chunks
                    })) && (void 0 === input.chunks || "all" === input.chunks || (Array.isArray(input.chunks) || _report(_exceptionable, {
                        path: _path + ".chunks",
                        expected: "(\"all\" | Array<string> | undefined)",
                        value: input.chunks
                    })) && input.chunks.map((elem, _index393)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".chunks[" + _index393 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".chunks",
                        expected: "(\"all\" | Array<string> | undefined)",
                        value: input.chunks
                    })),
                    (null !== input.chunksSortMode || _report(_exceptionable, {
                        path: _path + ".chunksSortMode",
                        expected: "(\"auto\" | \"manual\" | \"none\" | undefined)",
                        value: input.chunksSortMode
                    })) && (void 0 === input.chunksSortMode || "function" == typeof input.chunksSortMode || "auto" === input.chunksSortMode || "none" === input.chunksSortMode || "manual" === input.chunksSortMode || _report(_exceptionable, {
                        path: _path + ".chunksSortMode",
                        expected: "(\"auto\" | \"manual\" | \"none\" | undefined)",
                        value: input.chunksSortMode
                    })),
                    void 0 === input.excludeChunks || (Array.isArray(input.excludeChunks) || _report(_exceptionable, {
                        path: _path + ".excludeChunks",
                        expected: "(Array<string> | undefined)",
                        value: input.excludeChunks
                    })) && input.excludeChunks.map((elem, _index394)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".excludeChunks[" + _index394 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".excludeChunks",
                        expected: "(Array<string> | undefined)",
                        value: input.excludeChunks
                    }),
                    void 0 === input.favicon || false === input.favicon || "string" == typeof input.favicon || _report(_exceptionable, {
                        path: _path + ".favicon",
                        expected: "(false | string | undefined)",
                        value: input.favicon
                    }),
                    (null !== input.filename || _report(_exceptionable, {
                        path: _path + ".filename",
                        expected: "(string | undefined)",
                        value: input.filename
                    })) && (void 0 === input.filename || "function" == typeof input.filename || "string" == typeof input.filename || _report(_exceptionable, {
                        path: _path + ".filename",
                        expected: "(string | undefined)",
                        value: input.filename
                    })),
                    void 0 === input.publicPath || "string" == typeof input.publicPath || _report(_exceptionable, {
                        path: _path + ".publicPath",
                        expected: "(string | undefined)",
                        value: input.publicPath
                    }),
                    void 0 === input.hash || "boolean" == typeof input.hash || _report(_exceptionable, {
                        path: _path + ".hash",
                        expected: "(boolean | undefined)",
                        value: input.hash
                    }),
                    void 0 === input.inject || "body" === input.inject || "head" === input.inject || "boolean" == typeof input.inject || _report(_exceptionable, {
                        path: _path + ".inject",
                        expected: "(\"body\" | \"head\" | boolean | undefined)",
                        value: input.inject
                    }),
                    void 0 === input.scriptLoading || "defer" === input.scriptLoading || "module" === input.scriptLoading || "blocking" === input.scriptLoading || "systemjs-module" === input.scriptLoading || _report(_exceptionable, {
                        path: _path + ".scriptLoading",
                        expected: "(\"blocking\" | \"defer\" | \"module\" | \"systemjs-module\" | undefined)",
                        value: input.scriptLoading
                    }),
                    (null !== input.meta || _report(_exceptionable, {
                        path: _path + ".meta",
                        expected: "(__type.o6 | false | undefined)",
                        value: input.meta
                    })) && (void 0 === input.meta || false === input.meta || ("object" == typeof input.meta && null !== input.meta && false === Array.isArray(input.meta) || _report(_exceptionable, {
                        path: _path + ".meta",
                        expected: "(__type.o6 | false | undefined)",
                        value: input.meta
                    })) && _vo39(input.meta, _path + ".meta", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".meta",
                        expected: "(__type.o6 | false | undefined)",
                        value: input.meta
                    })),
                    void 0 === input.minify || true,
                    void 0 === input.showErrors || "boolean" == typeof input.showErrors || _report(_exceptionable, {
                        path: _path + ".showErrors",
                        expected: "(boolean | undefined)",
                        value: input.showErrors
                    }),
                    void 0 === input.template || "string" == typeof input.template || _report(_exceptionable, {
                        path: _path + ".template",
                        expected: "(string | undefined)",
                        value: input.template
                    }),
                    (null !== input.templateContent || _report(_exceptionable, {
                        path: _path + ".templateContent",
                        expected: "(false | string | string | undefined)",
                        value: input.templateContent
                    })) && (void 0 === input.templateContent || "function" == typeof input.templateContent || false === input.templateContent || "string" == typeof input.templateContent || ("object" == typeof input.templateContent && null !== input.templateContent || _report(_exceptionable, {
                        path: _path + ".templateContent",
                        expected: "(false | string | string | undefined)",
                        value: input.templateContent
                    })) && _vo41(input.templateContent, _path + ".templateContent", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".templateContent",
                        expected: "(false | string | string | undefined)",
                        value: input.templateContent
                    })),
                    (null !== input.templateParameters || _report(_exceptionable, {
                        path: _path + ".templateParameters",
                        expected: "(__type.o8 | false | undefined)",
                        value: input.templateParameters
                    })) && (void 0 === input.templateParameters || "function" == typeof input.templateParameters || false === input.templateParameters || ("object" == typeof input.templateParameters && null !== input.templateParameters && false === Array.isArray(input.templateParameters) || _report(_exceptionable, {
                        path: _path + ".templateParameters",
                        expected: "(__type.o8 | false | undefined)",
                        value: input.templateParameters
                    })) && _vo42(input.templateParameters, _path + ".templateParameters", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".templateParameters",
                        expected: "(__type.o8 | false | undefined)",
                        value: input.templateParameters
                    })),
                    void 0 === input.title || "string" == typeof input.title || _report(_exceptionable, {
                        path: _path + ".title",
                        expected: "(string | undefined)",
                        value: input.title
                    }),
                    void 0 === input.xhtml || "boolean" == typeof input.xhtml || _report(_exceptionable, {
                        path: _path + ".xhtml",
                        expected: "(boolean | undefined)",
                        value: input.xhtml
                    }),
                    false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "cache",
                            "chunks",
                            "chunksSortMode",
                            "excludeChunks",
                            "favicon",
                            "filename",
                            "publicPath",
                            "hash",
                            "inject",
                            "scriptLoading",
                            "meta",
                            "minify",
                            "showErrors",
                            "template",
                            "templateContent",
                            "templateParameters",
                            "title",
                            "xhtml"
                        ].some((prop)=>key === prop)) return true;
                        input[key];
                        return true;
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo39 = (input, _path, _exceptionable = true)=>[
                    false === _exceptionable || Object.keys(input).map((key)=>{
                        const value = input[key];
                        if (void 0 === value) return true;
                        return (null !== value || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(__type.o7 | false | string)",
                            value: value
                        })) && (void 0 !== value || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(__type.o7 | false | string)",
                            value: value
                        })) && (false === value || "string" == typeof value || ("object" == typeof value && null !== value && false === Array.isArray(value) || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(__type.o7 | false | string)",
                            value: value
                        })) && _vo40(value, _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key), _exceptionable) || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(__type.o7 | false | string)",
                            value: value
                        }));
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo40 = (input, _path, _exceptionable = true)=>[
                    false === _exceptionable || Object.keys(input).map((key)=>{
                        const value = input[key];
                        if (void 0 === value) return true;
                        return "string" == typeof value || "boolean" == typeof value || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(boolean | string)",
                            value: value
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo41 = (input, _path, _exceptionable = true)=>[
                    "string" == typeof input["__@toStringTag@6659"] || _report(_exceptionable, {
                        path: _path + "[\"__@toStringTag@6659\"]",
                        expected: "string",
                        value: input["__@toStringTag@6659"]
                    }),
                    1 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "__@toStringTag@6659"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo42 = (input, _path, _exceptionable = true)=>[
                    false === _exceptionable || Object.keys(input).map((key)=>{
                        input[key];
                        return true;
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo43 = (input, _path, _exceptionable = true)=>[
                    (null !== input.test || _report(_exceptionable, {
                        path: _path + ".test",
                        expected: "(Array<string> | string | undefined)",
                        value: input.test
                    })) && (void 0 === input.test || "string" == typeof input.test || (Array.isArray(input.test) || _report(_exceptionable, {
                        path: _path + ".test",
                        expected: "(Array<string> | string | undefined)",
                        value: input.test
                    })) && input.test.map((elem, _index395)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".test[" + _index395 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".test",
                        expected: "(Array<string> | string | undefined)",
                        value: input.test
                    })),
                    (null !== input.exclude || _report(_exceptionable, {
                        path: _path + ".exclude",
                        expected: "(Array<string> | string | undefined)",
                        value: input.exclude
                    })) && (void 0 === input.exclude || "string" == typeof input.exclude || (Array.isArray(input.exclude) || _report(_exceptionable, {
                        path: _path + ".exclude",
                        expected: "(Array<string> | string | undefined)",
                        value: input.exclude
                    })) && input.exclude.map((elem, _index396)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".exclude[" + _index396 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".exclude",
                        expected: "(Array<string> | string | undefined)",
                        value: input.exclude
                    })),
                    void 0 === input.env || ("object" == typeof input.env && null !== input.env && false === Array.isArray(input.env) || _report(_exceptionable, {
                        path: _path + ".env",
                        expected: "(EnvConfig | undefined)",
                        value: input.env
                    })) && _vo44(input.env, _path + ".env", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".env",
                        expected: "(EnvConfig | undefined)",
                        value: input.env
                    }),
                    void 0 === input.jsc || ("object" == typeof input.jsc && null !== input.jsc && false === Array.isArray(input.jsc) || _report(_exceptionable, {
                        path: _path + ".jsc",
                        expected: "(JscConfig | undefined)",
                        value: input.jsc
                    })) && _vo45(input.jsc, _path + ".jsc", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".jsc",
                        expected: "(JscConfig | undefined)",
                        value: input.jsc
                    }),
                    void 0 === input["module"] || ("object" == typeof input["module"] && null !== input["module"] || _report(_exceptionable, {
                        path: _path + "[\"module\"]",
                        expected: "(AmdConfig | CommonJsConfig | Es6Config | NodeNextConfig | SystemjsConfig | UmdConfig | undefined)",
                        value: input["module"]
                    })) && _vu6(input["module"], _path + "[\"module\"]", _exceptionable) || _report(_exceptionable, {
                        path: _path + "[\"module\"]",
                        expected: "(AmdConfig | CommonJsConfig | Es6Config | NodeNextConfig | SystemjsConfig | UmdConfig | undefined)",
                        value: input["module"]
                    }),
                    void 0 === input.minify || "boolean" == typeof input.minify || _report(_exceptionable, {
                        path: _path + ".minify",
                        expected: "(boolean | undefined)",
                        value: input.minify
                    }),
                    void 0 === input.sourceMaps || "inline" === input.sourceMaps || "boolean" == typeof input.sourceMaps || _report(_exceptionable, {
                        path: _path + ".sourceMaps",
                        expected: "(\"inline\" | boolean | undefined)",
                        value: input.sourceMaps
                    }),
                    void 0 === input.inlineSourcesContent || "boolean" == typeof input.inlineSourcesContent || _report(_exceptionable, {
                        path: _path + ".inlineSourcesContent",
                        expected: "(boolean | undefined)",
                        value: input.inlineSourcesContent
                    }),
                    void 0 === input.isModule || "unknown" === input.isModule || "boolean" == typeof input.isModule || _report(_exceptionable, {
                        path: _path + ".isModule",
                        expected: "(\"unknown\" | boolean | undefined)",
                        value: input.isModule
                    }),
                    void 0 === input.rspackExperiments || ("object" == typeof input.rspackExperiments && null !== input.rspackExperiments && false === Array.isArray(input.rspackExperiments) || _report(_exceptionable, {
                        path: _path + ".rspackExperiments",
                        expected: "(__type.o19 | undefined)",
                        value: input.rspackExperiments
                    })) && _vo74(input.rspackExperiments, _path + ".rspackExperiments", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".rspackExperiments",
                        expected: "(__type.o19 | undefined)",
                        value: input.rspackExperiments
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "test",
                            "exclude",
                            "env",
                            "jsc",
                            "module",
                            "minify",
                            "sourceMaps",
                            "inlineSourcesContent",
                            "isModule",
                            "rspackExperiments"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo44 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.mode || "usage" === input.mode || "entry" === input.mode || _report(_exceptionable, {
                        path: _path + ".mode",
                        expected: "(\"entry\" | \"usage\" | undefined)",
                        value: input.mode
                    }),
                    void 0 === input.debug || "boolean" == typeof input.debug || _report(_exceptionable, {
                        path: _path + ".debug",
                        expected: "(boolean | undefined)",
                        value: input.debug
                    }),
                    void 0 === input.dynamicImport || "boolean" == typeof input.dynamicImport || _report(_exceptionable, {
                        path: _path + ".dynamicImport",
                        expected: "(boolean | undefined)",
                        value: input.dynamicImport
                    }),
                    void 0 === input.loose || "boolean" == typeof input.loose || _report(_exceptionable, {
                        path: _path + ".loose",
                        expected: "(boolean | undefined)",
                        value: input.loose
                    }),
                    void 0 === input.bugfixes || "boolean" == typeof input.bugfixes || _report(_exceptionable, {
                        path: _path + ".bugfixes",
                        expected: "(boolean | undefined)",
                        value: input.bugfixes
                    }),
                    void 0 === input.skip || (Array.isArray(input.skip) || _report(_exceptionable, {
                        path: _path + ".skip",
                        expected: "(Array<string> | undefined)",
                        value: input.skip
                    })) && input.skip.map((elem, _index397)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".skip[" + _index397 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".skip",
                        expected: "(Array<string> | undefined)",
                        value: input.skip
                    }),
                    void 0 === input.include || (Array.isArray(input.include) || _report(_exceptionable, {
                        path: _path + ".include",
                        expected: "(Array<string> | undefined)",
                        value: input.include
                    })) && input.include.map((elem, _index398)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".include[" + _index398 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".include",
                        expected: "(Array<string> | undefined)",
                        value: input.include
                    }),
                    void 0 === input.exclude || (Array.isArray(input.exclude) || _report(_exceptionable, {
                        path: _path + ".exclude",
                        expected: "(Array<string> | undefined)",
                        value: input.exclude
                    })) && input.exclude.map((elem, _index399)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".exclude[" + _index399 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".exclude",
                        expected: "(Array<string> | undefined)",
                        value: input.exclude
                    }),
                    void 0 === input.coreJs || "string" == typeof input.coreJs || _report(_exceptionable, {
                        path: _path + ".coreJs",
                        expected: "(string | undefined)",
                        value: input.coreJs
                    }),
                    true,
                    void 0 === input.path || "string" == typeof input.path || _report(_exceptionable, {
                        path: _path + ".path",
                        expected: "(string | undefined)",
                        value: input.path
                    }),
                    void 0 === input.shippedProposals || "boolean" == typeof input.shippedProposals || _report(_exceptionable, {
                        path: _path + ".shippedProposals",
                        expected: "(boolean | undefined)",
                        value: input.shippedProposals
                    }),
                    void 0 === input.forceAllTransforms || "boolean" == typeof input.forceAllTransforms || _report(_exceptionable, {
                        path: _path + ".forceAllTransforms",
                        expected: "(boolean | undefined)",
                        value: input.forceAllTransforms
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "mode",
                            "debug",
                            "dynamicImport",
                            "loose",
                            "bugfixes",
                            "skip",
                            "include",
                            "exclude",
                            "coreJs",
                            "targets",
                            "path",
                            "shippedProposals",
                            "forceAllTransforms"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo45 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.assumptions || ("object" == typeof input.assumptions && null !== input.assumptions && false === Array.isArray(input.assumptions) || _report(_exceptionable, {
                        path: _path + ".assumptions",
                        expected: "(Assumptions | undefined)",
                        value: input.assumptions
                    })) && _vo46(input.assumptions, _path + ".assumptions", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".assumptions",
                        expected: "(Assumptions | undefined)",
                        value: input.assumptions
                    }),
                    void 0 === input.loose || "boolean" == typeof input.loose || _report(_exceptionable, {
                        path: _path + ".loose",
                        expected: "(boolean | undefined)",
                        value: input.loose
                    }),
                    void 0 === input.parser || ("object" == typeof input.parser && null !== input.parser || _report(_exceptionable, {
                        path: _path + ".parser",
                        expected: "(EsParserConfig | TsParserConfig | undefined)",
                        value: input.parser
                    })) && _vu7(input.parser, _path + ".parser", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".parser",
                        expected: "(EsParserConfig | TsParserConfig | undefined)",
                        value: input.parser
                    }),
                    void 0 === input.transform || ("object" == typeof input.transform && null !== input.transform && false === Array.isArray(input.transform) || _report(_exceptionable, {
                        path: _path + ".transform",
                        expected: "(TransformConfig | undefined)",
                        value: input.transform
                    })) && _vo49(input.transform, _path + ".transform", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".transform",
                        expected: "(TransformConfig | undefined)",
                        value: input.transform
                    }),
                    void 0 === input.externalHelpers || "boolean" == typeof input.externalHelpers || _report(_exceptionable, {
                        path: _path + ".externalHelpers",
                        expected: "(boolean | undefined)",
                        value: input.externalHelpers
                    }),
                    void 0 === input.target || true === _vv400.has(input.target) || _report(_exceptionable, {
                        path: _path + ".target",
                        expected: "(\"es2015\" | \"es2016\" | \"es2017\" | \"es2018\" | \"es2019\" | \"es2020\" | \"es2021\" | \"es2022\" | \"es2023\" | \"es2024\" | \"es3\" | \"es5\" | \"esnext\" | undefined)",
                        value: input.target
                    }),
                    void 0 === input.keepClassNames || "boolean" == typeof input.keepClassNames || _report(_exceptionable, {
                        path: _path + ".keepClassNames",
                        expected: "(boolean | undefined)",
                        value: input.keepClassNames
                    }),
                    void 0 === input.experimental || ("object" == typeof input.experimental && null !== input.experimental && false === Array.isArray(input.experimental) || _report(_exceptionable, {
                        path: _path + ".experimental",
                        expected: "(__type.o13 | undefined)",
                        value: input.experimental
                    })) && _vo58(input.experimental, _path + ".experimental", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".experimental",
                        expected: "(__type.o13 | undefined)",
                        value: input.experimental
                    }),
                    void 0 === input.baseUrl || "string" == typeof input.baseUrl || _report(_exceptionable, {
                        path: _path + ".baseUrl",
                        expected: "(string | undefined)",
                        value: input.baseUrl
                    }),
                    void 0 === input.paths || ("object" == typeof input.paths && null !== input.paths && false === Array.isArray(input.paths) || _report(_exceptionable, {
                        path: _path + ".paths",
                        expected: "(__type.o14 | undefined)",
                        value: input.paths
                    })) && _vo59(input.paths, _path + ".paths", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".paths",
                        expected: "(__type.o14 | undefined)",
                        value: input.paths
                    }),
                    void 0 === input.minify || ("object" == typeof input.minify && null !== input.minify && false === Array.isArray(input.minify) || _report(_exceptionable, {
                        path: _path + ".minify",
                        expected: "(JsMinifyOptions | undefined)",
                        value: input.minify
                    })) && _vo60(input.minify, _path + ".minify", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".minify",
                        expected: "(JsMinifyOptions | undefined)",
                        value: input.minify
                    }),
                    void 0 === input.preserveAllComments || "boolean" == typeof input.preserveAllComments || _report(_exceptionable, {
                        path: _path + ".preserveAllComments",
                        expected: "(boolean | undefined)",
                        value: input.preserveAllComments
                    }),
                    void 0 === input.output || ("object" == typeof input.output && null !== input.output && false === Array.isArray(input.output) || _report(_exceptionable, {
                        path: _path + ".output",
                        expected: "(__type.o16 | undefined)",
                        value: input.output
                    })) && _vo66(input.output, _path + ".output", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".output",
                        expected: "(__type.o16 | undefined)",
                        value: input.output
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "assumptions",
                            "loose",
                            "parser",
                            "transform",
                            "externalHelpers",
                            "target",
                            "keepClassNames",
                            "experimental",
                            "baseUrl",
                            "paths",
                            "minify",
                            "preserveAllComments",
                            "output"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo46 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.arrayLikeIsIterable || "boolean" == typeof input.arrayLikeIsIterable || _report(_exceptionable, {
                        path: _path + ".arrayLikeIsIterable",
                        expected: "(boolean | undefined)",
                        value: input.arrayLikeIsIterable
                    }),
                    void 0 === input.constantReexports || "boolean" == typeof input.constantReexports || _report(_exceptionable, {
                        path: _path + ".constantReexports",
                        expected: "(boolean | undefined)",
                        value: input.constantReexports
                    }),
                    void 0 === input.constantSuper || "boolean" == typeof input.constantSuper || _report(_exceptionable, {
                        path: _path + ".constantSuper",
                        expected: "(boolean | undefined)",
                        value: input.constantSuper
                    }),
                    void 0 === input.enumerableModuleMeta || "boolean" == typeof input.enumerableModuleMeta || _report(_exceptionable, {
                        path: _path + ".enumerableModuleMeta",
                        expected: "(boolean | undefined)",
                        value: input.enumerableModuleMeta
                    }),
                    void 0 === input.ignoreFunctionLength || "boolean" == typeof input.ignoreFunctionLength || _report(_exceptionable, {
                        path: _path + ".ignoreFunctionLength",
                        expected: "(boolean | undefined)",
                        value: input.ignoreFunctionLength
                    }),
                    void 0 === input.ignoreFunctionName || "boolean" == typeof input.ignoreFunctionName || _report(_exceptionable, {
                        path: _path + ".ignoreFunctionName",
                        expected: "(boolean | undefined)",
                        value: input.ignoreFunctionName
                    }),
                    void 0 === input.ignoreToPrimitiveHint || "boolean" == typeof input.ignoreToPrimitiveHint || _report(_exceptionable, {
                        path: _path + ".ignoreToPrimitiveHint",
                        expected: "(boolean | undefined)",
                        value: input.ignoreToPrimitiveHint
                    }),
                    void 0 === input.iterableIsArray || "boolean" == typeof input.iterableIsArray || _report(_exceptionable, {
                        path: _path + ".iterableIsArray",
                        expected: "(boolean | undefined)",
                        value: input.iterableIsArray
                    }),
                    void 0 === input.mutableTemplateObject || "boolean" == typeof input.mutableTemplateObject || _report(_exceptionable, {
                        path: _path + ".mutableTemplateObject",
                        expected: "(boolean | undefined)",
                        value: input.mutableTemplateObject
                    }),
                    void 0 === input.noClassCalls || "boolean" == typeof input.noClassCalls || _report(_exceptionable, {
                        path: _path + ".noClassCalls",
                        expected: "(boolean | undefined)",
                        value: input.noClassCalls
                    }),
                    void 0 === input.noDocumentAll || "boolean" == typeof input.noDocumentAll || _report(_exceptionable, {
                        path: _path + ".noDocumentAll",
                        expected: "(boolean | undefined)",
                        value: input.noDocumentAll
                    }),
                    void 0 === input.noIncompleteNsImportDetection || "boolean" == typeof input.noIncompleteNsImportDetection || _report(_exceptionable, {
                        path: _path + ".noIncompleteNsImportDetection",
                        expected: "(boolean | undefined)",
                        value: input.noIncompleteNsImportDetection
                    }),
                    void 0 === input.noNewArrows || "boolean" == typeof input.noNewArrows || _report(_exceptionable, {
                        path: _path + ".noNewArrows",
                        expected: "(boolean | undefined)",
                        value: input.noNewArrows
                    }),
                    void 0 === input.objectRestNoSymbols || "boolean" == typeof input.objectRestNoSymbols || _report(_exceptionable, {
                        path: _path + ".objectRestNoSymbols",
                        expected: "(boolean | undefined)",
                        value: input.objectRestNoSymbols
                    }),
                    void 0 === input.privateFieldsAsProperties || "boolean" == typeof input.privateFieldsAsProperties || _report(_exceptionable, {
                        path: _path + ".privateFieldsAsProperties",
                        expected: "(boolean | undefined)",
                        value: input.privateFieldsAsProperties
                    }),
                    void 0 === input.pureGetters || "boolean" == typeof input.pureGetters || _report(_exceptionable, {
                        path: _path + ".pureGetters",
                        expected: "(boolean | undefined)",
                        value: input.pureGetters
                    }),
                    void 0 === input.setClassMethods || "boolean" == typeof input.setClassMethods || _report(_exceptionable, {
                        path: _path + ".setClassMethods",
                        expected: "(boolean | undefined)",
                        value: input.setClassMethods
                    }),
                    void 0 === input.setComputedProperties || "boolean" == typeof input.setComputedProperties || _report(_exceptionable, {
                        path: _path + ".setComputedProperties",
                        expected: "(boolean | undefined)",
                        value: input.setComputedProperties
                    }),
                    void 0 === input.setPublicClassFields || "boolean" == typeof input.setPublicClassFields || _report(_exceptionable, {
                        path: _path + ".setPublicClassFields",
                        expected: "(boolean | undefined)",
                        value: input.setPublicClassFields
                    }),
                    void 0 === input.setSpreadProperties || "boolean" == typeof input.setSpreadProperties || _report(_exceptionable, {
                        path: _path + ".setSpreadProperties",
                        expected: "(boolean | undefined)",
                        value: input.setSpreadProperties
                    }),
                    void 0 === input.skipForOfIteratorClosing || "boolean" == typeof input.skipForOfIteratorClosing || _report(_exceptionable, {
                        path: _path + ".skipForOfIteratorClosing",
                        expected: "(boolean | undefined)",
                        value: input.skipForOfIteratorClosing
                    }),
                    void 0 === input.superIsCallableConstructor || "boolean" == typeof input.superIsCallableConstructor || _report(_exceptionable, {
                        path: _path + ".superIsCallableConstructor",
                        expected: "(boolean | undefined)",
                        value: input.superIsCallableConstructor
                    }),
                    void 0 === input.tsEnumIsReadonly || "boolean" == typeof input.tsEnumIsReadonly || _report(_exceptionable, {
                        path: _path + ".tsEnumIsReadonly",
                        expected: "(boolean | undefined)",
                        value: input.tsEnumIsReadonly
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "arrayLikeIsIterable",
                            "constantReexports",
                            "constantSuper",
                            "enumerableModuleMeta",
                            "ignoreFunctionLength",
                            "ignoreFunctionName",
                            "ignoreToPrimitiveHint",
                            "iterableIsArray",
                            "mutableTemplateObject",
                            "noClassCalls",
                            "noDocumentAll",
                            "noIncompleteNsImportDetection",
                            "noNewArrows",
                            "objectRestNoSymbols",
                            "privateFieldsAsProperties",
                            "pureGetters",
                            "setClassMethods",
                            "setComputedProperties",
                            "setPublicClassFields",
                            "setSpreadProperties",
                            "skipForOfIteratorClosing",
                            "superIsCallableConstructor",
                            "tsEnumIsReadonly"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo47 = (input, _path, _exceptionable = true)=>[
                    "typescript" === input.syntax || _report(_exceptionable, {
                        path: _path + ".syntax",
                        expected: '"typescript"',
                        value: input.syntax
                    }),
                    void 0 === input.tsx || "boolean" == typeof input.tsx || _report(_exceptionable, {
                        path: _path + ".tsx",
                        expected: "(boolean | undefined)",
                        value: input.tsx
                    }),
                    void 0 === input.decorators || "boolean" == typeof input.decorators || _report(_exceptionable, {
                        path: _path + ".decorators",
                        expected: "(boolean | undefined)",
                        value: input.decorators
                    }),
                    void 0 === input.dynamicImport || "boolean" == typeof input.dynamicImport || _report(_exceptionable, {
                        path: _path + ".dynamicImport",
                        expected: "(boolean | undefined)",
                        value: input.dynamicImport
                    }),
                    1 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "syntax",
                            "tsx",
                            "decorators",
                            "dynamicImport"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo48 = (input, _path, _exceptionable = true)=>[
                    "ecmascript" === input.syntax || _report(_exceptionable, {
                        path: _path + ".syntax",
                        expected: '"ecmascript"',
                        value: input.syntax
                    }),
                    void 0 === input.jsx || "boolean" == typeof input.jsx || _report(_exceptionable, {
                        path: _path + ".jsx",
                        expected: "(boolean | undefined)",
                        value: input.jsx
                    }),
                    void 0 === input.numericSeparator || "boolean" == typeof input.numericSeparator || _report(_exceptionable, {
                        path: _path + ".numericSeparator",
                        expected: "(boolean | undefined)",
                        value: input.numericSeparator
                    }),
                    void 0 === input.classPrivateProperty || "boolean" == typeof input.classPrivateProperty || _report(_exceptionable, {
                        path: _path + ".classPrivateProperty",
                        expected: "(boolean | undefined)",
                        value: input.classPrivateProperty
                    }),
                    void 0 === input.privateMethod || "boolean" == typeof input.privateMethod || _report(_exceptionable, {
                        path: _path + ".privateMethod",
                        expected: "(boolean | undefined)",
                        value: input.privateMethod
                    }),
                    void 0 === input.classProperty || "boolean" == typeof input.classProperty || _report(_exceptionable, {
                        path: _path + ".classProperty",
                        expected: "(boolean | undefined)",
                        value: input.classProperty
                    }),
                    void 0 === input.functionBind || "boolean" == typeof input.functionBind || _report(_exceptionable, {
                        path: _path + ".functionBind",
                        expected: "(boolean | undefined)",
                        value: input.functionBind
                    }),
                    void 0 === input.decorators || "boolean" == typeof input.decorators || _report(_exceptionable, {
                        path: _path + ".decorators",
                        expected: "(boolean | undefined)",
                        value: input.decorators
                    }),
                    void 0 === input.decoratorsBeforeExport || "boolean" == typeof input.decoratorsBeforeExport || _report(_exceptionable, {
                        path: _path + ".decoratorsBeforeExport",
                        expected: "(boolean | undefined)",
                        value: input.decoratorsBeforeExport
                    }),
                    void 0 === input.exportDefaultFrom || "boolean" == typeof input.exportDefaultFrom || _report(_exceptionable, {
                        path: _path + ".exportDefaultFrom",
                        expected: "(boolean | undefined)",
                        value: input.exportDefaultFrom
                    }),
                    void 0 === input.exportNamespaceFrom || "boolean" == typeof input.exportNamespaceFrom || _report(_exceptionable, {
                        path: _path + ".exportNamespaceFrom",
                        expected: "(boolean | undefined)",
                        value: input.exportNamespaceFrom
                    }),
                    void 0 === input.dynamicImport || "boolean" == typeof input.dynamicImport || _report(_exceptionable, {
                        path: _path + ".dynamicImport",
                        expected: "(boolean | undefined)",
                        value: input.dynamicImport
                    }),
                    void 0 === input.nullishCoalescing || "boolean" == typeof input.nullishCoalescing || _report(_exceptionable, {
                        path: _path + ".nullishCoalescing",
                        expected: "(boolean | undefined)",
                        value: input.nullishCoalescing
                    }),
                    void 0 === input.optionalChaining || "boolean" == typeof input.optionalChaining || _report(_exceptionable, {
                        path: _path + ".optionalChaining",
                        expected: "(boolean | undefined)",
                        value: input.optionalChaining
                    }),
                    void 0 === input.importMeta || "boolean" == typeof input.importMeta || _report(_exceptionable, {
                        path: _path + ".importMeta",
                        expected: "(boolean | undefined)",
                        value: input.importMeta
                    }),
                    void 0 === input.topLevelAwait || "boolean" == typeof input.topLevelAwait || _report(_exceptionable, {
                        path: _path + ".topLevelAwait",
                        expected: "(boolean | undefined)",
                        value: input.topLevelAwait
                    }),
                    void 0 === input.importAssertions || "boolean" == typeof input.importAssertions || _report(_exceptionable, {
                        path: _path + ".importAssertions",
                        expected: "(boolean | undefined)",
                        value: input.importAssertions
                    }),
                    void 0 === input.importAttributes || "boolean" == typeof input.importAttributes || _report(_exceptionable, {
                        path: _path + ".importAttributes",
                        expected: "(boolean | undefined)",
                        value: input.importAttributes
                    }),
                    void 0 === input.allowSuperOutsideMethod || "boolean" == typeof input.allowSuperOutsideMethod || _report(_exceptionable, {
                        path: _path + ".allowSuperOutsideMethod",
                        expected: "(boolean | undefined)",
                        value: input.allowSuperOutsideMethod
                    }),
                    void 0 === input.allowReturnOutsideFunction || "boolean" == typeof input.allowReturnOutsideFunction || _report(_exceptionable, {
                        path: _path + ".allowReturnOutsideFunction",
                        expected: "(boolean | undefined)",
                        value: input.allowReturnOutsideFunction
                    }),
                    void 0 === input.autoAccessors || "boolean" == typeof input.autoAccessors || _report(_exceptionable, {
                        path: _path + ".autoAccessors",
                        expected: "(boolean | undefined)",
                        value: input.autoAccessors
                    }),
                    void 0 === input.explicitResourceManagement || "boolean" == typeof input.explicitResourceManagement || _report(_exceptionable, {
                        path: _path + ".explicitResourceManagement",
                        expected: "(boolean | undefined)",
                        value: input.explicitResourceManagement
                    }),
                    1 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "syntax",
                            "jsx",
                            "numericSeparator",
                            "classPrivateProperty",
                            "privateMethod",
                            "classProperty",
                            "functionBind",
                            "decorators",
                            "decoratorsBeforeExport",
                            "exportDefaultFrom",
                            "exportNamespaceFrom",
                            "dynamicImport",
                            "nullishCoalescing",
                            "optionalChaining",
                            "importMeta",
                            "topLevelAwait",
                            "importAssertions",
                            "importAttributes",
                            "allowSuperOutsideMethod",
                            "allowReturnOutsideFunction",
                            "autoAccessors",
                            "explicitResourceManagement"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo49 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.react || ("object" == typeof input.react && null !== input.react && false === Array.isArray(input.react) || _report(_exceptionable, {
                        path: _path + ".react",
                        expected: "(ReactConfig | undefined)",
                        value: input.react
                    })) && _vo50(input.react, _path + ".react", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".react",
                        expected: "(ReactConfig | undefined)",
                        value: input.react
                    }),
                    void 0 === input.constModules || ("object" == typeof input.constModules && null !== input.constModules && false === Array.isArray(input.constModules) || _report(_exceptionable, {
                        path: _path + ".constModules",
                        expected: "(ConstModulesConfig | undefined)",
                        value: input.constModules
                    })) && _vo52(input.constModules, _path + ".constModules", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".constModules",
                        expected: "(ConstModulesConfig | undefined)",
                        value: input.constModules
                    }),
                    void 0 === input.optimizer || ("object" == typeof input.optimizer && null !== input.optimizer && false === Array.isArray(input.optimizer) || _report(_exceptionable, {
                        path: _path + ".optimizer",
                        expected: "(OptimizerConfig | undefined)",
                        value: input.optimizer
                    })) && _vo55(input.optimizer, _path + ".optimizer", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".optimizer",
                        expected: "(OptimizerConfig | undefined)",
                        value: input.optimizer
                    }),
                    void 0 === input.legacyDecorator || "boolean" == typeof input.legacyDecorator || _report(_exceptionable, {
                        path: _path + ".legacyDecorator",
                        expected: "(boolean | undefined)",
                        value: input.legacyDecorator
                    }),
                    void 0 === input.decoratorMetadata || "boolean" == typeof input.decoratorMetadata || _report(_exceptionable, {
                        path: _path + ".decoratorMetadata",
                        expected: "(boolean | undefined)",
                        value: input.decoratorMetadata
                    }),
                    void 0 === input.decoratorVersion || "2021-12" === input.decoratorVersion || "2022-03" === input.decoratorVersion || _report(_exceptionable, {
                        path: _path + ".decoratorVersion",
                        expected: "(\"2021-12\" | \"2022-03\" | undefined)",
                        value: input.decoratorVersion
                    }),
                    void 0 === input.treatConstEnumAsEnum || "boolean" == typeof input.treatConstEnumAsEnum || _report(_exceptionable, {
                        path: _path + ".treatConstEnumAsEnum",
                        expected: "(boolean | undefined)",
                        value: input.treatConstEnumAsEnum
                    }),
                    void 0 === input.useDefineForClassFields || "boolean" == typeof input.useDefineForClassFields || _report(_exceptionable, {
                        path: _path + ".useDefineForClassFields",
                        expected: "(boolean | undefined)",
                        value: input.useDefineForClassFields
                    }),
                    void 0 === input.verbatimModuleSyntax || "boolean" == typeof input.verbatimModuleSyntax || _report(_exceptionable, {
                        path: _path + ".verbatimModuleSyntax",
                        expected: "(boolean | undefined)",
                        value: input.verbatimModuleSyntax
                    }),
                    void 0 === input.tsEnumIsMutable || "boolean" == typeof input.tsEnumIsMutable || _report(_exceptionable, {
                        path: _path + ".tsEnumIsMutable",
                        expected: "(boolean | undefined)",
                        value: input.tsEnumIsMutable
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "react",
                            "constModules",
                            "optimizer",
                            "legacyDecorator",
                            "decoratorMetadata",
                            "decoratorVersion",
                            "treatConstEnumAsEnum",
                            "useDefineForClassFields",
                            "verbatimModuleSyntax",
                            "tsEnumIsMutable"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo50 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.pragma || "string" == typeof input.pragma || _report(_exceptionable, {
                        path: _path + ".pragma",
                        expected: "(string | undefined)",
                        value: input.pragma
                    }),
                    void 0 === input.pragmaFrag || "string" == typeof input.pragmaFrag || _report(_exceptionable, {
                        path: _path + ".pragmaFrag",
                        expected: "(string | undefined)",
                        value: input.pragmaFrag
                    }),
                    void 0 === input.throwIfNamespace || "boolean" == typeof input.throwIfNamespace || _report(_exceptionable, {
                        path: _path + ".throwIfNamespace",
                        expected: "(boolean | undefined)",
                        value: input.throwIfNamespace
                    }),
                    void 0 === input.development || "boolean" == typeof input.development || _report(_exceptionable, {
                        path: _path + ".development",
                        expected: "(boolean | undefined)",
                        value: input.development
                    }),
                    void 0 === input.useBuiltins || "boolean" == typeof input.useBuiltins || _report(_exceptionable, {
                        path: _path + ".useBuiltins",
                        expected: "(boolean | undefined)",
                        value: input.useBuiltins
                    }),
                    (null !== input.refresh || _report(_exceptionable, {
                        path: _path + ".refresh",
                        expected: "(__type.o9 | boolean | undefined)",
                        value: input.refresh
                    })) && (void 0 === input.refresh || "boolean" == typeof input.refresh || ("object" == typeof input.refresh && null !== input.refresh && false === Array.isArray(input.refresh) || _report(_exceptionable, {
                        path: _path + ".refresh",
                        expected: "(__type.o9 | boolean | undefined)",
                        value: input.refresh
                    })) && _vo51(input.refresh, _path + ".refresh", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".refresh",
                        expected: "(__type.o9 | boolean | undefined)",
                        value: input.refresh
                    })),
                    void 0 === input.runtime || "automatic" === input.runtime || "classic" === input.runtime || _report(_exceptionable, {
                        path: _path + ".runtime",
                        expected: "(\"automatic\" | \"classic\" | undefined)",
                        value: input.runtime
                    }),
                    void 0 === input.importSource || "string" == typeof input.importSource || _report(_exceptionable, {
                        path: _path + ".importSource",
                        expected: "(string | undefined)",
                        value: input.importSource
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "pragma",
                            "pragmaFrag",
                            "throwIfNamespace",
                            "development",
                            "useBuiltins",
                            "refresh",
                            "runtime",
                            "importSource"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo51 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.refreshReg || "string" == typeof input.refreshReg || _report(_exceptionable, {
                        path: _path + ".refreshReg",
                        expected: "(string | undefined)",
                        value: input.refreshReg
                    }),
                    void 0 === input.refreshSig || "string" == typeof input.refreshSig || _report(_exceptionable, {
                        path: _path + ".refreshSig",
                        expected: "(string | undefined)",
                        value: input.refreshSig
                    }),
                    void 0 === input.emitFullSignatures || "boolean" == typeof input.emitFullSignatures || _report(_exceptionable, {
                        path: _path + ".emitFullSignatures",
                        expected: "(boolean | undefined)",
                        value: input.emitFullSignatures
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "refreshReg",
                            "refreshSig",
                            "emitFullSignatures"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo52 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.globals || ("object" == typeof input.globals && null !== input.globals && false === Array.isArray(input.globals) || _report(_exceptionable, {
                        path: _path + ".globals",
                        expected: "(__type.o10 | undefined)",
                        value: input.globals
                    })) && _vo53(input.globals, _path + ".globals", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".globals",
                        expected: "(__type.o10 | undefined)",
                        value: input.globals
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "globals"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo53 = (input, _path, _exceptionable = true)=>[
                    false === _exceptionable || Object.keys(input).map((key)=>{
                        const value = input[key];
                        if (void 0 === value) return true;
                        return ("object" == typeof value && null !== value && false === Array.isArray(value) || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "__type.o11",
                            value: value
                        })) && _vo54(value, _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key), _exceptionable) || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "__type.o11",
                            value: value
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo54 = (input, _path, _exceptionable = true)=>[
                    false === _exceptionable || Object.keys(input).map((key)=>{
                        const value = input[key];
                        if (void 0 === value) return true;
                        return "string" == typeof value || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "string",
                            value: value
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo55 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.simplify || "boolean" == typeof input.simplify || _report(_exceptionable, {
                        path: _path + ".simplify",
                        expected: "(boolean | undefined)",
                        value: input.simplify
                    }),
                    void 0 === input.globals || ("object" == typeof input.globals && null !== input.globals && false === Array.isArray(input.globals) || _report(_exceptionable, {
                        path: _path + ".globals",
                        expected: "(GlobalPassOption | undefined)",
                        value: input.globals
                    })) && _vo56(input.globals, _path + ".globals", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".globals",
                        expected: "(GlobalPassOption | undefined)",
                        value: input.globals
                    }),
                    void 0 === input.jsonify || ("object" == typeof input.jsonify && null !== input.jsonify || _report(_exceptionable, {
                        path: _path + ".jsonify",
                        expected: "(__type.o12 | undefined)",
                        value: input.jsonify
                    })) && _vo57(input.jsonify, _path + ".jsonify", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".jsonify",
                        expected: "(__type.o12 | undefined)",
                        value: input.jsonify
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "simplify",
                            "globals",
                            "jsonify"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo56 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.vars || ("object" == typeof input.vars && null !== input.vars && false === Array.isArray(input.vars) || _report(_exceptionable, {
                        path: _path + ".vars",
                        expected: "(Record<string, string> | undefined)",
                        value: input.vars
                    })) && _vo37(input.vars, _path + ".vars", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".vars",
                        expected: "(Record<string, string> | undefined)",
                        value: input.vars
                    }),
                    (null !== input.envs || _report(_exceptionable, {
                        path: _path + ".envs",
                        expected: "(Array<string> | Record<string, string> | undefined)",
                        value: input.envs
                    })) && (void 0 === input.envs || Array.isArray(input.envs) && input.envs.map((elem, _index401)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".envs[" + _index401 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || "object" == typeof input.envs && null !== input.envs && false === Array.isArray(input.envs) && _vo37(input.envs, _path + ".envs", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".envs",
                        expected: "(Array<string> | Record<string, string> | undefined)",
                        value: input.envs
                    }) || _report(_exceptionable, {
                        path: _path + ".envs",
                        expected: "(Array<string> | Record<string, string> | undefined)",
                        value: input.envs
                    })),
                    void 0 === input.typeofs || ("object" == typeof input.typeofs && null !== input.typeofs && false === Array.isArray(input.typeofs) || _report(_exceptionable, {
                        path: _path + ".typeofs",
                        expected: "(Record<string, string> | undefined)",
                        value: input.typeofs
                    })) && _vo37(input.typeofs, _path + ".typeofs", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".typeofs",
                        expected: "(Record<string, string> | undefined)",
                        value: input.typeofs
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "vars",
                            "envs",
                            "typeofs"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo57 = (input, _path, _exceptionable = true)=>[
                    "number" == typeof input.minCost || _report(_exceptionable, {
                        path: _path + ".minCost",
                        expected: "number",
                        value: input.minCost
                    }),
                    1 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "minCost"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo58 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.optimizeHygiene || "boolean" == typeof input.optimizeHygiene || _report(_exceptionable, {
                        path: _path + ".optimizeHygiene",
                        expected: "(boolean | undefined)",
                        value: input.optimizeHygiene
                    }),
                    void 0 === input.keepImportAttributes || "boolean" == typeof input.keepImportAttributes || _report(_exceptionable, {
                        path: _path + ".keepImportAttributes",
                        expected: "(boolean | undefined)",
                        value: input.keepImportAttributes
                    }),
                    void 0 === input.emitAssertForImportAttributes || "boolean" == typeof input.emitAssertForImportAttributes || _report(_exceptionable, {
                        path: _path + ".emitAssertForImportAttributes",
                        expected: "(boolean | undefined)",
                        value: input.emitAssertForImportAttributes
                    }),
                    void 0 === input.cacheRoot || "string" == typeof input.cacheRoot || _report(_exceptionable, {
                        path: _path + ".cacheRoot",
                        expected: "(string | undefined)",
                        value: input.cacheRoot
                    }),
                    void 0 === input.plugins || (Array.isArray(input.plugins) || _report(_exceptionable, {
                        path: _path + ".plugins",
                        expected: "(Array<WasmPlugin> | undefined)",
                        value: input.plugins
                    })) && input.plugins.map((elem, _index402)=>(Array.isArray(elem) || _report(_exceptionable, {
                            path: _path + ".plugins[" + _index402 + "]",
                            expected: "WasmPlugin",
                            value: elem
                        })) && (2 === elem.length || _report(_exceptionable, {
                            path: _path + ".plugins[" + _index402 + "]",
                            expected: "[string, Record<string, any>]",
                            value: elem
                        })) && [
                            "string" == typeof elem[0] || _report(_exceptionable, {
                                path: _path + ".plugins[" + _index402 + "][0]",
                                expected: "string",
                                value: elem[0]
                            }),
                            ("object" == typeof elem[1] && null !== elem[1] && false === Array.isArray(elem[1]) || _report(_exceptionable, {
                                path: _path + ".plugins[" + _index402 + "][1]",
                                expected: "Record<string, any>",
                                value: elem[1]
                            })) && _vo19(elem[1], _path + ".plugins[" + _index402 + "][1]", _exceptionable) || _report(_exceptionable, {
                                path: _path + ".plugins[" + _index402 + "][1]",
                                expected: "Record<string, any>",
                                value: elem[1]
                            })
                        ].every((flag)=>flag) || _report(_exceptionable, {
                            path: _path + ".plugins[" + _index402 + "]",
                            expected: "WasmPlugin",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".plugins",
                        expected: "(Array<WasmPlugin> | undefined)",
                        value: input.plugins
                    }),
                    void 0 === input.runPluginFirst || "boolean" == typeof input.runPluginFirst || _report(_exceptionable, {
                        path: _path + ".runPluginFirst",
                        expected: "(boolean | undefined)",
                        value: input.runPluginFirst
                    }),
                    void 0 === input.disableBuiltinTransformsForInternalTesting || "boolean" == typeof input.disableBuiltinTransformsForInternalTesting || _report(_exceptionable, {
                        path: _path + ".disableBuiltinTransformsForInternalTesting",
                        expected: "(boolean | undefined)",
                        value: input.disableBuiltinTransformsForInternalTesting
                    }),
                    void 0 === input.emitIsolatedDts || "boolean" == typeof input.emitIsolatedDts || _report(_exceptionable, {
                        path: _path + ".emitIsolatedDts",
                        expected: "(boolean | undefined)",
                        value: input.emitIsolatedDts
                    }),
                    void 0 === input.disableAllLints || "boolean" == typeof input.disableAllLints || _report(_exceptionable, {
                        path: _path + ".disableAllLints",
                        expected: "(boolean | undefined)",
                        value: input.disableAllLints
                    }),
                    void 0 === input.keepImportAssertions || "boolean" == typeof input.keepImportAssertions || _report(_exceptionable, {
                        path: _path + ".keepImportAssertions",
                        expected: "(boolean | undefined)",
                        value: input.keepImportAssertions
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "optimizeHygiene",
                            "keepImportAttributes",
                            "emitAssertForImportAttributes",
                            "cacheRoot",
                            "plugins",
                            "runPluginFirst",
                            "disableBuiltinTransformsForInternalTesting",
                            "emitIsolatedDts",
                            "disableAllLints",
                            "keepImportAssertions"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo59 = (input, _path, _exceptionable = true)=>[
                    false === _exceptionable || Object.keys(input).map((key)=>{
                        const value = input[key];
                        if (void 0 === value) return true;
                        return (Array.isArray(value) || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "Array<string>",
                            value: value
                        })) && value.map((elem, _index403)=>"string" == typeof elem || _report(_exceptionable, {
                                path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key) + "[" + _index403 + "]",
                                expected: "string",
                                value: elem
                            })).every((flag)=>flag) || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "Array<string>",
                            value: value
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo60 = (input, _path, _exceptionable = true)=>[
                    (null !== input.compress || _report(_exceptionable, {
                        path: _path + ".compress",
                        expected: "(TerserCompressOptions | boolean | undefined)",
                        value: input.compress
                    })) && (void 0 === input.compress || "boolean" == typeof input.compress || ("object" == typeof input.compress && null !== input.compress && false === Array.isArray(input.compress) || _report(_exceptionable, {
                        path: _path + ".compress",
                        expected: "(TerserCompressOptions | boolean | undefined)",
                        value: input.compress
                    })) && _vo61(input.compress, _path + ".compress", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".compress",
                        expected: "(TerserCompressOptions | boolean | undefined)",
                        value: input.compress
                    })),
                    void 0 === input.format || ("object" == typeof input.format && null !== input.format && false === Array.isArray(input.format) || _report(_exceptionable, {
                        path: _path + ".format",
                        expected: "(JsFormatOptions & ToSnakeCaseProperties<JsFormatOptions> | undefined)",
                        value: input.format
                    })) && _vo62(input.format, _path + ".format", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".format",
                        expected: "(JsFormatOptions & ToSnakeCaseProperties<JsFormatOptions> | undefined)",
                        value: input.format
                    }),
                    (null !== input.mangle || _report(_exceptionable, {
                        path: _path + ".mangle",
                        expected: "(TerserMangleOptions | boolean | undefined)",
                        value: input.mangle
                    })) && (void 0 === input.mangle || "boolean" == typeof input.mangle || ("object" == typeof input.mangle && null !== input.mangle && false === Array.isArray(input.mangle) || _report(_exceptionable, {
                        path: _path + ".mangle",
                        expected: "(TerserMangleOptions | boolean | undefined)",
                        value: input.mangle
                    })) && _vo64(input.mangle, _path + ".mangle", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".mangle",
                        expected: "(TerserMangleOptions | boolean | undefined)",
                        value: input.mangle
                    })),
                    void 0 === input.ecma || "string" == typeof input.ecma || "number" == typeof input.ecma || _report(_exceptionable, {
                        path: _path + ".ecma",
                        expected: "(number | string | undefined)",
                        value: input.ecma
                    }),
                    void 0 === input.keep_classnames || "boolean" == typeof input.keep_classnames || _report(_exceptionable, {
                        path: _path + ".keep_classnames",
                        expected: "(boolean | undefined)",
                        value: input.keep_classnames
                    }),
                    void 0 === input.keep_fnames || "boolean" == typeof input.keep_fnames || _report(_exceptionable, {
                        path: _path + ".keep_fnames",
                        expected: "(boolean | undefined)",
                        value: input.keep_fnames
                    }),
                    void 0 === input["module"] || "unknown" === input["module"] || "boolean" == typeof input["module"] || _report(_exceptionable, {
                        path: _path + "[\"module\"]",
                        expected: "(\"unknown\" | boolean | undefined)",
                        value: input["module"]
                    }),
                    void 0 === input.safari10 || "boolean" == typeof input.safari10 || _report(_exceptionable, {
                        path: _path + ".safari10",
                        expected: "(boolean | undefined)",
                        value: input.safari10
                    }),
                    void 0 === input.toplevel || "boolean" == typeof input.toplevel || _report(_exceptionable, {
                        path: _path + ".toplevel",
                        expected: "(boolean | undefined)",
                        value: input.toplevel
                    }),
                    void 0 === input.sourceMap || "boolean" == typeof input.sourceMap || _report(_exceptionable, {
                        path: _path + ".sourceMap",
                        expected: "(boolean | undefined)",
                        value: input.sourceMap
                    }),
                    void 0 === input.outputPath || "string" == typeof input.outputPath || _report(_exceptionable, {
                        path: _path + ".outputPath",
                        expected: "(string | undefined)",
                        value: input.outputPath
                    }),
                    void 0 === input.inlineSourcesContent || "boolean" == typeof input.inlineSourcesContent || _report(_exceptionable, {
                        path: _path + ".inlineSourcesContent",
                        expected: "(boolean | undefined)",
                        value: input.inlineSourcesContent
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "compress",
                            "format",
                            "mangle",
                            "ecma",
                            "keep_classnames",
                            "keep_fnames",
                            "module",
                            "safari10",
                            "toplevel",
                            "sourceMap",
                            "outputPath",
                            "inlineSourcesContent"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo61 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.arguments || "boolean" == typeof input.arguments || _report(_exceptionable, {
                        path: _path + ".arguments",
                        expected: "(boolean | undefined)",
                        value: input.arguments
                    }),
                    void 0 === input.arrows || "boolean" == typeof input.arrows || _report(_exceptionable, {
                        path: _path + ".arrows",
                        expected: "(boolean | undefined)",
                        value: input.arrows
                    }),
                    void 0 === input.booleans || "boolean" == typeof input.booleans || _report(_exceptionable, {
                        path: _path + ".booleans",
                        expected: "(boolean | undefined)",
                        value: input.booleans
                    }),
                    void 0 === input.booleans_as_integers || "boolean" == typeof input.booleans_as_integers || _report(_exceptionable, {
                        path: _path + ".booleans_as_integers",
                        expected: "(boolean | undefined)",
                        value: input.booleans_as_integers
                    }),
                    void 0 === input.collapse_vars || "boolean" == typeof input.collapse_vars || _report(_exceptionable, {
                        path: _path + ".collapse_vars",
                        expected: "(boolean | undefined)",
                        value: input.collapse_vars
                    }),
                    void 0 === input.comparisons || "boolean" == typeof input.comparisons || _report(_exceptionable, {
                        path: _path + ".comparisons",
                        expected: "(boolean | undefined)",
                        value: input.comparisons
                    }),
                    void 0 === input.computed_props || "boolean" == typeof input.computed_props || _report(_exceptionable, {
                        path: _path + ".computed_props",
                        expected: "(boolean | undefined)",
                        value: input.computed_props
                    }),
                    void 0 === input.conditionals || "boolean" == typeof input.conditionals || _report(_exceptionable, {
                        path: _path + ".conditionals",
                        expected: "(boolean | undefined)",
                        value: input.conditionals
                    }),
                    void 0 === input.dead_code || "boolean" == typeof input.dead_code || _report(_exceptionable, {
                        path: _path + ".dead_code",
                        expected: "(boolean | undefined)",
                        value: input.dead_code
                    }),
                    void 0 === input.defaults || "boolean" == typeof input.defaults || _report(_exceptionable, {
                        path: _path + ".defaults",
                        expected: "(boolean | undefined)",
                        value: input.defaults
                    }),
                    void 0 === input.directives || "boolean" == typeof input.directives || _report(_exceptionable, {
                        path: _path + ".directives",
                        expected: "(boolean | undefined)",
                        value: input.directives
                    }),
                    void 0 === input.drop_console || "boolean" == typeof input.drop_console || _report(_exceptionable, {
                        path: _path + ".drop_console",
                        expected: "(boolean | undefined)",
                        value: input.drop_console
                    }),
                    void 0 === input.drop_debugger || "boolean" == typeof input.drop_debugger || _report(_exceptionable, {
                        path: _path + ".drop_debugger",
                        expected: "(boolean | undefined)",
                        value: input.drop_debugger
                    }),
                    void 0 === input.ecma || "string" == typeof input.ecma || "number" == typeof input.ecma || _report(_exceptionable, {
                        path: _path + ".ecma",
                        expected: "(number | string | undefined)",
                        value: input.ecma
                    }),
                    void 0 === input.evaluate || "boolean" == typeof input.evaluate || _report(_exceptionable, {
                        path: _path + ".evaluate",
                        expected: "(boolean | undefined)",
                        value: input.evaluate
                    }),
                    void 0 === input.expression || "boolean" == typeof input.expression || _report(_exceptionable, {
                        path: _path + ".expression",
                        expected: "(boolean | undefined)",
                        value: input.expression
                    }),
                    true,
                    void 0 === input.hoist_funs || "boolean" == typeof input.hoist_funs || _report(_exceptionable, {
                        path: _path + ".hoist_funs",
                        expected: "(boolean | undefined)",
                        value: input.hoist_funs
                    }),
                    void 0 === input.hoist_props || "boolean" == typeof input.hoist_props || _report(_exceptionable, {
                        path: _path + ".hoist_props",
                        expected: "(boolean | undefined)",
                        value: input.hoist_props
                    }),
                    void 0 === input.hoist_vars || "boolean" == typeof input.hoist_vars || _report(_exceptionable, {
                        path: _path + ".hoist_vars",
                        expected: "(boolean | undefined)",
                        value: input.hoist_vars
                    }),
                    void 0 === input.ie8 || "boolean" == typeof input.ie8 || _report(_exceptionable, {
                        path: _path + ".ie8",
                        expected: "(boolean | undefined)",
                        value: input.ie8
                    }),
                    void 0 === input.if_return || "boolean" == typeof input.if_return || _report(_exceptionable, {
                        path: _path + ".if_return",
                        expected: "(boolean | undefined)",
                        value: input.if_return
                    }),
                    void 0 === input.inline || 0 === input.inline || 1 === input.inline || 2 === input.inline || 3 === input.inline || _report(_exceptionable, {
                        path: _path + ".inline",
                        expected: "(0 | 1 | 2 | 3 | undefined)",
                        value: input.inline
                    }),
                    void 0 === input.join_vars || "boolean" == typeof input.join_vars || _report(_exceptionable, {
                        path: _path + ".join_vars",
                        expected: "(boolean | undefined)",
                        value: input.join_vars
                    }),
                    void 0 === input.keep_classnames || "boolean" == typeof input.keep_classnames || _report(_exceptionable, {
                        path: _path + ".keep_classnames",
                        expected: "(boolean | undefined)",
                        value: input.keep_classnames
                    }),
                    void 0 === input.keep_fargs || "boolean" == typeof input.keep_fargs || _report(_exceptionable, {
                        path: _path + ".keep_fargs",
                        expected: "(boolean | undefined)",
                        value: input.keep_fargs
                    }),
                    void 0 === input.keep_fnames || "boolean" == typeof input.keep_fnames || _report(_exceptionable, {
                        path: _path + ".keep_fnames",
                        expected: "(boolean | undefined)",
                        value: input.keep_fnames
                    }),
                    void 0 === input.keep_infinity || "boolean" == typeof input.keep_infinity || _report(_exceptionable, {
                        path: _path + ".keep_infinity",
                        expected: "(boolean | undefined)",
                        value: input.keep_infinity
                    }),
                    void 0 === input.loops || "boolean" == typeof input.loops || _report(_exceptionable, {
                        path: _path + ".loops",
                        expected: "(boolean | undefined)",
                        value: input.loops
                    }),
                    void 0 === input.negate_iife || "boolean" == typeof input.negate_iife || _report(_exceptionable, {
                        path: _path + ".negate_iife",
                        expected: "(boolean | undefined)",
                        value: input.negate_iife
                    }),
                    void 0 === input.passes || "number" == typeof input.passes || _report(_exceptionable, {
                        path: _path + ".passes",
                        expected: "(number | undefined)",
                        value: input.passes
                    }),
                    void 0 === input.properties || "boolean" == typeof input.properties || _report(_exceptionable, {
                        path: _path + ".properties",
                        expected: "(boolean | undefined)",
                        value: input.properties
                    }),
                    true,
                    void 0 === input.pure_funcs || (Array.isArray(input.pure_funcs) || _report(_exceptionable, {
                        path: _path + ".pure_funcs",
                        expected: "(Array<string> | undefined)",
                        value: input.pure_funcs
                    })) && input.pure_funcs.map((elem, _index404)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".pure_funcs[" + _index404 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".pure_funcs",
                        expected: "(Array<string> | undefined)",
                        value: input.pure_funcs
                    }),
                    void 0 === input.reduce_funcs || "boolean" == typeof input.reduce_funcs || _report(_exceptionable, {
                        path: _path + ".reduce_funcs",
                        expected: "(boolean | undefined)",
                        value: input.reduce_funcs
                    }),
                    void 0 === input.reduce_vars || "boolean" == typeof input.reduce_vars || _report(_exceptionable, {
                        path: _path + ".reduce_vars",
                        expected: "(boolean | undefined)",
                        value: input.reduce_vars
                    }),
                    true,
                    void 0 === input.side_effects || "boolean" == typeof input.side_effects || _report(_exceptionable, {
                        path: _path + ".side_effects",
                        expected: "(boolean | undefined)",
                        value: input.side_effects
                    }),
                    void 0 === input.switches || "boolean" == typeof input.switches || _report(_exceptionable, {
                        path: _path + ".switches",
                        expected: "(boolean | undefined)",
                        value: input.switches
                    }),
                    true,
                    true,
                    void 0 === input.typeofs || "boolean" == typeof input.typeofs || _report(_exceptionable, {
                        path: _path + ".typeofs",
                        expected: "(boolean | undefined)",
                        value: input.typeofs
                    }),
                    void 0 === input.unsafe || "boolean" == typeof input.unsafe || _report(_exceptionable, {
                        path: _path + ".unsafe",
                        expected: "(boolean | undefined)",
                        value: input.unsafe
                    }),
                    void 0 === input.unsafe_passes || "boolean" == typeof input.unsafe_passes || _report(_exceptionable, {
                        path: _path + ".unsafe_passes",
                        expected: "(boolean | undefined)",
                        value: input.unsafe_passes
                    }),
                    void 0 === input.unsafe_arrows || "boolean" == typeof input.unsafe_arrows || _report(_exceptionable, {
                        path: _path + ".unsafe_arrows",
                        expected: "(boolean | undefined)",
                        value: input.unsafe_arrows
                    }),
                    void 0 === input.unsafe_comps || "boolean" == typeof input.unsafe_comps || _report(_exceptionable, {
                        path: _path + ".unsafe_comps",
                        expected: "(boolean | undefined)",
                        value: input.unsafe_comps
                    }),
                    void 0 === input.unsafe_function || "boolean" == typeof input.unsafe_function || _report(_exceptionable, {
                        path: _path + ".unsafe_function",
                        expected: "(boolean | undefined)",
                        value: input.unsafe_function
                    }),
                    void 0 === input.unsafe_math || "boolean" == typeof input.unsafe_math || _report(_exceptionable, {
                        path: _path + ".unsafe_math",
                        expected: "(boolean | undefined)",
                        value: input.unsafe_math
                    }),
                    void 0 === input.unsafe_symbols || "boolean" == typeof input.unsafe_symbols || _report(_exceptionable, {
                        path: _path + ".unsafe_symbols",
                        expected: "(boolean | undefined)",
                        value: input.unsafe_symbols
                    }),
                    void 0 === input.unsafe_methods || "boolean" == typeof input.unsafe_methods || _report(_exceptionable, {
                        path: _path + ".unsafe_methods",
                        expected: "(boolean | undefined)",
                        value: input.unsafe_methods
                    }),
                    void 0 === input.unsafe_proto || "boolean" == typeof input.unsafe_proto || _report(_exceptionable, {
                        path: _path + ".unsafe_proto",
                        expected: "(boolean | undefined)",
                        value: input.unsafe_proto
                    }),
                    void 0 === input.unsafe_regexp || "boolean" == typeof input.unsafe_regexp || _report(_exceptionable, {
                        path: _path + ".unsafe_regexp",
                        expected: "(boolean | undefined)",
                        value: input.unsafe_regexp
                    }),
                    void 0 === input.unsafe_undefined || "boolean" == typeof input.unsafe_undefined || _report(_exceptionable, {
                        path: _path + ".unsafe_undefined",
                        expected: "(boolean | undefined)",
                        value: input.unsafe_undefined
                    }),
                    void 0 === input.unused || "boolean" == typeof input.unused || _report(_exceptionable, {
                        path: _path + ".unused",
                        expected: "(boolean | undefined)",
                        value: input.unused
                    }),
                    void 0 === input.const_to_let || "boolean" == typeof input.const_to_let || _report(_exceptionable, {
                        path: _path + ".const_to_let",
                        expected: "(boolean | undefined)",
                        value: input.const_to_let
                    }),
                    void 0 === input["module"] || "boolean" == typeof input["module"] || _report(_exceptionable, {
                        path: _path + "[\"module\"]",
                        expected: "(boolean | undefined)",
                        value: input["module"]
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "arguments",
                            "arrows",
                            "booleans",
                            "booleans_as_integers",
                            "collapse_vars",
                            "comparisons",
                            "computed_props",
                            "conditionals",
                            "dead_code",
                            "defaults",
                            "directives",
                            "drop_console",
                            "drop_debugger",
                            "ecma",
                            "evaluate",
                            "expression",
                            "global_defs",
                            "hoist_funs",
                            "hoist_props",
                            "hoist_vars",
                            "ie8",
                            "if_return",
                            "inline",
                            "join_vars",
                            "keep_classnames",
                            "keep_fargs",
                            "keep_fnames",
                            "keep_infinity",
                            "loops",
                            "negate_iife",
                            "passes",
                            "properties",
                            "pure_getters",
                            "pure_funcs",
                            "reduce_funcs",
                            "reduce_vars",
                            "sequences",
                            "side_effects",
                            "switches",
                            "top_retain",
                            "toplevel",
                            "typeofs",
                            "unsafe",
                            "unsafe_passes",
                            "unsafe_arrows",
                            "unsafe_comps",
                            "unsafe_function",
                            "unsafe_math",
                            "unsafe_symbols",
                            "unsafe_methods",
                            "unsafe_proto",
                            "unsafe_regexp",
                            "unsafe_undefined",
                            "unused",
                            "const_to_let",
                            "module"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo62 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.asciiOnly || "boolean" == typeof input.asciiOnly || _report(_exceptionable, {
                        path: _path + ".asciiOnly",
                        expected: "(boolean | undefined)",
                        value: input.asciiOnly
                    }),
                    void 0 === input.beautify || "boolean" == typeof input.beautify || _report(_exceptionable, {
                        path: _path + ".beautify",
                        expected: "(boolean | undefined)",
                        value: input.beautify
                    }),
                    void 0 === input.braces || "boolean" == typeof input.braces || _report(_exceptionable, {
                        path: _path + ".braces",
                        expected: "(boolean | undefined)",
                        value: input.braces
                    }),
                    (null !== input.comments || _report(_exceptionable, {
                        path: _path + ".comments",
                        expected: "(\"all\" | \"some\" | __type.o15 | false | undefined)",
                        value: input.comments
                    })) && (void 0 === input.comments || false === input.comments || "all" === input.comments || "some" === input.comments || ("object" == typeof input.comments && null !== input.comments || _report(_exceptionable, {
                        path: _path + ".comments",
                        expected: "(\"all\" | \"some\" | __type.o15 | false | undefined)",
                        value: input.comments
                    })) && _vo63(input.comments, _path + ".comments", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".comments",
                        expected: "(\"all\" | \"some\" | __type.o15 | false | undefined)",
                        value: input.comments
                    })),
                    void 0 === input.ecma || "string" == typeof input.ecma || "number" == typeof input.ecma || _report(_exceptionable, {
                        path: _path + ".ecma",
                        expected: "(number | string | undefined)",
                        value: input.ecma
                    }),
                    void 0 === input.indentLevel || "number" == typeof input.indentLevel || _report(_exceptionable, {
                        path: _path + ".indentLevel",
                        expected: "(number | undefined)",
                        value: input.indentLevel
                    }),
                    void 0 === input.indentStart || "number" == typeof input.indentStart || _report(_exceptionable, {
                        path: _path + ".indentStart",
                        expected: "(number | undefined)",
                        value: input.indentStart
                    }),
                    void 0 === input.inlineScript || "boolean" == typeof input.inlineScript || _report(_exceptionable, {
                        path: _path + ".inlineScript",
                        expected: "(boolean | undefined)",
                        value: input.inlineScript
                    }),
                    void 0 === input.keepNumbers || "number" == typeof input.keepNumbers || _report(_exceptionable, {
                        path: _path + ".keepNumbers",
                        expected: "(number | undefined)",
                        value: input.keepNumbers
                    }),
                    void 0 === input.keepQuotedProps || "boolean" == typeof input.keepQuotedProps || _report(_exceptionable, {
                        path: _path + ".keepQuotedProps",
                        expected: "(boolean | undefined)",
                        value: input.keepQuotedProps
                    }),
                    void 0 === input.maxLineLen || false === input.maxLineLen || "number" == typeof input.maxLineLen || _report(_exceptionable, {
                        path: _path + ".maxLineLen",
                        expected: "(false | number | undefined)",
                        value: input.maxLineLen
                    }),
                    void 0 === input.preamble || "string" == typeof input.preamble || _report(_exceptionable, {
                        path: _path + ".preamble",
                        expected: "(string | undefined)",
                        value: input.preamble
                    }),
                    void 0 === input.quoteKeys || "boolean" == typeof input.quoteKeys || _report(_exceptionable, {
                        path: _path + ".quoteKeys",
                        expected: "(boolean | undefined)",
                        value: input.quoteKeys
                    }),
                    void 0 === input.quoteStyle || "boolean" == typeof input.quoteStyle || _report(_exceptionable, {
                        path: _path + ".quoteStyle",
                        expected: "(boolean | undefined)",
                        value: input.quoteStyle
                    }),
                    void 0 === input.preserveAnnotations || "boolean" == typeof input.preserveAnnotations || _report(_exceptionable, {
                        path: _path + ".preserveAnnotations",
                        expected: "(boolean | undefined)",
                        value: input.preserveAnnotations
                    }),
                    void 0 === input.safari10 || "boolean" == typeof input.safari10 || _report(_exceptionable, {
                        path: _path + ".safari10",
                        expected: "(boolean | undefined)",
                        value: input.safari10
                    }),
                    void 0 === input.semicolons || "boolean" == typeof input.semicolons || _report(_exceptionable, {
                        path: _path + ".semicolons",
                        expected: "(boolean | undefined)",
                        value: input.semicolons
                    }),
                    void 0 === input.shebang || "boolean" == typeof input.shebang || _report(_exceptionable, {
                        path: _path + ".shebang",
                        expected: "(boolean | undefined)",
                        value: input.shebang
                    }),
                    void 0 === input.webkit || "boolean" == typeof input.webkit || _report(_exceptionable, {
                        path: _path + ".webkit",
                        expected: "(boolean | undefined)",
                        value: input.webkit
                    }),
                    void 0 === input.wrapIife || "boolean" == typeof input.wrapIife || _report(_exceptionable, {
                        path: _path + ".wrapIife",
                        expected: "(boolean | undefined)",
                        value: input.wrapIife
                    }),
                    void 0 === input.wrapFuncArgs || "boolean" == typeof input.wrapFuncArgs || _report(_exceptionable, {
                        path: _path + ".wrapFuncArgs",
                        expected: "(boolean | undefined)",
                        value: input.wrapFuncArgs
                    }),
                    void 0 === input.ascii_only || "boolean" == typeof input.ascii_only || _report(_exceptionable, {
                        path: _path + ".ascii_only",
                        expected: "(boolean | undefined)",
                        value: input.ascii_only
                    }),
                    void 0 === input.indent_level || "number" == typeof input.indent_level || _report(_exceptionable, {
                        path: _path + ".indent_level",
                        expected: "(number | undefined)",
                        value: input.indent_level
                    }),
                    void 0 === input.indent_start || "number" == typeof input.indent_start || _report(_exceptionable, {
                        path: _path + ".indent_start",
                        expected: "(number | undefined)",
                        value: input.indent_start
                    }),
                    void 0 === input.inline_script || "boolean" == typeof input.inline_script || _report(_exceptionable, {
                        path: _path + ".inline_script",
                        expected: "(boolean | undefined)",
                        value: input.inline_script
                    }),
                    void 0 === input.keep_numbers || "number" == typeof input.keep_numbers || _report(_exceptionable, {
                        path: _path + ".keep_numbers",
                        expected: "(number | undefined)",
                        value: input.keep_numbers
                    }),
                    void 0 === input.keep_quoted_props || "boolean" == typeof input.keep_quoted_props || _report(_exceptionable, {
                        path: _path + ".keep_quoted_props",
                        expected: "(boolean | undefined)",
                        value: input.keep_quoted_props
                    }),
                    void 0 === input.max_line_len || false === input.max_line_len || "number" == typeof input.max_line_len || _report(_exceptionable, {
                        path: _path + ".max_line_len",
                        expected: "(false | number | undefined)",
                        value: input.max_line_len
                    }),
                    void 0 === input.quote_keys || "boolean" == typeof input.quote_keys || _report(_exceptionable, {
                        path: _path + ".quote_keys",
                        expected: "(boolean | undefined)",
                        value: input.quote_keys
                    }),
                    void 0 === input.quote_style || "boolean" == typeof input.quote_style || _report(_exceptionable, {
                        path: _path + ".quote_style",
                        expected: "(boolean | undefined)",
                        value: input.quote_style
                    }),
                    void 0 === input.preserve_annotations || "boolean" == typeof input.preserve_annotations || _report(_exceptionable, {
                        path: _path + ".preserve_annotations",
                        expected: "(boolean | undefined)",
                        value: input.preserve_annotations
                    }),
                    void 0 === input.wrap_iife || "boolean" == typeof input.wrap_iife || _report(_exceptionable, {
                        path: _path + ".wrap_iife",
                        expected: "(boolean | undefined)",
                        value: input.wrap_iife
                    }),
                    void 0 === input.wrap_func_args || "boolean" == typeof input.wrap_func_args || _report(_exceptionable, {
                        path: _path + ".wrap_func_args",
                        expected: "(boolean | undefined)",
                        value: input.wrap_func_args
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "asciiOnly",
                            "beautify",
                            "braces",
                            "comments",
                            "ecma",
                            "indentLevel",
                            "indentStart",
                            "inlineScript",
                            "keepNumbers",
                            "keepQuotedProps",
                            "maxLineLen",
                            "preamble",
                            "quoteKeys",
                            "quoteStyle",
                            "preserveAnnotations",
                            "safari10",
                            "semicolons",
                            "shebang",
                            "webkit",
                            "wrapIife",
                            "wrapFuncArgs",
                            "ascii_only",
                            "indent_level",
                            "indent_start",
                            "inline_script",
                            "keep_numbers",
                            "keep_quoted_props",
                            "max_line_len",
                            "quote_keys",
                            "quote_style",
                            "preserve_annotations",
                            "wrap_iife",
                            "wrap_func_args"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo63 = (input, _path, _exceptionable = true)=>[
                    "string" == typeof input.regex || _report(_exceptionable, {
                        path: _path + ".regex",
                        expected: "string",
                        value: input.regex
                    }),
                    1 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "regex"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo64 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.props || ("object" == typeof input.props && null !== input.props && false === Array.isArray(input.props) || _report(_exceptionable, {
                        path: _path + ".props",
                        expected: "(TerserManglePropertiesOptions | undefined)",
                        value: input.props
                    })) && _vo65(input.props, _path + ".props", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".props",
                        expected: "(TerserManglePropertiesOptions | undefined)",
                        value: input.props
                    }),
                    void 0 === input.topLevel || "boolean" == typeof input.topLevel || _report(_exceptionable, {
                        path: _path + ".topLevel",
                        expected: "(boolean | undefined)",
                        value: input.topLevel
                    }),
                    void 0 === input.toplevel || "boolean" == typeof input.toplevel || _report(_exceptionable, {
                        path: _path + ".toplevel",
                        expected: "(boolean | undefined)",
                        value: input.toplevel
                    }),
                    void 0 === input.keepClassNames || "boolean" == typeof input.keepClassNames || _report(_exceptionable, {
                        path: _path + ".keepClassNames",
                        expected: "(boolean | undefined)",
                        value: input.keepClassNames
                    }),
                    void 0 === input.keep_classnames || "boolean" == typeof input.keep_classnames || _report(_exceptionable, {
                        path: _path + ".keep_classnames",
                        expected: "(boolean | undefined)",
                        value: input.keep_classnames
                    }),
                    void 0 === input.keepFnNames || "boolean" == typeof input.keepFnNames || _report(_exceptionable, {
                        path: _path + ".keepFnNames",
                        expected: "(boolean | undefined)",
                        value: input.keepFnNames
                    }),
                    void 0 === input.keep_fnames || "boolean" == typeof input.keep_fnames || _report(_exceptionable, {
                        path: _path + ".keep_fnames",
                        expected: "(boolean | undefined)",
                        value: input.keep_fnames
                    }),
                    void 0 === input.keepPrivateProps || "boolean" == typeof input.keepPrivateProps || _report(_exceptionable, {
                        path: _path + ".keepPrivateProps",
                        expected: "(boolean | undefined)",
                        value: input.keepPrivateProps
                    }),
                    void 0 === input.keep_private_props || "boolean" == typeof input.keep_private_props || _report(_exceptionable, {
                        path: _path + ".keep_private_props",
                        expected: "(boolean | undefined)",
                        value: input.keep_private_props
                    }),
                    void 0 === input.ie8 || "boolean" == typeof input.ie8 || _report(_exceptionable, {
                        path: _path + ".ie8",
                        expected: "(boolean | undefined)",
                        value: input.ie8
                    }),
                    void 0 === input.safari10 || "boolean" == typeof input.safari10 || _report(_exceptionable, {
                        path: _path + ".safari10",
                        expected: "(boolean | undefined)",
                        value: input.safari10
                    }),
                    void 0 === input.reserved || (Array.isArray(input.reserved) || _report(_exceptionable, {
                        path: _path + ".reserved",
                        expected: "(Array<string> | undefined)",
                        value: input.reserved
                    })) && input.reserved.map((elem, _index405)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".reserved[" + _index405 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".reserved",
                        expected: "(Array<string> | undefined)",
                        value: input.reserved
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "props",
                            "topLevel",
                            "toplevel",
                            "keepClassNames",
                            "keep_classnames",
                            "keepFnNames",
                            "keep_fnames",
                            "keepPrivateProps",
                            "keep_private_props",
                            "ie8",
                            "safari10",
                            "reserved"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo65 = (input, _path, _exceptionable = true)=>[
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo66 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.charset || "utf8" === input.charset || "ascii" === input.charset || _report(_exceptionable, {
                        path: _path + ".charset",
                        expected: "(\"ascii\" | \"utf8\" | undefined)",
                        value: input.charset
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "charset"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo67 = (input, _path, _exceptionable = true)=>[
                    "es6" === input.type || _report(_exceptionable, {
                        path: _path + ".type",
                        expected: "\"es6\"",
                        value: input.type
                    }),
                    void 0 === input.strict || "boolean" == typeof input.strict || _report(_exceptionable, {
                        path: _path + ".strict",
                        expected: "(boolean | undefined)",
                        value: input.strict
                    }),
                    void 0 === input.strictMode || "boolean" == typeof input.strictMode || _report(_exceptionable, {
                        path: _path + ".strictMode",
                        expected: "(boolean | undefined)",
                        value: input.strictMode
                    }),
                    (null !== input.lazy || _report(_exceptionable, {
                        path: _path + ".lazy",
                        expected: "(Array<string> | boolean | undefined)",
                        value: input.lazy
                    })) && (void 0 === input.lazy || "boolean" == typeof input.lazy || (Array.isArray(input.lazy) || _report(_exceptionable, {
                        path: _path + ".lazy",
                        expected: "(Array<string> | boolean | undefined)",
                        value: input.lazy
                    })) && input.lazy.map((elem, _index406)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".lazy[" + _index406 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".lazy",
                        expected: "(Array<string> | boolean | undefined)",
                        value: input.lazy
                    })),
                    void 0 === input.noInterop || "boolean" == typeof input.noInterop || _report(_exceptionable, {
                        path: _path + ".noInterop",
                        expected: "(boolean | undefined)",
                        value: input.noInterop
                    }),
                    void 0 === input.importInterop || "none" === input.importInterop || "swc" === input.importInterop || "babel" === input.importInterop || "node" === input.importInterop || _report(_exceptionable, {
                        path: _path + ".importInterop",
                        expected: "(\"babel\" | \"node\" | \"none\" | \"swc\" | undefined)",
                        value: input.importInterop
                    }),
                    void 0 === input.outFileExtension || "js" === input.outFileExtension || "mjs" === input.outFileExtension || "cjs" === input.outFileExtension || _report(_exceptionable, {
                        path: _path + ".outFileExtension",
                        expected: "(\"cjs\" | \"js\" | \"mjs\" | undefined)",
                        value: input.outFileExtension
                    }),
                    void 0 === input.exportInteropAnnotation || "boolean" == typeof input.exportInteropAnnotation || _report(_exceptionable, {
                        path: _path + ".exportInteropAnnotation",
                        expected: "(boolean | undefined)",
                        value: input.exportInteropAnnotation
                    }),
                    void 0 === input.ignoreDynamic || "boolean" == typeof input.ignoreDynamic || _report(_exceptionable, {
                        path: _path + ".ignoreDynamic",
                        expected: "(boolean | undefined)",
                        value: input.ignoreDynamic
                    }),
                    void 0 === input.allowTopLevelThis || "boolean" == typeof input.allowTopLevelThis || _report(_exceptionable, {
                        path: _path + ".allowTopLevelThis",
                        expected: "(boolean | undefined)",
                        value: input.allowTopLevelThis
                    }),
                    void 0 === input.preserveImportMeta || "boolean" == typeof input.preserveImportMeta || _report(_exceptionable, {
                        path: _path + ".preserveImportMeta",
                        expected: "(boolean | undefined)",
                        value: input.preserveImportMeta
                    }),
                    void 0 === input.resolveFully || "boolean" == typeof input.resolveFully || _report(_exceptionable, {
                        path: _path + ".resolveFully",
                        expected: "(boolean | undefined)",
                        value: input.resolveFully
                    }),
                    1 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "type",
                            "strict",
                            "strictMode",
                            "lazy",
                            "noInterop",
                            "importInterop",
                            "outFileExtension",
                            "exportInteropAnnotation",
                            "ignoreDynamic",
                            "allowTopLevelThis",
                            "preserveImportMeta",
                            "resolveFully"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo68 = (input, _path, _exceptionable = true)=>[
                    "commonjs" === input.type || _report(_exceptionable, {
                        path: _path + ".type",
                        expected: "\"commonjs\"",
                        value: input.type
                    }),
                    void 0 === input.strict || "boolean" == typeof input.strict || _report(_exceptionable, {
                        path: _path + ".strict",
                        expected: "(boolean | undefined)",
                        value: input.strict
                    }),
                    void 0 === input.strictMode || "boolean" == typeof input.strictMode || _report(_exceptionable, {
                        path: _path + ".strictMode",
                        expected: "(boolean | undefined)",
                        value: input.strictMode
                    }),
                    (null !== input.lazy || _report(_exceptionable, {
                        path: _path + ".lazy",
                        expected: "(Array<string> | boolean | undefined)",
                        value: input.lazy
                    })) && (void 0 === input.lazy || "boolean" == typeof input.lazy || (Array.isArray(input.lazy) || _report(_exceptionable, {
                        path: _path + ".lazy",
                        expected: "(Array<string> | boolean | undefined)",
                        value: input.lazy
                    })) && input.lazy.map((elem, _index407)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".lazy[" + _index407 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".lazy",
                        expected: "(Array<string> | boolean | undefined)",
                        value: input.lazy
                    })),
                    void 0 === input.noInterop || "boolean" == typeof input.noInterop || _report(_exceptionable, {
                        path: _path + ".noInterop",
                        expected: "(boolean | undefined)",
                        value: input.noInterop
                    }),
                    void 0 === input.importInterop || "none" === input.importInterop || "swc" === input.importInterop || "babel" === input.importInterop || "node" === input.importInterop || _report(_exceptionable, {
                        path: _path + ".importInterop",
                        expected: "(\"babel\" | \"node\" | \"none\" | \"swc\" | undefined)",
                        value: input.importInterop
                    }),
                    void 0 === input.outFileExtension || "js" === input.outFileExtension || "mjs" === input.outFileExtension || "cjs" === input.outFileExtension || _report(_exceptionable, {
                        path: _path + ".outFileExtension",
                        expected: "(\"cjs\" | \"js\" | \"mjs\" | undefined)",
                        value: input.outFileExtension
                    }),
                    void 0 === input.exportInteropAnnotation || "boolean" == typeof input.exportInteropAnnotation || _report(_exceptionable, {
                        path: _path + ".exportInteropAnnotation",
                        expected: "(boolean | undefined)",
                        value: input.exportInteropAnnotation
                    }),
                    void 0 === input.ignoreDynamic || "boolean" == typeof input.ignoreDynamic || _report(_exceptionable, {
                        path: _path + ".ignoreDynamic",
                        expected: "(boolean | undefined)",
                        value: input.ignoreDynamic
                    }),
                    void 0 === input.allowTopLevelThis || "boolean" == typeof input.allowTopLevelThis || _report(_exceptionable, {
                        path: _path + ".allowTopLevelThis",
                        expected: "(boolean | undefined)",
                        value: input.allowTopLevelThis
                    }),
                    void 0 === input.preserveImportMeta || "boolean" == typeof input.preserveImportMeta || _report(_exceptionable, {
                        path: _path + ".preserveImportMeta",
                        expected: "(boolean | undefined)",
                        value: input.preserveImportMeta
                    }),
                    void 0 === input.resolveFully || "boolean" == typeof input.resolveFully || _report(_exceptionable, {
                        path: _path + ".resolveFully",
                        expected: "(boolean | undefined)",
                        value: input.resolveFully
                    }),
                    1 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "type",
                            "strict",
                            "strictMode",
                            "lazy",
                            "noInterop",
                            "importInterop",
                            "outFileExtension",
                            "exportInteropAnnotation",
                            "ignoreDynamic",
                            "allowTopLevelThis",
                            "preserveImportMeta",
                            "resolveFully"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo69 = (input, _path, _exceptionable = true)=>[
                    "umd" === input.type || _report(_exceptionable, {
                        path: _path + ".type",
                        expected: "\"umd\"",
                        value: input.type
                    }),
                    void 0 === input.globals || ("object" == typeof input.globals && null !== input.globals && false === Array.isArray(input.globals) || _report(_exceptionable, {
                        path: _path + ".globals",
                        expected: "(__type.o17 | undefined)",
                        value: input.globals
                    })) && _vo70(input.globals, _path + ".globals", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".globals",
                        expected: "(__type.o17 | undefined)",
                        value: input.globals
                    }),
                    void 0 === input.strict || "boolean" == typeof input.strict || _report(_exceptionable, {
                        path: _path + ".strict",
                        expected: "(boolean | undefined)",
                        value: input.strict
                    }),
                    void 0 === input.strictMode || "boolean" == typeof input.strictMode || _report(_exceptionable, {
                        path: _path + ".strictMode",
                        expected: "(boolean | undefined)",
                        value: input.strictMode
                    }),
                    (null !== input.lazy || _report(_exceptionable, {
                        path: _path + ".lazy",
                        expected: "(Array<string> | boolean | undefined)",
                        value: input.lazy
                    })) && (void 0 === input.lazy || "boolean" == typeof input.lazy || (Array.isArray(input.lazy) || _report(_exceptionable, {
                        path: _path + ".lazy",
                        expected: "(Array<string> | boolean | undefined)",
                        value: input.lazy
                    })) && input.lazy.map((elem, _index408)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".lazy[" + _index408 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".lazy",
                        expected: "(Array<string> | boolean | undefined)",
                        value: input.lazy
                    })),
                    void 0 === input.noInterop || "boolean" == typeof input.noInterop || _report(_exceptionable, {
                        path: _path + ".noInterop",
                        expected: "(boolean | undefined)",
                        value: input.noInterop
                    }),
                    void 0 === input.importInterop || "none" === input.importInterop || "swc" === input.importInterop || "babel" === input.importInterop || "node" === input.importInterop || _report(_exceptionable, {
                        path: _path + ".importInterop",
                        expected: "(\"babel\" | \"node\" | \"none\" | \"swc\" | undefined)",
                        value: input.importInterop
                    }),
                    void 0 === input.outFileExtension || "js" === input.outFileExtension || "mjs" === input.outFileExtension || "cjs" === input.outFileExtension || _report(_exceptionable, {
                        path: _path + ".outFileExtension",
                        expected: "(\"cjs\" | \"js\" | \"mjs\" | undefined)",
                        value: input.outFileExtension
                    }),
                    void 0 === input.exportInteropAnnotation || "boolean" == typeof input.exportInteropAnnotation || _report(_exceptionable, {
                        path: _path + ".exportInteropAnnotation",
                        expected: "(boolean | undefined)",
                        value: input.exportInteropAnnotation
                    }),
                    void 0 === input.ignoreDynamic || "boolean" == typeof input.ignoreDynamic || _report(_exceptionable, {
                        path: _path + ".ignoreDynamic",
                        expected: "(boolean | undefined)",
                        value: input.ignoreDynamic
                    }),
                    void 0 === input.allowTopLevelThis || "boolean" == typeof input.allowTopLevelThis || _report(_exceptionable, {
                        path: _path + ".allowTopLevelThis",
                        expected: "(boolean | undefined)",
                        value: input.allowTopLevelThis
                    }),
                    void 0 === input.preserveImportMeta || "boolean" == typeof input.preserveImportMeta || _report(_exceptionable, {
                        path: _path + ".preserveImportMeta",
                        expected: "(boolean | undefined)",
                        value: input.preserveImportMeta
                    }),
                    void 0 === input.resolveFully || "boolean" == typeof input.resolveFully || _report(_exceptionable, {
                        path: _path + ".resolveFully",
                        expected: "(boolean | undefined)",
                        value: input.resolveFully
                    }),
                    1 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "type",
                            "globals",
                            "strict",
                            "strictMode",
                            "lazy",
                            "noInterop",
                            "importInterop",
                            "outFileExtension",
                            "exportInteropAnnotation",
                            "ignoreDynamic",
                            "allowTopLevelThis",
                            "preserveImportMeta",
                            "resolveFully"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo70 = (input, _path, _exceptionable = true)=>[
                    false === _exceptionable || Object.keys(input).map((key)=>{
                        const value = input[key];
                        if (void 0 === value) return true;
                        return "string" == typeof value || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "string",
                            value: value
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo71 = (input, _path, _exceptionable = true)=>[
                    "amd" === input.type || _report(_exceptionable, {
                        path: _path + ".type",
                        expected: "\"amd\"",
                        value: input.type
                    }),
                    void 0 === input.moduleId || "string" == typeof input.moduleId || _report(_exceptionable, {
                        path: _path + ".moduleId",
                        expected: "(string | undefined)",
                        value: input.moduleId
                    }),
                    void 0 === input.strict || "boolean" == typeof input.strict || _report(_exceptionable, {
                        path: _path + ".strict",
                        expected: "(boolean | undefined)",
                        value: input.strict
                    }),
                    void 0 === input.strictMode || "boolean" == typeof input.strictMode || _report(_exceptionable, {
                        path: _path + ".strictMode",
                        expected: "(boolean | undefined)",
                        value: input.strictMode
                    }),
                    (null !== input.lazy || _report(_exceptionable, {
                        path: _path + ".lazy",
                        expected: "(Array<string> | boolean | undefined)",
                        value: input.lazy
                    })) && (void 0 === input.lazy || "boolean" == typeof input.lazy || (Array.isArray(input.lazy) || _report(_exceptionable, {
                        path: _path + ".lazy",
                        expected: "(Array<string> | boolean | undefined)",
                        value: input.lazy
                    })) && input.lazy.map((elem, _index409)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".lazy[" + _index409 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".lazy",
                        expected: "(Array<string> | boolean | undefined)",
                        value: input.lazy
                    })),
                    void 0 === input.noInterop || "boolean" == typeof input.noInterop || _report(_exceptionable, {
                        path: _path + ".noInterop",
                        expected: "(boolean | undefined)",
                        value: input.noInterop
                    }),
                    void 0 === input.importInterop || "none" === input.importInterop || "swc" === input.importInterop || "babel" === input.importInterop || "node" === input.importInterop || _report(_exceptionable, {
                        path: _path + ".importInterop",
                        expected: "(\"babel\" | \"node\" | \"none\" | \"swc\" | undefined)",
                        value: input.importInterop
                    }),
                    void 0 === input.outFileExtension || "js" === input.outFileExtension || "mjs" === input.outFileExtension || "cjs" === input.outFileExtension || _report(_exceptionable, {
                        path: _path + ".outFileExtension",
                        expected: "(\"cjs\" | \"js\" | \"mjs\" | undefined)",
                        value: input.outFileExtension
                    }),
                    void 0 === input.exportInteropAnnotation || "boolean" == typeof input.exportInteropAnnotation || _report(_exceptionable, {
                        path: _path + ".exportInteropAnnotation",
                        expected: "(boolean | undefined)",
                        value: input.exportInteropAnnotation
                    }),
                    void 0 === input.ignoreDynamic || "boolean" == typeof input.ignoreDynamic || _report(_exceptionable, {
                        path: _path + ".ignoreDynamic",
                        expected: "(boolean | undefined)",
                        value: input.ignoreDynamic
                    }),
                    void 0 === input.allowTopLevelThis || "boolean" == typeof input.allowTopLevelThis || _report(_exceptionable, {
                        path: _path + ".allowTopLevelThis",
                        expected: "(boolean | undefined)",
                        value: input.allowTopLevelThis
                    }),
                    void 0 === input.preserveImportMeta || "boolean" == typeof input.preserveImportMeta || _report(_exceptionable, {
                        path: _path + ".preserveImportMeta",
                        expected: "(boolean | undefined)",
                        value: input.preserveImportMeta
                    }),
                    void 0 === input.resolveFully || "boolean" == typeof input.resolveFully || _report(_exceptionable, {
                        path: _path + ".resolveFully",
                        expected: "(boolean | undefined)",
                        value: input.resolveFully
                    }),
                    1 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "type",
                            "moduleId",
                            "strict",
                            "strictMode",
                            "lazy",
                            "noInterop",
                            "importInterop",
                            "outFileExtension",
                            "exportInteropAnnotation",
                            "ignoreDynamic",
                            "allowTopLevelThis",
                            "preserveImportMeta",
                            "resolveFully"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo72 = (input, _path, _exceptionable = true)=>[
                    "nodenext" === input.type || _report(_exceptionable, {
                        path: _path + ".type",
                        expected: "\"nodenext\"",
                        value: input.type
                    }),
                    void 0 === input.strict || "boolean" == typeof input.strict || _report(_exceptionable, {
                        path: _path + ".strict",
                        expected: "(boolean | undefined)",
                        value: input.strict
                    }),
                    void 0 === input.strictMode || "boolean" == typeof input.strictMode || _report(_exceptionable, {
                        path: _path + ".strictMode",
                        expected: "(boolean | undefined)",
                        value: input.strictMode
                    }),
                    (null !== input.lazy || _report(_exceptionable, {
                        path: _path + ".lazy",
                        expected: "(Array<string> | boolean | undefined)",
                        value: input.lazy
                    })) && (void 0 === input.lazy || "boolean" == typeof input.lazy || (Array.isArray(input.lazy) || _report(_exceptionable, {
                        path: _path + ".lazy",
                        expected: "(Array<string> | boolean | undefined)",
                        value: input.lazy
                    })) && input.lazy.map((elem, _index410)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".lazy[" + _index410 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".lazy",
                        expected: "(Array<string> | boolean | undefined)",
                        value: input.lazy
                    })),
                    void 0 === input.noInterop || "boolean" == typeof input.noInterop || _report(_exceptionable, {
                        path: _path + ".noInterop",
                        expected: "(boolean | undefined)",
                        value: input.noInterop
                    }),
                    void 0 === input.importInterop || "none" === input.importInterop || "swc" === input.importInterop || "babel" === input.importInterop || "node" === input.importInterop || _report(_exceptionable, {
                        path: _path + ".importInterop",
                        expected: "(\"babel\" | \"node\" | \"none\" | \"swc\" | undefined)",
                        value: input.importInterop
                    }),
                    void 0 === input.outFileExtension || "js" === input.outFileExtension || "mjs" === input.outFileExtension || "cjs" === input.outFileExtension || _report(_exceptionable, {
                        path: _path + ".outFileExtension",
                        expected: "(\"cjs\" | \"js\" | \"mjs\" | undefined)",
                        value: input.outFileExtension
                    }),
                    void 0 === input.exportInteropAnnotation || "boolean" == typeof input.exportInteropAnnotation || _report(_exceptionable, {
                        path: _path + ".exportInteropAnnotation",
                        expected: "(boolean | undefined)",
                        value: input.exportInteropAnnotation
                    }),
                    void 0 === input.ignoreDynamic || "boolean" == typeof input.ignoreDynamic || _report(_exceptionable, {
                        path: _path + ".ignoreDynamic",
                        expected: "(boolean | undefined)",
                        value: input.ignoreDynamic
                    }),
                    void 0 === input.allowTopLevelThis || "boolean" == typeof input.allowTopLevelThis || _report(_exceptionable, {
                        path: _path + ".allowTopLevelThis",
                        expected: "(boolean | undefined)",
                        value: input.allowTopLevelThis
                    }),
                    void 0 === input.preserveImportMeta || "boolean" == typeof input.preserveImportMeta || _report(_exceptionable, {
                        path: _path + ".preserveImportMeta",
                        expected: "(boolean | undefined)",
                        value: input.preserveImportMeta
                    }),
                    void 0 === input.resolveFully || "boolean" == typeof input.resolveFully || _report(_exceptionable, {
                        path: _path + ".resolveFully",
                        expected: "(boolean | undefined)",
                        value: input.resolveFully
                    }),
                    1 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "type",
                            "strict",
                            "strictMode",
                            "lazy",
                            "noInterop",
                            "importInterop",
                            "outFileExtension",
                            "exportInteropAnnotation",
                            "ignoreDynamic",
                            "allowTopLevelThis",
                            "preserveImportMeta",
                            "resolveFully"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo73 = (input, _path, _exceptionable = true)=>[
                    "systemjs" === input.type || _report(_exceptionable, {
                        path: _path + ".type",
                        expected: "\"systemjs\"",
                        value: input.type
                    }),
                    void 0 === input.allowTopLevelThis || "boolean" == typeof input.allowTopLevelThis || _report(_exceptionable, {
                        path: _path + ".allowTopLevelThis",
                        expected: "(boolean | undefined)",
                        value: input.allowTopLevelThis
                    }),
                    1 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "type",
                            "allowTopLevelThis"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo74 = (input, _path, _exceptionable = true)=>[
                    void 0 === input["import"] || (Array.isArray(input["import"]) || _report(_exceptionable, {
                        path: _path + "[\"import\"]",
                        expected: "(PluginImportOptions | undefined)",
                        value: input["import"]
                    })) && input["import"].map((elem, _index411)=>("object" == typeof elem && null !== elem || _report(_exceptionable, {
                            path: _path + "[\"import\"][" + _index411 + "]",
                            expected: "PluginImportConfig",
                            value: elem
                        })) && _vo75(elem, _path + "[\"import\"][" + _index411 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + "[\"import\"][" + _index411 + "]",
                            expected: "PluginImportConfig",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + "[\"import\"]",
                        expected: "(PluginImportOptions | undefined)",
                        value: input["import"]
                    }),
                    void 0 === input.collectTypeScriptInfo || ("object" == typeof input.collectTypeScriptInfo && null !== input.collectTypeScriptInfo && false === Array.isArray(input.collectTypeScriptInfo) || _report(_exceptionable, {
                        path: _path + ".collectTypeScriptInfo",
                        expected: "(CollectTypeScriptInfoOptions | undefined)",
                        value: input.collectTypeScriptInfo
                    })) && _vo76(input.collectTypeScriptInfo, _path + ".collectTypeScriptInfo", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".collectTypeScriptInfo",
                        expected: "(CollectTypeScriptInfoOptions | undefined)",
                        value: input.collectTypeScriptInfo
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "import",
                            "collectTypeScriptInfo"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo75 = (input, _path, _exceptionable = true)=>[
                    "string" == typeof input.libraryName || _report(_exceptionable, {
                        path: _path + ".libraryName",
                        expected: "string",
                        value: input.libraryName
                    }),
                    void 0 === input.libraryDirectory || "string" == typeof input.libraryDirectory || _report(_exceptionable, {
                        path: _path + ".libraryDirectory",
                        expected: "(string | undefined)",
                        value: input.libraryDirectory
                    }),
                    void 0 === input.customName || "string" == typeof input.customName || _report(_exceptionable, {
                        path: _path + ".customName",
                        expected: "(string | undefined)",
                        value: input.customName
                    }),
                    void 0 === input.customStyleName || "string" == typeof input.customStyleName || _report(_exceptionable, {
                        path: _path + ".customStyleName",
                        expected: "(string | undefined)",
                        value: input.customStyleName
                    }),
                    void 0 === input.style || "string" == typeof input.style || "boolean" == typeof input.style || _report(_exceptionable, {
                        path: _path + ".style",
                        expected: "(boolean | string | undefined)",
                        value: input.style
                    }),
                    void 0 === input.styleLibraryDirectory || "string" == typeof input.styleLibraryDirectory || _report(_exceptionable, {
                        path: _path + ".styleLibraryDirectory",
                        expected: "(string | undefined)",
                        value: input.styleLibraryDirectory
                    }),
                    void 0 === input.camelToDashComponentName || "boolean" == typeof input.camelToDashComponentName || _report(_exceptionable, {
                        path: _path + ".camelToDashComponentName",
                        expected: "(boolean | undefined)",
                        value: input.camelToDashComponentName
                    }),
                    void 0 === input.transformToDefaultImport || "boolean" == typeof input.transformToDefaultImport || _report(_exceptionable, {
                        path: _path + ".transformToDefaultImport",
                        expected: "(boolean | undefined)",
                        value: input.transformToDefaultImport
                    }),
                    void 0 === input.ignoreEsComponent || (Array.isArray(input.ignoreEsComponent) || _report(_exceptionable, {
                        path: _path + ".ignoreEsComponent",
                        expected: "(Array<string> | undefined)",
                        value: input.ignoreEsComponent
                    })) && input.ignoreEsComponent.map((elem, _index412)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".ignoreEsComponent[" + _index412 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".ignoreEsComponent",
                        expected: "(Array<string> | undefined)",
                        value: input.ignoreEsComponent
                    }),
                    void 0 === input.ignoreStyleComponent || (Array.isArray(input.ignoreStyleComponent) || _report(_exceptionable, {
                        path: _path + ".ignoreStyleComponent",
                        expected: "(Array<string> | undefined)",
                        value: input.ignoreStyleComponent
                    })) && input.ignoreStyleComponent.map((elem, _index413)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".ignoreStyleComponent[" + _index413 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".ignoreStyleComponent",
                        expected: "(Array<string> | undefined)",
                        value: input.ignoreStyleComponent
                    }),
                    1 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "libraryName",
                            "libraryDirectory",
                            "customName",
                            "customStyleName",
                            "style",
                            "styleLibraryDirectory",
                            "camelToDashComponentName",
                            "transformToDefaultImport",
                            "ignoreEsComponent",
                            "ignoreStyleComponent"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo76 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.typeExports || "boolean" == typeof input.typeExports || _report(_exceptionable, {
                        path: _path + ".typeExports",
                        expected: "(boolean | undefined)",
                        value: input.typeExports
                    }),
                    void 0 === input.exportedEnum || "const-only" === input.exportedEnum || "boolean" == typeof input.exportedEnum || _report(_exceptionable, {
                        path: _path + ".exportedEnum",
                        expected: "(\"const-only\" | boolean | undefined)",
                        value: input.exportedEnum
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "typeExports",
                            "exportedEnum"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo77 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.minify || "boolean" == typeof input.minify || _report(_exceptionable, {
                        path: _path + ".minify",
                        expected: "(boolean | undefined)",
                        value: input.minify
                    }),
                    void 0 === input.errorRecovery || "boolean" == typeof input.errorRecovery || _report(_exceptionable, {
                        path: _path + ".errorRecovery",
                        expected: "(boolean | undefined)",
                        value: input.errorRecovery
                    }),
                    (null !== input.targets || _report(_exceptionable, {
                        path: _path + ".targets",
                        expected: "(Array<string> | Targets | string | undefined)",
                        value: input.targets
                    })) && (void 0 === input.targets || "string" == typeof input.targets || Array.isArray(input.targets) && input.targets.map((elem, _index414)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".targets[" + _index414 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || "object" == typeof input.targets && null !== input.targets && false === Array.isArray(input.targets) && _vo78(input.targets, _path + ".targets", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".targets",
                        expected: "(Array<string> | Targets | string | undefined)",
                        value: input.targets
                    }) || _report(_exceptionable, {
                        path: _path + ".targets",
                        expected: "(Array<string> | Targets | string | undefined)",
                        value: input.targets
                    })),
                    void 0 === input.include || ("object" == typeof input.include && null !== input.include && false === Array.isArray(input.include) || _report(_exceptionable, {
                        path: _path + ".include",
                        expected: "(FeatureOptions | undefined)",
                        value: input.include
                    })) && _vo79(input.include, _path + ".include", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".include",
                        expected: "(FeatureOptions | undefined)",
                        value: input.include
                    }),
                    void 0 === input.exclude || ("object" == typeof input.exclude && null !== input.exclude && false === Array.isArray(input.exclude) || _report(_exceptionable, {
                        path: _path + ".exclude",
                        expected: "(FeatureOptions | undefined)",
                        value: input.exclude
                    })) && _vo79(input.exclude, _path + ".exclude", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".exclude",
                        expected: "(FeatureOptions | undefined)",
                        value: input.exclude
                    }),
                    void 0 === input.draft || ("object" == typeof input.draft && null !== input.draft && false === Array.isArray(input.draft) || _report(_exceptionable, {
                        path: _path + ".draft",
                        expected: "(Drafts | undefined)",
                        value: input.draft
                    })) && _vo80(input.draft, _path + ".draft", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".draft",
                        expected: "(Drafts | undefined)",
                        value: input.draft
                    }),
                    void 0 === input.drafts || ("object" == typeof input.drafts && null !== input.drafts && false === Array.isArray(input.drafts) || _report(_exceptionable, {
                        path: _path + ".drafts",
                        expected: "(Drafts | undefined)",
                        value: input.drafts
                    })) && _vo80(input.drafts, _path + ".drafts", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".drafts",
                        expected: "(Drafts | undefined)",
                        value: input.drafts
                    }),
                    void 0 === input.nonStandard || ("object" == typeof input.nonStandard && null !== input.nonStandard && false === Array.isArray(input.nonStandard) || _report(_exceptionable, {
                        path: _path + ".nonStandard",
                        expected: "(NonStandard | undefined)",
                        value: input.nonStandard
                    })) && _vo81(input.nonStandard, _path + ".nonStandard", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".nonStandard",
                        expected: "(NonStandard | undefined)",
                        value: input.nonStandard
                    }),
                    void 0 === input.pseudoClasses || ("object" == typeof input.pseudoClasses && null !== input.pseudoClasses && false === Array.isArray(input.pseudoClasses) || _report(_exceptionable, {
                        path: _path + ".pseudoClasses",
                        expected: "(PseudoClasses | undefined)",
                        value: input.pseudoClasses
                    })) && _vo82(input.pseudoClasses, _path + ".pseudoClasses", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".pseudoClasses",
                        expected: "(PseudoClasses | undefined)",
                        value: input.pseudoClasses
                    }),
                    void 0 === input.unusedSymbols || (Array.isArray(input.unusedSymbols) || _report(_exceptionable, {
                        path: _path + ".unusedSymbols",
                        expected: "(Array<string> | undefined)",
                        value: input.unusedSymbols
                    })) && input.unusedSymbols.map((elem, _index415)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".unusedSymbols[" + _index415 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".unusedSymbols",
                        expected: "(Array<string> | undefined)",
                        value: input.unusedSymbols
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "minify",
                            "errorRecovery",
                            "targets",
                            "include",
                            "exclude",
                            "draft",
                            "drafts",
                            "nonStandard",
                            "pseudoClasses",
                            "unusedSymbols"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo78 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.android || "number" == typeof input.android || _report(_exceptionable, {
                        path: _path + ".android",
                        expected: "(number | undefined)",
                        value: input.android
                    }),
                    void 0 === input.chrome || "number" == typeof input.chrome || _report(_exceptionable, {
                        path: _path + ".chrome",
                        expected: "(number | undefined)",
                        value: input.chrome
                    }),
                    void 0 === input.edge || "number" == typeof input.edge || _report(_exceptionable, {
                        path: _path + ".edge",
                        expected: "(number | undefined)",
                        value: input.edge
                    }),
                    void 0 === input.firefox || "number" == typeof input.firefox || _report(_exceptionable, {
                        path: _path + ".firefox",
                        expected: "(number | undefined)",
                        value: input.firefox
                    }),
                    void 0 === input.ie || "number" == typeof input.ie || _report(_exceptionable, {
                        path: _path + ".ie",
                        expected: "(number | undefined)",
                        value: input.ie
                    }),
                    void 0 === input.ios_saf || "number" == typeof input.ios_saf || _report(_exceptionable, {
                        path: _path + ".ios_saf",
                        expected: "(number | undefined)",
                        value: input.ios_saf
                    }),
                    void 0 === input.opera || "number" == typeof input.opera || _report(_exceptionable, {
                        path: _path + ".opera",
                        expected: "(number | undefined)",
                        value: input.opera
                    }),
                    void 0 === input.safari || "number" == typeof input.safari || _report(_exceptionable, {
                        path: _path + ".safari",
                        expected: "(number | undefined)",
                        value: input.safari
                    }),
                    void 0 === input.samsung || "number" == typeof input.samsung || _report(_exceptionable, {
                        path: _path + ".samsung",
                        expected: "(number | undefined)",
                        value: input.samsung
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "android",
                            "chrome",
                            "edge",
                            "firefox",
                            "ie",
                            "ios_saf",
                            "opera",
                            "safari",
                            "samsung"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo79 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.nesting || "boolean" == typeof input.nesting || _report(_exceptionable, {
                        path: _path + ".nesting",
                        expected: "(boolean | undefined)",
                        value: input.nesting
                    }),
                    void 0 === input.notSelectorList || "boolean" == typeof input.notSelectorList || _report(_exceptionable, {
                        path: _path + ".notSelectorList",
                        expected: "(boolean | undefined)",
                        value: input.notSelectorList
                    }),
                    void 0 === input.dirSelector || "boolean" == typeof input.dirSelector || _report(_exceptionable, {
                        path: _path + ".dirSelector",
                        expected: "(boolean | undefined)",
                        value: input.dirSelector
                    }),
                    void 0 === input.langSelectorList || "boolean" == typeof input.langSelectorList || _report(_exceptionable, {
                        path: _path + ".langSelectorList",
                        expected: "(boolean | undefined)",
                        value: input.langSelectorList
                    }),
                    void 0 === input.isSelector || "boolean" == typeof input.isSelector || _report(_exceptionable, {
                        path: _path + ".isSelector",
                        expected: "(boolean | undefined)",
                        value: input.isSelector
                    }),
                    void 0 === input.textDecorationThicknessPercent || "boolean" == typeof input.textDecorationThicknessPercent || _report(_exceptionable, {
                        path: _path + ".textDecorationThicknessPercent",
                        expected: "(boolean | undefined)",
                        value: input.textDecorationThicknessPercent
                    }),
                    void 0 === input.mediaIntervalSyntax || "boolean" == typeof input.mediaIntervalSyntax || _report(_exceptionable, {
                        path: _path + ".mediaIntervalSyntax",
                        expected: "(boolean | undefined)",
                        value: input.mediaIntervalSyntax
                    }),
                    void 0 === input.mediaRangeSyntax || "boolean" == typeof input.mediaRangeSyntax || _report(_exceptionable, {
                        path: _path + ".mediaRangeSyntax",
                        expected: "(boolean | undefined)",
                        value: input.mediaRangeSyntax
                    }),
                    void 0 === input.customMediaQueries || "boolean" == typeof input.customMediaQueries || _report(_exceptionable, {
                        path: _path + ".customMediaQueries",
                        expected: "(boolean | undefined)",
                        value: input.customMediaQueries
                    }),
                    void 0 === input.clampFunction || "boolean" == typeof input.clampFunction || _report(_exceptionable, {
                        path: _path + ".clampFunction",
                        expected: "(boolean | undefined)",
                        value: input.clampFunction
                    }),
                    void 0 === input.colorFunction || "boolean" == typeof input.colorFunction || _report(_exceptionable, {
                        path: _path + ".colorFunction",
                        expected: "(boolean | undefined)",
                        value: input.colorFunction
                    }),
                    void 0 === input.oklabColors || "boolean" == typeof input.oklabColors || _report(_exceptionable, {
                        path: _path + ".oklabColors",
                        expected: "(boolean | undefined)",
                        value: input.oklabColors
                    }),
                    void 0 === input.labColors || "boolean" == typeof input.labColors || _report(_exceptionable, {
                        path: _path + ".labColors",
                        expected: "(boolean | undefined)",
                        value: input.labColors
                    }),
                    void 0 === input.p3Colors || "boolean" == typeof input.p3Colors || _report(_exceptionable, {
                        path: _path + ".p3Colors",
                        expected: "(boolean | undefined)",
                        value: input.p3Colors
                    }),
                    void 0 === input.hexAlphaColors || "boolean" == typeof input.hexAlphaColors || _report(_exceptionable, {
                        path: _path + ".hexAlphaColors",
                        expected: "(boolean | undefined)",
                        value: input.hexAlphaColors
                    }),
                    void 0 === input.spaceSeparatedColorNotation || "boolean" == typeof input.spaceSeparatedColorNotation || _report(_exceptionable, {
                        path: _path + ".spaceSeparatedColorNotation",
                        expected: "(boolean | undefined)",
                        value: input.spaceSeparatedColorNotation
                    }),
                    void 0 === input.fontFamilySystemUi || "boolean" == typeof input.fontFamilySystemUi || _report(_exceptionable, {
                        path: _path + ".fontFamilySystemUi",
                        expected: "(boolean | undefined)",
                        value: input.fontFamilySystemUi
                    }),
                    void 0 === input.doublePositionGradients || "boolean" == typeof input.doublePositionGradients || _report(_exceptionable, {
                        path: _path + ".doublePositionGradients",
                        expected: "(boolean | undefined)",
                        value: input.doublePositionGradients
                    }),
                    void 0 === input.vendorPrefixes || "boolean" == typeof input.vendorPrefixes || _report(_exceptionable, {
                        path: _path + ".vendorPrefixes",
                        expected: "(boolean | undefined)",
                        value: input.vendorPrefixes
                    }),
                    void 0 === input.logicalProperties || "boolean" == typeof input.logicalProperties || _report(_exceptionable, {
                        path: _path + ".logicalProperties",
                        expected: "(boolean | undefined)",
                        value: input.logicalProperties
                    }),
                    void 0 === input.selectors || "boolean" == typeof input.selectors || _report(_exceptionable, {
                        path: _path + ".selectors",
                        expected: "(boolean | undefined)",
                        value: input.selectors
                    }),
                    void 0 === input.mediaQueries || "boolean" == typeof input.mediaQueries || _report(_exceptionable, {
                        path: _path + ".mediaQueries",
                        expected: "(boolean | undefined)",
                        value: input.mediaQueries
                    }),
                    void 0 === input.color || "boolean" == typeof input.color || _report(_exceptionable, {
                        path: _path + ".color",
                        expected: "(boolean | undefined)",
                        value: input.color
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "nesting",
                            "notSelectorList",
                            "dirSelector",
                            "langSelectorList",
                            "isSelector",
                            "textDecorationThicknessPercent",
                            "mediaIntervalSyntax",
                            "mediaRangeSyntax",
                            "customMediaQueries",
                            "clampFunction",
                            "colorFunction",
                            "oklabColors",
                            "labColors",
                            "p3Colors",
                            "hexAlphaColors",
                            "spaceSeparatedColorNotation",
                            "fontFamilySystemUi",
                            "doublePositionGradients",
                            "vendorPrefixes",
                            "logicalProperties",
                            "selectors",
                            "mediaQueries",
                            "color"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo80 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.customMedia || "boolean" == typeof input.customMedia || _report(_exceptionable, {
                        path: _path + ".customMedia",
                        expected: "(boolean | undefined)",
                        value: input.customMedia
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "customMedia"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo81 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.deepSelectorCombinator || "boolean" == typeof input.deepSelectorCombinator || _report(_exceptionable, {
                        path: _path + ".deepSelectorCombinator",
                        expected: "(boolean | undefined)",
                        value: input.deepSelectorCombinator
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "deepSelectorCombinator"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo82 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.hover || "string" == typeof input.hover || _report(_exceptionable, {
                        path: _path + ".hover",
                        expected: "(string | undefined)",
                        value: input.hover
                    }),
                    void 0 === input.active || "string" == typeof input.active || _report(_exceptionable, {
                        path: _path + ".active",
                        expected: "(string | undefined)",
                        value: input.active
                    }),
                    void 0 === input.focus || "string" == typeof input.focus || _report(_exceptionable, {
                        path: _path + ".focus",
                        expected: "(string | undefined)",
                        value: input.focus
                    }),
                    void 0 === input.focusVisible || "string" == typeof input.focusVisible || _report(_exceptionable, {
                        path: _path + ".focusVisible",
                        expected: "(string | undefined)",
                        value: input.focusVisible
                    }),
                    void 0 === input.focusWithin || "string" == typeof input.focusWithin || _report(_exceptionable, {
                        path: _path + ".focusWithin",
                        expected: "(string | undefined)",
                        value: input.focusWithin
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "hover",
                            "active",
                            "focus",
                            "focusVisible",
                            "focusWithin"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo83 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.pluginOptions || ("object" == typeof input.pluginOptions && null !== input.pluginOptions && false === Array.isArray(input.pluginOptions) || _report(_exceptionable, {
                        path: _path + ".pluginOptions",
                        expected: "(CssExtractRspackPluginOptions | undefined)",
                        value: input.pluginOptions
                    })) && _vo84(input.pluginOptions, _path + ".pluginOptions", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".pluginOptions",
                        expected: "(CssExtractRspackPluginOptions | undefined)",
                        value: input.pluginOptions
                    }),
                    void 0 === input.loaderOptions || ("object" == typeof input.loaderOptions && null !== input.loaderOptions && false === Array.isArray(input.loaderOptions) || _report(_exceptionable, {
                        path: _path + ".loaderOptions",
                        expected: "(CssExtractRspackLoaderOptions | undefined)",
                        value: input.loaderOptions
                    })) && _vo85(input.loaderOptions, _path + ".loaderOptions", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".loaderOptions",
                        expected: "(CssExtractRspackLoaderOptions | undefined)",
                        value: input.loaderOptions
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "pluginOptions",
                            "loaderOptions"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo84 = (input, _path, _exceptionable = true)=>[
                    (null !== input.filename || _report(_exceptionable, {
                        path: _path + ".filename",
                        expected: "(string | undefined)",
                        value: input.filename
                    })) && (void 0 === input.filename || "function" == typeof input.filename || "string" == typeof input.filename || _report(_exceptionable, {
                        path: _path + ".filename",
                        expected: "(string | undefined)",
                        value: input.filename
                    })),
                    (null !== input.chunkFilename || _report(_exceptionable, {
                        path: _path + ".chunkFilename",
                        expected: "(string | undefined)",
                        value: input.chunkFilename
                    })) && (void 0 === input.chunkFilename || "function" == typeof input.chunkFilename || "string" == typeof input.chunkFilename || _report(_exceptionable, {
                        path: _path + ".chunkFilename",
                        expected: "(string | undefined)",
                        value: input.chunkFilename
                    })),
                    void 0 === input.ignoreOrder || "boolean" == typeof input.ignoreOrder || _report(_exceptionable, {
                        path: _path + ".ignoreOrder",
                        expected: "(boolean | undefined)",
                        value: input.ignoreOrder
                    }),
                    (null !== input.insert || _report(_exceptionable, {
                        path: _path + ".insert",
                        expected: "(string | undefined)",
                        value: input.insert
                    })) && (void 0 === input.insert || "function" == typeof input.insert || "string" == typeof input.insert || _report(_exceptionable, {
                        path: _path + ".insert",
                        expected: "(string | undefined)",
                        value: input.insert
                    })),
                    void 0 === input.attributes || ("object" == typeof input.attributes && null !== input.attributes && false === Array.isArray(input.attributes) || _report(_exceptionable, {
                        path: _path + ".attributes",
                        expected: "(Record<string, string> | undefined)",
                        value: input.attributes
                    })) && _vo37(input.attributes, _path + ".attributes", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".attributes",
                        expected: "(Record<string, string> | undefined)",
                        value: input.attributes
                    }),
                    void 0 === input.linkType || false === input.linkType || "string" == typeof input.linkType || _report(_exceptionable, {
                        path: _path + ".linkType",
                        expected: "(false | string | undefined)",
                        value: input.linkType
                    }),
                    void 0 === input.runtime || "boolean" == typeof input.runtime || _report(_exceptionable, {
                        path: _path + ".runtime",
                        expected: "(boolean | undefined)",
                        value: input.runtime
                    }),
                    void 0 === input.pathinfo || "boolean" == typeof input.pathinfo || _report(_exceptionable, {
                        path: _path + ".pathinfo",
                        expected: "(boolean | undefined)",
                        value: input.pathinfo
                    }),
                    void 0 === input.enforceRelative || "boolean" == typeof input.enforceRelative || _report(_exceptionable, {
                        path: _path + ".enforceRelative",
                        expected: "(boolean | undefined)",
                        value: input.enforceRelative
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "filename",
                            "chunkFilename",
                            "ignoreOrder",
                            "insert",
                            "attributes",
                            "linkType",
                            "runtime",
                            "pathinfo",
                            "enforceRelative"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo85 = (input, _path, _exceptionable = true)=>[
                    (null !== input.publicPath || _report(_exceptionable, {
                        path: _path + ".publicPath",
                        expected: "(string | undefined)",
                        value: input.publicPath
                    })) && (void 0 === input.publicPath || "function" == typeof input.publicPath || "string" == typeof input.publicPath || _report(_exceptionable, {
                        path: _path + ".publicPath",
                        expected: "(string | undefined)",
                        value: input.publicPath
                    })),
                    void 0 === input.emit || "boolean" == typeof input.emit || _report(_exceptionable, {
                        path: _path + ".emit",
                        expected: "(boolean | undefined)",
                        value: input.emit
                    }),
                    void 0 === input.esModule || "boolean" == typeof input.esModule || _report(_exceptionable, {
                        path: _path + ".esModule",
                        expected: "(boolean | undefined)",
                        value: input.esModule
                    }),
                    void 0 === input.layer || "string" == typeof input.layer || _report(_exceptionable, {
                        path: _path + ".layer",
                        expected: "(string | undefined)",
                        value: input.layer
                    }),
                    void 0 === input.defaultExport || "boolean" == typeof input.defaultExport || _report(_exceptionable, {
                        path: _path + ".defaultExport",
                        expected: "(boolean | undefined)",
                        value: input.defaultExport
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "publicPath",
                            "emit",
                            "esModule",
                            "layer",
                            "defaultExport"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo86 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.name || "string" == typeof input.name || _report(_exceptionable, {
                        path: _path + ".name",
                        expected: "(string | undefined)",
                        value: input.name
                    }),
                    void 0 === input.dependencies || (Array.isArray(input.dependencies) || _report(_exceptionable, {
                        path: _path + ".dependencies",
                        expected: "(Dependencies | undefined)",
                        value: input.dependencies
                    })) && input.dependencies.map((elem, _index416)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".dependencies[" + _index416 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".dependencies",
                        expected: "(Dependencies | undefined)",
                        value: input.dependencies
                    }),
                    (null !== input["extends"] || _report(_exceptionable, {
                        path: _path + "[\"extends\"]",
                        expected: "(Array<string> | string | undefined)",
                        value: input["extends"]
                    })) && (void 0 === input["extends"] || "string" == typeof input["extends"] || (Array.isArray(input["extends"]) || _report(_exceptionable, {
                        path: _path + "[\"extends\"]",
                        expected: "(Array<string> | string | undefined)",
                        value: input["extends"]
                    })) && input["extends"].map((elem, _index417)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + "[\"extends\"][" + _index417 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + "[\"extends\"]",
                        expected: "(Array<string> | string | undefined)",
                        value: input["extends"]
                    })),
                    (null !== input.entry || _report(_exceptionable, {
                        path: _path + ".entry",
                        expected: "(Array<string> | EntryObject | string | undefined)",
                        value: input.entry
                    })) && (void 0 === input.entry || "function" == typeof input.entry || "string" == typeof input.entry || Array.isArray(input.entry) && input.entry.map((elem, _index418)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".entry[" + _index418 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || "object" == typeof input.entry && null !== input.entry && false === Array.isArray(input.entry) && _vo87(input.entry, _path + ".entry", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".entry",
                        expected: "(Array<string> | EntryObject | string | undefined)",
                        value: input.entry
                    }) || _report(_exceptionable, {
                        path: _path + ".entry",
                        expected: "(Array<string> | EntryObject | string | undefined)",
                        value: input.entry
                    })),
                    void 0 === input.output || ("object" == typeof input.output && null !== input.output && false === Array.isArray(input.output) || _report(_exceptionable, {
                        path: _path + ".output",
                        expected: "(Output | undefined)",
                        value: input.output
                    })) && _vo92(input.output, _path + ".output", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".output",
                        expected: "(Output | undefined)",
                        value: input.output
                    }),
                    (null !== input.target || _report(_exceptionable, {
                        path: _path + ".target",
                        expected: "(\"async-node\" | \"browserslist\" | \"electron-main\" | \"electron-preload\" | \"electron-renderer\" | \"es2015\" | \"es2016\" | \"es2017\" | \"es2018\" | \"es2019\" | \"es2020\" | \"es2021\" | \"es2022\" | \"es2023\" | \"es2024\" | \"es2025\" | \"es3\" | \"es5\" | \"node\" | \"node-webkit\" | \"nwjs\" | \"web\" | \"webworker\" | Array<AllowTarget> | `async-node${number}.${number}` | `async-node${number}` | `browserslist:${string}` | `electron${number}-main` | `electron${number}-preload` | `electron${number}-renderer` | `electron${number}.${number}-main` | `electron${number}.${number}-preload` | `electron${number}.${number}-renderer` | `node${number}.${number}` | `node${number}` | `node-webkit${number}.${number}` | `node-webkit${number}` | `nwjs${number}.${number}` | `nwjs${number}` | false | undefined)",
                        value: input.target
                    })) && (void 0 === input.target || true === _vv419.has(input.target) || "string" == typeof input.target && (RegExp(/^node[+-]?\d+(?:\.\d+)?(?:[eE][+-]?\d+)?$/).test(input.target) || RegExp(/^async\x2dnode[+-]?\d+(?:\.\d+)?(?:[eE][+-]?\d+)?$/).test(input.target) || RegExp(/^node[+-]?\d+(?:\.\d+)?(?:[eE][+-]?\d+)?\.[+-]?\d+(?:\.\d+)?(?:[eE][+-]?\d+)?$/).test(input.target) || RegExp(/^async\x2dnode[+-]?\d+(?:\.\d+)?(?:[eE][+-]?\d+)?\.[+-]?\d+(?:\.\d+)?(?:[eE][+-]?\d+)?$/).test(input.target) || RegExp(/^electron[+-]?\d+(?:\.\d+)?(?:[eE][+-]?\d+)?\x2dmain$/).test(input.target) || RegExp(/^electron[+-]?\d+(?:\.\d+)?(?:[eE][+-]?\d+)?\.[+-]?\d+(?:\.\d+)?(?:[eE][+-]?\d+)?\x2dmain$/).test(input.target) || RegExp(/^electron[+-]?\d+(?:\.\d+)?(?:[eE][+-]?\d+)?\x2drenderer$/).test(input.target) || RegExp(/^electron[+-]?\d+(?:\.\d+)?(?:[eE][+-]?\d+)?\.[+-]?\d+(?:\.\d+)?(?:[eE][+-]?\d+)?\x2drenderer$/).test(input.target) || RegExp(/^electron[+-]?\d+(?:\.\d+)?(?:[eE][+-]?\d+)?\x2dpreload$/).test(input.target) || RegExp(/^electron[+-]?\d+(?:\.\d+)?(?:[eE][+-]?\d+)?\.[+-]?\d+(?:\.\d+)?(?:[eE][+-]?\d+)?\x2dpreload$/).test(input.target) || RegExp(/^nwjs[+-]?\d+(?:\.\d+)?(?:[eE][+-]?\d+)?$/).test(input.target) || RegExp(/^nwjs[+-]?\d+(?:\.\d+)?(?:[eE][+-]?\d+)?\.[+-]?\d+(?:\.\d+)?(?:[eE][+-]?\d+)?$/).test(input.target) || RegExp(/^node\x2dwebkit[+-]?\d+(?:\.\d+)?(?:[eE][+-]?\d+)?$/).test(input.target) || RegExp(/^node\x2dwebkit[+-]?\d+(?:\.\d+)?(?:[eE][+-]?\d+)?\.[+-]?\d+(?:\.\d+)?(?:[eE][+-]?\d+)?$/).test(input.target) || RegExp(/^browserslist:(.*)/).test(input.target)) || (Array.isArray(input.target) || _report(_exceptionable, {
                        path: _path + ".target",
                        expected: "(\"async-node\" | \"browserslist\" | \"electron-main\" | \"electron-preload\" | \"electron-renderer\" | \"es2015\" | \"es2016\" | \"es2017\" | \"es2018\" | \"es2019\" | \"es2020\" | \"es2021\" | \"es2022\" | \"es2023\" | \"es2024\" | \"es2025\" | \"es3\" | \"es5\" | \"node\" | \"node-webkit\" | \"nwjs\" | \"web\" | \"webworker\" | Array<AllowTarget> | `async-node${number}.${number}` | `async-node${number}` | `browserslist:${string}` | `electron${number}-main` | `electron${number}-preload` | `electron${number}-renderer` | `electron${number}.${number}-main` | `electron${number}.${number}-preload` | `electron${number}.${number}-renderer` | `node${number}.${number}` | `node${number}` | `node-webkit${number}.${number}` | `node-webkit${number}` | `nwjs${number}.${number}` | `nwjs${number}` | false | undefined)",
                        value: input.target
                    })) && input.target.map((elem, _index420)=>(null !== elem || _report(_exceptionable, {
                            path: _path + ".target[" + _index420 + "]",
                            expected: "(\"async-node\" | \"browserslist\" | \"electron-main\" | \"electron-preload\" | \"electron-renderer\" | \"es2015\" | \"es2016\" | \"es2017\" | \"es2018\" | \"es2019\" | \"es2020\" | \"es2021\" | \"es2022\" | \"es2023\" | \"es2024\" | \"es2025\" | \"es3\" | \"es5\" | \"node\" | \"node-webkit\" | \"nwjs\" | \"web\" | \"webworker\" | `async-node${number}.${number}` | `async-node${number}` | `browserslist:${string}` | `electron${number}-main` | `electron${number}-preload` | `electron${number}-renderer` | `electron${number}.${number}-main` | `electron${number}.${number}-preload` | `electron${number}.${number}-renderer` | `node${number}.${number}` | `node${number}` | `node-webkit${number}.${number}` | `node-webkit${number}` | `nwjs${number}.${number}` | `nwjs${number}`)",
                            value: elem
                        })) && (void 0 !== elem || _report(_exceptionable, {
                            path: _path + ".target[" + _index420 + "]",
                            expected: "(\"async-node\" | \"browserslist\" | \"electron-main\" | \"electron-preload\" | \"electron-renderer\" | \"es2015\" | \"es2016\" | \"es2017\" | \"es2018\" | \"es2019\" | \"es2020\" | \"es2021\" | \"es2022\" | \"es2023\" | \"es2024\" | \"es2025\" | \"es3\" | \"es5\" | \"node\" | \"node-webkit\" | \"nwjs\" | \"web\" | \"webworker\" | `async-node${number}.${number}` | `async-node${number}` | `browserslist:${string}` | `electron${number}-main` | `electron${number}-preload` | `electron${number}-renderer` | `electron${number}.${number}-main` | `electron${number}.${number}-preload` | `electron${number}.${number}-renderer` | `node${number}.${number}` | `node${number}` | `node-webkit${number}.${number}` | `node-webkit${number}` | `nwjs${number}.${number}` | `nwjs${number}`)",
                            value: elem
                        })) && (true === _vv421.has(elem) || "string" == typeof elem && (RegExp(/^node[+-]?\d+(?:\.\d+)?(?:[eE][+-]?\d+)?$/).test(elem) || RegExp(/^async\x2dnode[+-]?\d+(?:\.\d+)?(?:[eE][+-]?\d+)?$/).test(elem) || RegExp(/^node[+-]?\d+(?:\.\d+)?(?:[eE][+-]?\d+)?\.[+-]?\d+(?:\.\d+)?(?:[eE][+-]?\d+)?$/).test(elem) || RegExp(/^async\x2dnode[+-]?\d+(?:\.\d+)?(?:[eE][+-]?\d+)?\.[+-]?\d+(?:\.\d+)?(?:[eE][+-]?\d+)?$/).test(elem) || RegExp(/^electron[+-]?\d+(?:\.\d+)?(?:[eE][+-]?\d+)?\x2dmain$/).test(elem) || RegExp(/^electron[+-]?\d+(?:\.\d+)?(?:[eE][+-]?\d+)?\.[+-]?\d+(?:\.\d+)?(?:[eE][+-]?\d+)?\x2dmain$/).test(elem) || RegExp(/^electron[+-]?\d+(?:\.\d+)?(?:[eE][+-]?\d+)?\x2drenderer$/).test(elem) || RegExp(/^electron[+-]?\d+(?:\.\d+)?(?:[eE][+-]?\d+)?\.[+-]?\d+(?:\.\d+)?(?:[eE][+-]?\d+)?\x2drenderer$/).test(elem) || RegExp(/^electron[+-]?\d+(?:\.\d+)?(?:[eE][+-]?\d+)?\x2dpreload$/).test(elem) || RegExp(/^electron[+-]?\d+(?:\.\d+)?(?:[eE][+-]?\d+)?\.[+-]?\d+(?:\.\d+)?(?:[eE][+-]?\d+)?\x2dpreload$/).test(elem) || RegExp(/^nwjs[+-]?\d+(?:\.\d+)?(?:[eE][+-]?\d+)?$/).test(elem) || RegExp(/^nwjs[+-]?\d+(?:\.\d+)?(?:[eE][+-]?\d+)?\.[+-]?\d+(?:\.\d+)?(?:[eE][+-]?\d+)?$/).test(elem) || RegExp(/^node\x2dwebkit[+-]?\d+(?:\.\d+)?(?:[eE][+-]?\d+)?$/).test(elem) || RegExp(/^node\x2dwebkit[+-]?\d+(?:\.\d+)?(?:[eE][+-]?\d+)?\.[+-]?\d+(?:\.\d+)?(?:[eE][+-]?\d+)?$/).test(elem) || RegExp(/^browserslist:(.*)/).test(elem)) || _report(_exceptionable, {
                            path: _path + ".target[" + _index420 + "]",
                            expected: "(\"async-node\" | \"browserslist\" | \"electron-main\" | \"electron-preload\" | \"electron-renderer\" | \"es2015\" | \"es2016\" | \"es2017\" | \"es2018\" | \"es2019\" | \"es2020\" | \"es2021\" | \"es2022\" | \"es2023\" | \"es2024\" | \"es2025\" | \"es3\" | \"es5\" | \"node\" | \"node-webkit\" | \"nwjs\" | \"web\" | \"webworker\" | `async-node${number}.${number}` | `async-node${number}` | `browserslist:${string}` | `electron${number}-main` | `electron${number}-preload` | `electron${number}-renderer` | `electron${number}.${number}-main` | `electron${number}.${number}-preload` | `electron${number}.${number}-renderer` | `node${number}.${number}` | `node${number}` | `node-webkit${number}.${number}` | `node-webkit${number}` | `nwjs${number}.${number}` | `nwjs${number}`)",
                            value: elem
                        }))).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".target",
                        expected: "(\"async-node\" | \"browserslist\" | \"electron-main\" | \"electron-preload\" | \"electron-renderer\" | \"es2015\" | \"es2016\" | \"es2017\" | \"es2018\" | \"es2019\" | \"es2020\" | \"es2021\" | \"es2022\" | \"es2023\" | \"es2024\" | \"es2025\" | \"es3\" | \"es5\" | \"node\" | \"node-webkit\" | \"nwjs\" | \"web\" | \"webworker\" | Array<AllowTarget> | `async-node${number}.${number}` | `async-node${number}` | `browserslist:${string}` | `electron${number}-main` | `electron${number}-preload` | `electron${number}-renderer` | `electron${number}.${number}-main` | `electron${number}.${number}-preload` | `electron${number}.${number}-renderer` | `node${number}.${number}` | `node${number}` | `node-webkit${number}.${number}` | `node-webkit${number}` | `nwjs${number}.${number}` | `nwjs${number}` | false | undefined)",
                        value: input.target
                    })),
                    void 0 === input.mode || "none" === input.mode || "development" === input.mode || "production" === input.mode || _report(_exceptionable, {
                        path: _path + ".mode",
                        expected: "(\"development\" | \"none\" | \"production\" | undefined)",
                        value: input.mode
                    }),
                    void 0 === input.experiments || ("object" == typeof input.experiments && null !== input.experiments && false === Array.isArray(input.experiments) || _report(_exceptionable, {
                        path: _path + ".experiments",
                        expected: "(Experiments | undefined)",
                        value: input.experiments
                    })) && _vo96(input.experiments, _path + ".experiments", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".experiments",
                        expected: "(Experiments | undefined)",
                        value: input.experiments
                    }),
                    (null !== input.externals || _report(_exceptionable, {
                        path: _path + ".externals",
                        expected: "(Array<ExternalItem> | ExternalItemObjectUnknown | RegExp | string | undefined)",
                        value: input.externals
                    })) && (void 0 === input.externals || "function" == typeof input.externals || "string" == typeof input.externals || input.externals instanceof RegExp || Array.isArray(input.externals) && input.externals.map((elem, _index422)=>(null !== elem || _report(_exceptionable, {
                            path: _path + ".externals[" + _index422 + "]",
                            expected: "(ExternalItemObjectUnknown | RegExp | string)",
                            value: elem
                        })) && (void 0 !== elem || _report(_exceptionable, {
                            path: _path + ".externals[" + _index422 + "]",
                            expected: "(ExternalItemObjectUnknown | RegExp | string)",
                            value: elem
                        })) && ("function" == typeof elem || "string" == typeof elem || elem instanceof RegExp || ("object" == typeof elem && null !== elem && false === Array.isArray(elem) || _report(_exceptionable, {
                            path: _path + ".externals[" + _index422 + "]",
                            expected: "(ExternalItemObjectUnknown | RegExp | string)",
                            value: elem
                        })) && _vo105(elem, _path + ".externals[" + _index422 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".externals[" + _index422 + "]",
                            expected: "(ExternalItemObjectUnknown | RegExp | string)",
                            value: elem
                        }))).every((flag)=>flag) || "object" == typeof input.externals && null !== input.externals && false === Array.isArray(input.externals) && _vo105(input.externals, _path + ".externals", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".externals",
                        expected: "(Array<ExternalItem> | ExternalItemObjectUnknown | RegExp | string | undefined)",
                        value: input.externals
                    }) || _report(_exceptionable, {
                        path: _path + ".externals",
                        expected: "(Array<ExternalItem> | ExternalItemObjectUnknown | RegExp | string | undefined)",
                        value: input.externals
                    })),
                    void 0 === input.externalsType || true === _vv423.has(input.externalsType) || _report(_exceptionable, {
                        path: _path + ".externalsType",
                        expected: '("amd" | "amd-require" | "assign" | "commonjs" | "commonjs-import" | "commonjs-module" | "commonjs-static" | "commonjs2" | "global" | "import" | "jsonp" | "module" | "module-import" | "node-commonjs" | "promise" | "script" | "self" | "system" | "this" | "umd" | "umd2" | "var" | "window" | undefined)',
                        value: input.externalsType
                    }),
                    void 0 === input.externalsPresets || ("object" == typeof input.externalsPresets && null !== input.externalsPresets && false === Array.isArray(input.externalsPresets) || _report(_exceptionable, {
                        path: _path + ".externalsPresets",
                        expected: "(ExternalsPresets | undefined)",
                        value: input.externalsPresets
                    })) && _vo108(input.externalsPresets, _path + ".externalsPresets", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".externalsPresets",
                        expected: "(ExternalsPresets | undefined)",
                        value: input.externalsPresets
                    }),
                    void 0 === input.infrastructureLogging || ("object" == typeof input.infrastructureLogging && null !== input.infrastructureLogging && false === Array.isArray(input.infrastructureLogging) || _report(_exceptionable, {
                        path: _path + ".infrastructureLogging",
                        expected: "(InfrastructureLogging | undefined)",
                        value: input.infrastructureLogging
                    })) && _vo109(input.infrastructureLogging, _path + ".infrastructureLogging", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".infrastructureLogging",
                        expected: "(InfrastructureLogging | undefined)",
                        value: input.infrastructureLogging
                    }),
                    void 0 === input.cache || "boolean" == typeof input.cache || _report(_exceptionable, {
                        path: _path + ".cache",
                        expected: "(boolean | undefined)",
                        value: input.cache
                    }),
                    void 0 === input.context || "string" == typeof input.context || _report(_exceptionable, {
                        path: _path + ".context",
                        expected: "(string | undefined)",
                        value: input.context
                    }),
                    void 0 === input.devtool || true === _vv424.has(input.devtool) || _report(_exceptionable, {
                        path: _path + ".devtool",
                        expected: "(\"cheap-module-source-map\" | \"cheap-module-source-map-debugids\" | \"cheap-source-map\" | \"cheap-source-map-debugids\" | \"eval\" | \"eval-cheap-module-source-map\" | \"eval-cheap-module-source-map-debugids\" | \"eval-cheap-source-map\" | \"eval-cheap-source-map-debugids\" | \"eval-nosources-cheap-module-source-map\" | \"eval-nosources-cheap-module-source-map-debugids\" | \"eval-nosources-cheap-source-map\" | \"eval-nosources-cheap-source-map-debugids\" | \"eval-nosources-source-map\" | \"eval-nosources-source-map-debugids\" | \"eval-source-map\" | \"eval-source-map-debugids\" | \"hidden-cheap-module-source-map\" | \"hidden-cheap-module-source-map-debugids\" | \"hidden-cheap-source-map\" | \"hidden-cheap-source-map-debugids\" | \"hidden-nosources-cheap-module-source-map\" | \"hidden-nosources-cheap-module-source-map-debugids\" | \"hidden-nosources-cheap-source-map\" | \"hidden-nosources-cheap-source-map-debugids\" | \"hidden-nosources-source-map\" | \"hidden-nosources-source-map-debugids\" | \"hidden-source-map\" | \"hidden-source-map-debugids\" | \"inline-cheap-module-source-map\" | \"inline-cheap-module-source-map-debugids\" | \"inline-cheap-source-map\" | \"inline-cheap-source-map-debugids\" | \"inline-nosources-cheap-module-source-map\" | \"inline-nosources-cheap-module-source-map-debugids\" | \"inline-nosources-cheap-source-map\" | \"inline-nosources-cheap-source-map-debugids\" | \"inline-nosources-source-map\" | \"inline-nosources-source-map-debugids\" | \"inline-source-map\" | \"inline-source-map-debugids\" | \"nosources-cheap-module-source-map\" | \"nosources-cheap-module-source-map-debugids\" | \"nosources-cheap-source-map\" | \"nosources-cheap-source-map-debugids\" | \"nosources-source-map\" | \"nosources-source-map-debugids\" | \"source-map\" | \"source-map-debugids\" | false | undefined)",
                        value: input.devtool
                    }),
                    (null !== input.node || _report(_exceptionable, {
                        path: _path + ".node",
                        expected: "(NodeOptions | false | undefined)",
                        value: input.node
                    })) && (void 0 === input.node || false === input.node || ("object" == typeof input.node && null !== input.node && false === Array.isArray(input.node) || _report(_exceptionable, {
                        path: _path + ".node",
                        expected: "(NodeOptions | false | undefined)",
                        value: input.node
                    })) && _vo113(input.node, _path + ".node", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".node",
                        expected: "(NodeOptions | false | undefined)",
                        value: input.node
                    })),
                    void 0 === input.loader || ("object" == typeof input.loader && null !== input.loader && false === Array.isArray(input.loader) || _report(_exceptionable, {
                        path: _path + ".loader",
                        expected: "(Loader | undefined)",
                        value: input.loader
                    })) && _vo114(input.loader, _path + ".loader", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".loader",
                        expected: "(Loader | undefined)",
                        value: input.loader
                    }),
                    void 0 === input.ignoreWarnings || (Array.isArray(input.ignoreWarnings) || _report(_exceptionable, {
                        path: _path + ".ignoreWarnings",
                        expected: "(IgnoreWarnings | undefined)",
                        value: input.ignoreWarnings
                    })) && input.ignoreWarnings.map((elem, _index425)=>(null !== elem || _report(_exceptionable, {
                            path: _path + ".ignoreWarnings[" + _index425 + "]",
                            expected: "(RegExp | __type.o26)",
                            value: elem
                        })) && (void 0 !== elem || _report(_exceptionable, {
                            path: _path + ".ignoreWarnings[" + _index425 + "]",
                            expected: "(RegExp | __type.o26)",
                            value: elem
                        })) && ("function" == typeof elem || elem instanceof RegExp || ("object" == typeof elem && null !== elem && false === Array.isArray(elem) || _report(_exceptionable, {
                            path: _path + ".ignoreWarnings[" + _index425 + "]",
                            expected: "(RegExp | __type.o26)",
                            value: elem
                        })) && _vo115(elem, _path + ".ignoreWarnings[" + _index425 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".ignoreWarnings[" + _index425 + "]",
                            expected: "(RegExp | __type.o26)",
                            value: elem
                        }))).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".ignoreWarnings",
                        expected: "(IgnoreWarnings | undefined)",
                        value: input.ignoreWarnings
                    }),
                    void 0 === input.watchOptions || ("object" == typeof input.watchOptions && null !== input.watchOptions && false === Array.isArray(input.watchOptions) || _report(_exceptionable, {
                        path: _path + ".watchOptions",
                        expected: "(WatchOptions | undefined)",
                        value: input.watchOptions
                    })) && _vo116(input.watchOptions, _path + ".watchOptions", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".watchOptions",
                        expected: "(WatchOptions | undefined)",
                        value: input.watchOptions
                    }),
                    void 0 === input.watch || "boolean" == typeof input.watch || _report(_exceptionable, {
                        path: _path + ".watch",
                        expected: "(boolean | undefined)",
                        value: input.watch
                    }),
                    (null !== input.stats || _report(_exceptionable, {
                        path: _path + ".stats",
                        expected: "(\"detailed\" | \"errors-only\" | \"errors-warnings\" | \"minimal\" | \"none\" | \"normal\" | \"summary\" | \"verbose\" | StatsOptions | boolean | undefined)",
                        value: input.stats
                    })) && (void 0 === input.stats || "none" === input.stats || "verbose" === input.stats || "normal" === input.stats || "errors-only" === input.stats || "errors-warnings" === input.stats || "minimal" === input.stats || "detailed" === input.stats || "summary" === input.stats || "boolean" == typeof input.stats || ("object" == typeof input.stats && null !== input.stats && false === Array.isArray(input.stats) || _report(_exceptionable, {
                        path: _path + ".stats",
                        expected: "(\"detailed\" | \"errors-only\" | \"errors-warnings\" | \"minimal\" | \"none\" | \"normal\" | \"summary\" | \"verbose\" | StatsOptions | boolean | undefined)",
                        value: input.stats
                    })) && _vo117(input.stats, _path + ".stats", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".stats",
                        expected: "(\"detailed\" | \"errors-only\" | \"errors-warnings\" | \"minimal\" | \"none\" | \"normal\" | \"summary\" | \"verbose\" | StatsOptions | boolean | undefined)",
                        value: input.stats
                    })),
                    void 0 === input.snapshot || ("object" == typeof input.snapshot && null !== input.snapshot && false === Array.isArray(input.snapshot) || _report(_exceptionable, {
                        path: _path + ".snapshot",
                        expected: "(SnapshotOptions | undefined)",
                        value: input.snapshot
                    })) && _vo118(input.snapshot, _path + ".snapshot", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".snapshot",
                        expected: "(SnapshotOptions | undefined)",
                        value: input.snapshot
                    }),
                    void 0 === input.optimization || ("object" == typeof input.optimization && null !== input.optimization && false === Array.isArray(input.optimization) || _report(_exceptionable, {
                        path: _path + ".optimization",
                        expected: "(Optimization | undefined)",
                        value: input.optimization
                    })) && _vo119(input.optimization, _path + ".optimization", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".optimization",
                        expected: "(Optimization | undefined)",
                        value: input.optimization
                    }),
                    void 0 === input.resolve || ("object" == typeof input.resolve && null !== input.resolve && false === Array.isArray(input.resolve) || _report(_exceptionable, {
                        path: _path + ".resolve",
                        expected: "(ResolveOptions | undefined)",
                        value: input.resolve
                    })) && _vo128(input.resolve, _path + ".resolve", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".resolve",
                        expected: "(ResolveOptions | undefined)",
                        value: input.resolve
                    }),
                    void 0 === input.resolveLoader || ("object" == typeof input.resolveLoader && null !== input.resolveLoader && false === Array.isArray(input.resolveLoader) || _report(_exceptionable, {
                        path: _path + ".resolveLoader",
                        expected: "(ResolveOptions | undefined)",
                        value: input.resolveLoader
                    })) && _vo128(input.resolveLoader, _path + ".resolveLoader", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".resolveLoader",
                        expected: "(ResolveOptions | undefined)",
                        value: input.resolveLoader
                    }),
                    void 0 === input.plugins || (Array.isArray(input.plugins) || _report(_exceptionable, {
                        path: _path + ".plugins",
                        expected: "(Plugins | undefined)",
                        value: input.plugins
                    })) && input.plugins.map((elem, _index426)=>null == elem || "function" == typeof elem || false === elem || "" === elem || 0 === elem || ("object" == typeof elem && null !== elem || _report(_exceptionable, {
                            path: _path + ".plugins[" + _index426 + "]",
                            expected: "(\"\" | 0 | RspackPluginInstance | WebpackPluginInstance | false | null | undefined)",
                            value: elem
                        })) && _vu0(elem, _path + ".plugins[" + _index426 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".plugins[" + _index426 + "]",
                            expected: "(\"\" | 0 | RspackPluginInstance | WebpackPluginInstance | false | null | undefined)",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".plugins",
                        expected: "(Plugins | undefined)",
                        value: input.plugins
                    }),
                    void 0 === input.devServer || ("object" == typeof input.devServer && null !== input.devServer && false === Array.isArray(input.devServer) || _report(_exceptionable, {
                        path: _path + ".devServer",
                        expected: "(DevServer | undefined)",
                        value: input.devServer
                    })) && _vo133(input.devServer, _path + ".devServer", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".devServer",
                        expected: "(DevServer | undefined)",
                        value: input.devServer
                    }),
                    void 0 === input["module"] || ("object" == typeof input["module"] && null !== input["module"] && false === Array.isArray(input["module"]) || _report(_exceptionable, {
                        path: _path + "[\"module\"]",
                        expected: "(ModuleOptions | undefined)",
                        value: input["module"]
                    })) && _vo172(input["module"], _path + "[\"module\"]", _exceptionable) || _report(_exceptionable, {
                        path: _path + "[\"module\"]",
                        expected: "(ModuleOptions | undefined)",
                        value: input["module"]
                    }),
                    void 0 === input.profile || "boolean" == typeof input.profile || _report(_exceptionable, {
                        path: _path + ".profile",
                        expected: "(boolean | undefined)",
                        value: input.profile
                    }),
                    (null !== input.amd || _report(_exceptionable, {
                        path: _path + ".amd",
                        expected: "(Record<string, any> | false | undefined)",
                        value: input.amd
                    })) && (void 0 === input.amd || false === input.amd || ("object" == typeof input.amd && null !== input.amd && false === Array.isArray(input.amd) || _report(_exceptionable, {
                        path: _path + ".amd",
                        expected: "(Record<string, any> | false | undefined)",
                        value: input.amd
                    })) && _vo19(input.amd, _path + ".amd", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".amd",
                        expected: "(Record<string, any> | false | undefined)",
                        value: input.amd
                    })),
                    void 0 === input.bail || "boolean" == typeof input.bail || _report(_exceptionable, {
                        path: _path + ".bail",
                        expected: "(boolean | undefined)",
                        value: input.bail
                    }),
                    (null !== input.performance || _report(_exceptionable, {
                        path: _path + ".performance",
                        expected: "(__type.o45 | false | undefined)",
                        value: input.performance
                    })) && (void 0 === input.performance || false === input.performance || ("object" == typeof input.performance && null !== input.performance && false === Array.isArray(input.performance) || _report(_exceptionable, {
                        path: _path + ".performance",
                        expected: "(__type.o45 | false | undefined)",
                        value: input.performance
                    })) && _vo195(input.performance, _path + ".performance", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".performance",
                        expected: "(__type.o45 | false | undefined)",
                        value: input.performance
                    })),
                    (null !== input.lazyCompilation || _report(_exceptionable, {
                        path: _path + ".lazyCompilation",
                        expected: "(LazyCompilationOptions | boolean | undefined)",
                        value: input.lazyCompilation
                    })) && (void 0 === input.lazyCompilation || "boolean" == typeof input.lazyCompilation || ("object" == typeof input.lazyCompilation && null !== input.lazyCompilation && false === Array.isArray(input.lazyCompilation) || _report(_exceptionable, {
                        path: _path + ".lazyCompilation",
                        expected: "(LazyCompilationOptions | boolean | undefined)",
                        value: input.lazyCompilation
                    })) && _vo13(input.lazyCompilation, _path + ".lazyCompilation", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".lazyCompilation",
                        expected: "(LazyCompilationOptions | boolean | undefined)",
                        value: input.lazyCompilation
                    })),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "name",
                            "dependencies",
                            "extends",
                            "entry",
                            "output",
                            "target",
                            "mode",
                            "experiments",
                            "externals",
                            "externalsType",
                            "externalsPresets",
                            "infrastructureLogging",
                            "cache",
                            "context",
                            "devtool",
                            "node",
                            "loader",
                            "ignoreWarnings",
                            "watchOptions",
                            "watch",
                            "stats",
                            "snapshot",
                            "optimization",
                            "resolve",
                            "resolveLoader",
                            "plugins",
                            "devServer",
                            "module",
                            "profile",
                            "amd",
                            "bail",
                            "performance",
                            "lazyCompilation"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo87 = (input, _path, _exceptionable = true)=>[
                    false === _exceptionable || Object.keys(input).map((key)=>{
                        const value = input[key];
                        if (void 0 === value) return true;
                        return (null !== value || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(Array<string> | EntryDescription | string)",
                            value: value
                        })) && (void 0 !== value || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(Array<string> | EntryDescription | string)",
                            value: value
                        })) && ("string" == typeof value || Array.isArray(value) && value.map((elem, _index427)=>"string" == typeof elem || _report(_exceptionable, {
                                path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key) + "[" + _index427 + "]",
                                expected: "string",
                                value: elem
                            })).every((flag)=>flag) || "object" == typeof value && null !== value && _vo88(value, _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key), _exceptionable) || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(Array<string> | EntryDescription | string)",
                            value: value
                        }) || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(Array<string> | EntryDescription | string)",
                            value: value
                        }));
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo88 = (input, _path, _exceptionable = true)=>[
                    (null !== input["import"] || _report(_exceptionable, {
                        path: _path + "[\"import\"]",
                        expected: "(Array<string> | string)",
                        value: input["import"]
                    })) && (void 0 !== input["import"] || _report(_exceptionable, {
                        path: _path + "[\"import\"]",
                        expected: "(Array<string> | string)",
                        value: input["import"]
                    })) && ("string" == typeof input["import"] || (Array.isArray(input["import"]) || _report(_exceptionable, {
                        path: _path + "[\"import\"]",
                        expected: "(Array<string> | string)",
                        value: input["import"]
                    })) && input["import"].map((elem, _index428)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + "[\"import\"][" + _index428 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + "[\"import\"]",
                        expected: "(Array<string> | string)",
                        value: input["import"]
                    })),
                    void 0 === input.runtime || false === input.runtime || "string" == typeof input.runtime || _report(_exceptionable, {
                        path: _path + ".runtime",
                        expected: "(false | string | undefined)",
                        value: input.runtime
                    }),
                    (null !== input.publicPath || _report(_exceptionable, {
                        path: _path + ".publicPath",
                        expected: "(string | undefined)",
                        value: input.publicPath
                    })) && (void 0 === input.publicPath || "function" == typeof input.publicPath || "string" == typeof input.publicPath || _report(_exceptionable, {
                        path: _path + ".publicPath",
                        expected: "(string | undefined)",
                        value: input.publicPath
                    })),
                    void 0 === input.baseUri || "string" == typeof input.baseUri || _report(_exceptionable, {
                        path: _path + ".baseUri",
                        expected: "(string | undefined)",
                        value: input.baseUri
                    }),
                    void 0 === input.chunkLoading || false === input.chunkLoading || "string" == typeof input.chunkLoading || _report(_exceptionable, {
                        path: _path + ".chunkLoading",
                        expected: "(false | string | undefined)",
                        value: input.chunkLoading
                    }),
                    void 0 === input.asyncChunks || "boolean" == typeof input.asyncChunks || _report(_exceptionable, {
                        path: _path + ".asyncChunks",
                        expected: "(boolean | undefined)",
                        value: input.asyncChunks
                    }),
                    void 0 === input.wasmLoading || false === input.wasmLoading || "string" == typeof input.wasmLoading || _report(_exceptionable, {
                        path: _path + ".wasmLoading",
                        expected: "(false | string | undefined)",
                        value: input.wasmLoading
                    }),
                    (null !== input.filename || _report(_exceptionable, {
                        path: _path + ".filename",
                        expected: "(string | undefined)",
                        value: input.filename
                    })) && (void 0 === input.filename || "function" == typeof input.filename || "string" == typeof input.filename || _report(_exceptionable, {
                        path: _path + ".filename",
                        expected: "(string | undefined)",
                        value: input.filename
                    })),
                    void 0 === input.library || ("object" == typeof input.library && null !== input.library || _report(_exceptionable, {
                        path: _path + ".library",
                        expected: "(LibraryOptions | undefined)",
                        value: input.library
                    })) && _vo89(input.library, _path + ".library", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".library",
                        expected: "(LibraryOptions | undefined)",
                        value: input.library
                    }),
                    (null !== input.dependOn || _report(_exceptionable, {
                        path: _path + ".dependOn",
                        expected: "(Array<string> | string | undefined)",
                        value: input.dependOn
                    })) && (void 0 === input.dependOn || "string" == typeof input.dependOn || (Array.isArray(input.dependOn) || _report(_exceptionable, {
                        path: _path + ".dependOn",
                        expected: "(Array<string> | string | undefined)",
                        value: input.dependOn
                    })) && input.dependOn.map((elem, _index429)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".dependOn[" + _index429 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".dependOn",
                        expected: "(Array<string> | string | undefined)",
                        value: input.dependOn
                    })),
                    null === input.layer || void 0 === input.layer || "string" == typeof input.layer || _report(_exceptionable, {
                        path: _path + ".layer",
                        expected: "(null | string | undefined)",
                        value: input.layer
                    }),
                    1 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "import",
                            "runtime",
                            "publicPath",
                            "baseUri",
                            "chunkLoading",
                            "asyncChunks",
                            "wasmLoading",
                            "filename",
                            "library",
                            "dependOn",
                            "layer"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo89 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.amdContainer || "string" == typeof input.amdContainer || _report(_exceptionable, {
                        path: _path + ".amdContainer",
                        expected: "(string | undefined)",
                        value: input.amdContainer
                    }),
                    (null !== input.auxiliaryComment || _report(_exceptionable, {
                        path: _path + ".auxiliaryComment",
                        expected: "(LibraryCustomUmdCommentObject | string | undefined)",
                        value: input.auxiliaryComment
                    })) && (void 0 === input.auxiliaryComment || "string" == typeof input.auxiliaryComment || ("object" == typeof input.auxiliaryComment && null !== input.auxiliaryComment && false === Array.isArray(input.auxiliaryComment) || _report(_exceptionable, {
                        path: _path + ".auxiliaryComment",
                        expected: "(LibraryCustomUmdCommentObject | string | undefined)",
                        value: input.auxiliaryComment
                    })) && _vo90(input.auxiliaryComment, _path + ".auxiliaryComment", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".auxiliaryComment",
                        expected: "(LibraryCustomUmdCommentObject | string | undefined)",
                        value: input.auxiliaryComment
                    })),
                    (null !== input["export"] || _report(_exceptionable, {
                        path: _path + "[\"export\"]",
                        expected: "(Array<string> | string | undefined)",
                        value: input["export"]
                    })) && (void 0 === input["export"] || "string" == typeof input["export"] || (Array.isArray(input["export"]) || _report(_exceptionable, {
                        path: _path + "[\"export\"]",
                        expected: "(Array<string> | string | undefined)",
                        value: input["export"]
                    })) && input["export"].map((elem, _index430)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + "[\"export\"][" + _index430 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + "[\"export\"]",
                        expected: "(Array<string> | string | undefined)",
                        value: input["export"]
                    })),
                    (null !== input.name || _report(_exceptionable, {
                        path: _path + ".name",
                        expected: "(Array<string> | LibraryCustomUmdObject | string | undefined)",
                        value: input.name
                    })) && (void 0 === input.name || "string" == typeof input.name || Array.isArray(input.name) && input.name.map((elem, _index431)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".name[" + _index431 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || "object" == typeof input.name && null !== input.name && false === Array.isArray(input.name) && _vo91(input.name, _path + ".name", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".name",
                        expected: "(Array<string> | LibraryCustomUmdObject | string | undefined)",
                        value: input.name
                    }) || _report(_exceptionable, {
                        path: _path + ".name",
                        expected: "(Array<string> | LibraryCustomUmdObject | string | undefined)",
                        value: input.name
                    })),
                    "string" == typeof input.type || _report(_exceptionable, {
                        path: _path + ".type",
                        expected: "string",
                        value: input.type
                    }),
                    void 0 === input.umdNamedDefine || "boolean" == typeof input.umdNamedDefine || _report(_exceptionable, {
                        path: _path + ".umdNamedDefine",
                        expected: "(boolean | undefined)",
                        value: input.umdNamedDefine
                    }),
                    1 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "amdContainer",
                            "auxiliaryComment",
                            "export",
                            "name",
                            "type",
                            "umdNamedDefine"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo90 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.amd || "string" == typeof input.amd || _report(_exceptionable, {
                        path: _path + ".amd",
                        expected: "(string | undefined)",
                        value: input.amd
                    }),
                    void 0 === input.commonjs || "string" == typeof input.commonjs || _report(_exceptionable, {
                        path: _path + ".commonjs",
                        expected: "(string | undefined)",
                        value: input.commonjs
                    }),
                    void 0 === input.commonjs2 || "string" == typeof input.commonjs2 || _report(_exceptionable, {
                        path: _path + ".commonjs2",
                        expected: "(string | undefined)",
                        value: input.commonjs2
                    }),
                    void 0 === input.root || "string" == typeof input.root || _report(_exceptionable, {
                        path: _path + ".root",
                        expected: "(string | undefined)",
                        value: input.root
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "amd",
                            "commonjs",
                            "commonjs2",
                            "root"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo91 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.amd || "string" == typeof input.amd || _report(_exceptionable, {
                        path: _path + ".amd",
                        expected: "(string | undefined)",
                        value: input.amd
                    }),
                    void 0 === input.commonjs || "string" == typeof input.commonjs || _report(_exceptionable, {
                        path: _path + ".commonjs",
                        expected: "(string | undefined)",
                        value: input.commonjs
                    }),
                    (null !== input.root || _report(_exceptionable, {
                        path: _path + ".root",
                        expected: "(Array<string> | string | undefined)",
                        value: input.root
                    })) && (void 0 === input.root || "string" == typeof input.root || (Array.isArray(input.root) || _report(_exceptionable, {
                        path: _path + ".root",
                        expected: "(Array<string> | string | undefined)",
                        value: input.root
                    })) && input.root.map((elem, _index432)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".root[" + _index432 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".root",
                        expected: "(Array<string> | string | undefined)",
                        value: input.root
                    })),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "amd",
                            "commonjs",
                            "root"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo92 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.path || "string" == typeof input.path || _report(_exceptionable, {
                        path: _path + ".path",
                        expected: "(string | undefined)",
                        value: input.path
                    }),
                    void 0 === input.pathinfo || "verbose" === input.pathinfo || "boolean" == typeof input.pathinfo || _report(_exceptionable, {
                        path: _path + ".pathinfo",
                        expected: "(\"verbose\" | boolean | undefined)",
                        value: input.pathinfo
                    }),
                    (null !== input.clean || _report(_exceptionable, {
                        path: _path + ".clean",
                        expected: "(__type.o20 | boolean | undefined)",
                        value: input.clean
                    })) && (void 0 === input.clean || "boolean" == typeof input.clean || ("object" == typeof input.clean && null !== input.clean && false === Array.isArray(input.clean) || _report(_exceptionable, {
                        path: _path + ".clean",
                        expected: "(__type.o20 | boolean | undefined)",
                        value: input.clean
                    })) && _vo93(input.clean, _path + ".clean", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".clean",
                        expected: "(__type.o20 | boolean | undefined)",
                        value: input.clean
                    })),
                    (null !== input.publicPath || _report(_exceptionable, {
                        path: _path + ".publicPath",
                        expected: "(string | undefined)",
                        value: input.publicPath
                    })) && (void 0 === input.publicPath || "function" == typeof input.publicPath || "string" == typeof input.publicPath || _report(_exceptionable, {
                        path: _path + ".publicPath",
                        expected: "(string | undefined)",
                        value: input.publicPath
                    })),
                    (null !== input.filename || _report(_exceptionable, {
                        path: _path + ".filename",
                        expected: "(string | undefined)",
                        value: input.filename
                    })) && (void 0 === input.filename || "function" == typeof input.filename || "string" == typeof input.filename || _report(_exceptionable, {
                        path: _path + ".filename",
                        expected: "(string | undefined)",
                        value: input.filename
                    })),
                    (null !== input.chunkFilename || _report(_exceptionable, {
                        path: _path + ".chunkFilename",
                        expected: "(string | undefined)",
                        value: input.chunkFilename
                    })) && (void 0 === input.chunkFilename || "function" == typeof input.chunkFilename || "string" == typeof input.chunkFilename || _report(_exceptionable, {
                        path: _path + ".chunkFilename",
                        expected: "(string | undefined)",
                        value: input.chunkFilename
                    })),
                    void 0 === input.crossOriginLoading || false === input.crossOriginLoading || "anonymous" === input.crossOriginLoading || "use-credentials" === input.crossOriginLoading || _report(_exceptionable, {
                        path: _path + ".crossOriginLoading",
                        expected: "(\"anonymous\" | \"use-credentials\" | false | undefined)",
                        value: input.crossOriginLoading
                    }),
                    (null !== input.cssFilename || _report(_exceptionable, {
                        path: _path + ".cssFilename",
                        expected: "(string | undefined)",
                        value: input.cssFilename
                    })) && (void 0 === input.cssFilename || "function" == typeof input.cssFilename || "string" == typeof input.cssFilename || _report(_exceptionable, {
                        path: _path + ".cssFilename",
                        expected: "(string | undefined)",
                        value: input.cssFilename
                    })),
                    void 0 === input.cssHeadDataCompression || "boolean" == typeof input.cssHeadDataCompression || _report(_exceptionable, {
                        path: _path + ".cssHeadDataCompression",
                        expected: "(boolean | undefined)",
                        value: input.cssHeadDataCompression
                    }),
                    (null !== input.cssChunkFilename || _report(_exceptionable, {
                        path: _path + ".cssChunkFilename",
                        expected: "(string | undefined)",
                        value: input.cssChunkFilename
                    })) && (void 0 === input.cssChunkFilename || "function" == typeof input.cssChunkFilename || "string" == typeof input.cssChunkFilename || _report(_exceptionable, {
                        path: _path + ".cssChunkFilename",
                        expected: "(string | undefined)",
                        value: input.cssChunkFilename
                    })),
                    void 0 === input.hotUpdateMainFilename || "string" == typeof input.hotUpdateMainFilename || _report(_exceptionable, {
                        path: _path + ".hotUpdateMainFilename",
                        expected: "(string | undefined)",
                        value: input.hotUpdateMainFilename
                    }),
                    void 0 === input.hotUpdateChunkFilename || "string" == typeof input.hotUpdateChunkFilename || _report(_exceptionable, {
                        path: _path + ".hotUpdateChunkFilename",
                        expected: "(string | undefined)",
                        value: input.hotUpdateChunkFilename
                    }),
                    void 0 === input.hotUpdateGlobal || "string" == typeof input.hotUpdateGlobal || _report(_exceptionable, {
                        path: _path + ".hotUpdateGlobal",
                        expected: "(string | undefined)",
                        value: input.hotUpdateGlobal
                    }),
                    (null !== input.assetModuleFilename || _report(_exceptionable, {
                        path: _path + ".assetModuleFilename",
                        expected: "(string | undefined)",
                        value: input.assetModuleFilename
                    })) && (void 0 === input.assetModuleFilename || "function" == typeof input.assetModuleFilename || "string" == typeof input.assetModuleFilename || _report(_exceptionable, {
                        path: _path + ".assetModuleFilename",
                        expected: "(string | undefined)",
                        value: input.assetModuleFilename
                    })),
                    void 0 === input.uniqueName || "string" == typeof input.uniqueName || _report(_exceptionable, {
                        path: _path + ".uniqueName",
                        expected: "(string | undefined)",
                        value: input.uniqueName
                    }),
                    void 0 === input.chunkLoadingGlobal || "string" == typeof input.chunkLoadingGlobal || _report(_exceptionable, {
                        path: _path + ".chunkLoadingGlobal",
                        expected: "(string | undefined)",
                        value: input.chunkLoadingGlobal
                    }),
                    void 0 === input.enabledLibraryTypes || (Array.isArray(input.enabledLibraryTypes) || _report(_exceptionable, {
                        path: _path + ".enabledLibraryTypes",
                        expected: "(EnabledLibraryTypes | undefined)",
                        value: input.enabledLibraryTypes
                    })) && input.enabledLibraryTypes.map((elem, _index433)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".enabledLibraryTypes[" + _index433 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".enabledLibraryTypes",
                        expected: "(EnabledLibraryTypes | undefined)",
                        value: input.enabledLibraryTypes
                    }),
                    (null !== input.library || _report(_exceptionable, {
                        path: _path + ".library",
                        expected: "(Array<string> | LibraryCustomUmdObject | LibraryOptions | string | undefined)",
                        value: input.library
                    })) && (void 0 === input.library || "string" == typeof input.library || Array.isArray(input.library) && input.library.map((elem, _index434)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".library[" + _index434 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || "object" == typeof input.library && null !== input.library && false === Array.isArray(input.library) && _vu8(input.library, _path + ".library", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".library",
                        expected: "(Array<string> | LibraryCustomUmdObject | LibraryOptions | string | undefined)",
                        value: input.library
                    }) || _report(_exceptionable, {
                        path: _path + ".library",
                        expected: "(Array<string> | LibraryCustomUmdObject | LibraryOptions | string | undefined)",
                        value: input.library
                    })),
                    (null !== input.libraryExport || _report(_exceptionable, {
                        path: _path + ".libraryExport",
                        expected: "(Array<string> | string | undefined)",
                        value: input.libraryExport
                    })) && (void 0 === input.libraryExport || "string" == typeof input.libraryExport || (Array.isArray(input.libraryExport) || _report(_exceptionable, {
                        path: _path + ".libraryExport",
                        expected: "(Array<string> | string | undefined)",
                        value: input.libraryExport
                    })) && input.libraryExport.map((elem, _index435)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".libraryExport[" + _index435 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".libraryExport",
                        expected: "(Array<string> | string | undefined)",
                        value: input.libraryExport
                    })),
                    void 0 === input.libraryTarget || "string" == typeof input.libraryTarget || _report(_exceptionable, {
                        path: _path + ".libraryTarget",
                        expected: "(string | undefined)",
                        value: input.libraryTarget
                    }),
                    void 0 === input.umdNamedDefine || "boolean" == typeof input.umdNamedDefine || _report(_exceptionable, {
                        path: _path + ".umdNamedDefine",
                        expected: "(boolean | undefined)",
                        value: input.umdNamedDefine
                    }),
                    (null !== input.auxiliaryComment || _report(_exceptionable, {
                        path: _path + ".auxiliaryComment",
                        expected: "(LibraryCustomUmdCommentObject | string | undefined)",
                        value: input.auxiliaryComment
                    })) && (void 0 === input.auxiliaryComment || "string" == typeof input.auxiliaryComment || ("object" == typeof input.auxiliaryComment && null !== input.auxiliaryComment && false === Array.isArray(input.auxiliaryComment) || _report(_exceptionable, {
                        path: _path + ".auxiliaryComment",
                        expected: "(LibraryCustomUmdCommentObject | string | undefined)",
                        value: input.auxiliaryComment
                    })) && _vo90(input.auxiliaryComment, _path + ".auxiliaryComment", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".auxiliaryComment",
                        expected: "(LibraryCustomUmdCommentObject | string | undefined)",
                        value: input.auxiliaryComment
                    })),
                    void 0 === input["module"] || "boolean" == typeof input["module"] || _report(_exceptionable, {
                        path: _path + "[\"module\"]",
                        expected: "(boolean | undefined)",
                        value: input["module"]
                    }),
                    void 0 === input.strictModuleExceptionHandling || "boolean" == typeof input.strictModuleExceptionHandling || _report(_exceptionable, {
                        path: _path + ".strictModuleExceptionHandling",
                        expected: "(boolean | undefined)",
                        value: input.strictModuleExceptionHandling
                    }),
                    void 0 === input.strictModuleErrorHandling || "boolean" == typeof input.strictModuleErrorHandling || _report(_exceptionable, {
                        path: _path + ".strictModuleErrorHandling",
                        expected: "(boolean | undefined)",
                        value: input.strictModuleErrorHandling
                    }),
                    void 0 === input.globalObject || "string" == typeof input.globalObject || _report(_exceptionable, {
                        path: _path + ".globalObject",
                        expected: "(string | undefined)",
                        value: input.globalObject
                    }),
                    void 0 === input.importFunctionName || "string" == typeof input.importFunctionName || _report(_exceptionable, {
                        path: _path + ".importFunctionName",
                        expected: "(string | undefined)",
                        value: input.importFunctionName
                    }),
                    void 0 === input.importMetaName || "string" == typeof input.importMetaName || _report(_exceptionable, {
                        path: _path + ".importMetaName",
                        expected: "(string | undefined)",
                        value: input.importMetaName
                    }),
                    void 0 === input.iife || "boolean" == typeof input.iife || _report(_exceptionable, {
                        path: _path + ".iife",
                        expected: "(boolean | undefined)",
                        value: input.iife
                    }),
                    void 0 === input.wasmLoading || false === input.wasmLoading || "string" == typeof input.wasmLoading || _report(_exceptionable, {
                        path: _path + ".wasmLoading",
                        expected: "(false | string | undefined)",
                        value: input.wasmLoading
                    }),
                    void 0 === input.enabledWasmLoadingTypes || (Array.isArray(input.enabledWasmLoadingTypes) || _report(_exceptionable, {
                        path: _path + ".enabledWasmLoadingTypes",
                        expected: "(EnabledWasmLoadingTypes | undefined)",
                        value: input.enabledWasmLoadingTypes
                    })) && input.enabledWasmLoadingTypes.map((elem, _index436)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".enabledWasmLoadingTypes[" + _index436 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".enabledWasmLoadingTypes",
                        expected: "(EnabledWasmLoadingTypes | undefined)",
                        value: input.enabledWasmLoadingTypes
                    }),
                    void 0 === input.webassemblyModuleFilename || "string" == typeof input.webassemblyModuleFilename || _report(_exceptionable, {
                        path: _path + ".webassemblyModuleFilename",
                        expected: "(string | undefined)",
                        value: input.webassemblyModuleFilename
                    }),
                    void 0 === input.chunkFormat || false === input.chunkFormat || "string" == typeof input.chunkFormat || _report(_exceptionable, {
                        path: _path + ".chunkFormat",
                        expected: "(false | string | undefined)",
                        value: input.chunkFormat
                    }),
                    void 0 === input.chunkLoading || false === input.chunkLoading || "string" == typeof input.chunkLoading || _report(_exceptionable, {
                        path: _path + ".chunkLoading",
                        expected: "(false | string | undefined)",
                        value: input.chunkLoading
                    }),
                    void 0 === input.enabledChunkLoadingTypes || (Array.isArray(input.enabledChunkLoadingTypes) || _report(_exceptionable, {
                        path: _path + ".enabledChunkLoadingTypes",
                        expected: "(EnabledChunkLoadingTypes | undefined)",
                        value: input.enabledChunkLoadingTypes
                    })) && input.enabledChunkLoadingTypes.map((elem, _index437)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".enabledChunkLoadingTypes[" + _index437 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".enabledChunkLoadingTypes",
                        expected: "(EnabledChunkLoadingTypes | undefined)",
                        value: input.enabledChunkLoadingTypes
                    }),
                    (null !== input.trustedTypes || _report(_exceptionable, {
                        path: _path + ".trustedTypes",
                        expected: "(TrustedTypes | string | true | undefined)",
                        value: input.trustedTypes
                    })) && (void 0 === input.trustedTypes || true === input.trustedTypes || "string" == typeof input.trustedTypes || ("object" == typeof input.trustedTypes && null !== input.trustedTypes && false === Array.isArray(input.trustedTypes) || _report(_exceptionable, {
                        path: _path + ".trustedTypes",
                        expected: "(TrustedTypes | string | true | undefined)",
                        value: input.trustedTypes
                    })) && _vo94(input.trustedTypes, _path + ".trustedTypes", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".trustedTypes",
                        expected: "(TrustedTypes | string | true | undefined)",
                        value: input.trustedTypes
                    })),
                    void 0 === input.sourceMapFilename || "string" == typeof input.sourceMapFilename || _report(_exceptionable, {
                        path: _path + ".sourceMapFilename",
                        expected: "(string | undefined)",
                        value: input.sourceMapFilename
                    }),
                    void 0 === input.hashDigest || "string" == typeof input.hashDigest || _report(_exceptionable, {
                        path: _path + ".hashDigest",
                        expected: "(string | undefined)",
                        value: input.hashDigest
                    }),
                    void 0 === input.hashDigestLength || "number" == typeof input.hashDigestLength || _report(_exceptionable, {
                        path: _path + ".hashDigestLength",
                        expected: "(number | undefined)",
                        value: input.hashDigestLength
                    }),
                    void 0 === input.hashFunction || "md4" === input.hashFunction || "xxhash64" === input.hashFunction || "sha256" === input.hashFunction || _report(_exceptionable, {
                        path: _path + ".hashFunction",
                        expected: "(\"md4\" | \"sha256\" | \"xxhash64\" | undefined)",
                        value: input.hashFunction
                    }),
                    void 0 === input.hashSalt || "string" == typeof input.hashSalt || _report(_exceptionable, {
                        path: _path + ".hashSalt",
                        expected: "(string | undefined)",
                        value: input.hashSalt
                    }),
                    void 0 === input.asyncChunks || "boolean" == typeof input.asyncChunks || _report(_exceptionable, {
                        path: _path + ".asyncChunks",
                        expected: "(boolean | undefined)",
                        value: input.asyncChunks
                    }),
                    void 0 === input.workerChunkLoading || false === input.workerChunkLoading || "string" == typeof input.workerChunkLoading || _report(_exceptionable, {
                        path: _path + ".workerChunkLoading",
                        expected: "(false | string | undefined)",
                        value: input.workerChunkLoading
                    }),
                    void 0 === input.workerWasmLoading || false === input.workerWasmLoading || "string" == typeof input.workerWasmLoading || _report(_exceptionable, {
                        path: _path + ".workerWasmLoading",
                        expected: "(false | string | undefined)",
                        value: input.workerWasmLoading
                    }),
                    void 0 === input.workerPublicPath || "string" == typeof input.workerPublicPath || _report(_exceptionable, {
                        path: _path + ".workerPublicPath",
                        expected: "(string | undefined)",
                        value: input.workerPublicPath
                    }),
                    void 0 === input.scriptType || false === input.scriptType || "module" === input.scriptType || "text/javascript" === input.scriptType || _report(_exceptionable, {
                        path: _path + ".scriptType",
                        expected: '("module" | "text/javascript" | false | undefined)',
                        value: input.scriptType
                    }),
                    void 0 === input.devtoolNamespace || "string" == typeof input.devtoolNamespace || _report(_exceptionable, {
                        path: _path + ".devtoolNamespace",
                        expected: "(string | undefined)",
                        value: input.devtoolNamespace
                    }),
                    (null !== input.devtoolModuleFilenameTemplate || _report(_exceptionable, {
                        path: _path + ".devtoolModuleFilenameTemplate",
                        expected: "(string | undefined)",
                        value: input.devtoolModuleFilenameTemplate
                    })) && (void 0 === input.devtoolModuleFilenameTemplate || "function" == typeof input.devtoolModuleFilenameTemplate || "string" == typeof input.devtoolModuleFilenameTemplate || _report(_exceptionable, {
                        path: _path + ".devtoolModuleFilenameTemplate",
                        expected: "(string | undefined)",
                        value: input.devtoolModuleFilenameTemplate
                    })),
                    (null !== input.devtoolFallbackModuleFilenameTemplate || _report(_exceptionable, {
                        path: _path + ".devtoolFallbackModuleFilenameTemplate",
                        expected: "(string | undefined)",
                        value: input.devtoolFallbackModuleFilenameTemplate
                    })) && (void 0 === input.devtoolFallbackModuleFilenameTemplate || "function" == typeof input.devtoolFallbackModuleFilenameTemplate || "string" == typeof input.devtoolFallbackModuleFilenameTemplate || _report(_exceptionable, {
                        path: _path + ".devtoolFallbackModuleFilenameTemplate",
                        expected: "(string | undefined)",
                        value: input.devtoolFallbackModuleFilenameTemplate
                    })),
                    void 0 === input.chunkLoadTimeout || "number" == typeof input.chunkLoadTimeout || _report(_exceptionable, {
                        path: _path + ".chunkLoadTimeout",
                        expected: "(number | undefined)",
                        value: input.chunkLoadTimeout
                    }),
                    void 0 === input.charset || "boolean" == typeof input.charset || _report(_exceptionable, {
                        path: _path + ".charset",
                        expected: "(boolean | undefined)",
                        value: input.charset
                    }),
                    void 0 === input.environment || ("object" == typeof input.environment && null !== input.environment && false === Array.isArray(input.environment) || _report(_exceptionable, {
                        path: _path + ".environment",
                        expected: "(Environment | undefined)",
                        value: input.environment
                    })) && _vo95(input.environment, _path + ".environment", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".environment",
                        expected: "(Environment | undefined)",
                        value: input.environment
                    }),
                    void 0 === input.compareBeforeEmit || "boolean" == typeof input.compareBeforeEmit || _report(_exceptionable, {
                        path: _path + ".compareBeforeEmit",
                        expected: "(boolean | undefined)",
                        value: input.compareBeforeEmit
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "path",
                            "pathinfo",
                            "clean",
                            "publicPath",
                            "filename",
                            "chunkFilename",
                            "crossOriginLoading",
                            "cssFilename",
                            "cssHeadDataCompression",
                            "cssChunkFilename",
                            "hotUpdateMainFilename",
                            "hotUpdateChunkFilename",
                            "hotUpdateGlobal",
                            "assetModuleFilename",
                            "uniqueName",
                            "chunkLoadingGlobal",
                            "enabledLibraryTypes",
                            "library",
                            "libraryExport",
                            "libraryTarget",
                            "umdNamedDefine",
                            "auxiliaryComment",
                            "module",
                            "strictModuleExceptionHandling",
                            "strictModuleErrorHandling",
                            "globalObject",
                            "importFunctionName",
                            "importMetaName",
                            "iife",
                            "wasmLoading",
                            "enabledWasmLoadingTypes",
                            "webassemblyModuleFilename",
                            "chunkFormat",
                            "chunkLoading",
                            "enabledChunkLoadingTypes",
                            "trustedTypes",
                            "sourceMapFilename",
                            "hashDigest",
                            "hashDigestLength",
                            "hashFunction",
                            "hashSalt",
                            "asyncChunks",
                            "workerChunkLoading",
                            "workerWasmLoading",
                            "workerPublicPath",
                            "scriptType",
                            "devtoolNamespace",
                            "devtoolModuleFilenameTemplate",
                            "devtoolFallbackModuleFilenameTemplate",
                            "chunkLoadTimeout",
                            "charset",
                            "environment",
                            "compareBeforeEmit"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo93 = (input, _path, _exceptionable = true)=>[
                    (null !== input.keep || _report(_exceptionable, {
                        path: _path + ".keep",
                        expected: "(RegExp | string | undefined)",
                        value: input.keep
                    })) && (void 0 === input.keep || "function" == typeof input.keep || "string" == typeof input.keep || input.keep instanceof RegExp || _report(_exceptionable, {
                        path: _path + ".keep",
                        expected: "(RegExp | string | undefined)",
                        value: input.keep
                    })),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "keep"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo94 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.policyName || "string" == typeof input.policyName || _report(_exceptionable, {
                        path: _path + ".policyName",
                        expected: "(string | undefined)",
                        value: input.policyName
                    }),
                    void 0 === input.onPolicyCreationFailure || "continue" === input.onPolicyCreationFailure || "stop" === input.onPolicyCreationFailure || _report(_exceptionable, {
                        path: _path + ".onPolicyCreationFailure",
                        expected: "(\"continue\" | \"stop\" | undefined)",
                        value: input.onPolicyCreationFailure
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "policyName",
                            "onPolicyCreationFailure"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo95 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.arrowFunction || "boolean" == typeof input.arrowFunction || _report(_exceptionable, {
                        path: _path + ".arrowFunction",
                        expected: "(boolean | undefined)",
                        value: input.arrowFunction
                    }),
                    void 0 === input.asyncFunction || "boolean" == typeof input.asyncFunction || _report(_exceptionable, {
                        path: _path + ".asyncFunction",
                        expected: "(boolean | undefined)",
                        value: input.asyncFunction
                    }),
                    void 0 === input.bigIntLiteral || "boolean" == typeof input.bigIntLiteral || _report(_exceptionable, {
                        path: _path + ".bigIntLiteral",
                        expected: "(boolean | undefined)",
                        value: input.bigIntLiteral
                    }),
                    void 0 === input["const"] || "boolean" == typeof input["const"] || _report(_exceptionable, {
                        path: _path + "[\"const\"]",
                        expected: "(boolean | undefined)",
                        value: input["const"]
                    }),
                    void 0 === input.destructuring || "boolean" == typeof input.destructuring || _report(_exceptionable, {
                        path: _path + ".destructuring",
                        expected: "(boolean | undefined)",
                        value: input.destructuring
                    }),
                    void 0 === input.document || "boolean" == typeof input.document || _report(_exceptionable, {
                        path: _path + ".document",
                        expected: "(boolean | undefined)",
                        value: input.document
                    }),
                    void 0 === input.dynamicImport || "boolean" == typeof input.dynamicImport || _report(_exceptionable, {
                        path: _path + ".dynamicImport",
                        expected: "(boolean | undefined)",
                        value: input.dynamicImport
                    }),
                    void 0 === input.dynamicImportInWorker || "boolean" == typeof input.dynamicImportInWorker || _report(_exceptionable, {
                        path: _path + ".dynamicImportInWorker",
                        expected: "(boolean | undefined)",
                        value: input.dynamicImportInWorker
                    }),
                    void 0 === input.forOf || "boolean" == typeof input.forOf || _report(_exceptionable, {
                        path: _path + ".forOf",
                        expected: "(boolean | undefined)",
                        value: input.forOf
                    }),
                    void 0 === input.globalThis || "boolean" == typeof input.globalThis || _report(_exceptionable, {
                        path: _path + ".globalThis",
                        expected: "(boolean | undefined)",
                        value: input.globalThis
                    }),
                    void 0 === input["module"] || "boolean" == typeof input["module"] || _report(_exceptionable, {
                        path: _path + "[\"module\"]",
                        expected: "(boolean | undefined)",
                        value: input["module"]
                    }),
                    void 0 === input.nodePrefixForCoreModules || "boolean" == typeof input.nodePrefixForCoreModules || _report(_exceptionable, {
                        path: _path + ".nodePrefixForCoreModules",
                        expected: "(boolean | undefined)",
                        value: input.nodePrefixForCoreModules
                    }),
                    void 0 === input.optionalChaining || "boolean" == typeof input.optionalChaining || _report(_exceptionable, {
                        path: _path + ".optionalChaining",
                        expected: "(boolean | undefined)",
                        value: input.optionalChaining
                    }),
                    void 0 === input.templateLiteral || "boolean" == typeof input.templateLiteral || _report(_exceptionable, {
                        path: _path + ".templateLiteral",
                        expected: "(boolean | undefined)",
                        value: input.templateLiteral
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "arrowFunction",
                            "asyncFunction",
                            "bigIntLiteral",
                            "const",
                            "destructuring",
                            "document",
                            "dynamicImport",
                            "dynamicImportInWorker",
                            "forOf",
                            "globalThis",
                            "module",
                            "nodePrefixForCoreModules",
                            "optionalChaining",
                            "templateLiteral"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo96 = (input, _path, _exceptionable = true)=>[
                    (null !== input.cache || _report(_exceptionable, {
                        path: _path + ".cache",
                        expected: "(__type.o21 | __type.o22 | boolean | undefined)",
                        value: input.cache
                    })) && (void 0 === input.cache || "boolean" == typeof input.cache || ("object" == typeof input.cache && null !== input.cache || _report(_exceptionable, {
                        path: _path + ".cache",
                        expected: "(__type.o21 | __type.o22 | boolean | undefined)",
                        value: input.cache
                    })) && _vu9(input.cache, _path + ".cache", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".cache",
                        expected: "(__type.o21 | __type.o22 | boolean | undefined)",
                        value: input.cache
                    })),
                    (null !== input.lazyCompilation || _report(_exceptionable, {
                        path: _path + ".lazyCompilation",
                        expected: "(LazyCompilationOptions | boolean | undefined)",
                        value: input.lazyCompilation
                    })) && (void 0 === input.lazyCompilation || "boolean" == typeof input.lazyCompilation || ("object" == typeof input.lazyCompilation && null !== input.lazyCompilation && false === Array.isArray(input.lazyCompilation) || _report(_exceptionable, {
                        path: _path + ".lazyCompilation",
                        expected: "(LazyCompilationOptions | boolean | undefined)",
                        value: input.lazyCompilation
                    })) && _vo13(input.lazyCompilation, _path + ".lazyCompilation", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".lazyCompilation",
                        expected: "(LazyCompilationOptions | boolean | undefined)",
                        value: input.lazyCompilation
                    })),
                    void 0 === input.asyncWebAssembly || "boolean" == typeof input.asyncWebAssembly || _report(_exceptionable, {
                        path: _path + ".asyncWebAssembly",
                        expected: "(boolean | undefined)",
                        value: input.asyncWebAssembly
                    }),
                    void 0 === input.outputModule || "boolean" == typeof input.outputModule || _report(_exceptionable, {
                        path: _path + ".outputModule",
                        expected: "(boolean | undefined)",
                        value: input.outputModule
                    }),
                    void 0 === input.topLevelAwait || "boolean" == typeof input.topLevelAwait || _report(_exceptionable, {
                        path: _path + ".topLevelAwait",
                        expected: "(boolean | undefined)",
                        value: input.topLevelAwait
                    }),
                    void 0 === input.css || "boolean" == typeof input.css || _report(_exceptionable, {
                        path: _path + ".css",
                        expected: "(boolean | undefined)",
                        value: input.css
                    }),
                    void 0 === input.layers || "boolean" == typeof input.layers || _report(_exceptionable, {
                        path: _path + ".layers",
                        expected: "(boolean | undefined)",
                        value: input.layers
                    }),
                    (null !== input.incremental || _report(_exceptionable, {
                        path: _path + ".incremental",
                        expected: "(\"advance\" | \"advance-silent\" | \"none\" | \"safe\" | Incremental | boolean | undefined)",
                        value: input.incremental
                    })) && (void 0 === input.incremental || "none" === input.incremental || "safe" === input.incremental || "advance" === input.incremental || "advance-silent" === input.incremental || "boolean" == typeof input.incremental || ("object" == typeof input.incremental && null !== input.incremental && false === Array.isArray(input.incremental) || _report(_exceptionable, {
                        path: _path + ".incremental",
                        expected: "(\"advance\" | \"advance-silent\" | \"none\" | \"safe\" | Incremental | boolean | undefined)",
                        value: input.incremental
                    })) && _vo101(input.incremental, _path + ".incremental", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".incremental",
                        expected: "(\"advance\" | \"advance-silent\" | \"none\" | \"safe\" | Incremental | boolean | undefined)",
                        value: input.incremental
                    })),
                    void 0 === input.parallelCodeSplitting || "boolean" == typeof input.parallelCodeSplitting || _report(_exceptionable, {
                        path: _path + ".parallelCodeSplitting",
                        expected: "(boolean | undefined)",
                        value: input.parallelCodeSplitting
                    }),
                    void 0 === input.futureDefaults || "boolean" == typeof input.futureDefaults || _report(_exceptionable, {
                        path: _path + ".futureDefaults",
                        expected: "(boolean | undefined)",
                        value: input.futureDefaults
                    }),
                    void 0 === input.rspackFuture || ("object" == typeof input.rspackFuture && null !== input.rspackFuture && false === Array.isArray(input.rspackFuture) || _report(_exceptionable, {
                        path: _path + ".rspackFuture",
                        expected: "(RspackFutureOptions | undefined)",
                        value: input.rspackFuture
                    })) && _vo102(input.rspackFuture, _path + ".rspackFuture", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".rspackFuture",
                        expected: "(RspackFutureOptions | undefined)",
                        value: input.rspackFuture
                    }),
                    void 0 === input.buildHttp || ("object" == typeof input.buildHttp && null !== input.buildHttp || _report(_exceptionable, {
                        path: _path + ".buildHttp",
                        expected: "(HttpUriPluginOptions | undefined)",
                        value: input.buildHttp
                    })) && _vo104(input.buildHttp, _path + ".buildHttp", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".buildHttp",
                        expected: "(HttpUriPluginOptions | undefined)",
                        value: input.buildHttp
                    }),
                    void 0 === input.parallelLoader || "boolean" == typeof input.parallelLoader || _report(_exceptionable, {
                        path: _path + ".parallelLoader",
                        expected: "(boolean | undefined)",
                        value: input.parallelLoader
                    }),
                    (null !== input.useInputFileSystem || _report(_exceptionable, {
                        path: _path + ".useInputFileSystem",
                        expected: "(Array<RegExp> | false | undefined)",
                        value: input.useInputFileSystem
                    })) && (void 0 === input.useInputFileSystem || false === input.useInputFileSystem || (Array.isArray(input.useInputFileSystem) || _report(_exceptionable, {
                        path: _path + ".useInputFileSystem",
                        expected: "(Array<RegExp> | false | undefined)",
                        value: input.useInputFileSystem
                    })) && input.useInputFileSystem.map((elem, _index438)=>elem instanceof RegExp || _report(_exceptionable, {
                            path: _path + ".useInputFileSystem[" + _index438 + "]",
                            expected: "RegExp",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".useInputFileSystem",
                        expected: "(Array<RegExp> | false | undefined)",
                        value: input.useInputFileSystem
                    })),
                    void 0 === input.nativeWatcher || "boolean" == typeof input.nativeWatcher || _report(_exceptionable, {
                        path: _path + ".nativeWatcher",
                        expected: "(boolean | undefined)",
                        value: input.nativeWatcher
                    }),
                    void 0 === input.inlineConst || "boolean" == typeof input.inlineConst || _report(_exceptionable, {
                        path: _path + ".inlineConst",
                        expected: "(boolean | undefined)",
                        value: input.inlineConst
                    }),
                    void 0 === input.inlineEnum || "boolean" == typeof input.inlineEnum || _report(_exceptionable, {
                        path: _path + ".inlineEnum",
                        expected: "(boolean | undefined)",
                        value: input.inlineEnum
                    }),
                    void 0 === input.typeReexportsPresence || "boolean" == typeof input.typeReexportsPresence || _report(_exceptionable, {
                        path: _path + ".typeReexportsPresence",
                        expected: "(boolean | undefined)",
                        value: input.typeReexportsPresence
                    }),
                    void 0 === input.lazyBarrel || "boolean" == typeof input.lazyBarrel || _report(_exceptionable, {
                        path: _path + ".lazyBarrel",
                        expected: "(boolean | undefined)",
                        value: input.lazyBarrel
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "cache",
                            "lazyCompilation",
                            "asyncWebAssembly",
                            "outputModule",
                            "topLevelAwait",
                            "css",
                            "layers",
                            "incremental",
                            "parallelCodeSplitting",
                            "futureDefaults",
                            "rspackFuture",
                            "buildHttp",
                            "parallelLoader",
                            "useInputFileSystem",
                            "nativeWatcher",
                            "inlineConst",
                            "inlineEnum",
                            "typeReexportsPresence",
                            "lazyBarrel"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo97 = (input, _path, _exceptionable = true)=>[
                    "memory" === input.type || _report(_exceptionable, {
                        path: _path + ".type",
                        expected: "\"memory\"",
                        value: input.type
                    }),
                    1 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "type"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo98 = (input, _path, _exceptionable = true)=>[
                    "persistent" === input.type || _report(_exceptionable, {
                        path: _path + ".type",
                        expected: "\"persistent\"",
                        value: input.type
                    }),
                    void 0 === input.buildDependencies || (Array.isArray(input.buildDependencies) || _report(_exceptionable, {
                        path: _path + ".buildDependencies",
                        expected: "(Array<string> | undefined)",
                        value: input.buildDependencies
                    })) && input.buildDependencies.map((elem, _index439)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".buildDependencies[" + _index439 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".buildDependencies",
                        expected: "(Array<string> | undefined)",
                        value: input.buildDependencies
                    }),
                    void 0 === input.version || "string" == typeof input.version || _report(_exceptionable, {
                        path: _path + ".version",
                        expected: "(string | undefined)",
                        value: input.version
                    }),
                    void 0 === input.snapshot || ("object" == typeof input.snapshot && null !== input.snapshot && false === Array.isArray(input.snapshot) || _report(_exceptionable, {
                        path: _path + ".snapshot",
                        expected: "(__type.o23 | undefined)",
                        value: input.snapshot
                    })) && _vo99(input.snapshot, _path + ".snapshot", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".snapshot",
                        expected: "(__type.o23 | undefined)",
                        value: input.snapshot
                    }),
                    void 0 === input.storage || ("object" == typeof input.storage && null !== input.storage || _report(_exceptionable, {
                        path: _path + ".storage",
                        expected: "(__type.o24 | undefined)",
                        value: input.storage
                    })) && _vo100(input.storage, _path + ".storage", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".storage",
                        expected: "(__type.o24 | undefined)",
                        value: input.storage
                    }),
                    1 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "type",
                            "buildDependencies",
                            "version",
                            "snapshot",
                            "storage"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo99 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.immutablePaths || (Array.isArray(input.immutablePaths) || _report(_exceptionable, {
                        path: _path + ".immutablePaths",
                        expected: "(Array<string | RegExp> | undefined)",
                        value: input.immutablePaths
                    })) && input.immutablePaths.map((elem, _index440)=>(null !== elem || _report(_exceptionable, {
                            path: _path + ".immutablePaths[" + _index440 + "]",
                            expected: "(RegExp | string)",
                            value: elem
                        })) && (void 0 !== elem || _report(_exceptionable, {
                            path: _path + ".immutablePaths[" + _index440 + "]",
                            expected: "(RegExp | string)",
                            value: elem
                        })) && ("string" == typeof elem || elem instanceof RegExp || _report(_exceptionable, {
                            path: _path + ".immutablePaths[" + _index440 + "]",
                            expected: "(RegExp | string)",
                            value: elem
                        }))).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".immutablePaths",
                        expected: "(Array<string | RegExp> | undefined)",
                        value: input.immutablePaths
                    }),
                    void 0 === input.unmanagedPaths || (Array.isArray(input.unmanagedPaths) || _report(_exceptionable, {
                        path: _path + ".unmanagedPaths",
                        expected: "(Array<string | RegExp> | undefined)",
                        value: input.unmanagedPaths
                    })) && input.unmanagedPaths.map((elem, _index441)=>(null !== elem || _report(_exceptionable, {
                            path: _path + ".unmanagedPaths[" + _index441 + "]",
                            expected: "(RegExp | string)",
                            value: elem
                        })) && (void 0 !== elem || _report(_exceptionable, {
                            path: _path + ".unmanagedPaths[" + _index441 + "]",
                            expected: "(RegExp | string)",
                            value: elem
                        })) && ("string" == typeof elem || elem instanceof RegExp || _report(_exceptionable, {
                            path: _path + ".unmanagedPaths[" + _index441 + "]",
                            expected: "(RegExp | string)",
                            value: elem
                        }))).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".unmanagedPaths",
                        expected: "(Array<string | RegExp> | undefined)",
                        value: input.unmanagedPaths
                    }),
                    void 0 === input.managedPaths || (Array.isArray(input.managedPaths) || _report(_exceptionable, {
                        path: _path + ".managedPaths",
                        expected: "(Array<string | RegExp> | undefined)",
                        value: input.managedPaths
                    })) && input.managedPaths.map((elem, _index442)=>(null !== elem || _report(_exceptionable, {
                            path: _path + ".managedPaths[" + _index442 + "]",
                            expected: "(RegExp | string)",
                            value: elem
                        })) && (void 0 !== elem || _report(_exceptionable, {
                            path: _path + ".managedPaths[" + _index442 + "]",
                            expected: "(RegExp | string)",
                            value: elem
                        })) && ("string" == typeof elem || elem instanceof RegExp || _report(_exceptionable, {
                            path: _path + ".managedPaths[" + _index442 + "]",
                            expected: "(RegExp | string)",
                            value: elem
                        }))).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".managedPaths",
                        expected: "(Array<string | RegExp> | undefined)",
                        value: input.managedPaths
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "immutablePaths",
                            "unmanagedPaths",
                            "managedPaths"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo100 = (input, _path, _exceptionable = true)=>[
                    "filesystem" === input.type || _report(_exceptionable, {
                        path: _path + ".type",
                        expected: "\"filesystem\"",
                        value: input.type
                    }),
                    void 0 === input.directory || "string" == typeof input.directory || _report(_exceptionable, {
                        path: _path + ".directory",
                        expected: "(string | undefined)",
                        value: input.directory
                    }),
                    1 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "type",
                            "directory"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo101 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.silent || "boolean" == typeof input.silent || _report(_exceptionable, {
                        path: _path + ".silent",
                        expected: "(boolean | undefined)",
                        value: input.silent
                    }),
                    void 0 === input.make || "boolean" == typeof input.make || _report(_exceptionable, {
                        path: _path + ".make",
                        expected: "(boolean | undefined)",
                        value: input.make
                    }),
                    void 0 === input.inferAsyncModules || "boolean" == typeof input.inferAsyncModules || _report(_exceptionable, {
                        path: _path + ".inferAsyncModules",
                        expected: "(boolean | undefined)",
                        value: input.inferAsyncModules
                    }),
                    void 0 === input.providedExports || "boolean" == typeof input.providedExports || _report(_exceptionable, {
                        path: _path + ".providedExports",
                        expected: "(boolean | undefined)",
                        value: input.providedExports
                    }),
                    void 0 === input.dependenciesDiagnostics || "boolean" == typeof input.dependenciesDiagnostics || _report(_exceptionable, {
                        path: _path + ".dependenciesDiagnostics",
                        expected: "(boolean | undefined)",
                        value: input.dependenciesDiagnostics
                    }),
                    void 0 === input.sideEffects || "boolean" == typeof input.sideEffects || _report(_exceptionable, {
                        path: _path + ".sideEffects",
                        expected: "(boolean | undefined)",
                        value: input.sideEffects
                    }),
                    void 0 === input.buildChunkGraph || "boolean" == typeof input.buildChunkGraph || _report(_exceptionable, {
                        path: _path + ".buildChunkGraph",
                        expected: "(boolean | undefined)",
                        value: input.buildChunkGraph
                    }),
                    void 0 === input.moduleIds || "boolean" == typeof input.moduleIds || _report(_exceptionable, {
                        path: _path + ".moduleIds",
                        expected: "(boolean | undefined)",
                        value: input.moduleIds
                    }),
                    void 0 === input.chunkIds || "boolean" == typeof input.chunkIds || _report(_exceptionable, {
                        path: _path + ".chunkIds",
                        expected: "(boolean | undefined)",
                        value: input.chunkIds
                    }),
                    void 0 === input.modulesHashes || "boolean" == typeof input.modulesHashes || _report(_exceptionable, {
                        path: _path + ".modulesHashes",
                        expected: "(boolean | undefined)",
                        value: input.modulesHashes
                    }),
                    void 0 === input.modulesCodegen || "boolean" == typeof input.modulesCodegen || _report(_exceptionable, {
                        path: _path + ".modulesCodegen",
                        expected: "(boolean | undefined)",
                        value: input.modulesCodegen
                    }),
                    void 0 === input.modulesRuntimeRequirements || "boolean" == typeof input.modulesRuntimeRequirements || _report(_exceptionable, {
                        path: _path + ".modulesRuntimeRequirements",
                        expected: "(boolean | undefined)",
                        value: input.modulesRuntimeRequirements
                    }),
                    void 0 === input.chunksRuntimeRequirements || "boolean" == typeof input.chunksRuntimeRequirements || _report(_exceptionable, {
                        path: _path + ".chunksRuntimeRequirements",
                        expected: "(boolean | undefined)",
                        value: input.chunksRuntimeRequirements
                    }),
                    void 0 === input.chunksHashes || "boolean" == typeof input.chunksHashes || _report(_exceptionable, {
                        path: _path + ".chunksHashes",
                        expected: "(boolean | undefined)",
                        value: input.chunksHashes
                    }),
                    void 0 === input.chunksRender || "boolean" == typeof input.chunksRender || _report(_exceptionable, {
                        path: _path + ".chunksRender",
                        expected: "(boolean | undefined)",
                        value: input.chunksRender
                    }),
                    void 0 === input.emitAssets || "boolean" == typeof input.emitAssets || _report(_exceptionable, {
                        path: _path + ".emitAssets",
                        expected: "(boolean | undefined)",
                        value: input.emitAssets
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "silent",
                            "make",
                            "inferAsyncModules",
                            "providedExports",
                            "dependenciesDiagnostics",
                            "sideEffects",
                            "buildChunkGraph",
                            "moduleIds",
                            "chunkIds",
                            "modulesHashes",
                            "modulesCodegen",
                            "modulesRuntimeRequirements",
                            "chunksRuntimeRequirements",
                            "chunksHashes",
                            "chunksRender",
                            "emitAssets"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo102 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.bundlerInfo || ("object" == typeof input.bundlerInfo && null !== input.bundlerInfo && false === Array.isArray(input.bundlerInfo) || _report(_exceptionable, {
                        path: _path + ".bundlerInfo",
                        expected: "(__type.o25 | undefined)",
                        value: input.bundlerInfo
                    })) && _vo103(input.bundlerInfo, _path + ".bundlerInfo", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".bundlerInfo",
                        expected: "(__type.o25 | undefined)",
                        value: input.bundlerInfo
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "bundlerInfo"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo103 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.version || "string" == typeof input.version || _report(_exceptionable, {
                        path: _path + ".version",
                        expected: "(string | undefined)",
                        value: input.version
                    }),
                    void 0 === input.bundler || "string" == typeof input.bundler || _report(_exceptionable, {
                        path: _path + ".bundler",
                        expected: "(string | undefined)",
                        value: input.bundler
                    }),
                    (null !== input.force || _report(_exceptionable, {
                        path: _path + ".force",
                        expected: "(Array<\"version\" | \"uniqueId\"> | boolean | undefined)",
                        value: input.force
                    })) && (void 0 === input.force || "boolean" == typeof input.force || (Array.isArray(input.force) || _report(_exceptionable, {
                        path: _path + ".force",
                        expected: "(Array<\"version\" | \"uniqueId\"> | boolean | undefined)",
                        value: input.force
                    })) && input.force.map((elem, _index443)=>"version" === elem || "uniqueId" === elem || _report(_exceptionable, {
                            path: _path + ".force[" + _index443 + "]",
                            expected: "(\"uniqueId\" | \"version\")",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".force",
                        expected: "(Array<\"version\" | \"uniqueId\"> | boolean | undefined)",
                        value: input.force
                    })),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "version",
                            "bundler",
                            "force"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo104 = (input, _path, _exceptionable = true)=>[
                    (Array.isArray(input.allowedUris) || _report(_exceptionable, {
                        path: _path + ".allowedUris",
                        expected: "HttpUriPluginOptionsAllowedUris",
                        value: input.allowedUris
                    })) && input.allowedUris.map((elem, _index444)=>(null !== elem || _report(_exceptionable, {
                            path: _path + ".allowedUris[" + _index444 + "]",
                            expected: "(RegExp | string)",
                            value: elem
                        })) && (void 0 !== elem || _report(_exceptionable, {
                            path: _path + ".allowedUris[" + _index444 + "]",
                            expected: "(RegExp | string)",
                            value: elem
                        })) && ("string" == typeof elem || elem instanceof RegExp || _report(_exceptionable, {
                            path: _path + ".allowedUris[" + _index444 + "]",
                            expected: "(RegExp | string)",
                            value: elem
                        }))).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".allowedUris",
                        expected: "HttpUriPluginOptionsAllowedUris",
                        value: input.allowedUris
                    }),
                    void 0 === input.lockfileLocation || "string" == typeof input.lockfileLocation || _report(_exceptionable, {
                        path: _path + ".lockfileLocation",
                        expected: "(string | undefined)",
                        value: input.lockfileLocation
                    }),
                    void 0 === input.cacheLocation || false === input.cacheLocation || "string" == typeof input.cacheLocation || _report(_exceptionable, {
                        path: _path + ".cacheLocation",
                        expected: "(false | string | undefined)",
                        value: input.cacheLocation
                    }),
                    void 0 === input.upgrade || "boolean" == typeof input.upgrade || _report(_exceptionable, {
                        path: _path + ".upgrade",
                        expected: "(boolean | undefined)",
                        value: input.upgrade
                    }),
                    void 0 === input.httpClient || true,
                    1 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "allowedUris",
                            "lockfileLocation",
                            "cacheLocation",
                            "upgrade",
                            "httpClient"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo105 = (input, _path, _exceptionable = true)=>[
                    false === _exceptionable || Object.keys(input).map((key)=>{
                        const value = input[key];
                        if (void 0 === value) return true;
                        return (null !== value || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(Array<string> | ExternalItemObjectValue | ExternalItemUmdValue | boolean | string)",
                            value: value
                        })) && (void 0 !== value || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(Array<string> | ExternalItemObjectValue | ExternalItemUmdValue | boolean | string)",
                            value: value
                        })) && ("string" == typeof value || "boolean" == typeof value || Array.isArray(value) && value.map((elem, _index445)=>"string" == typeof elem || _report(_exceptionable, {
                                path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key) + "[" + _index445 + "]",
                                expected: "string",
                                value: elem
                            })).every((flag)=>flag) || "object" == typeof value && null !== value && false === Array.isArray(value) && _vu10(value, _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key), _exceptionable) || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(Array<string> | ExternalItemObjectValue | ExternalItemUmdValue | boolean | string)",
                            value: value
                        }) || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(Array<string> | ExternalItemObjectValue | ExternalItemUmdValue | boolean | string)",
                            value: value
                        }));
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo106 = (input, _path, _exceptionable = true)=>[
                    (null !== input.root || _report(_exceptionable, {
                        path: _path + ".root",
                        expected: "(Array<string> | string)",
                        value: input.root
                    })) && (void 0 !== input.root || _report(_exceptionable, {
                        path: _path + ".root",
                        expected: "(Array<string> | string)",
                        value: input.root
                    })) && ("string" == typeof input.root || (Array.isArray(input.root) || _report(_exceptionable, {
                        path: _path + ".root",
                        expected: "(Array<string> | string)",
                        value: input.root
                    })) && input.root.map((elem, _index446)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".root[" + _index446 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".root",
                        expected: "(Array<string> | string)",
                        value: input.root
                    })),
                    (null !== input.commonjs || _report(_exceptionable, {
                        path: _path + ".commonjs",
                        expected: "(Array<string> | string)",
                        value: input.commonjs
                    })) && (void 0 !== input.commonjs || _report(_exceptionable, {
                        path: _path + ".commonjs",
                        expected: "(Array<string> | string)",
                        value: input.commonjs
                    })) && ("string" == typeof input.commonjs || (Array.isArray(input.commonjs) || _report(_exceptionable, {
                        path: _path + ".commonjs",
                        expected: "(Array<string> | string)",
                        value: input.commonjs
                    })) && input.commonjs.map((elem, _index447)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".commonjs[" + _index447 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".commonjs",
                        expected: "(Array<string> | string)",
                        value: input.commonjs
                    })),
                    (null !== input.commonjs2 || _report(_exceptionable, {
                        path: _path + ".commonjs2",
                        expected: "(Array<string> | string)",
                        value: input.commonjs2
                    })) && (void 0 !== input.commonjs2 || _report(_exceptionable, {
                        path: _path + ".commonjs2",
                        expected: "(Array<string> | string)",
                        value: input.commonjs2
                    })) && ("string" == typeof input.commonjs2 || (Array.isArray(input.commonjs2) || _report(_exceptionable, {
                        path: _path + ".commonjs2",
                        expected: "(Array<string> | string)",
                        value: input.commonjs2
                    })) && input.commonjs2.map((elem, _index448)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".commonjs2[" + _index448 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".commonjs2",
                        expected: "(Array<string> | string)",
                        value: input.commonjs2
                    })),
                    (null !== input.amd || _report(_exceptionable, {
                        path: _path + ".amd",
                        expected: "(Array<string> | string)",
                        value: input.amd
                    })) && (void 0 !== input.amd || _report(_exceptionable, {
                        path: _path + ".amd",
                        expected: "(Array<string> | string)",
                        value: input.amd
                    })) && ("string" == typeof input.amd || (Array.isArray(input.amd) || _report(_exceptionable, {
                        path: _path + ".amd",
                        expected: "(Array<string> | string)",
                        value: input.amd
                    })) && input.amd.map((elem, _index449)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".amd[" + _index449 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".amd",
                        expected: "(Array<string> | string)",
                        value: input.amd
                    })),
                    4 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "root",
                            "commonjs",
                            "commonjs2",
                            "amd"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo107 = (input, _path, _exceptionable = true)=>[
                    false === _exceptionable || Object.keys(input).map((key)=>{
                        const value = input[key];
                        if (void 0 === value) return true;
                        return (null !== value || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(Array<string> | string)",
                            value: value
                        })) && (void 0 !== value || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(Array<string> | string)",
                            value: value
                        })) && ("string" == typeof value || (Array.isArray(value) || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(Array<string> | string)",
                            value: value
                        })) && value.map((elem, _index450)=>"string" == typeof elem || _report(_exceptionable, {
                                path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key) + "[" + _index450 + "]",
                                expected: "string",
                                value: elem
                            })).every((flag)=>flag) || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(Array<string> | string)",
                            value: value
                        }));
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo108 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.node || "boolean" == typeof input.node || _report(_exceptionable, {
                        path: _path + ".node",
                        expected: "(boolean | undefined)",
                        value: input.node
                    }),
                    void 0 === input.web || "boolean" == typeof input.web || _report(_exceptionable, {
                        path: _path + ".web",
                        expected: "(boolean | undefined)",
                        value: input.web
                    }),
                    void 0 === input.webAsync || "boolean" == typeof input.webAsync || _report(_exceptionable, {
                        path: _path + ".webAsync",
                        expected: "(boolean | undefined)",
                        value: input.webAsync
                    }),
                    void 0 === input.electron || "boolean" == typeof input.electron || _report(_exceptionable, {
                        path: _path + ".electron",
                        expected: "(boolean | undefined)",
                        value: input.electron
                    }),
                    void 0 === input.electronMain || "boolean" == typeof input.electronMain || _report(_exceptionable, {
                        path: _path + ".electronMain",
                        expected: "(boolean | undefined)",
                        value: input.electronMain
                    }),
                    void 0 === input.electronPreload || "boolean" == typeof input.electronPreload || _report(_exceptionable, {
                        path: _path + ".electronPreload",
                        expected: "(boolean | undefined)",
                        value: input.electronPreload
                    }),
                    void 0 === input.electronRenderer || "boolean" == typeof input.electronRenderer || _report(_exceptionable, {
                        path: _path + ".electronRenderer",
                        expected: "(boolean | undefined)",
                        value: input.electronRenderer
                    }),
                    void 0 === input.nwjs || "boolean" == typeof input.nwjs || _report(_exceptionable, {
                        path: _path + ".nwjs",
                        expected: "(boolean | undefined)",
                        value: input.nwjs
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "node",
                            "web",
                            "webAsync",
                            "electron",
                            "electronMain",
                            "electronPreload",
                            "electronRenderer",
                            "nwjs"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo109 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.appendOnly || "boolean" == typeof input.appendOnly || _report(_exceptionable, {
                        path: _path + ".appendOnly",
                        expected: "(boolean | undefined)",
                        value: input.appendOnly
                    }),
                    void 0 === input.colors || "boolean" == typeof input.colors || _report(_exceptionable, {
                        path: _path + ".colors",
                        expected: "(boolean | undefined)",
                        value: input.colors
                    }),
                    void 0 === input.console || ("object" == typeof input.console && null !== input.console || _report(_exceptionable, {
                        path: _path + ".console",
                        expected: "(\"node:console\".global.Console | undefined)",
                        value: input.console
                    })) && _vo110(input.console, _path + ".console", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".console",
                        expected: "(\"node:console\".global.Console | undefined)",
                        value: input.console
                    }),
                    (null !== input.debug || _report(_exceptionable, {
                        path: _path + ".debug",
                        expected: "(Array<FilterItemTypes> | RegExp | boolean | string | undefined)",
                        value: input.debug
                    })) && (void 0 === input.debug || "function" == typeof input.debug || "string" == typeof input.debug || "boolean" == typeof input.debug || input.debug instanceof RegExp || (Array.isArray(input.debug) || _report(_exceptionable, {
                        path: _path + ".debug",
                        expected: "(Array<FilterItemTypes> | RegExp | boolean | string | undefined)",
                        value: input.debug
                    })) && input.debug.map((elem, _index451)=>(null !== elem || _report(_exceptionable, {
                            path: _path + ".debug[" + _index451 + "]",
                            expected: "(RegExp | string)",
                            value: elem
                        })) && (void 0 !== elem || _report(_exceptionable, {
                            path: _path + ".debug[" + _index451 + "]",
                            expected: "(RegExp | string)",
                            value: elem
                        })) && ("function" == typeof elem || "string" == typeof elem || elem instanceof RegExp || _report(_exceptionable, {
                            path: _path + ".debug[" + _index451 + "]",
                            expected: "(RegExp | string)",
                            value: elem
                        }))).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".debug",
                        expected: "(Array<FilterItemTypes> | RegExp | boolean | string | undefined)",
                        value: input.debug
                    })),
                    void 0 === input.level || "none" === input.level || "verbose" === input.level || "error" === input.level || "warn" === input.level || "info" === input.level || "log" === input.level || _report(_exceptionable, {
                        path: _path + ".level",
                        expected: "(\"error\" | \"info\" | \"log\" | \"none\" | \"verbose\" | \"warn\" | undefined)",
                        value: input.level
                    }),
                    void 0 === input.stream || ("object" == typeof input.stream && null !== input.stream || _report(_exceptionable, {
                        path: _path + ".stream",
                        expected: "(global.NodeJS.WritableStream | undefined)",
                        value: input.stream
                    })) && _vo112(input.stream, _path + ".stream", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".stream",
                        expected: "(global.NodeJS.WritableStream | undefined)",
                        value: input.stream
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "appendOnly",
                            "colors",
                            "console",
                            "debug",
                            "level",
                            "stream"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo110 = (input, _path, _exceptionable = true)=>[
                    ("object" == typeof input.Console && null !== input.Console || _report(_exceptionable, {
                        path: _path + ".Console",
                        expected: "\"node:console\".global.console.ConsoleConstructor",
                        value: input.Console
                    })) && _vo111(input.Console, _path + ".Console", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".Console",
                        expected: "\"node:console\".global.console.ConsoleConstructor",
                        value: input.Console
                    }),
                    1 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "Console"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo111 = (input, _path, _exceptionable = true)=>[
                    ("object" == typeof input.prototype && null !== input.prototype || _report(_exceptionable, {
                        path: _path + ".prototype",
                        expected: "\"node:console\".global.Console",
                        value: input.prototype
                    })) && _vo110(input.prototype, _path + ".prototype", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".prototype",
                        expected: "\"node:console\".global.Console",
                        value: input.prototype
                    }),
                    "number" == typeof input.length || _report(_exceptionable, {
                        path: _path + ".length",
                        expected: "number",
                        value: input.length
                    }),
                    true,
                    ("object" == typeof input.caller && null !== input.caller || _report(_exceptionable, {
                        path: _path + ".caller",
                        expected: "Function",
                        value: input.caller
                    })) && _vo33(input.caller, _path + ".caller", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".caller",
                        expected: "Function",
                        value: input.caller
                    }),
                    "string" == typeof input.name || _report(_exceptionable, {
                        path: _path + ".name",
                        expected: "string",
                        value: input.name
                    }),
                    5 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "prototype",
                            "length",
                            "arguments",
                            "caller",
                            "name"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo112 = (input, _path, _exceptionable = true)=>[
                    "boolean" == typeof input.writable || _report(_exceptionable, {
                        path: _path + ".writable",
                        expected: "boolean",
                        value: input.writable
                    }),
                    1 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "writable"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo113 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.__dirname || "warn-mock" === input.__dirname || "mock" === input.__dirname || "eval-only" === input.__dirname || "node-module" === input.__dirname || "boolean" == typeof input.__dirname || _report(_exceptionable, {
                        path: _path + ".__dirname",
                        expected: "(\"eval-only\" | \"mock\" | \"node-module\" | \"warn-mock\" | boolean | undefined)",
                        value: input.__dirname
                    }),
                    void 0 === input.__filename || "warn-mock" === input.__filename || "mock" === input.__filename || "eval-only" === input.__filename || "node-module" === input.__filename || "boolean" == typeof input.__filename || _report(_exceptionable, {
                        path: _path + ".__filename",
                        expected: "(\"eval-only\" | \"mock\" | \"node-module\" | \"warn-mock\" | boolean | undefined)",
                        value: input.__filename
                    }),
                    void 0 === input.global || "warn" === input.global || "boolean" == typeof input.global || _report(_exceptionable, {
                        path: _path + ".global",
                        expected: "(\"warn\" | boolean | undefined)",
                        value: input.global
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "__dirname",
                            "__filename",
                            "global"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo114 = (input, _path, _exceptionable = true)=>[
                    false === _exceptionable || Object.keys(input).map((key)=>{
                        input[key];
                        return true;
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo115 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.file || input.file instanceof RegExp || _report(_exceptionable, {
                        path: _path + ".file",
                        expected: "(RegExp | undefined)",
                        value: input.file
                    }),
                    void 0 === input.message || input.message instanceof RegExp || _report(_exceptionable, {
                        path: _path + ".message",
                        expected: "(RegExp | undefined)",
                        value: input.message
                    }),
                    void 0 === input["module"] || input["module"] instanceof RegExp || _report(_exceptionable, {
                        path: _path + "[\"module\"]",
                        expected: "(RegExp | undefined)",
                        value: input["module"]
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "file",
                            "message",
                            "module"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo116 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.aggregateTimeout || "number" == typeof input.aggregateTimeout || _report(_exceptionable, {
                        path: _path + ".aggregateTimeout",
                        expected: "(number | undefined)",
                        value: input.aggregateTimeout
                    }),
                    void 0 === input.followSymlinks || "boolean" == typeof input.followSymlinks || _report(_exceptionable, {
                        path: _path + ".followSymlinks",
                        expected: "(boolean | undefined)",
                        value: input.followSymlinks
                    }),
                    (null !== input.ignored || _report(_exceptionable, {
                        path: _path + ".ignored",
                        expected: "(Array<string> | RegExp | string | undefined)",
                        value: input.ignored
                    })) && (void 0 === input.ignored || "string" == typeof input.ignored || input.ignored instanceof RegExp || (Array.isArray(input.ignored) || _report(_exceptionable, {
                        path: _path + ".ignored",
                        expected: "(Array<string> | RegExp | string | undefined)",
                        value: input.ignored
                    })) && input.ignored.map((elem, _index452)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".ignored[" + _index452 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".ignored",
                        expected: "(Array<string> | RegExp | string | undefined)",
                        value: input.ignored
                    })),
                    void 0 === input.poll || "number" == typeof input.poll || "boolean" == typeof input.poll || _report(_exceptionable, {
                        path: _path + ".poll",
                        expected: "(boolean | number | undefined)",
                        value: input.poll
                    }),
                    void 0 === input.stdin || "boolean" == typeof input.stdin || _report(_exceptionable, {
                        path: _path + ".stdin",
                        expected: "(boolean | undefined)",
                        value: input.stdin
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "aggregateTimeout",
                            "followSymlinks",
                            "ignored",
                            "poll",
                            "stdin"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo117 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.all || "boolean" == typeof input.all || _report(_exceptionable, {
                        path: _path + ".all",
                        expected: "(boolean | undefined)",
                        value: input.all
                    }),
                    void 0 === input.preset || "none" === input.preset || "verbose" === input.preset || "normal" === input.preset || "errors-only" === input.preset || "errors-warnings" === input.preset || "minimal" === input.preset || "detailed" === input.preset || "summary" === input.preset || "boolean" == typeof input.preset || _report(_exceptionable, {
                        path: _path + ".preset",
                        expected: "(\"detailed\" | \"errors-only\" | \"errors-warnings\" | \"minimal\" | \"none\" | \"normal\" | \"summary\" | \"verbose\" | boolean | undefined)",
                        value: input.preset
                    }),
                    void 0 === input.assets || "boolean" == typeof input.assets || _report(_exceptionable, {
                        path: _path + ".assets",
                        expected: "(boolean | undefined)",
                        value: input.assets
                    }),
                    void 0 === input.chunks || "boolean" == typeof input.chunks || _report(_exceptionable, {
                        path: _path + ".chunks",
                        expected: "(boolean | undefined)",
                        value: input.chunks
                    }),
                    void 0 === input.modules || "boolean" == typeof input.modules || _report(_exceptionable, {
                        path: _path + ".modules",
                        expected: "(boolean | undefined)",
                        value: input.modules
                    }),
                    void 0 === input.entrypoints || "auto" === input.entrypoints || "boolean" == typeof input.entrypoints || _report(_exceptionable, {
                        path: _path + ".entrypoints",
                        expected: "(\"auto\" | boolean | undefined)",
                        value: input.entrypoints
                    }),
                    void 0 === input.chunkGroups || "boolean" == typeof input.chunkGroups || _report(_exceptionable, {
                        path: _path + ".chunkGroups",
                        expected: "(boolean | undefined)",
                        value: input.chunkGroups
                    }),
                    void 0 === input.warnings || "boolean" == typeof input.warnings || _report(_exceptionable, {
                        path: _path + ".warnings",
                        expected: "(boolean | undefined)",
                        value: input.warnings
                    }),
                    void 0 === input.warningsCount || "boolean" == typeof input.warningsCount || _report(_exceptionable, {
                        path: _path + ".warningsCount",
                        expected: "(boolean | undefined)",
                        value: input.warningsCount
                    }),
                    void 0 === input.errors || "boolean" == typeof input.errors || _report(_exceptionable, {
                        path: _path + ".errors",
                        expected: "(boolean | undefined)",
                        value: input.errors
                    }),
                    void 0 === input.errorsCount || "boolean" == typeof input.errorsCount || _report(_exceptionable, {
                        path: _path + ".errorsCount",
                        expected: "(boolean | undefined)",
                        value: input.errorsCount
                    }),
                    void 0 === input.colors || "boolean" == typeof input.colors || _report(_exceptionable, {
                        path: _path + ".colors",
                        expected: "(boolean | undefined)",
                        value: input.colors
                    }),
                    void 0 === input.hash || "boolean" == typeof input.hash || _report(_exceptionable, {
                        path: _path + ".hash",
                        expected: "(boolean | undefined)",
                        value: input.hash
                    }),
                    void 0 === input.version || "boolean" == typeof input.version || _report(_exceptionable, {
                        path: _path + ".version",
                        expected: "(boolean | undefined)",
                        value: input.version
                    }),
                    void 0 === input.reasons || "boolean" == typeof input.reasons || _report(_exceptionable, {
                        path: _path + ".reasons",
                        expected: "(boolean | undefined)",
                        value: input.reasons
                    }),
                    void 0 === input.publicPath || "boolean" == typeof input.publicPath || _report(_exceptionable, {
                        path: _path + ".publicPath",
                        expected: "(boolean | undefined)",
                        value: input.publicPath
                    }),
                    void 0 === input.outputPath || "boolean" == typeof input.outputPath || _report(_exceptionable, {
                        path: _path + ".outputPath",
                        expected: "(boolean | undefined)",
                        value: input.outputPath
                    }),
                    void 0 === input.chunkModules || "boolean" == typeof input.chunkModules || _report(_exceptionable, {
                        path: _path + ".chunkModules",
                        expected: "(boolean | undefined)",
                        value: input.chunkModules
                    }),
                    void 0 === input.chunkRelations || "boolean" == typeof input.chunkRelations || _report(_exceptionable, {
                        path: _path + ".chunkRelations",
                        expected: "(boolean | undefined)",
                        value: input.chunkRelations
                    }),
                    void 0 === input.ids || "boolean" == typeof input.ids || _report(_exceptionable, {
                        path: _path + ".ids",
                        expected: "(boolean | undefined)",
                        value: input.ids
                    }),
                    void 0 === input.timings || "boolean" == typeof input.timings || _report(_exceptionable, {
                        path: _path + ".timings",
                        expected: "(boolean | undefined)",
                        value: input.timings
                    }),
                    void 0 === input.builtAt || "boolean" == typeof input.builtAt || _report(_exceptionable, {
                        path: _path + ".builtAt",
                        expected: "(boolean | undefined)",
                        value: input.builtAt
                    }),
                    void 0 === input.moduleAssets || "boolean" == typeof input.moduleAssets || _report(_exceptionable, {
                        path: _path + ".moduleAssets",
                        expected: "(boolean | undefined)",
                        value: input.moduleAssets
                    }),
                    void 0 === input.nestedModules || "boolean" == typeof input.nestedModules || _report(_exceptionable, {
                        path: _path + ".nestedModules",
                        expected: "(boolean | undefined)",
                        value: input.nestedModules
                    }),
                    void 0 === input.source || "boolean" == typeof input.source || _report(_exceptionable, {
                        path: _path + ".source",
                        expected: "(boolean | undefined)",
                        value: input.source
                    }),
                    void 0 === input.logging || "none" === input.logging || "verbose" === input.logging || "error" === input.logging || "warn" === input.logging || "info" === input.logging || "log" === input.logging || "boolean" == typeof input.logging || _report(_exceptionable, {
                        path: _path + ".logging",
                        expected: "(\"error\" | \"info\" | \"log\" | \"none\" | \"verbose\" | \"warn\" | boolean | undefined)",
                        value: input.logging
                    }),
                    (null !== input.loggingDebug || _report(_exceptionable, {
                        path: _path + ".loggingDebug",
                        expected: "(Array<FilterItemTypes> | RegExp | boolean | string | undefined)",
                        value: input.loggingDebug
                    })) && (void 0 === input.loggingDebug || "function" == typeof input.loggingDebug || "string" == typeof input.loggingDebug || "boolean" == typeof input.loggingDebug || input.loggingDebug instanceof RegExp || (Array.isArray(input.loggingDebug) || _report(_exceptionable, {
                        path: _path + ".loggingDebug",
                        expected: "(Array<FilterItemTypes> | RegExp | boolean | string | undefined)",
                        value: input.loggingDebug
                    })) && input.loggingDebug.map((elem, _index453)=>(null !== elem || _report(_exceptionable, {
                            path: _path + ".loggingDebug[" + _index453 + "]",
                            expected: "(RegExp | string)",
                            value: elem
                        })) && (void 0 !== elem || _report(_exceptionable, {
                            path: _path + ".loggingDebug[" + _index453 + "]",
                            expected: "(RegExp | string)",
                            value: elem
                        })) && ("function" == typeof elem || "string" == typeof elem || elem instanceof RegExp || _report(_exceptionable, {
                            path: _path + ".loggingDebug[" + _index453 + "]",
                            expected: "(RegExp | string)",
                            value: elem
                        }))).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".loggingDebug",
                        expected: "(Array<FilterItemTypes> | RegExp | boolean | string | undefined)",
                        value: input.loggingDebug
                    })),
                    void 0 === input.loggingTrace || "boolean" == typeof input.loggingTrace || _report(_exceptionable, {
                        path: _path + ".loggingTrace",
                        expected: "(boolean | undefined)",
                        value: input.loggingTrace
                    }),
                    void 0 === input.runtimeModules || "boolean" == typeof input.runtimeModules || _report(_exceptionable, {
                        path: _path + ".runtimeModules",
                        expected: "(boolean | undefined)",
                        value: input.runtimeModules
                    }),
                    void 0 === input.children || "boolean" == typeof input.children || _report(_exceptionable, {
                        path: _path + ".children",
                        expected: "(boolean | undefined)",
                        value: input.children
                    }),
                    void 0 === input.usedExports || "boolean" == typeof input.usedExports || _report(_exceptionable, {
                        path: _path + ".usedExports",
                        expected: "(boolean | undefined)",
                        value: input.usedExports
                    }),
                    void 0 === input.providedExports || "boolean" == typeof input.providedExports || _report(_exceptionable, {
                        path: _path + ".providedExports",
                        expected: "(boolean | undefined)",
                        value: input.providedExports
                    }),
                    void 0 === input.optimizationBailout || "boolean" == typeof input.optimizationBailout || _report(_exceptionable, {
                        path: _path + ".optimizationBailout",
                        expected: "(boolean | undefined)",
                        value: input.optimizationBailout
                    }),
                    void 0 === input.groupModulesByType || "boolean" == typeof input.groupModulesByType || _report(_exceptionable, {
                        path: _path + ".groupModulesByType",
                        expected: "(boolean | undefined)",
                        value: input.groupModulesByType
                    }),
                    void 0 === input.groupModulesByCacheStatus || "boolean" == typeof input.groupModulesByCacheStatus || _report(_exceptionable, {
                        path: _path + ".groupModulesByCacheStatus",
                        expected: "(boolean | undefined)",
                        value: input.groupModulesByCacheStatus
                    }),
                    void 0 === input.groupModulesByLayer || "boolean" == typeof input.groupModulesByLayer || _report(_exceptionable, {
                        path: _path + ".groupModulesByLayer",
                        expected: "(boolean | undefined)",
                        value: input.groupModulesByLayer
                    }),
                    void 0 === input.groupModulesByAttributes || "boolean" == typeof input.groupModulesByAttributes || _report(_exceptionable, {
                        path: _path + ".groupModulesByAttributes",
                        expected: "(boolean | undefined)",
                        value: input.groupModulesByAttributes
                    }),
                    void 0 === input.groupModulesByPath || "boolean" == typeof input.groupModulesByPath || _report(_exceptionable, {
                        path: _path + ".groupModulesByPath",
                        expected: "(boolean | undefined)",
                        value: input.groupModulesByPath
                    }),
                    void 0 === input.groupModulesByExtension || "boolean" == typeof input.groupModulesByExtension || _report(_exceptionable, {
                        path: _path + ".groupModulesByExtension",
                        expected: "(boolean | undefined)",
                        value: input.groupModulesByExtension
                    }),
                    void 0 === input.modulesSpace || "number" == typeof input.modulesSpace || _report(_exceptionable, {
                        path: _path + ".modulesSpace",
                        expected: "(number | undefined)",
                        value: input.modulesSpace
                    }),
                    void 0 === input.chunkModulesSpace || "number" == typeof input.chunkModulesSpace || _report(_exceptionable, {
                        path: _path + ".chunkModulesSpace",
                        expected: "(number | undefined)",
                        value: input.chunkModulesSpace
                    }),
                    void 0 === input.nestedModulesSpace || "number" == typeof input.nestedModulesSpace || _report(_exceptionable, {
                        path: _path + ".nestedModulesSpace",
                        expected: "(number | undefined)",
                        value: input.nestedModulesSpace
                    }),
                    void 0 === input.relatedAssets || "boolean" == typeof input.relatedAssets || _report(_exceptionable, {
                        path: _path + ".relatedAssets",
                        expected: "(boolean | undefined)",
                        value: input.relatedAssets
                    }),
                    void 0 === input.groupAssetsByEmitStatus || "boolean" == typeof input.groupAssetsByEmitStatus || _report(_exceptionable, {
                        path: _path + ".groupAssetsByEmitStatus",
                        expected: "(boolean | undefined)",
                        value: input.groupAssetsByEmitStatus
                    }),
                    void 0 === input.groupAssetsByInfo || "boolean" == typeof input.groupAssetsByInfo || _report(_exceptionable, {
                        path: _path + ".groupAssetsByInfo",
                        expected: "(boolean | undefined)",
                        value: input.groupAssetsByInfo
                    }),
                    void 0 === input.groupAssetsByPath || "boolean" == typeof input.groupAssetsByPath || _report(_exceptionable, {
                        path: _path + ".groupAssetsByPath",
                        expected: "(boolean | undefined)",
                        value: input.groupAssetsByPath
                    }),
                    void 0 === input.groupAssetsByExtension || "boolean" == typeof input.groupAssetsByExtension || _report(_exceptionable, {
                        path: _path + ".groupAssetsByExtension",
                        expected: "(boolean | undefined)",
                        value: input.groupAssetsByExtension
                    }),
                    void 0 === input.groupAssetsByChunk || "boolean" == typeof input.groupAssetsByChunk || _report(_exceptionable, {
                        path: _path + ".groupAssetsByChunk",
                        expected: "(boolean | undefined)",
                        value: input.groupAssetsByChunk
                    }),
                    void 0 === input.assetsSpace || "number" == typeof input.assetsSpace || _report(_exceptionable, {
                        path: _path + ".assetsSpace",
                        expected: "(number | undefined)",
                        value: input.assetsSpace
                    }),
                    void 0 === input.orphanModules || "boolean" == typeof input.orphanModules || _report(_exceptionable, {
                        path: _path + ".orphanModules",
                        expected: "(boolean | undefined)",
                        value: input.orphanModules
                    }),
                    (null !== input.excludeModules || _report(_exceptionable, {
                        path: _path + ".excludeModules",
                        expected: "(Array<ModuleFilterItemTypes> | RegExp | boolean | string | undefined)",
                        value: input.excludeModules
                    })) && (void 0 === input.excludeModules || "function" == typeof input.excludeModules || "string" == typeof input.excludeModules || "boolean" == typeof input.excludeModules || input.excludeModules instanceof RegExp || (Array.isArray(input.excludeModules) || _report(_exceptionable, {
                        path: _path + ".excludeModules",
                        expected: "(Array<ModuleFilterItemTypes> | RegExp | boolean | string | undefined)",
                        value: input.excludeModules
                    })) && input.excludeModules.map((elem, _index454)=>(null !== elem || _report(_exceptionable, {
                            path: _path + ".excludeModules[" + _index454 + "]",
                            expected: "(RegExp | string)",
                            value: elem
                        })) && (void 0 !== elem || _report(_exceptionable, {
                            path: _path + ".excludeModules[" + _index454 + "]",
                            expected: "(RegExp | string)",
                            value: elem
                        })) && ("function" == typeof elem || "string" == typeof elem || elem instanceof RegExp || _report(_exceptionable, {
                            path: _path + ".excludeModules[" + _index454 + "]",
                            expected: "(RegExp | string)",
                            value: elem
                        }))).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".excludeModules",
                        expected: "(Array<ModuleFilterItemTypes> | RegExp | boolean | string | undefined)",
                        value: input.excludeModules
                    })),
                    (null !== input.excludeAssets || _report(_exceptionable, {
                        path: _path + ".excludeAssets",
                        expected: "(Array<ModuleFilterItemTypes> | RegExp | boolean | string | undefined)",
                        value: input.excludeAssets
                    })) && (void 0 === input.excludeAssets || "function" == typeof input.excludeAssets || "string" == typeof input.excludeAssets || "boolean" == typeof input.excludeAssets || input.excludeAssets instanceof RegExp || (Array.isArray(input.excludeAssets) || _report(_exceptionable, {
                        path: _path + ".excludeAssets",
                        expected: "(Array<ModuleFilterItemTypes> | RegExp | boolean | string | undefined)",
                        value: input.excludeAssets
                    })) && input.excludeAssets.map((elem, _index455)=>(null !== elem || _report(_exceptionable, {
                            path: _path + ".excludeAssets[" + _index455 + "]",
                            expected: "(RegExp | string)",
                            value: elem
                        })) && (void 0 !== elem || _report(_exceptionable, {
                            path: _path + ".excludeAssets[" + _index455 + "]",
                            expected: "(RegExp | string)",
                            value: elem
                        })) && ("function" == typeof elem || "string" == typeof elem || elem instanceof RegExp || _report(_exceptionable, {
                            path: _path + ".excludeAssets[" + _index455 + "]",
                            expected: "(RegExp | string)",
                            value: elem
                        }))).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".excludeAssets",
                        expected: "(Array<ModuleFilterItemTypes> | RegExp | boolean | string | undefined)",
                        value: input.excludeAssets
                    })),
                    void 0 === input.modulesSort || "string" == typeof input.modulesSort || _report(_exceptionable, {
                        path: _path + ".modulesSort",
                        expected: "(string | undefined)",
                        value: input.modulesSort
                    }),
                    void 0 === input.chunkModulesSort || "string" == typeof input.chunkModulesSort || _report(_exceptionable, {
                        path: _path + ".chunkModulesSort",
                        expected: "(string | undefined)",
                        value: input.chunkModulesSort
                    }),
                    void 0 === input.nestedModulesSort || "string" == typeof input.nestedModulesSort || _report(_exceptionable, {
                        path: _path + ".nestedModulesSort",
                        expected: "(string | undefined)",
                        value: input.nestedModulesSort
                    }),
                    void 0 === input.chunksSort || "string" == typeof input.chunksSort || _report(_exceptionable, {
                        path: _path + ".chunksSort",
                        expected: "(string | undefined)",
                        value: input.chunksSort
                    }),
                    void 0 === input.assetsSort || "string" == typeof input.assetsSort || _report(_exceptionable, {
                        path: _path + ".assetsSort",
                        expected: "(string | undefined)",
                        value: input.assetsSort
                    }),
                    void 0 === input.performance || "boolean" == typeof input.performance || _report(_exceptionable, {
                        path: _path + ".performance",
                        expected: "(boolean | undefined)",
                        value: input.performance
                    }),
                    void 0 === input.env || "boolean" == typeof input.env || _report(_exceptionable, {
                        path: _path + ".env",
                        expected: "(boolean | undefined)",
                        value: input.env
                    }),
                    void 0 === input.chunkGroupAuxiliary || "boolean" == typeof input.chunkGroupAuxiliary || _report(_exceptionable, {
                        path: _path + ".chunkGroupAuxiliary",
                        expected: "(boolean | undefined)",
                        value: input.chunkGroupAuxiliary
                    }),
                    void 0 === input.chunkGroupChildren || "boolean" == typeof input.chunkGroupChildren || _report(_exceptionable, {
                        path: _path + ".chunkGroupChildren",
                        expected: "(boolean | undefined)",
                        value: input.chunkGroupChildren
                    }),
                    void 0 === input.chunkGroupMaxAssets || "number" == typeof input.chunkGroupMaxAssets || _report(_exceptionable, {
                        path: _path + ".chunkGroupMaxAssets",
                        expected: "(number | undefined)",
                        value: input.chunkGroupMaxAssets
                    }),
                    void 0 === input.dependentModules || "boolean" == typeof input.dependentModules || _report(_exceptionable, {
                        path: _path + ".dependentModules",
                        expected: "(boolean | undefined)",
                        value: input.dependentModules
                    }),
                    void 0 === input.chunkOrigins || "boolean" == typeof input.chunkOrigins || _report(_exceptionable, {
                        path: _path + ".chunkOrigins",
                        expected: "(boolean | undefined)",
                        value: input.chunkOrigins
                    }),
                    void 0 === input.runtime || "boolean" == typeof input.runtime || _report(_exceptionable, {
                        path: _path + ".runtime",
                        expected: "(boolean | undefined)",
                        value: input.runtime
                    }),
                    void 0 === input.depth || "boolean" == typeof input.depth || _report(_exceptionable, {
                        path: _path + ".depth",
                        expected: "(boolean | undefined)",
                        value: input.depth
                    }),
                    void 0 === input.reasonsSpace || "number" == typeof input.reasonsSpace || _report(_exceptionable, {
                        path: _path + ".reasonsSpace",
                        expected: "(number | undefined)",
                        value: input.reasonsSpace
                    }),
                    void 0 === input.groupReasonsByOrigin || "boolean" == typeof input.groupReasonsByOrigin || _report(_exceptionable, {
                        path: _path + ".groupReasonsByOrigin",
                        expected: "(boolean | undefined)",
                        value: input.groupReasonsByOrigin
                    }),
                    void 0 === input.errorDetails || "boolean" == typeof input.errorDetails || _report(_exceptionable, {
                        path: _path + ".errorDetails",
                        expected: "(boolean | undefined)",
                        value: input.errorDetails
                    }),
                    void 0 === input.errorStack || "boolean" == typeof input.errorStack || _report(_exceptionable, {
                        path: _path + ".errorStack",
                        expected: "(boolean | undefined)",
                        value: input.errorStack
                    }),
                    void 0 === input.moduleTrace || "boolean" == typeof input.moduleTrace || _report(_exceptionable, {
                        path: _path + ".moduleTrace",
                        expected: "(boolean | undefined)",
                        value: input.moduleTrace
                    }),
                    void 0 === input.cachedModules || "boolean" == typeof input.cachedModules || _report(_exceptionable, {
                        path: _path + ".cachedModules",
                        expected: "(boolean | undefined)",
                        value: input.cachedModules
                    }),
                    void 0 === input.cachedAssets || "boolean" == typeof input.cachedAssets || _report(_exceptionable, {
                        path: _path + ".cachedAssets",
                        expected: "(boolean | undefined)",
                        value: input.cachedAssets
                    }),
                    void 0 === input.cached || "boolean" == typeof input.cached || _report(_exceptionable, {
                        path: _path + ".cached",
                        expected: "(boolean | undefined)",
                        value: input.cached
                    }),
                    void 0 === input.errorsSpace || "number" == typeof input.errorsSpace || _report(_exceptionable, {
                        path: _path + ".errorsSpace",
                        expected: "(number | undefined)",
                        value: input.errorsSpace
                    }),
                    void 0 === input.warningsSpace || "number" == typeof input.warningsSpace || _report(_exceptionable, {
                        path: _path + ".warningsSpace",
                        expected: "(number | undefined)",
                        value: input.warningsSpace
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "all",
                            "preset",
                            "assets",
                            "chunks",
                            "modules",
                            "entrypoints",
                            "chunkGroups",
                            "warnings",
                            "warningsCount",
                            "errors",
                            "errorsCount",
                            "colors",
                            "hash",
                            "version",
                            "reasons",
                            "publicPath",
                            "outputPath",
                            "chunkModules",
                            "chunkRelations",
                            "ids",
                            "timings",
                            "builtAt",
                            "moduleAssets",
                            "nestedModules",
                            "source",
                            "logging",
                            "loggingDebug",
                            "loggingTrace",
                            "runtimeModules",
                            "children",
                            "usedExports",
                            "providedExports",
                            "optimizationBailout",
                            "groupModulesByType",
                            "groupModulesByCacheStatus",
                            "groupModulesByLayer",
                            "groupModulesByAttributes",
                            "groupModulesByPath",
                            "groupModulesByExtension",
                            "modulesSpace",
                            "chunkModulesSpace",
                            "nestedModulesSpace",
                            "relatedAssets",
                            "groupAssetsByEmitStatus",
                            "groupAssetsByInfo",
                            "groupAssetsByPath",
                            "groupAssetsByExtension",
                            "groupAssetsByChunk",
                            "assetsSpace",
                            "orphanModules",
                            "excludeModules",
                            "excludeAssets",
                            "modulesSort",
                            "chunkModulesSort",
                            "nestedModulesSort",
                            "chunksSort",
                            "assetsSort",
                            "performance",
                            "env",
                            "chunkGroupAuxiliary",
                            "chunkGroupChildren",
                            "chunkGroupMaxAssets",
                            "dependentModules",
                            "chunkOrigins",
                            "runtime",
                            "depth",
                            "reasonsSpace",
                            "groupReasonsByOrigin",
                            "errorDetails",
                            "errorStack",
                            "moduleTrace",
                            "cachedModules",
                            "cachedAssets",
                            "cached",
                            "errorsSpace",
                            "warningsSpace"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo118 = (input, _path, _exceptionable = true)=>[
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo119 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.moduleIds || "named" === input.moduleIds || "natural" === input.moduleIds || "deterministic" === input.moduleIds || _report(_exceptionable, {
                        path: _path + ".moduleIds",
                        expected: "(\"deterministic\" | \"named\" | \"natural\" | undefined)",
                        value: input.moduleIds
                    }),
                    void 0 === input.chunkIds || "named" === input.chunkIds || "natural" === input.chunkIds || "deterministic" === input.chunkIds || "size" === input.chunkIds || "total-size" === input.chunkIds || _report(_exceptionable, {
                        path: _path + ".chunkIds",
                        expected: "(\"deterministic\" | \"named\" | \"natural\" | \"size\" | \"total-size\" | undefined)",
                        value: input.chunkIds
                    }),
                    void 0 === input.minimize || "boolean" == typeof input.minimize || _report(_exceptionable, {
                        path: _path + ".minimize",
                        expected: "(boolean | undefined)",
                        value: input.minimize
                    }),
                    void 0 === input.minimizer || (Array.isArray(input.minimizer) || _report(_exceptionable, {
                        path: _path + ".minimizer",
                        expected: "(Array<\"...\" | Plugin> | undefined)",
                        value: input.minimizer
                    })) && input.minimizer.map((elem, _index456)=>null == elem || "function" == typeof elem || false === elem || "" === elem || "..." === elem || 0 === elem || ("object" == typeof elem && null !== elem || _report(_exceptionable, {
                            path: _path + ".minimizer[" + _index456 + "]",
                            expected: "(\"\" | \"...\" | 0 | RspackPluginInstance | WebpackPluginInstance | false | null | undefined)",
                            value: elem
                        })) && _vu0(elem, _path + ".minimizer[" + _index456 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".minimizer[" + _index456 + "]",
                            expected: "(\"\" | \"...\" | 0 | RspackPluginInstance | WebpackPluginInstance | false | null | undefined)",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".minimizer",
                        expected: "(Array<\"...\" | Plugin> | undefined)",
                        value: input.minimizer
                    }),
                    void 0 === input.mergeDuplicateChunks || "boolean" == typeof input.mergeDuplicateChunks || _report(_exceptionable, {
                        path: _path + ".mergeDuplicateChunks",
                        expected: "(boolean | undefined)",
                        value: input.mergeDuplicateChunks
                    }),
                    (null !== input.splitChunks || _report(_exceptionable, {
                        path: _path + ".splitChunks",
                        expected: "(OptimizationSplitChunksOptions | false | undefined)",
                        value: input.splitChunks
                    })) && (void 0 === input.splitChunks || false === input.splitChunks || ("object" == typeof input.splitChunks && null !== input.splitChunks && false === Array.isArray(input.splitChunks) || _report(_exceptionable, {
                        path: _path + ".splitChunks",
                        expected: "(OptimizationSplitChunksOptions | false | undefined)",
                        value: input.splitChunks
                    })) && _vo122(input.splitChunks, _path + ".splitChunks", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".splitChunks",
                        expected: "(OptimizationSplitChunksOptions | false | undefined)",
                        value: input.splitChunks
                    })),
                    (null !== input.runtimeChunk || _report(_exceptionable, {
                        path: _path + ".runtimeChunk",
                        expected: "(\"multiple\" | \"single\" | __type.o30 | boolean | undefined)",
                        value: input.runtimeChunk
                    })) && (void 0 === input.runtimeChunk || "single" === input.runtimeChunk || "multiple" === input.runtimeChunk || "boolean" == typeof input.runtimeChunk || ("object" == typeof input.runtimeChunk && null !== input.runtimeChunk && false === Array.isArray(input.runtimeChunk) || _report(_exceptionable, {
                        path: _path + ".runtimeChunk",
                        expected: "(\"multiple\" | \"single\" | __type.o30 | boolean | undefined)",
                        value: input.runtimeChunk
                    })) && _vo127(input.runtimeChunk, _path + ".runtimeChunk", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".runtimeChunk",
                        expected: "(\"multiple\" | \"single\" | __type.o30 | boolean | undefined)",
                        value: input.runtimeChunk
                    })),
                    void 0 === input.removeAvailableModules || "boolean" == typeof input.removeAvailableModules || _report(_exceptionable, {
                        path: _path + ".removeAvailableModules",
                        expected: "(boolean | undefined)",
                        value: input.removeAvailableModules
                    }),
                    void 0 === input.removeEmptyChunks || "boolean" == typeof input.removeEmptyChunks || _report(_exceptionable, {
                        path: _path + ".removeEmptyChunks",
                        expected: "(boolean | undefined)",
                        value: input.removeEmptyChunks
                    }),
                    void 0 === input.realContentHash || "boolean" == typeof input.realContentHash || _report(_exceptionable, {
                        path: _path + ".realContentHash",
                        expected: "(boolean | undefined)",
                        value: input.realContentHash
                    }),
                    void 0 === input.sideEffects || "flag" === input.sideEffects || "boolean" == typeof input.sideEffects || _report(_exceptionable, {
                        path: _path + ".sideEffects",
                        expected: "(\"flag\" | boolean | undefined)",
                        value: input.sideEffects
                    }),
                    void 0 === input.providedExports || "boolean" == typeof input.providedExports || _report(_exceptionable, {
                        path: _path + ".providedExports",
                        expected: "(boolean | undefined)",
                        value: input.providedExports
                    }),
                    void 0 === input.concatenateModules || "boolean" == typeof input.concatenateModules || _report(_exceptionable, {
                        path: _path + ".concatenateModules",
                        expected: "(boolean | undefined)",
                        value: input.concatenateModules
                    }),
                    void 0 === input.innerGraph || "boolean" == typeof input.innerGraph || _report(_exceptionable, {
                        path: _path + ".innerGraph",
                        expected: "(boolean | undefined)",
                        value: input.innerGraph
                    }),
                    void 0 === input.usedExports || "global" === input.usedExports || "boolean" == typeof input.usedExports || _report(_exceptionable, {
                        path: _path + ".usedExports",
                        expected: "(\"global\" | boolean | undefined)",
                        value: input.usedExports
                    }),
                    void 0 === input.mangleExports || "deterministic" === input.mangleExports || "size" === input.mangleExports || "boolean" == typeof input.mangleExports || _report(_exceptionable, {
                        path: _path + ".mangleExports",
                        expected: "(\"deterministic\" | \"size\" | boolean | undefined)",
                        value: input.mangleExports
                    }),
                    void 0 === input.nodeEnv || false === input.nodeEnv || "string" == typeof input.nodeEnv || _report(_exceptionable, {
                        path: _path + ".nodeEnv",
                        expected: "(false | string | undefined)",
                        value: input.nodeEnv
                    }),
                    void 0 === input.emitOnErrors || "boolean" == typeof input.emitOnErrors || _report(_exceptionable, {
                        path: _path + ".emitOnErrors",
                        expected: "(boolean | undefined)",
                        value: input.emitOnErrors
                    }),
                    void 0 === input.avoidEntryIife || "boolean" == typeof input.avoidEntryIife || _report(_exceptionable, {
                        path: _path + ".avoidEntryIife",
                        expected: "(boolean | undefined)",
                        value: input.avoidEntryIife
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "moduleIds",
                            "chunkIds",
                            "minimize",
                            "minimizer",
                            "mergeDuplicateChunks",
                            "splitChunks",
                            "runtimeChunk",
                            "removeAvailableModules",
                            "removeEmptyChunks",
                            "realContentHash",
                            "sideEffects",
                            "providedExports",
                            "concatenateModules",
                            "innerGraph",
                            "usedExports",
                            "mangleExports",
                            "nodeEnv",
                            "emitOnErrors",
                            "avoidEntryIife"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo120 = (input, _path, _exceptionable = true)=>[
                    true,
                    false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "apply"
                        ].some((prop)=>key === prop)) return true;
                        input[key];
                        return true;
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo121 = (input, _path, _exceptionable = true)=>[
                    true,
                    false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "apply"
                        ].some((prop)=>key === prop)) return true;
                        input[key];
                        return true;
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo122 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.cacheGroups || ("object" == typeof input.cacheGroups && null !== input.cacheGroups && false === Array.isArray(input.cacheGroups) || _report(_exceptionable, {
                        path: _path + ".cacheGroups",
                        expected: "(Record<string, false | OptimizationSplitChunksCacheGroup> | undefined)",
                        value: input.cacheGroups
                    })) && _vo123(input.cacheGroups, _path + ".cacheGroups", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".cacheGroups",
                        expected: "(Record<string, false | OptimizationSplitChunksCacheGroup> | undefined)",
                        value: input.cacheGroups
                    }),
                    void 0 === input.fallbackCacheGroup || ("object" == typeof input.fallbackCacheGroup && null !== input.fallbackCacheGroup && false === Array.isArray(input.fallbackCacheGroup) || _report(_exceptionable, {
                        path: _path + ".fallbackCacheGroup",
                        expected: "(__type.o29 | undefined)",
                        value: input.fallbackCacheGroup
                    })) && _vo126(input.fallbackCacheGroup, _path + ".fallbackCacheGroup", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".fallbackCacheGroup",
                        expected: "(__type.o29 | undefined)",
                        value: input.fallbackCacheGroup
                    }),
                    void 0 === input.hidePathInfo || "boolean" == typeof input.hidePathInfo || _report(_exceptionable, {
                        path: _path + ".hidePathInfo",
                        expected: "(boolean | undefined)",
                        value: input.hidePathInfo
                    }),
                    (null !== input.chunks || _report(_exceptionable, {
                        path: _path + ".chunks",
                        expected: "(\"all\" | \"async\" | \"initial\" | RegExp | undefined)",
                        value: input.chunks
                    })) && (void 0 === input.chunks || "function" == typeof input.chunks || "all" === input.chunks || "initial" === input.chunks || "async" === input.chunks || input.chunks instanceof RegExp || _report(_exceptionable, {
                        path: _path + ".chunks",
                        expected: "(\"all\" | \"async\" | \"initial\" | RegExp | undefined)",
                        value: input.chunks
                    })),
                    void 0 === input.defaultSizeTypes || (Array.isArray(input.defaultSizeTypes) || _report(_exceptionable, {
                        path: _path + ".defaultSizeTypes",
                        expected: "(Array<string> | undefined)",
                        value: input.defaultSizeTypes
                    })) && input.defaultSizeTypes.map((elem, _index457)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".defaultSizeTypes[" + _index457 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".defaultSizeTypes",
                        expected: "(Array<string> | undefined)",
                        value: input.defaultSizeTypes
                    }),
                    void 0 === input.minChunks || "number" == typeof input.minChunks || _report(_exceptionable, {
                        path: _path + ".minChunks",
                        expected: "(number | undefined)",
                        value: input.minChunks
                    }),
                    void 0 === input.usedExports || "boolean" == typeof input.usedExports || _report(_exceptionable, {
                        path: _path + ".usedExports",
                        expected: "(boolean | undefined)",
                        value: input.usedExports
                    }),
                    (null !== input.name || _report(_exceptionable, {
                        path: _path + ".name",
                        expected: "(false | string | undefined)",
                        value: input.name
                    })) && (void 0 === input.name || "function" == typeof input.name || false === input.name || "string" == typeof input.name || _report(_exceptionable, {
                        path: _path + ".name",
                        expected: "(false | string | undefined)",
                        value: input.name
                    })),
                    (null !== input.filename || _report(_exceptionable, {
                        path: _path + ".filename",
                        expected: "(string | undefined)",
                        value: input.filename
                    })) && (void 0 === input.filename || "function" == typeof input.filename || "string" == typeof input.filename || _report(_exceptionable, {
                        path: _path + ".filename",
                        expected: "(string | undefined)",
                        value: input.filename
                    })),
                    (null !== input.minSize || _report(_exceptionable, {
                        path: _path + ".minSize",
                        expected: "(Record<string, number> | number | undefined)",
                        value: input.minSize
                    })) && (void 0 === input.minSize || "number" == typeof input.minSize || ("object" == typeof input.minSize && null !== input.minSize && false === Array.isArray(input.minSize) || _report(_exceptionable, {
                        path: _path + ".minSize",
                        expected: "(Record<string, number> | number | undefined)",
                        value: input.minSize
                    })) && _vo125(input.minSize, _path + ".minSize", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".minSize",
                        expected: "(Record<string, number> | number | undefined)",
                        value: input.minSize
                    })),
                    (null !== input.minSizeReduction || _report(_exceptionable, {
                        path: _path + ".minSizeReduction",
                        expected: "(Record<string, number> | number | undefined)",
                        value: input.minSizeReduction
                    })) && (void 0 === input.minSizeReduction || "number" == typeof input.minSizeReduction || ("object" == typeof input.minSizeReduction && null !== input.minSizeReduction && false === Array.isArray(input.minSizeReduction) || _report(_exceptionable, {
                        path: _path + ".minSizeReduction",
                        expected: "(Record<string, number> | number | undefined)",
                        value: input.minSizeReduction
                    })) && _vo125(input.minSizeReduction, _path + ".minSizeReduction", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".minSizeReduction",
                        expected: "(Record<string, number> | number | undefined)",
                        value: input.minSizeReduction
                    })),
                    (null !== input.maxSize || _report(_exceptionable, {
                        path: _path + ".maxSize",
                        expected: "(Record<string, number> | number | undefined)",
                        value: input.maxSize
                    })) && (void 0 === input.maxSize || "number" == typeof input.maxSize || ("object" == typeof input.maxSize && null !== input.maxSize && false === Array.isArray(input.maxSize) || _report(_exceptionable, {
                        path: _path + ".maxSize",
                        expected: "(Record<string, number> | number | undefined)",
                        value: input.maxSize
                    })) && _vo125(input.maxSize, _path + ".maxSize", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".maxSize",
                        expected: "(Record<string, number> | number | undefined)",
                        value: input.maxSize
                    })),
                    (null !== input.maxAsyncSize || _report(_exceptionable, {
                        path: _path + ".maxAsyncSize",
                        expected: "(Record<string, number> | number | undefined)",
                        value: input.maxAsyncSize
                    })) && (void 0 === input.maxAsyncSize || "number" == typeof input.maxAsyncSize || ("object" == typeof input.maxAsyncSize && null !== input.maxAsyncSize && false === Array.isArray(input.maxAsyncSize) || _report(_exceptionable, {
                        path: _path + ".maxAsyncSize",
                        expected: "(Record<string, number> | number | undefined)",
                        value: input.maxAsyncSize
                    })) && _vo125(input.maxAsyncSize, _path + ".maxAsyncSize", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".maxAsyncSize",
                        expected: "(Record<string, number> | number | undefined)",
                        value: input.maxAsyncSize
                    })),
                    (null !== input.maxInitialSize || _report(_exceptionable, {
                        path: _path + ".maxInitialSize",
                        expected: "(Record<string, number> | number | undefined)",
                        value: input.maxInitialSize
                    })) && (void 0 === input.maxInitialSize || "number" == typeof input.maxInitialSize || ("object" == typeof input.maxInitialSize && null !== input.maxInitialSize && false === Array.isArray(input.maxInitialSize) || _report(_exceptionable, {
                        path: _path + ".maxInitialSize",
                        expected: "(Record<string, number> | number | undefined)",
                        value: input.maxInitialSize
                    })) && _vo125(input.maxInitialSize, _path + ".maxInitialSize", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".maxInitialSize",
                        expected: "(Record<string, number> | number | undefined)",
                        value: input.maxInitialSize
                    })),
                    void 0 === input.maxAsyncRequests || "number" == typeof input.maxAsyncRequests || _report(_exceptionable, {
                        path: _path + ".maxAsyncRequests",
                        expected: "(number | undefined)",
                        value: input.maxAsyncRequests
                    }),
                    void 0 === input.maxInitialRequests || "number" == typeof input.maxInitialRequests || _report(_exceptionable, {
                        path: _path + ".maxInitialRequests",
                        expected: "(number | undefined)",
                        value: input.maxInitialRequests
                    }),
                    void 0 === input.automaticNameDelimiter || "string" == typeof input.automaticNameDelimiter || _report(_exceptionable, {
                        path: _path + ".automaticNameDelimiter",
                        expected: "(string | undefined)",
                        value: input.automaticNameDelimiter
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "cacheGroups",
                            "fallbackCacheGroup",
                            "hidePathInfo",
                            "chunks",
                            "defaultSizeTypes",
                            "minChunks",
                            "usedExports",
                            "name",
                            "filename",
                            "minSize",
                            "minSizeReduction",
                            "maxSize",
                            "maxAsyncSize",
                            "maxInitialSize",
                            "maxAsyncRequests",
                            "maxInitialRequests",
                            "automaticNameDelimiter"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo123 = (input, _path, _exceptionable = true)=>[
                    false === _exceptionable || Object.keys(input).map((key)=>{
                        const value = input[key];
                        if (void 0 === value) return true;
                        return (null !== value || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(OptimizationSplitChunksCacheGroup | false)",
                            value: value
                        })) && (void 0 !== value || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(OptimizationSplitChunksCacheGroup | false)",
                            value: value
                        })) && (false === value || ("object" == typeof value && null !== value && false === Array.isArray(value) || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(OptimizationSplitChunksCacheGroup | false)",
                            value: value
                        })) && _vo124(value, _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key), _exceptionable) || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(OptimizationSplitChunksCacheGroup | false)",
                            value: value
                        }));
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo124 = (input, _path, _exceptionable = true)=>[
                    (null !== input.test || _report(_exceptionable, {
                        path: _path + ".test",
                        expected: "(RegExp | string | undefined)",
                        value: input.test
                    })) && (void 0 === input.test || "function" == typeof input.test || "string" == typeof input.test || input.test instanceof RegExp || _report(_exceptionable, {
                        path: _path + ".test",
                        expected: "(RegExp | string | undefined)",
                        value: input.test
                    })),
                    void 0 === input.priority || "number" == typeof input.priority || _report(_exceptionable, {
                        path: _path + ".priority",
                        expected: "(number | undefined)",
                        value: input.priority
                    }),
                    void 0 === input.enforce || "boolean" == typeof input.enforce || _report(_exceptionable, {
                        path: _path + ".enforce",
                        expected: "(boolean | undefined)",
                        value: input.enforce
                    }),
                    void 0 === input.reuseExistingChunk || "boolean" == typeof input.reuseExistingChunk || _report(_exceptionable, {
                        path: _path + ".reuseExistingChunk",
                        expected: "(boolean | undefined)",
                        value: input.reuseExistingChunk
                    }),
                    (null !== input.type || _report(_exceptionable, {
                        path: _path + ".type",
                        expected: "(RegExp | string | undefined)",
                        value: input.type
                    })) && (void 0 === input.type || "string" == typeof input.type || input.type instanceof RegExp || _report(_exceptionable, {
                        path: _path + ".type",
                        expected: "(RegExp | string | undefined)",
                        value: input.type
                    })),
                    void 0 === input.idHint || "string" == typeof input.idHint || _report(_exceptionable, {
                        path: _path + ".idHint",
                        expected: "(string | undefined)",
                        value: input.idHint
                    }),
                    (null !== input.layer || _report(_exceptionable, {
                        path: _path + ".layer",
                        expected: "(RegExp | string | undefined)",
                        value: input.layer
                    })) && (void 0 === input.layer || "function" == typeof input.layer || "string" == typeof input.layer || input.layer instanceof RegExp || _report(_exceptionable, {
                        path: _path + ".layer",
                        expected: "(RegExp | string | undefined)",
                        value: input.layer
                    })),
                    (null !== input.chunks || _report(_exceptionable, {
                        path: _path + ".chunks",
                        expected: "(\"all\" | \"async\" | \"initial\" | RegExp | undefined)",
                        value: input.chunks
                    })) && (void 0 === input.chunks || "function" == typeof input.chunks || "all" === input.chunks || "initial" === input.chunks || "async" === input.chunks || input.chunks instanceof RegExp || _report(_exceptionable, {
                        path: _path + ".chunks",
                        expected: "(\"all\" | \"async\" | \"initial\" | RegExp | undefined)",
                        value: input.chunks
                    })),
                    void 0 === input.defaultSizeTypes || (Array.isArray(input.defaultSizeTypes) || _report(_exceptionable, {
                        path: _path + ".defaultSizeTypes",
                        expected: "(Array<string> | undefined)",
                        value: input.defaultSizeTypes
                    })) && input.defaultSizeTypes.map((elem, _index458)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".defaultSizeTypes[" + _index458 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".defaultSizeTypes",
                        expected: "(Array<string> | undefined)",
                        value: input.defaultSizeTypes
                    }),
                    void 0 === input.minChunks || "number" == typeof input.minChunks || _report(_exceptionable, {
                        path: _path + ".minChunks",
                        expected: "(number | undefined)",
                        value: input.minChunks
                    }),
                    void 0 === input.usedExports || "boolean" == typeof input.usedExports || _report(_exceptionable, {
                        path: _path + ".usedExports",
                        expected: "(boolean | undefined)",
                        value: input.usedExports
                    }),
                    (null !== input.name || _report(_exceptionable, {
                        path: _path + ".name",
                        expected: "(false | string | undefined)",
                        value: input.name
                    })) && (void 0 === input.name || "function" == typeof input.name || false === input.name || "string" == typeof input.name || _report(_exceptionable, {
                        path: _path + ".name",
                        expected: "(false | string | undefined)",
                        value: input.name
                    })),
                    (null !== input.filename || _report(_exceptionable, {
                        path: _path + ".filename",
                        expected: "(string | undefined)",
                        value: input.filename
                    })) && (void 0 === input.filename || "function" == typeof input.filename || "string" == typeof input.filename || _report(_exceptionable, {
                        path: _path + ".filename",
                        expected: "(string | undefined)",
                        value: input.filename
                    })),
                    (null !== input.minSize || _report(_exceptionable, {
                        path: _path + ".minSize",
                        expected: "(Record<string, number> | number | undefined)",
                        value: input.minSize
                    })) && (void 0 === input.minSize || "number" == typeof input.minSize || ("object" == typeof input.minSize && null !== input.minSize && false === Array.isArray(input.minSize) || _report(_exceptionable, {
                        path: _path + ".minSize",
                        expected: "(Record<string, number> | number | undefined)",
                        value: input.minSize
                    })) && _vo125(input.minSize, _path + ".minSize", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".minSize",
                        expected: "(Record<string, number> | number | undefined)",
                        value: input.minSize
                    })),
                    (null !== input.minSizeReduction || _report(_exceptionable, {
                        path: _path + ".minSizeReduction",
                        expected: "(Record<string, number> | number | undefined)",
                        value: input.minSizeReduction
                    })) && (void 0 === input.minSizeReduction || "number" == typeof input.minSizeReduction || ("object" == typeof input.minSizeReduction && null !== input.minSizeReduction && false === Array.isArray(input.minSizeReduction) || _report(_exceptionable, {
                        path: _path + ".minSizeReduction",
                        expected: "(Record<string, number> | number | undefined)",
                        value: input.minSizeReduction
                    })) && _vo125(input.minSizeReduction, _path + ".minSizeReduction", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".minSizeReduction",
                        expected: "(Record<string, number> | number | undefined)",
                        value: input.minSizeReduction
                    })),
                    (null !== input.maxSize || _report(_exceptionable, {
                        path: _path + ".maxSize",
                        expected: "(Record<string, number> | number | undefined)",
                        value: input.maxSize
                    })) && (void 0 === input.maxSize || "number" == typeof input.maxSize || ("object" == typeof input.maxSize && null !== input.maxSize && false === Array.isArray(input.maxSize) || _report(_exceptionable, {
                        path: _path + ".maxSize",
                        expected: "(Record<string, number> | number | undefined)",
                        value: input.maxSize
                    })) && _vo125(input.maxSize, _path + ".maxSize", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".maxSize",
                        expected: "(Record<string, number> | number | undefined)",
                        value: input.maxSize
                    })),
                    (null !== input.maxAsyncSize || _report(_exceptionable, {
                        path: _path + ".maxAsyncSize",
                        expected: "(Record<string, number> | number | undefined)",
                        value: input.maxAsyncSize
                    })) && (void 0 === input.maxAsyncSize || "number" == typeof input.maxAsyncSize || ("object" == typeof input.maxAsyncSize && null !== input.maxAsyncSize && false === Array.isArray(input.maxAsyncSize) || _report(_exceptionable, {
                        path: _path + ".maxAsyncSize",
                        expected: "(Record<string, number> | number | undefined)",
                        value: input.maxAsyncSize
                    })) && _vo125(input.maxAsyncSize, _path + ".maxAsyncSize", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".maxAsyncSize",
                        expected: "(Record<string, number> | number | undefined)",
                        value: input.maxAsyncSize
                    })),
                    (null !== input.maxInitialSize || _report(_exceptionable, {
                        path: _path + ".maxInitialSize",
                        expected: "(Record<string, number> | number | undefined)",
                        value: input.maxInitialSize
                    })) && (void 0 === input.maxInitialSize || "number" == typeof input.maxInitialSize || ("object" == typeof input.maxInitialSize && null !== input.maxInitialSize && false === Array.isArray(input.maxInitialSize) || _report(_exceptionable, {
                        path: _path + ".maxInitialSize",
                        expected: "(Record<string, number> | number | undefined)",
                        value: input.maxInitialSize
                    })) && _vo125(input.maxInitialSize, _path + ".maxInitialSize", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".maxInitialSize",
                        expected: "(Record<string, number> | number | undefined)",
                        value: input.maxInitialSize
                    })),
                    void 0 === input.maxAsyncRequests || "number" == typeof input.maxAsyncRequests || _report(_exceptionable, {
                        path: _path + ".maxAsyncRequests",
                        expected: "(number | undefined)",
                        value: input.maxAsyncRequests
                    }),
                    void 0 === input.maxInitialRequests || "number" == typeof input.maxInitialRequests || _report(_exceptionable, {
                        path: _path + ".maxInitialRequests",
                        expected: "(number | undefined)",
                        value: input.maxInitialRequests
                    }),
                    void 0 === input.automaticNameDelimiter || "string" == typeof input.automaticNameDelimiter || _report(_exceptionable, {
                        path: _path + ".automaticNameDelimiter",
                        expected: "(string | undefined)",
                        value: input.automaticNameDelimiter
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "test",
                            "priority",
                            "enforce",
                            "reuseExistingChunk",
                            "type",
                            "idHint",
                            "layer",
                            "chunks",
                            "defaultSizeTypes",
                            "minChunks",
                            "usedExports",
                            "name",
                            "filename",
                            "minSize",
                            "minSizeReduction",
                            "maxSize",
                            "maxAsyncSize",
                            "maxInitialSize",
                            "maxAsyncRequests",
                            "maxInitialRequests",
                            "automaticNameDelimiter"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo125 = (input, _path, _exceptionable = true)=>[
                    false === _exceptionable || Object.keys(input).map((key)=>{
                        const value = input[key];
                        if (void 0 === value) return true;
                        return "number" == typeof value || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "number",
                            value: value
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo126 = (input, _path, _exceptionable = true)=>[
                    (null !== input.chunks || _report(_exceptionable, {
                        path: _path + ".chunks",
                        expected: "(\"all\" | \"async\" | \"initial\" | RegExp | undefined)",
                        value: input.chunks
                    })) && (void 0 === input.chunks || "function" == typeof input.chunks || "all" === input.chunks || "initial" === input.chunks || "async" === input.chunks || input.chunks instanceof RegExp || _report(_exceptionable, {
                        path: _path + ".chunks",
                        expected: "(\"all\" | \"async\" | \"initial\" | RegExp | undefined)",
                        value: input.chunks
                    })),
                    void 0 === input.minSize || "number" == typeof input.minSize || _report(_exceptionable, {
                        path: _path + ".minSize",
                        expected: "(number | undefined)",
                        value: input.minSize
                    }),
                    void 0 === input.maxSize || "number" == typeof input.maxSize || _report(_exceptionable, {
                        path: _path + ".maxSize",
                        expected: "(number | undefined)",
                        value: input.maxSize
                    }),
                    void 0 === input.maxAsyncSize || "number" == typeof input.maxAsyncSize || _report(_exceptionable, {
                        path: _path + ".maxAsyncSize",
                        expected: "(number | undefined)",
                        value: input.maxAsyncSize
                    }),
                    void 0 === input.maxInitialSize || "number" == typeof input.maxInitialSize || _report(_exceptionable, {
                        path: _path + ".maxInitialSize",
                        expected: "(number | undefined)",
                        value: input.maxInitialSize
                    }),
                    void 0 === input.automaticNameDelimiter || "string" == typeof input.automaticNameDelimiter || _report(_exceptionable, {
                        path: _path + ".automaticNameDelimiter",
                        expected: "(string | undefined)",
                        value: input.automaticNameDelimiter
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "chunks",
                            "minSize",
                            "maxSize",
                            "maxAsyncSize",
                            "maxInitialSize",
                            "automaticNameDelimiter"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo127 = (input, _path, _exceptionable = true)=>[
                    (null !== input.name || _report(_exceptionable, {
                        path: _path + ".name",
                        expected: "(string | undefined)",
                        value: input.name
                    })) && (void 0 === input.name || "function" == typeof input.name || "string" == typeof input.name || _report(_exceptionable, {
                        path: _path + ".name",
                        expected: "(string | undefined)",
                        value: input.name
                    })),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "name"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo128 = (input, _path, _exceptionable = true)=>[
                    (null !== input.alias || _report(_exceptionable, {
                        path: _path + ".alias",
                        expected: "(__type.o31 | false | undefined)",
                        value: input.alias
                    })) && (void 0 === input.alias || false === input.alias || ("object" == typeof input.alias && null !== input.alias && false === Array.isArray(input.alias) || _report(_exceptionable, {
                        path: _path + ".alias",
                        expected: "(__type.o31 | false | undefined)",
                        value: input.alias
                    })) && _vo129(input.alias, _path + ".alias", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".alias",
                        expected: "(__type.o31 | false | undefined)",
                        value: input.alias
                    })),
                    void 0 === input.conditionNames || (Array.isArray(input.conditionNames) || _report(_exceptionable, {
                        path: _path + ".conditionNames",
                        expected: "(Array<string> | undefined)",
                        value: input.conditionNames
                    })) && input.conditionNames.map((elem, _index459)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".conditionNames[" + _index459 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".conditionNames",
                        expected: "(Array<string> | undefined)",
                        value: input.conditionNames
                    }),
                    void 0 === input.extensions || (Array.isArray(input.extensions) || _report(_exceptionable, {
                        path: _path + ".extensions",
                        expected: "(Array<string> | undefined)",
                        value: input.extensions
                    })) && input.extensions.map((elem, _index460)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".extensions[" + _index460 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".extensions",
                        expected: "(Array<string> | undefined)",
                        value: input.extensions
                    }),
                    (null !== input.fallback || _report(_exceptionable, {
                        path: _path + ".fallback",
                        expected: "(__type.o31 | false | undefined)",
                        value: input.fallback
                    })) && (void 0 === input.fallback || false === input.fallback || ("object" == typeof input.fallback && null !== input.fallback && false === Array.isArray(input.fallback) || _report(_exceptionable, {
                        path: _path + ".fallback",
                        expected: "(__type.o31 | false | undefined)",
                        value: input.fallback
                    })) && _vo129(input.fallback, _path + ".fallback", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".fallback",
                        expected: "(__type.o31 | false | undefined)",
                        value: input.fallback
                    })),
                    void 0 === input.mainFields || (Array.isArray(input.mainFields) || _report(_exceptionable, {
                        path: _path + ".mainFields",
                        expected: "(Array<string> | undefined)",
                        value: input.mainFields
                    })) && input.mainFields.map((elem, _index461)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".mainFields[" + _index461 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".mainFields",
                        expected: "(Array<string> | undefined)",
                        value: input.mainFields
                    }),
                    void 0 === input.mainFiles || (Array.isArray(input.mainFiles) || _report(_exceptionable, {
                        path: _path + ".mainFiles",
                        expected: "(Array<string> | undefined)",
                        value: input.mainFiles
                    })) && input.mainFiles.map((elem, _index462)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".mainFiles[" + _index462 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".mainFiles",
                        expected: "(Array<string> | undefined)",
                        value: input.mainFiles
                    }),
                    void 0 === input.modules || (Array.isArray(input.modules) || _report(_exceptionable, {
                        path: _path + ".modules",
                        expected: "(Array<string> | undefined)",
                        value: input.modules
                    })) && input.modules.map((elem, _index463)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".modules[" + _index463 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".modules",
                        expected: "(Array<string> | undefined)",
                        value: input.modules
                    }),
                    void 0 === input.preferRelative || "boolean" == typeof input.preferRelative || _report(_exceptionable, {
                        path: _path + ".preferRelative",
                        expected: "(boolean | undefined)",
                        value: input.preferRelative
                    }),
                    void 0 === input.preferAbsolute || "boolean" == typeof input.preferAbsolute || _report(_exceptionable, {
                        path: _path + ".preferAbsolute",
                        expected: "(boolean | undefined)",
                        value: input.preferAbsolute
                    }),
                    void 0 === input.symlinks || "boolean" == typeof input.symlinks || _report(_exceptionable, {
                        path: _path + ".symlinks",
                        expected: "(boolean | undefined)",
                        value: input.symlinks
                    }),
                    void 0 === input.enforceExtension || "boolean" == typeof input.enforceExtension || _report(_exceptionable, {
                        path: _path + ".enforceExtension",
                        expected: "(boolean | undefined)",
                        value: input.enforceExtension
                    }),
                    void 0 === input.importsFields || (Array.isArray(input.importsFields) || _report(_exceptionable, {
                        path: _path + ".importsFields",
                        expected: "(Array<string> | undefined)",
                        value: input.importsFields
                    })) && input.importsFields.map((elem, _index464)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".importsFields[" + _index464 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".importsFields",
                        expected: "(Array<string> | undefined)",
                        value: input.importsFields
                    }),
                    void 0 === input.descriptionFiles || (Array.isArray(input.descriptionFiles) || _report(_exceptionable, {
                        path: _path + ".descriptionFiles",
                        expected: "(Array<string> | undefined)",
                        value: input.descriptionFiles
                    })) && input.descriptionFiles.map((elem, _index465)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".descriptionFiles[" + _index465 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".descriptionFiles",
                        expected: "(Array<string> | undefined)",
                        value: input.descriptionFiles
                    }),
                    (null !== input.tsConfig || _report(_exceptionable, {
                        path: _path + ".tsConfig",
                        expected: "(__type.o32 | string | undefined)",
                        value: input.tsConfig
                    })) && (void 0 === input.tsConfig || "string" == typeof input.tsConfig || ("object" == typeof input.tsConfig && null !== input.tsConfig || _report(_exceptionable, {
                        path: _path + ".tsConfig",
                        expected: "(__type.o32 | string | undefined)",
                        value: input.tsConfig
                    })) && _vo130(input.tsConfig, _path + ".tsConfig", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".tsConfig",
                        expected: "(__type.o32 | string | undefined)",
                        value: input.tsConfig
                    })),
                    void 0 === input.fullySpecified || "boolean" == typeof input.fullySpecified || _report(_exceptionable, {
                        path: _path + ".fullySpecified",
                        expected: "(boolean | undefined)",
                        value: input.fullySpecified
                    }),
                    void 0 === input.exportsFields || (Array.isArray(input.exportsFields) || _report(_exceptionable, {
                        path: _path + ".exportsFields",
                        expected: "(Array<string> | undefined)",
                        value: input.exportsFields
                    })) && input.exportsFields.map((elem, _index466)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".exportsFields[" + _index466 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".exportsFields",
                        expected: "(Array<string> | undefined)",
                        value: input.exportsFields
                    }),
                    void 0 === input.extensionAlias || ("object" == typeof input.extensionAlias && null !== input.extensionAlias && false === Array.isArray(input.extensionAlias) || _report(_exceptionable, {
                        path: _path + ".extensionAlias",
                        expected: "(Record<string, string | string[]> | undefined)",
                        value: input.extensionAlias
                    })) && _vo131(input.extensionAlias, _path + ".extensionAlias", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".extensionAlias",
                        expected: "(Record<string, string | string[]> | undefined)",
                        value: input.extensionAlias
                    }),
                    void 0 === input.aliasFields || (Array.isArray(input.aliasFields) || _report(_exceptionable, {
                        path: _path + ".aliasFields",
                        expected: "(Array<string> | undefined)",
                        value: input.aliasFields
                    })) && input.aliasFields.map((elem, _index467)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".aliasFields[" + _index467 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".aliasFields",
                        expected: "(Array<string> | undefined)",
                        value: input.aliasFields
                    }),
                    void 0 === input.restrictions || (Array.isArray(input.restrictions) || _report(_exceptionable, {
                        path: _path + ".restrictions",
                        expected: "(Array<string> | undefined)",
                        value: input.restrictions
                    })) && input.restrictions.map((elem, _index468)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".restrictions[" + _index468 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".restrictions",
                        expected: "(Array<string> | undefined)",
                        value: input.restrictions
                    }),
                    void 0 === input.roots || (Array.isArray(input.roots) || _report(_exceptionable, {
                        path: _path + ".roots",
                        expected: "(Array<string> | undefined)",
                        value: input.roots
                    })) && input.roots.map((elem, _index469)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".roots[" + _index469 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".roots",
                        expected: "(Array<string> | undefined)",
                        value: input.roots
                    }),
                    void 0 === input.byDependency || ("object" == typeof input.byDependency && null !== input.byDependency && false === Array.isArray(input.byDependency) || _report(_exceptionable, {
                        path: _path + ".byDependency",
                        expected: "(Record<string, ResolveOptions> | undefined)",
                        value: input.byDependency
                    })) && _vo132(input.byDependency, _path + ".byDependency", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".byDependency",
                        expected: "(Record<string, ResolveOptions> | undefined)",
                        value: input.byDependency
                    }),
                    void 0 === input.pnp || "boolean" == typeof input.pnp || _report(_exceptionable, {
                        path: _path + ".pnp",
                        expected: "(boolean | undefined)",
                        value: input.pnp
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "alias",
                            "conditionNames",
                            "extensions",
                            "fallback",
                            "mainFields",
                            "mainFiles",
                            "modules",
                            "preferRelative",
                            "preferAbsolute",
                            "symlinks",
                            "enforceExtension",
                            "importsFields",
                            "descriptionFiles",
                            "tsConfig",
                            "fullySpecified",
                            "exportsFields",
                            "extensionAlias",
                            "aliasFields",
                            "restrictions",
                            "roots",
                            "byDependency",
                            "pnp"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo129 = (input, _path, _exceptionable = true)=>[
                    false === _exceptionable || Object.keys(input).map((key)=>{
                        const value = input[key];
                        if (void 0 === value) return true;
                        return (null !== value || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(Array<string | false> | false | string)",
                            value: value
                        })) && (void 0 !== value || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(Array<string | false> | false | string)",
                            value: value
                        })) && (false === value || "string" == typeof value || (Array.isArray(value) || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(Array<string | false> | false | string)",
                            value: value
                        })) && value.map((elem, _index470)=>false === elem || "string" == typeof elem || _report(_exceptionable, {
                                path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key) + "[" + _index470 + "]",
                                expected: "(false | string)",
                                value: elem
                            })).every((flag)=>flag) || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(Array<string | false> | false | string)",
                            value: value
                        }));
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo130 = (input, _path, _exceptionable = true)=>[
                    "string" == typeof input.configFile || _report(_exceptionable, {
                        path: _path + ".configFile",
                        expected: "string",
                        value: input.configFile
                    }),
                    (null !== input.references || _report(_exceptionable, {
                        path: _path + ".references",
                        expected: "(\"auto\" | Array<string> | undefined)",
                        value: input.references
                    })) && (void 0 === input.references || "auto" === input.references || (Array.isArray(input.references) || _report(_exceptionable, {
                        path: _path + ".references",
                        expected: "(\"auto\" | Array<string> | undefined)",
                        value: input.references
                    })) && input.references.map((elem, _index471)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".references[" + _index471 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".references",
                        expected: "(\"auto\" | Array<string> | undefined)",
                        value: input.references
                    })),
                    1 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "configFile",
                            "references"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo131 = (input, _path, _exceptionable = true)=>[
                    false === _exceptionable || Object.keys(input).map((key)=>{
                        const value = input[key];
                        if (void 0 === value) return true;
                        return (null !== value || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(Array<string> | string)",
                            value: value
                        })) && (void 0 !== value || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(Array<string> | string)",
                            value: value
                        })) && ("string" == typeof value || (Array.isArray(value) || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(Array<string> | string)",
                            value: value
                        })) && value.map((elem, _index472)=>"string" == typeof elem || _report(_exceptionable, {
                                path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key) + "[" + _index472 + "]",
                                expected: "string",
                                value: elem
                            })).every((flag)=>flag) || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(Array<string> | string)",
                            value: value
                        }));
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo132 = (input, _path, _exceptionable = true)=>[
                    false === _exceptionable || Object.keys(input).map((key)=>{
                        const value = input[key];
                        if (void 0 === value) return true;
                        return ("object" == typeof value && null !== value && false === Array.isArray(value) || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "ResolveOptions",
                            value: value
                        })) && _vo128(value, _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key), _exceptionable) || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "ResolveOptions",
                            value: value
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo133 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.ipc || "string" == typeof input.ipc || "boolean" == typeof input.ipc || _report(_exceptionable, {
                        path: _path + ".ipc",
                        expected: "(boolean | string | undefined)",
                        value: input.ipc
                    }),
                    void 0 === input.host || "string" == typeof input.host || _report(_exceptionable, {
                        path: _path + ".host",
                        expected: "(string | undefined)",
                        value: input.host
                    }),
                    void 0 === input.port || "string" == typeof input.port || "number" == typeof input.port || _report(_exceptionable, {
                        path: _path + ".port",
                        expected: "(number | string | undefined)",
                        value: input.port
                    }),
                    void 0 === input.hot || "only" === input.hot || "boolean" == typeof input.hot || _report(_exceptionable, {
                        path: _path + ".hot",
                        expected: "(\"only\" | boolean | undefined)",
                        value: input.hot
                    }),
                    void 0 === input.liveReload || "boolean" == typeof input.liveReload || _report(_exceptionable, {
                        path: _path + ".liveReload",
                        expected: "(boolean | undefined)",
                        value: input.liveReload
                    }),
                    void 0 === input.devMiddleware || ("object" == typeof input.devMiddleware && null !== input.devMiddleware && false === Array.isArray(input.devMiddleware) || _report(_exceptionable, {
                        path: _path + ".devMiddleware",
                        expected: "(DevMiddlewareOptions<\"http\".IncomingMessage, \"http\".ServerResponse<\"http\".IncomingMessage>> | undefined)",
                        value: input.devMiddleware
                    })) && _vo134(input.devMiddleware, _path + ".devMiddleware", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".devMiddleware",
                        expected: "(DevMiddlewareOptions<\"http\".IncomingMessage, \"http\".ServerResponse<\"http\".IncomingMessage>> | undefined)",
                        value: input.devMiddleware
                    }),
                    void 0 === input.compress || "boolean" == typeof input.compress || _report(_exceptionable, {
                        path: _path + ".compress",
                        expected: "(boolean | undefined)",
                        value: input.compress
                    }),
                    (null !== input.allowedHosts || _report(_exceptionable, {
                        path: _path + ".allowedHosts",
                        expected: "(Array<string> | string | undefined)",
                        value: input.allowedHosts
                    })) && (void 0 === input.allowedHosts || "string" == typeof input.allowedHosts || (Array.isArray(input.allowedHosts) || _report(_exceptionable, {
                        path: _path + ".allowedHosts",
                        expected: "(Array<string> | string | undefined)",
                        value: input.allowedHosts
                    })) && input.allowedHosts.map((elem, _index473)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".allowedHosts[" + _index473 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".allowedHosts",
                        expected: "(Array<string> | string | undefined)",
                        value: input.allowedHosts
                    })),
                    (null !== input.historyApiFallback || _report(_exceptionable, {
                        path: _path + ".historyApiFallback",
                        expected: "(HistoryApiFallbackOptions | boolean | undefined)",
                        value: input.historyApiFallback
                    })) && (void 0 === input.historyApiFallback || "boolean" == typeof input.historyApiFallback || ("object" == typeof input.historyApiFallback && null !== input.historyApiFallback && false === Array.isArray(input.historyApiFallback) || _report(_exceptionable, {
                        path: _path + ".historyApiFallback",
                        expected: "(HistoryApiFallbackOptions | boolean | undefined)",
                        value: input.historyApiFallback
                    })) && _vo139(input.historyApiFallback, _path + ".historyApiFallback", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".historyApiFallback",
                        expected: "(HistoryApiFallbackOptions | boolean | undefined)",
                        value: input.historyApiFallback
                    })),
                    true,
                    (null !== input.watchFiles || _report(_exceptionable, {
                        path: _path + ".watchFiles",
                        expected: "(Array<string | WatchFiles> | Array<string> | WatchFiles.o1 | string | undefined)",
                        value: input.watchFiles
                    })) && (void 0 === input.watchFiles || "string" == typeof input.watchFiles || Array.isArray(input.watchFiles) && (_vp2(input.watchFiles, _path + ".watchFiles", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".watchFiles",
                        expected: "Array<string | WatchFiles> | Array<string>",
                        value: input.watchFiles
                    })) || "object" == typeof input.watchFiles && null !== input.watchFiles && _vo141(input.watchFiles, _path + ".watchFiles", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".watchFiles",
                        expected: "(Array<string | WatchFiles> | Array<string> | WatchFiles.o1 | string | undefined)",
                        value: input.watchFiles
                    }) || _report(_exceptionable, {
                        path: _path + ".watchFiles",
                        expected: "(Array<string | WatchFiles> | Array<string> | WatchFiles.o1 | string | undefined)",
                        value: input.watchFiles
                    })),
                    (null !== input.static || _report(_exceptionable, {
                        path: _path + ".static",
                        expected: "(Array<string | Static> | Static | boolean | string | undefined)",
                        value: input.static
                    })) && (void 0 === input.static || "string" == typeof input.static || "boolean" == typeof input.static || Array.isArray(input.static) && input.static.map((elem, _index478)=>(null !== elem || _report(_exceptionable, {
                            path: _path + ".static[" + _index478 + "]",
                            expected: "(Static | string)",
                            value: elem
                        })) && (void 0 !== elem || _report(_exceptionable, {
                            path: _path + ".static[" + _index478 + "]",
                            expected: "(Static | string)",
                            value: elem
                        })) && ("string" == typeof elem || ("object" == typeof elem && null !== elem && false === Array.isArray(elem) || _report(_exceptionable, {
                            path: _path + ".static[" + _index478 + "]",
                            expected: "(Static | string)",
                            value: elem
                        })) && _vo143(elem, _path + ".static[" + _index478 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".static[" + _index478 + "]",
                            expected: "(Static | string)",
                            value: elem
                        }))).every((flag)=>flag) || "object" == typeof input.static && null !== input.static && false === Array.isArray(input.static) && _vo143(input.static, _path + ".static", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".static",
                        expected: "(Array<string | Static> | Static | boolean | string | undefined)",
                        value: input.static
                    }) || _report(_exceptionable, {
                        path: _path + ".static",
                        expected: "(Array<string | Static> | Static | boolean | string | undefined)",
                        value: input.static
                    })),
                    (null !== input.server || _report(_exceptionable, {
                        path: _path + ".server",
                        expected: "(ServerConfiguration<any, \"http\".Server<\"http\".IncomingMessage, \"http\".ServerResponse>> | string | undefined)",
                        value: input.server
                    })) && (void 0 === input.server || "function" == typeof input.server || "string" == typeof input.server || ("object" == typeof input.server && null !== input.server && false === Array.isArray(input.server) || _report(_exceptionable, {
                        path: _path + ".server",
                        expected: "(ServerConfiguration<any, \"http\".Server<\"http\".IncomingMessage, \"http\".ServerResponse>> | string | undefined)",
                        value: input.server
                    })) && _vo147(input.server, _path + ".server", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".server",
                        expected: "(ServerConfiguration<any, \"http\".Server<\"http\".IncomingMessage, \"http\".ServerResponse>> | string | undefined)",
                        value: input.server
                    })),
                    void 0 === input.app || true,
                    (null !== input.webSocketServer || _report(_exceptionable, {
                        path: _path + ".webSocketServer",
                        expected: "(WebSocketServerConfiguration | boolean | string | undefined)",
                        value: input.webSocketServer
                    })) && (void 0 === input.webSocketServer || "string" == typeof input.webSocketServer || "boolean" == typeof input.webSocketServer || ("object" == typeof input.webSocketServer && null !== input.webSocketServer && false === Array.isArray(input.webSocketServer) || _report(_exceptionable, {
                        path: _path + ".webSocketServer",
                        expected: "(WebSocketServerConfiguration | boolean | string | undefined)",
                        value: input.webSocketServer
                    })) && _vo164(input.webSocketServer, _path + ".webSocketServer", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".webSocketServer",
                        expected: "(WebSocketServerConfiguration | boolean | string | undefined)",
                        value: input.webSocketServer
                    })),
                    void 0 === input.proxy || (Array.isArray(input.proxy) || _report(_exceptionable, {
                        path: _path + ".proxy",
                        expected: "(ProxyConfigArray | undefined)",
                        value: input.proxy
                    })) && input.proxy.map((elem, _index479)=>(null !== elem || _report(_exceptionable, {
                            path: _path + ".proxy[" + _index479 + "]",
                            expected: "ProxyConfigArrayItem",
                            value: elem
                        })) && (void 0 !== elem || _report(_exceptionable, {
                            path: _path + ".proxy[" + _index479 + "]",
                            expected: "ProxyConfigArrayItem",
                            value: elem
                        })) && ("function" == typeof elem || ("object" == typeof elem && null !== elem && false === Array.isArray(elem) || _report(_exceptionable, {
                            path: _path + ".proxy[" + _index479 + "]",
                            expected: "ProxyConfigArrayItem",
                            value: elem
                        })) && _vo165(elem, _path + ".proxy[" + _index479 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".proxy[" + _index479 + "]",
                            expected: "ProxyConfigArrayItem",
                            value: elem
                        }))).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".proxy",
                        expected: "(ProxyConfigArray | undefined)",
                        value: input.proxy
                    }),
                    (null !== input.open || _report(_exceptionable, {
                        path: _path + ".open",
                        expected: "(Array<string | Open> | Open | boolean | string | undefined)",
                        value: input.open
                    })) && (void 0 === input.open || "string" == typeof input.open || "boolean" == typeof input.open || Array.isArray(input.open) && input.open.map((elem, _index480)=>(null !== elem || _report(_exceptionable, {
                            path: _path + ".open[" + _index480 + "]",
                            expected: "(Open | string)",
                            value: elem
                        })) && (void 0 !== elem || _report(_exceptionable, {
                            path: _path + ".open[" + _index480 + "]",
                            expected: "(Open | string)",
                            value: elem
                        })) && ("string" == typeof elem || ("object" == typeof elem && null !== elem && false === Array.isArray(elem) || _report(_exceptionable, {
                            path: _path + ".open[" + _index480 + "]",
                            expected: "(Open | string)",
                            value: elem
                        })) && _vo166(elem, _path + ".open[" + _index480 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".open[" + _index480 + "]",
                            expected: "(Open | string)",
                            value: elem
                        }))).every((flag)=>flag) || "object" == typeof input.open && null !== input.open && false === Array.isArray(input.open) && _vo166(input.open, _path + ".open", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".open",
                        expected: "(Array<string | Open> | Open | boolean | string | undefined)",
                        value: input.open
                    }) || _report(_exceptionable, {
                        path: _path + ".open",
                        expected: "(Array<string | Open> | Open | boolean | string | undefined)",
                        value: input.open
                    })),
                    void 0 === input.setupExitSignals || "boolean" == typeof input.setupExitSignals || _report(_exceptionable, {
                        path: _path + ".setupExitSignals",
                        expected: "(boolean | undefined)",
                        value: input.setupExitSignals
                    }),
                    (null !== input.client || _report(_exceptionable, {
                        path: _path + ".client",
                        expected: "(ClientConfiguration | boolean | undefined)",
                        value: input.client
                    })) && (void 0 === input.client || "boolean" == typeof input.client || ("object" == typeof input.client && null !== input.client && false === Array.isArray(input.client) || _report(_exceptionable, {
                        path: _path + ".client",
                        expected: "(ClientConfiguration | boolean | undefined)",
                        value: input.client
                    })) && _vo168(input.client, _path + ".client", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".client",
                        expected: "(ClientConfiguration | boolean | undefined)",
                        value: input.client
                    })),
                    (null !== input.headers || _report(_exceptionable, {
                        path: _path + ".headers",
                        expected: "(Array<__type>.o1 | Record<string, string | string[]> | undefined)",
                        value: input.headers
                    })) && (void 0 === input.headers || "function" == typeof input.headers || Array.isArray(input.headers) && input.headers.map((elem, _index481)=>("object" == typeof elem && null !== elem || _report(_exceptionable, {
                            path: _path + ".headers[" + _index481 + "]",
                            expected: "__type.o44",
                            value: elem
                        })) && _vo171(elem, _path + ".headers[" + _index481 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".headers[" + _index481 + "]",
                            expected: "__type.o44",
                            value: elem
                        })).every((flag)=>flag) || "object" == typeof input.headers && null !== input.headers && false === Array.isArray(input.headers) && _vo131(input.headers, _path + ".headers", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".headers",
                        expected: "(Array<__type>.o1 | Record<string, string | string[]> | undefined)",
                        value: input.headers
                    }) || _report(_exceptionable, {
                        path: _path + ".headers",
                        expected: "(Array<__type>.o1 | Record<string, string | string[]> | undefined)",
                        value: input.headers
                    })),
                    void 0 === input.onListening || true,
                    void 0 === input.setupMiddlewares || true,
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "ipc",
                            "host",
                            "port",
                            "hot",
                            "liveReload",
                            "devMiddleware",
                            "compress",
                            "allowedHosts",
                            "historyApiFallback",
                            "bonjour",
                            "watchFiles",
                            "static",
                            "server",
                            "app",
                            "webSocketServer",
                            "proxy",
                            "open",
                            "setupExitSignals",
                            "client",
                            "headers",
                            "onListening",
                            "setupMiddlewares"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo134 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.mimeTypes || ("object" == typeof input.mimeTypes && null !== input.mimeTypes && false === Array.isArray(input.mimeTypes) || _report(_exceptionable, {
                        path: _path + ".mimeTypes",
                        expected: "(__type.o33 | undefined)",
                        value: input.mimeTypes
                    })) && _vo135(input.mimeTypes, _path + ".mimeTypes", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".mimeTypes",
                        expected: "(__type.o33 | undefined)",
                        value: input.mimeTypes
                    }),
                    void 0 === input.mimeTypeDefault || "string" == typeof input.mimeTypeDefault || _report(_exceptionable, {
                        path: _path + ".mimeTypeDefault",
                        expected: "(string | undefined)",
                        value: input.mimeTypeDefault
                    }),
                    (null !== input.writeToDisk || _report(_exceptionable, {
                        path: _path + ".writeToDisk",
                        expected: "(boolean | undefined)",
                        value: input.writeToDisk
                    })) && (void 0 === input.writeToDisk || "function" == typeof input.writeToDisk || "boolean" == typeof input.writeToDisk || _report(_exceptionable, {
                        path: _path + ".writeToDisk",
                        expected: "(boolean | undefined)",
                        value: input.writeToDisk
                    })),
                    void 0 === input.methods || (Array.isArray(input.methods) || _report(_exceptionable, {
                        path: _path + ".methods",
                        expected: "(Array<string> | undefined)",
                        value: input.methods
                    })) && input.methods.map((elem, _index482)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".methods[" + _index482 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".methods",
                        expected: "(Array<string> | undefined)",
                        value: input.methods
                    }),
                    true,
                    (null !== input.publicPath || _report(_exceptionable, {
                        path: _path + ".publicPath",
                        expected: "(string | undefined)",
                        value: input.publicPath
                    })) && (void 0 === input.publicPath || "function" == typeof input.publicPath || "string" == typeof input.publicPath || _report(_exceptionable, {
                        path: _path + ".publicPath",
                        expected: "(string | undefined)",
                        value: input.publicPath
                    })),
                    (null !== input.stats || _report(_exceptionable, {
                        path: _path + ".stats",
                        expected: "(\"detailed\" | \"errors-only\" | \"errors-warnings\" | \"minimal\" | \"none\" | \"normal\" | \"summary\" | \"verbose\" | StatsOptions | boolean | undefined)",
                        value: input.stats
                    })) && (void 0 === input.stats || "none" === input.stats || "verbose" === input.stats || "normal" === input.stats || "errors-only" === input.stats || "errors-warnings" === input.stats || "minimal" === input.stats || "detailed" === input.stats || "summary" === input.stats || "boolean" == typeof input.stats || ("object" == typeof input.stats && null !== input.stats && false === Array.isArray(input.stats) || _report(_exceptionable, {
                        path: _path + ".stats",
                        expected: "(\"detailed\" | \"errors-only\" | \"errors-warnings\" | \"minimal\" | \"none\" | \"normal\" | \"summary\" | \"verbose\" | StatsOptions | boolean | undefined)",
                        value: input.stats
                    })) && _vo117(input.stats, _path + ".stats", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".stats",
                        expected: "(\"detailed\" | \"errors-only\" | \"errors-warnings\" | \"minimal\" | \"none\" | \"normal\" | \"summary\" | \"verbose\" | StatsOptions | boolean | undefined)",
                        value: input.stats
                    })),
                    void 0 === input.serverSideRender || "boolean" == typeof input.serverSideRender || _report(_exceptionable, {
                        path: _path + ".serverSideRender",
                        expected: "(boolean | undefined)",
                        value: input.serverSideRender
                    }),
                    void 0 === input.outputFileSystem || ("object" == typeof input.outputFileSystem && null !== input.outputFileSystem || _report(_exceptionable, {
                        path: _path + ".outputFileSystem",
                        expected: "(OutputFileSystem | undefined)",
                        value: input.outputFileSystem
                    })) && _vo136(input.outputFileSystem, _path + ".outputFileSystem", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".outputFileSystem",
                        expected: "(OutputFileSystem | undefined)",
                        value: input.outputFileSystem
                    }),
                    void 0 === input.index || "string" == typeof input.index || "boolean" == typeof input.index || _report(_exceptionable, {
                        path: _path + ".index",
                        expected: "(boolean | string | undefined)",
                        value: input.index
                    }),
                    void 0 === input.modifyResponseData || true,
                    void 0 === input.etag || "strong" === input.etag || "weak" === input.etag || _report(_exceptionable, {
                        path: _path + ".etag",
                        expected: "(\"strong\" | \"weak\" | undefined)",
                        value: input.etag
                    }),
                    void 0 === input.lastModified || "boolean" == typeof input.lastModified || _report(_exceptionable, {
                        path: _path + ".lastModified",
                        expected: "(boolean | undefined)",
                        value: input.lastModified
                    }),
                    (null !== input.cacheControl || _report(_exceptionable, {
                        path: _path + ".cacheControl",
                        expected: "(__type.o35 | boolean | number | string | undefined)",
                        value: input.cacheControl
                    })) && (void 0 === input.cacheControl || "string" == typeof input.cacheControl || "number" == typeof input.cacheControl || "boolean" == typeof input.cacheControl || ("object" == typeof input.cacheControl && null !== input.cacheControl && false === Array.isArray(input.cacheControl) || _report(_exceptionable, {
                        path: _path + ".cacheControl",
                        expected: "(__type.o35 | boolean | number | string | undefined)",
                        value: input.cacheControl
                    })) && _vo138(input.cacheControl, _path + ".cacheControl", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".cacheControl",
                        expected: "(__type.o35 | boolean | number | string | undefined)",
                        value: input.cacheControl
                    })),
                    void 0 === input.cacheImmutable || "boolean" == typeof input.cacheImmutable || _report(_exceptionable, {
                        path: _path + ".cacheImmutable",
                        expected: "(boolean | undefined)",
                        value: input.cacheImmutable
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "mimeTypes",
                            "mimeTypeDefault",
                            "writeToDisk",
                            "methods",
                            "headers",
                            "publicPath",
                            "stats",
                            "serverSideRender",
                            "outputFileSystem",
                            "index",
                            "modifyResponseData",
                            "etag",
                            "lastModified",
                            "cacheControl",
                            "cacheImmutable"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo135 = (input, _path, _exceptionable = true)=>[
                    false === _exceptionable || Object.keys(input).map((key)=>{
                        const value = input[key];
                        if (void 0 === value) return true;
                        return "string" == typeof value || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "string",
                            value: value
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo136 = (input, _path, _exceptionable = true)=>[
                    true,
                    true,
                    true,
                    true,
                    true,
                    true,
                    void 0 === input.lstat || true,
                    true,
                    true,
                    void 0 === input.join || true,
                    void 0 === input.relative || true,
                    void 0 === input.dirname || true,
                    void 0 === input.createReadStream || true,
                    ("object" == typeof input.statSync && null !== input.statSync || _report(_exceptionable, {
                        path: _path + ".statSync",
                        expected: "\"fs\".StatSyncFn",
                        value: input.statSync
                    })) && _vo137(input.statSync, _path + ".statSync", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".statSync",
                        expected: "\"fs\".StatSyncFn",
                        value: input.statSync
                    }),
                    true,
                    10 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "writeFile",
                            "mkdir",
                            "readdir",
                            "rmdir",
                            "unlink",
                            "stat",
                            "lstat",
                            "readFile",
                            "chmod",
                            "join",
                            "relative",
                            "dirname",
                            "createReadStream",
                            "statSync",
                            "readFileSync"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo137 = (input, _path, _exceptionable = true)=>[
                    true,
                    "number" == typeof input.length || _report(_exceptionable, {
                        path: _path + ".length",
                        expected: "number",
                        value: input.length
                    }),
                    true,
                    ("object" == typeof input.caller && null !== input.caller || _report(_exceptionable, {
                        path: _path + ".caller",
                        expected: "Function",
                        value: input.caller
                    })) && _vo33(input.caller, _path + ".caller", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".caller",
                        expected: "Function",
                        value: input.caller
                    }),
                    "string" == typeof input.name || _report(_exceptionable, {
                        path: _path + ".name",
                        expected: "string",
                        value: input.name
                    }),
                    5 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "prototype",
                            "length",
                            "arguments",
                            "caller",
                            "name"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo138 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.maxAge || "number" == typeof input.maxAge || _report(_exceptionable, {
                        path: _path + ".maxAge",
                        expected: "(number | undefined)",
                        value: input.maxAge
                    }),
                    void 0 === input.immutable || "boolean" == typeof input.immutable || _report(_exceptionable, {
                        path: _path + ".immutable",
                        expected: "(boolean | undefined)",
                        value: input.immutable
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "maxAge",
                            "immutable"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo139 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.disableDotRule || true === input.disableDotRule || _report(_exceptionable, {
                        path: _path + ".disableDotRule",
                        expected: "(true | undefined)",
                        value: input.disableDotRule
                    }),
                    void 0 === input.htmlAcceptHeaders || (Array.isArray(input.htmlAcceptHeaders) || _report(_exceptionable, {
                        path: _path + ".htmlAcceptHeaders",
                        expected: "(ReadonlyArray<string> | undefined)",
                        value: input.htmlAcceptHeaders
                    })) && input.htmlAcceptHeaders.map((elem, _index483)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".htmlAcceptHeaders[" + _index483 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".htmlAcceptHeaders",
                        expected: "(ReadonlyArray<string> | undefined)",
                        value: input.htmlAcceptHeaders
                    }),
                    void 0 === input.index || "string" == typeof input.index || _report(_exceptionable, {
                        path: _path + ".index",
                        expected: "(string | undefined)",
                        value: input.index
                    }),
                    void 0 === input.logger || true,
                    void 0 === input.rewrites || (Array.isArray(input.rewrites) || _report(_exceptionable, {
                        path: _path + ".rewrites",
                        expected: "(ReadonlyArray<Rewrite> | undefined)",
                        value: input.rewrites
                    })) && input.rewrites.map((elem, _index484)=>("object" == typeof elem && null !== elem || _report(_exceptionable, {
                            path: _path + ".rewrites[" + _index484 + "]",
                            expected: "Rewrite",
                            value: elem
                        })) && _vo140(elem, _path + ".rewrites[" + _index484 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".rewrites[" + _index484 + "]",
                            expected: "Rewrite",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".rewrites",
                        expected: "(ReadonlyArray<Rewrite> | undefined)",
                        value: input.rewrites
                    }),
                    void 0 === input.verbose || "boolean" == typeof input.verbose || _report(_exceptionable, {
                        path: _path + ".verbose",
                        expected: "(boolean | undefined)",
                        value: input.verbose
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "disableDotRule",
                            "htmlAcceptHeaders",
                            "index",
                            "logger",
                            "rewrites",
                            "verbose"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo140 = (input, _path, _exceptionable = true)=>[
                    input.from instanceof RegExp || _report(_exceptionable, {
                        path: _path + ".from",
                        expected: "RegExp",
                        value: input.from
                    }),
                    (null !== input.to || _report(_exceptionable, {
                        path: _path + ".to",
                        expected: "(RegExp | string)",
                        value: input.to
                    })) && (void 0 !== input.to || _report(_exceptionable, {
                        path: _path + ".to",
                        expected: "(RegExp | string)",
                        value: input.to
                    })) && ("function" == typeof input.to || "string" == typeof input.to || input.to instanceof RegExp || _report(_exceptionable, {
                        path: _path + ".to",
                        expected: "(RegExp | string)",
                        value: input.to
                    })),
                    2 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "from",
                            "to"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo141 = (input, _path, _exceptionable = true)=>[
                    (null !== input.paths || _report(_exceptionable, {
                        path: _path + ".paths",
                        expected: "(Array<string> | string)",
                        value: input.paths
                    })) && (void 0 !== input.paths || _report(_exceptionable, {
                        path: _path + ".paths",
                        expected: "(Array<string> | string)",
                        value: input.paths
                    })) && ("string" == typeof input.paths || (Array.isArray(input.paths) || _report(_exceptionable, {
                        path: _path + ".paths",
                        expected: "(Array<string> | string)",
                        value: input.paths
                    })) && input.paths.map((elem, _index485)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".paths[" + _index485 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".paths",
                        expected: "(Array<string> | string)",
                        value: input.paths
                    })),
                    void 0 === input.options || ("object" == typeof input.options && null !== input.options && false === Array.isArray(input.options) || _report(_exceptionable, {
                        path: _path + ".options",
                        expected: "(ChokidarWatchOptions & { aggregateTimeout?: number; ignored?: any; poll?: number | boolean; } | undefined)",
                        value: input.options
                    })) && _vo142(input.options, _path + ".options", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".options",
                        expected: "(ChokidarWatchOptions & { aggregateTimeout?: number; ignored?: any; poll?: number | boolean; } | undefined)",
                        value: input.options
                    }),
                    1 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "paths",
                            "options"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo142 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.aggregateTimeout || "number" == typeof input.aggregateTimeout || _report(_exceptionable, {
                        path: _path + ".aggregateTimeout",
                        expected: "(number | undefined)",
                        value: input.aggregateTimeout
                    }),
                    true,
                    void 0 === input.poll || "number" == typeof input.poll || "boolean" == typeof input.poll || _report(_exceptionable, {
                        path: _path + ".poll",
                        expected: "(boolean | number | undefined)",
                        value: input.poll
                    }),
                    false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "aggregateTimeout",
                            "ignored",
                            "poll"
                        ].some((prop)=>key === prop)) return true;
                        input[key];
                        return true;
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo143 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.directory || "string" == typeof input.directory || _report(_exceptionable, {
                        path: _path + ".directory",
                        expected: "(string | undefined)",
                        value: input.directory
                    }),
                    (null !== input.publicPath || _report(_exceptionable, {
                        path: _path + ".publicPath",
                        expected: "(Array<string> | string | undefined)",
                        value: input.publicPath
                    })) && (void 0 === input.publicPath || "string" == typeof input.publicPath || (Array.isArray(input.publicPath) || _report(_exceptionable, {
                        path: _path + ".publicPath",
                        expected: "(Array<string> | string | undefined)",
                        value: input.publicPath
                    })) && input.publicPath.map((elem, _index486)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".publicPath[" + _index486 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".publicPath",
                        expected: "(Array<string> | string | undefined)",
                        value: input.publicPath
                    })),
                    (null !== input.serveIndex || _report(_exceptionable, {
                        path: _path + ".serveIndex",
                        expected: "(ServeIndexOptions | boolean | undefined)",
                        value: input.serveIndex
                    })) && (void 0 === input.serveIndex || "boolean" == typeof input.serveIndex || ("object" == typeof input.serveIndex && null !== input.serveIndex && false === Array.isArray(input.serveIndex) || _report(_exceptionable, {
                        path: _path + ".serveIndex",
                        expected: "(ServeIndexOptions | boolean | undefined)",
                        value: input.serveIndex
                    })) && _vo144(input.serveIndex, _path + ".serveIndex", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".serveIndex",
                        expected: "(ServeIndexOptions | boolean | undefined)",
                        value: input.serveIndex
                    })),
                    void 0 === input.staticOptions || ("object" == typeof input.staticOptions && null !== input.staticOptions && false === Array.isArray(input.staticOptions) || _report(_exceptionable, {
                        path: _path + ".staticOptions",
                        expected: "(ServeStaticOptions | undefined)",
                        value: input.staticOptions
                    })) && _vo145(input.staticOptions, _path + ".staticOptions", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".staticOptions",
                        expected: "(ServeStaticOptions | undefined)",
                        value: input.staticOptions
                    }),
                    (null !== input.watch || _report(_exceptionable, {
                        path: _path + ".watch",
                        expected: "(ChokidarWatchOptions & { aggregateTimeout?: number; ignored?: any; poll?: number | boolean; }.o1 | boolean | undefined)",
                        value: input.watch
                    })) && (void 0 === input.watch || "boolean" == typeof input.watch || ("object" == typeof input.watch && null !== input.watch && false === Array.isArray(input.watch) || _report(_exceptionable, {
                        path: _path + ".watch",
                        expected: "(ChokidarWatchOptions & { aggregateTimeout?: number; ignored?: any; poll?: number | boolean; }.o1 | boolean | undefined)",
                        value: input.watch
                    })) && _vo146(input.watch, _path + ".watch", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".watch",
                        expected: "(ChokidarWatchOptions & { aggregateTimeout?: number; ignored?: any; poll?: number | boolean; }.o1 | boolean | undefined)",
                        value: input.watch
                    })),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "directory",
                            "publicPath",
                            "serveIndex",
                            "staticOptions",
                            "watch"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo144 = (input, _path, _exceptionable = true)=>[
                    false === _exceptionable || Object.keys(input).map((key)=>{
                        input[key];
                        return true;
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo145 = (input, _path, _exceptionable = true)=>[
                    false === _exceptionable || Object.keys(input).map((key)=>{
                        input[key];
                        return true;
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo146 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.aggregateTimeout || "number" == typeof input.aggregateTimeout || _report(_exceptionable, {
                        path: _path + ".aggregateTimeout",
                        expected: "(number | undefined)",
                        value: input.aggregateTimeout
                    }),
                    true,
                    void 0 === input.poll || "number" == typeof input.poll || "boolean" == typeof input.poll || _report(_exceptionable, {
                        path: _path + ".poll",
                        expected: "(boolean | number | undefined)",
                        value: input.poll
                    }),
                    false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "aggregateTimeout",
                            "ignored",
                            "poll"
                        ].some((prop)=>key === prop)) return true;
                        input[key];
                        return true;
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo147 = (input, _path, _exceptionable = true)=>[
                    (null !== input.type || _report(_exceptionable, {
                        path: _path + ".type",
                        expected: "(string | undefined)",
                        value: input.type
                    })) && (void 0 === input.type || "function" == typeof input.type || "string" == typeof input.type || _report(_exceptionable, {
                        path: _path + ".type",
                        expected: "(string | undefined)",
                        value: input.type
                    })),
                    void 0 === input.options || ("object" == typeof input.options && null !== input.options && false === Array.isArray(input.options) || _report(_exceptionable, {
                        path: _path + ".options",
                        expected: "(ServerOptions | undefined)",
                        value: input.options
                    })) && _vo148(input.options, _path + ".options", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".options",
                        expected: "(ServerOptions | undefined)",
                        value: input.options
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "type",
                            "options"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo148 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.ALPNCallback || true,
                    void 0 === input.allowPartialTrustChain || "boolean" == typeof input.allowPartialTrustChain || _report(_exceptionable, {
                        path: _path + ".allowPartialTrustChain",
                        expected: "(boolean | undefined)",
                        value: input.allowPartialTrustChain
                    }),
                    (null !== input.ca || _report(_exceptionable, {
                        path: _path + ".ca",
                        expected: "(\"buffer\".global.Buffer<ArrayBufferLike> | Array<string | Buffer<ArrayBufferLike>> | string | undefined)",
                        value: input.ca
                    })) && (void 0 === input.ca || "string" == typeof input.ca || Array.isArray(input.ca) && input.ca.map((elem, _index487)=>(null !== elem || _report(_exceptionable, {
                            path: _path + ".ca[" + _index487 + "]",
                            expected: "(\"buffer\".global.Buffer<ArrayBufferLike> | string)",
                            value: elem
                        })) && (void 0 !== elem || _report(_exceptionable, {
                            path: _path + ".ca[" + _index487 + "]",
                            expected: "(\"buffer\".global.Buffer<ArrayBufferLike> | string)",
                            value: elem
                        })) && ("string" == typeof elem || ("object" == typeof elem && null !== elem || _report(_exceptionable, {
                            path: _path + ".ca[" + _index487 + "]",
                            expected: "(\"buffer\".global.Buffer<ArrayBufferLike> | string)",
                            value: elem
                        })) && _vo149(elem, _path + ".ca[" + _index487 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".ca[" + _index487 + "]",
                            expected: "(\"buffer\".global.Buffer<ArrayBufferLike> | string)",
                            value: elem
                        }))).every((flag)=>flag) || "object" == typeof input.ca && null !== input.ca && _vo149(input.ca, _path + ".ca", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".ca",
                        expected: "(\"buffer\".global.Buffer<ArrayBufferLike> | Array<string | Buffer<ArrayBufferLike>> | string | undefined)",
                        value: input.ca
                    }) || _report(_exceptionable, {
                        path: _path + ".ca",
                        expected: "(\"buffer\".global.Buffer<ArrayBufferLike> | Array<string | Buffer<ArrayBufferLike>> | string | undefined)",
                        value: input.ca
                    })),
                    (null !== input.cert || _report(_exceptionable, {
                        path: _path + ".cert",
                        expected: "(\"buffer\".global.Buffer<ArrayBufferLike> | Array<string | Buffer<ArrayBufferLike>> | string | undefined)",
                        value: input.cert
                    })) && (void 0 === input.cert || "string" == typeof input.cert || Array.isArray(input.cert) && input.cert.map((elem, _index488)=>(null !== elem || _report(_exceptionable, {
                            path: _path + ".cert[" + _index488 + "]",
                            expected: "(\"buffer\".global.Buffer<ArrayBufferLike> | string)",
                            value: elem
                        })) && (void 0 !== elem || _report(_exceptionable, {
                            path: _path + ".cert[" + _index488 + "]",
                            expected: "(\"buffer\".global.Buffer<ArrayBufferLike> | string)",
                            value: elem
                        })) && ("string" == typeof elem || ("object" == typeof elem && null !== elem || _report(_exceptionable, {
                            path: _path + ".cert[" + _index488 + "]",
                            expected: "(\"buffer\".global.Buffer<ArrayBufferLike> | string)",
                            value: elem
                        })) && _vo149(elem, _path + ".cert[" + _index488 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".cert[" + _index488 + "]",
                            expected: "(\"buffer\".global.Buffer<ArrayBufferLike> | string)",
                            value: elem
                        }))).every((flag)=>flag) || "object" == typeof input.cert && null !== input.cert && _vo149(input.cert, _path + ".cert", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".cert",
                        expected: "(\"buffer\".global.Buffer<ArrayBufferLike> | Array<string | Buffer<ArrayBufferLike>> | string | undefined)",
                        value: input.cert
                    }) || _report(_exceptionable, {
                        path: _path + ".cert",
                        expected: "(\"buffer\".global.Buffer<ArrayBufferLike> | Array<string | Buffer<ArrayBufferLike>> | string | undefined)",
                        value: input.cert
                    })),
                    void 0 === input.sigalgs || "string" == typeof input.sigalgs || _report(_exceptionable, {
                        path: _path + ".sigalgs",
                        expected: "(string | undefined)",
                        value: input.sigalgs
                    }),
                    void 0 === input.ciphers || "string" == typeof input.ciphers || _report(_exceptionable, {
                        path: _path + ".ciphers",
                        expected: "(string | undefined)",
                        value: input.ciphers
                    }),
                    void 0 === input.clientCertEngine || "string" == typeof input.clientCertEngine || _report(_exceptionable, {
                        path: _path + ".clientCertEngine",
                        expected: "(string | undefined)",
                        value: input.clientCertEngine
                    }),
                    (null !== input.crl || _report(_exceptionable, {
                        path: _path + ".crl",
                        expected: "(\"buffer\".global.Buffer<ArrayBufferLike> | Array<string | Buffer<ArrayBufferLike>> | string | undefined)",
                        value: input.crl
                    })) && (void 0 === input.crl || "string" == typeof input.crl || Array.isArray(input.crl) && input.crl.map((elem, _index489)=>(null !== elem || _report(_exceptionable, {
                            path: _path + ".crl[" + _index489 + "]",
                            expected: "(\"buffer\".global.Buffer<ArrayBufferLike> | string)",
                            value: elem
                        })) && (void 0 !== elem || _report(_exceptionable, {
                            path: _path + ".crl[" + _index489 + "]",
                            expected: "(\"buffer\".global.Buffer<ArrayBufferLike> | string)",
                            value: elem
                        })) && ("string" == typeof elem || ("object" == typeof elem && null !== elem || _report(_exceptionable, {
                            path: _path + ".crl[" + _index489 + "]",
                            expected: "(\"buffer\".global.Buffer<ArrayBufferLike> | string)",
                            value: elem
                        })) && _vo149(elem, _path + ".crl[" + _index489 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".crl[" + _index489 + "]",
                            expected: "(\"buffer\".global.Buffer<ArrayBufferLike> | string)",
                            value: elem
                        }))).every((flag)=>flag) || "object" == typeof input.crl && null !== input.crl && _vo149(input.crl, _path + ".crl", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".crl",
                        expected: "(\"buffer\".global.Buffer<ArrayBufferLike> | Array<string | Buffer<ArrayBufferLike>> | string | undefined)",
                        value: input.crl
                    }) || _report(_exceptionable, {
                        path: _path + ".crl",
                        expected: "(\"buffer\".global.Buffer<ArrayBufferLike> | Array<string | Buffer<ArrayBufferLike>> | string | undefined)",
                        value: input.crl
                    })),
                    (null !== input.dhparam || _report(_exceptionable, {
                        path: _path + ".dhparam",
                        expected: "(\"buffer\".global.Buffer<ArrayBufferLike> | string | undefined)",
                        value: input.dhparam
                    })) && (void 0 === input.dhparam || "string" == typeof input.dhparam || ("object" == typeof input.dhparam && null !== input.dhparam || _report(_exceptionable, {
                        path: _path + ".dhparam",
                        expected: "(\"buffer\".global.Buffer<ArrayBufferLike> | string | undefined)",
                        value: input.dhparam
                    })) && _vo149(input.dhparam, _path + ".dhparam", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".dhparam",
                        expected: "(\"buffer\".global.Buffer<ArrayBufferLike> | string | undefined)",
                        value: input.dhparam
                    })),
                    void 0 === input.ecdhCurve || "string" == typeof input.ecdhCurve || _report(_exceptionable, {
                        path: _path + ".ecdhCurve",
                        expected: "(string | undefined)",
                        value: input.ecdhCurve
                    }),
                    void 0 === input.honorCipherOrder || "boolean" == typeof input.honorCipherOrder || _report(_exceptionable, {
                        path: _path + ".honorCipherOrder",
                        expected: "(boolean | undefined)",
                        value: input.honorCipherOrder
                    }),
                    (null !== input.key || _report(_exceptionable, {
                        path: _path + ".key",
                        expected: "(\"buffer\".global.Buffer<ArrayBufferLike> | Array<string | Buffer<ArrayBufferLike> | KeyObject> | string | undefined)",
                        value: input.key
                    })) && (void 0 === input.key || "string" == typeof input.key || Array.isArray(input.key) && input.key.map((elem, _index490)=>(null !== elem || _report(_exceptionable, {
                            path: _path + ".key[" + _index490 + "]",
                            expected: "(\"buffer\".global.Buffer<ArrayBufferLike> | \"tls\".KeyObject | string)",
                            value: elem
                        })) && (void 0 !== elem || _report(_exceptionable, {
                            path: _path + ".key[" + _index490 + "]",
                            expected: "(\"buffer\".global.Buffer<ArrayBufferLike> | \"tls\".KeyObject | string)",
                            value: elem
                        })) && ("string" == typeof elem || ("object" == typeof elem && null !== elem || _report(_exceptionable, {
                            path: _path + ".key[" + _index490 + "]",
                            expected: "(\"buffer\".global.Buffer<ArrayBufferLike> | \"tls\".KeyObject | string)",
                            value: elem
                        })) && _vu1(elem, _path + ".key[" + _index490 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".key[" + _index490 + "]",
                            expected: "(\"buffer\".global.Buffer<ArrayBufferLike> | \"tls\".KeyObject | string)",
                            value: elem
                        }))).every((flag)=>flag) || "object" == typeof input.key && null !== input.key && _vo149(input.key, _path + ".key", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".key",
                        expected: "(\"buffer\".global.Buffer<ArrayBufferLike> | Array<string | Buffer<ArrayBufferLike> | KeyObject> | string | undefined)",
                        value: input.key
                    }) || _report(_exceptionable, {
                        path: _path + ".key",
                        expected: "(\"buffer\".global.Buffer<ArrayBufferLike> | Array<string | Buffer<ArrayBufferLike> | KeyObject> | string | undefined)",
                        value: input.key
                    })),
                    void 0 === input.privateKeyEngine || "string" == typeof input.privateKeyEngine || _report(_exceptionable, {
                        path: _path + ".privateKeyEngine",
                        expected: "(string | undefined)",
                        value: input.privateKeyEngine
                    }),
                    void 0 === input.privateKeyIdentifier || "string" == typeof input.privateKeyIdentifier || _report(_exceptionable, {
                        path: _path + ".privateKeyIdentifier",
                        expected: "(string | undefined)",
                        value: input.privateKeyIdentifier
                    }),
                    void 0 === input.maxVersion || "TLSv1.3" === input.maxVersion || "TLSv1.2" === input.maxVersion || "TLSv1.1" === input.maxVersion || "TLSv1" === input.maxVersion || _report(_exceptionable, {
                        path: _path + ".maxVersion",
                        expected: "(\"TLSv1\" | \"TLSv1.1\" | \"TLSv1.2\" | \"TLSv1.3\" | undefined)",
                        value: input.maxVersion
                    }),
                    void 0 === input.minVersion || "TLSv1.3" === input.minVersion || "TLSv1.2" === input.minVersion || "TLSv1.1" === input.minVersion || "TLSv1" === input.minVersion || _report(_exceptionable, {
                        path: _path + ".minVersion",
                        expected: "(\"TLSv1\" | \"TLSv1.1\" | \"TLSv1.2\" | \"TLSv1.3\" | undefined)",
                        value: input.minVersion
                    }),
                    void 0 === input.passphrase || "string" == typeof input.passphrase || _report(_exceptionable, {
                        path: _path + ".passphrase",
                        expected: "(string | undefined)",
                        value: input.passphrase
                    }),
                    (null !== input.pfx || _report(_exceptionable, {
                        path: _path + ".pfx",
                        expected: "(\"buffer\".global.Buffer<ArrayBufferLike> | Array<string | Buffer<ArrayBufferLike> | PxfObject> | string | undefined)",
                        value: input.pfx
                    })) && (void 0 === input.pfx || "string" == typeof input.pfx || Array.isArray(input.pfx) && input.pfx.map((elem, _index491)=>(null !== elem || _report(_exceptionable, {
                            path: _path + ".pfx[" + _index491 + "]",
                            expected: "(\"buffer\".global.Buffer<ArrayBufferLike> | \"tls\".PxfObject | string)",
                            value: elem
                        })) && (void 0 !== elem || _report(_exceptionable, {
                            path: _path + ".pfx[" + _index491 + "]",
                            expected: "(\"buffer\".global.Buffer<ArrayBufferLike> | \"tls\".PxfObject | string)",
                            value: elem
                        })) && ("string" == typeof elem || ("object" == typeof elem && null !== elem || _report(_exceptionable, {
                            path: _path + ".pfx[" + _index491 + "]",
                            expected: "(\"buffer\".global.Buffer<ArrayBufferLike> | \"tls\".PxfObject | string)",
                            value: elem
                        })) && _vu2(elem, _path + ".pfx[" + _index491 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".pfx[" + _index491 + "]",
                            expected: "(\"buffer\".global.Buffer<ArrayBufferLike> | \"tls\".PxfObject | string)",
                            value: elem
                        }))).every((flag)=>flag) || "object" == typeof input.pfx && null !== input.pfx && _vo149(input.pfx, _path + ".pfx", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".pfx",
                        expected: "(\"buffer\".global.Buffer<ArrayBufferLike> | Array<string | Buffer<ArrayBufferLike> | PxfObject> | string | undefined)",
                        value: input.pfx
                    }) || _report(_exceptionable, {
                        path: _path + ".pfx",
                        expected: "(\"buffer\".global.Buffer<ArrayBufferLike> | Array<string | Buffer<ArrayBufferLike> | PxfObject> | string | undefined)",
                        value: input.pfx
                    })),
                    void 0 === input.secureOptions || "number" == typeof input.secureOptions || _report(_exceptionable, {
                        path: _path + ".secureOptions",
                        expected: "(number | undefined)",
                        value: input.secureOptions
                    }),
                    void 0 === input.secureProtocol || "string" == typeof input.secureProtocol || _report(_exceptionable, {
                        path: _path + ".secureProtocol",
                        expected: "(string | undefined)",
                        value: input.secureProtocol
                    }),
                    void 0 === input.sessionIdContext || "string" == typeof input.sessionIdContext || _report(_exceptionable, {
                        path: _path + ".sessionIdContext",
                        expected: "(string | undefined)",
                        value: input.sessionIdContext
                    }),
                    void 0 === input.ticketKeys || ("object" == typeof input.ticketKeys && null !== input.ticketKeys || _report(_exceptionable, {
                        path: _path + ".ticketKeys",
                        expected: "(\"buffer\".global.Buffer<ArrayBufferLike> | undefined)",
                        value: input.ticketKeys
                    })) && _vo149(input.ticketKeys, _path + ".ticketKeys", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".ticketKeys",
                        expected: "(\"buffer\".global.Buffer<ArrayBufferLike> | undefined)",
                        value: input.ticketKeys
                    }),
                    void 0 === input.sessionTimeout || "number" == typeof input.sessionTimeout || _report(_exceptionable, {
                        path: _path + ".sessionTimeout",
                        expected: "(number | undefined)",
                        value: input.sessionTimeout
                    }),
                    void 0 === input.handshakeTimeout || "number" == typeof input.handshakeTimeout || _report(_exceptionable, {
                        path: _path + ".handshakeTimeout",
                        expected: "(number | undefined)",
                        value: input.handshakeTimeout
                    }),
                    void 0 === input.pskIdentityHint || "string" == typeof input.pskIdentityHint || _report(_exceptionable, {
                        path: _path + ".pskIdentityHint",
                        expected: "(string | undefined)",
                        value: input.pskIdentityHint
                    }),
                    void 0 === input.secureContext || ("object" == typeof input.secureContext && null !== input.secureContext || _report(_exceptionable, {
                        path: _path + ".secureContext",
                        expected: "(\"tls\".SecureContext | undefined)",
                        value: input.secureContext
                    })) && _vo152(input.secureContext, _path + ".secureContext", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".secureContext",
                        expected: "(\"tls\".SecureContext | undefined)",
                        value: input.secureContext
                    }),
                    void 0 === input.enableTrace || "boolean" == typeof input.enableTrace || _report(_exceptionable, {
                        path: _path + ".enableTrace",
                        expected: "(boolean | undefined)",
                        value: input.enableTrace
                    }),
                    void 0 === input.requestCert || "boolean" == typeof input.requestCert || _report(_exceptionable, {
                        path: _path + ".requestCert",
                        expected: "(boolean | undefined)",
                        value: input.requestCert
                    }),
                    (null !== input.ALPNProtocols || _report(_exceptionable, {
                        path: _path + ".ALPNProtocols",
                        expected: "(Array<Uint8Array<ArrayBufferLike>> | Array<string> | Uint8Array | undefined)",
                        value: input.ALPNProtocols
                    })) && (void 0 === input.ALPNProtocols || input.ALPNProtocols instanceof Uint8Array || (Array.isArray(input.ALPNProtocols) || _report(_exceptionable, {
                        path: _path + ".ALPNProtocols",
                        expected: "(Array<Uint8Array<ArrayBufferLike>> | Array<string> | Uint8Array | undefined)",
                        value: input.ALPNProtocols
                    })) && (_vp3(input.ALPNProtocols, _path + ".ALPNProtocols", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".ALPNProtocols",
                        expected: "Array<string> | Array<Uint8Array<ArrayBufferLike>>",
                        value: input.ALPNProtocols
                    })) || _report(_exceptionable, {
                        path: _path + ".ALPNProtocols",
                        expected: "(Array<Uint8Array<ArrayBufferLike>> | Array<string> | Uint8Array | undefined)",
                        value: input.ALPNProtocols
                    })),
                    void 0 === input.SNICallback || true,
                    void 0 === input.rejectUnauthorized || "boolean" == typeof input.rejectUnauthorized || _report(_exceptionable, {
                        path: _path + ".rejectUnauthorized",
                        expected: "(boolean | undefined)",
                        value: input.rejectUnauthorized
                    }),
                    void 0 === input.allowHalfOpen || "boolean" == typeof input.allowHalfOpen || _report(_exceptionable, {
                        path: _path + ".allowHalfOpen",
                        expected: "(boolean | undefined)",
                        value: input.allowHalfOpen
                    }),
                    void 0 === input.pauseOnConnect || "boolean" == typeof input.pauseOnConnect || _report(_exceptionable, {
                        path: _path + ".pauseOnConnect",
                        expected: "(boolean | undefined)",
                        value: input.pauseOnConnect
                    }),
                    void 0 === input.noDelay || "boolean" == typeof input.noDelay || _report(_exceptionable, {
                        path: _path + ".noDelay",
                        expected: "(boolean | undefined)",
                        value: input.noDelay
                    }),
                    void 0 === input.keepAlive || "boolean" == typeof input.keepAlive || _report(_exceptionable, {
                        path: _path + ".keepAlive",
                        expected: "(boolean | undefined)",
                        value: input.keepAlive
                    }),
                    void 0 === input.keepAliveInitialDelay || "number" == typeof input.keepAliveInitialDelay || _report(_exceptionable, {
                        path: _path + ".keepAliveInitialDelay",
                        expected: "(number | undefined)",
                        value: input.keepAliveInitialDelay
                    }),
                    void 0 === input.highWaterMark || "number" == typeof input.highWaterMark || _report(_exceptionable, {
                        path: _path + ".highWaterMark",
                        expected: "(number | undefined)",
                        value: input.highWaterMark
                    }),
                    void 0 === input.blockList || ("object" == typeof input.blockList && null !== input.blockList || _report(_exceptionable, {
                        path: _path + ".blockList",
                        expected: "(\"net\".BlockList | undefined)",
                        value: input.blockList
                    })) && _vo153(input.blockList, _path + ".blockList", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".blockList",
                        expected: "(\"net\".BlockList | undefined)",
                        value: input.blockList
                    }),
                    void 0 === input.IncomingMessage || ("object" == typeof input.IncomingMessage && null !== input.IncomingMessage || _report(_exceptionable, {
                        path: _path + ".IncomingMessage",
                        expected: "(\"http\".IncomingMessage | undefined)",
                        value: input.IncomingMessage
                    })) && _vo154(input.IncomingMessage, _path + ".IncomingMessage", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".IncomingMessage",
                        expected: "(\"http\".IncomingMessage | undefined)",
                        value: input.IncomingMessage
                    }),
                    void 0 === input.ServerResponse || ("object" == typeof input.ServerResponse && null !== input.ServerResponse || _report(_exceptionable, {
                        path: _path + ".ServerResponse",
                        expected: "(\"http\".ServerResponse | undefined)",
                        value: input.ServerResponse
                    })) && _vo161(input.ServerResponse, _path + ".ServerResponse", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".ServerResponse",
                        expected: "(\"http\".ServerResponse | undefined)",
                        value: input.ServerResponse
                    }),
                    void 0 === input.requestTimeout || "number" == typeof input.requestTimeout || _report(_exceptionable, {
                        path: _path + ".requestTimeout",
                        expected: "(number | undefined)",
                        value: input.requestTimeout
                    }),
                    void 0 === input.joinDuplicateHeaders || "boolean" == typeof input.joinDuplicateHeaders || _report(_exceptionable, {
                        path: _path + ".joinDuplicateHeaders",
                        expected: "(boolean | undefined)",
                        value: input.joinDuplicateHeaders
                    }),
                    void 0 === input.keepAliveTimeout || "number" == typeof input.keepAliveTimeout || _report(_exceptionable, {
                        path: _path + ".keepAliveTimeout",
                        expected: "(number | undefined)",
                        value: input.keepAliveTimeout
                    }),
                    void 0 === input.connectionsCheckingInterval || "number" == typeof input.connectionsCheckingInterval || _report(_exceptionable, {
                        path: _path + ".connectionsCheckingInterval",
                        expected: "(number | undefined)",
                        value: input.connectionsCheckingInterval
                    }),
                    void 0 === input.headersTimeout || "number" == typeof input.headersTimeout || _report(_exceptionable, {
                        path: _path + ".headersTimeout",
                        expected: "(number | undefined)",
                        value: input.headersTimeout
                    }),
                    void 0 === input.insecureHTTPParser || "boolean" == typeof input.insecureHTTPParser || _report(_exceptionable, {
                        path: _path + ".insecureHTTPParser",
                        expected: "(boolean | undefined)",
                        value: input.insecureHTTPParser
                    }),
                    void 0 === input.maxHeaderSize || "number" == typeof input.maxHeaderSize || _report(_exceptionable, {
                        path: _path + ".maxHeaderSize",
                        expected: "(number | undefined)",
                        value: input.maxHeaderSize
                    }),
                    void 0 === input.requireHostHeader || "boolean" == typeof input.requireHostHeader || _report(_exceptionable, {
                        path: _path + ".requireHostHeader",
                        expected: "(boolean | undefined)",
                        value: input.requireHostHeader
                    }),
                    void 0 === input.uniqueHeaders || (Array.isArray(input.uniqueHeaders) || _report(_exceptionable, {
                        path: _path + ".uniqueHeaders",
                        expected: "(Array<string | string[]> | undefined)",
                        value: input.uniqueHeaders
                    })) && input.uniqueHeaders.map((elem, _index496)=>(null !== elem || _report(_exceptionable, {
                            path: _path + ".uniqueHeaders[" + _index496 + "]",
                            expected: "(Array<string> | string)",
                            value: elem
                        })) && (void 0 !== elem || _report(_exceptionable, {
                            path: _path + ".uniqueHeaders[" + _index496 + "]",
                            expected: "(Array<string> | string)",
                            value: elem
                        })) && ("string" == typeof elem || (Array.isArray(elem) || _report(_exceptionable, {
                            path: _path + ".uniqueHeaders[" + _index496 + "]",
                            expected: "(Array<string> | string)",
                            value: elem
                        })) && elem.map((elem, _index497)=>"string" == typeof elem || _report(_exceptionable, {
                                path: _path + ".uniqueHeaders[" + _index496 + "][" + _index497 + "]",
                                expected: "string",
                                value: elem
                            })).every((flag)=>flag) || _report(_exceptionable, {
                            path: _path + ".uniqueHeaders[" + _index496 + "]",
                            expected: "(Array<string> | string)",
                            value: elem
                        }))).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".uniqueHeaders",
                        expected: "(Array<string | string[]> | undefined)",
                        value: input.uniqueHeaders
                    }),
                    void 0 === input.rejectNonStandardBodyWrites || "boolean" == typeof input.rejectNonStandardBodyWrites || _report(_exceptionable, {
                        path: _path + ".rejectNonStandardBodyWrites",
                        expected: "(boolean | undefined)",
                        value: input.rejectNonStandardBodyWrites
                    }),
                    void 0 === input.spdy || ("object" == typeof input.spdy && null !== input.spdy && false === Array.isArray(input.spdy) || _report(_exceptionable, {
                        path: _path + ".spdy",
                        expected: "(__type.o39 | undefined)",
                        value: input.spdy
                    })) && _vo163(input.spdy, _path + ".spdy", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".spdy",
                        expected: "(__type.o39 | undefined)",
                        value: input.spdy
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "ALPNCallback",
                            "allowPartialTrustChain",
                            "ca",
                            "cert",
                            "sigalgs",
                            "ciphers",
                            "clientCertEngine",
                            "crl",
                            "dhparam",
                            "ecdhCurve",
                            "honorCipherOrder",
                            "key",
                            "privateKeyEngine",
                            "privateKeyIdentifier",
                            "maxVersion",
                            "minVersion",
                            "passphrase",
                            "pfx",
                            "secureOptions",
                            "secureProtocol",
                            "sessionIdContext",
                            "ticketKeys",
                            "sessionTimeout",
                            "handshakeTimeout",
                            "pskIdentityHint",
                            "secureContext",
                            "enableTrace",
                            "requestCert",
                            "ALPNProtocols",
                            "SNICallback",
                            "rejectUnauthorized",
                            "allowHalfOpen",
                            "pauseOnConnect",
                            "noDelay",
                            "keepAlive",
                            "keepAliveInitialDelay",
                            "highWaterMark",
                            "blockList",
                            "IncomingMessage",
                            "ServerResponse",
                            "requestTimeout",
                            "joinDuplicateHeaders",
                            "keepAliveTimeout",
                            "connectionsCheckingInterval",
                            "headersTimeout",
                            "insecureHTTPParser",
                            "maxHeaderSize",
                            "requireHostHeader",
                            "uniqueHeaders",
                            "rejectNonStandardBodyWrites",
                            "spdy"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo149 = (input, _path, _exceptionable = true)=>[
                    "number" == typeof input.BYTES_PER_ELEMENT || _report(_exceptionable, {
                        path: _path + ".BYTES_PER_ELEMENT",
                        expected: "number",
                        value: input.BYTES_PER_ELEMENT
                    }),
                    input.buffer instanceof ArrayBuffer || input.buffer instanceof SharedArrayBuffer || _report(_exceptionable, {
                        path: _path + ".buffer",
                        expected: "(ArrayBuffer | SharedArrayBuffer)",
                        value: input.buffer
                    }),
                    "number" == typeof input.byteLength || _report(_exceptionable, {
                        path: _path + ".byteLength",
                        expected: "number",
                        value: input.byteLength
                    }),
                    "number" == typeof input.byteOffset || _report(_exceptionable, {
                        path: _path + ".byteOffset",
                        expected: "number",
                        value: input.byteOffset
                    }),
                    "number" == typeof input.length || _report(_exceptionable, {
                        path: _path + ".length",
                        expected: "number",
                        value: input.length
                    }),
                    "Uint8Array" === input["__@toStringTag@6659"] || _report(_exceptionable, {
                        path: _path + "[\"__@toStringTag@6659\"]",
                        expected: "\"Uint8Array\"",
                        value: input["__@toStringTag@6659"]
                    }),
                    false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "BYTES_PER_ELEMENT",
                            "buffer",
                            "byteLength",
                            "byteOffset",
                            "length",
                            "__@toStringTag@6659"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        if ("number" == typeof Number(key)) return "number" == typeof value || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "number",
                            value: value
                        });
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo150 = (input, _path, _exceptionable = true)=>[
                    (null !== input.pem || _report(_exceptionable, {
                        path: _path + ".pem",
                        expected: "(\"buffer\".global.Buffer<ArrayBufferLike> | string)",
                        value: input.pem
                    })) && (void 0 !== input.pem || _report(_exceptionable, {
                        path: _path + ".pem",
                        expected: "(\"buffer\".global.Buffer<ArrayBufferLike> | string)",
                        value: input.pem
                    })) && ("string" == typeof input.pem || ("object" == typeof input.pem && null !== input.pem || _report(_exceptionable, {
                        path: _path + ".pem",
                        expected: "(\"buffer\".global.Buffer<ArrayBufferLike> | string)",
                        value: input.pem
                    })) && _vo149(input.pem, _path + ".pem", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".pem",
                        expected: "(\"buffer\".global.Buffer<ArrayBufferLike> | string)",
                        value: input.pem
                    })),
                    void 0 === input.passphrase || "string" == typeof input.passphrase || _report(_exceptionable, {
                        path: _path + ".passphrase",
                        expected: "(string | undefined)",
                        value: input.passphrase
                    }),
                    1 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "pem",
                            "passphrase"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo151 = (input, _path, _exceptionable = true)=>[
                    (null !== input.buf || _report(_exceptionable, {
                        path: _path + ".buf",
                        expected: "(\"buffer\".global.Buffer<ArrayBufferLike> | string)",
                        value: input.buf
                    })) && (void 0 !== input.buf || _report(_exceptionable, {
                        path: _path + ".buf",
                        expected: "(\"buffer\".global.Buffer<ArrayBufferLike> | string)",
                        value: input.buf
                    })) && ("string" == typeof input.buf || ("object" == typeof input.buf && null !== input.buf || _report(_exceptionable, {
                        path: _path + ".buf",
                        expected: "(\"buffer\".global.Buffer<ArrayBufferLike> | string)",
                        value: input.buf
                    })) && _vo149(input.buf, _path + ".buf", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".buf",
                        expected: "(\"buffer\".global.Buffer<ArrayBufferLike> | string)",
                        value: input.buf
                    })),
                    void 0 === input.passphrase || "string" == typeof input.passphrase || _report(_exceptionable, {
                        path: _path + ".passphrase",
                        expected: "(string | undefined)",
                        value: input.passphrase
                    }),
                    1 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "buf",
                            "passphrase"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo152 = (input, _path, _exceptionable = true)=>[
                    true,
                    1 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "context"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo153 = (input, _path, _exceptionable = true)=>[
                    (Array.isArray(input.rules) || _report(_exceptionable, {
                        path: _path + ".rules",
                        expected: "ReadonlyArray<string>",
                        value: input.rules
                    })) && input.rules.map((elem, _index498)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".rules[" + _index498 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".rules",
                        expected: "ReadonlyArray<string>",
                        value: input.rules
                    }),
                    1 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "rules"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo154 = (input, _path, _exceptionable = true)=>[
                    ("object" == typeof input.prototype && null !== input.prototype || _report(_exceptionable, {
                        path: _path + ".prototype",
                        expected: "\"http\".IncomingMessage.o1",
                        value: input.prototype
                    })) && _vo155(input.prototype, _path + ".prototype", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".prototype",
                        expected: "\"http\".IncomingMessage.o1",
                        value: input.prototype
                    }),
                    true,
                    true,
                    "boolean" == typeof input.captureRejections || _report(_exceptionable, {
                        path: _path + ".captureRejections",
                        expected: "boolean",
                        value: input.captureRejections
                    }),
                    "number" == typeof input.defaultMaxListeners || _report(_exceptionable, {
                        path: _path + ".defaultMaxListeners",
                        expected: "number",
                        value: input.defaultMaxListeners
                    }),
                    "number" == typeof input.length || _report(_exceptionable, {
                        path: _path + ".length",
                        expected: "number",
                        value: input.length
                    }),
                    true,
                    ("object" == typeof input.caller && null !== input.caller || _report(_exceptionable, {
                        path: _path + ".caller",
                        expected: "Function",
                        value: input.caller
                    })) && _vo33(input.caller, _path + ".caller", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".caller",
                        expected: "Function",
                        value: input.caller
                    }),
                    "string" == typeof input.name || _report(_exceptionable, {
                        path: _path + ".name",
                        expected: "string",
                        value: input.name
                    }),
                    9 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "prototype",
                            "errorMonitor",
                            "captureRejectionSymbol",
                            "captureRejections",
                            "defaultMaxListeners",
                            "length",
                            "arguments",
                            "caller",
                            "name"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo155 = (input, _path, _exceptionable = true)=>[
                    "boolean" == typeof input.aborted || _report(_exceptionable, {
                        path: _path + ".aborted",
                        expected: "boolean",
                        value: input.aborted
                    }),
                    "string" == typeof input.httpVersion || _report(_exceptionable, {
                        path: _path + ".httpVersion",
                        expected: "string",
                        value: input.httpVersion
                    }),
                    "number" == typeof input.httpVersionMajor || _report(_exceptionable, {
                        path: _path + ".httpVersionMajor",
                        expected: "number",
                        value: input.httpVersionMajor
                    }),
                    "number" == typeof input.httpVersionMinor || _report(_exceptionable, {
                        path: _path + ".httpVersionMinor",
                        expected: "number",
                        value: input.httpVersionMinor
                    }),
                    "boolean" == typeof input.complete || _report(_exceptionable, {
                        path: _path + ".complete",
                        expected: "boolean",
                        value: input.complete
                    }),
                    ("object" == typeof input.connection && null !== input.connection || _report(_exceptionable, {
                        path: _path + ".connection",
                        expected: "\"net\".Socket",
                        value: input.connection
                    })) && _vo156(input.connection, _path + ".connection", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".connection",
                        expected: "\"net\".Socket",
                        value: input.connection
                    }),
                    ("object" == typeof input.socket && null !== input.socket || _report(_exceptionable, {
                        path: _path + ".socket",
                        expected: "\"net\".Socket",
                        value: input.socket
                    })) && _vo156(input.socket, _path + ".socket", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".socket",
                        expected: "\"net\".Socket",
                        value: input.socket
                    }),
                    ("object" == typeof input.headers && null !== input.headers && false === Array.isArray(input.headers) || _report(_exceptionable, {
                        path: _path + ".headers",
                        expected: "\"http\".IncomingHttpHeaders",
                        value: input.headers
                    })) && _vo158(input.headers, _path + ".headers", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".headers",
                        expected: "\"http\".IncomingHttpHeaders",
                        value: input.headers
                    }),
                    ("object" == typeof input.headersDistinct && null !== input.headersDistinct && false === Array.isArray(input.headersDistinct) || _report(_exceptionable, {
                        path: _path + ".headersDistinct",
                        expected: "global.NodeJS.Dict<Array<string>>",
                        value: input.headersDistinct
                    })) && _vo159(input.headersDistinct, _path + ".headersDistinct", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".headersDistinct",
                        expected: "global.NodeJS.Dict<Array<string>>",
                        value: input.headersDistinct
                    }),
                    (Array.isArray(input.rawHeaders) || _report(_exceptionable, {
                        path: _path + ".rawHeaders",
                        expected: "Array<string>",
                        value: input.rawHeaders
                    })) && input.rawHeaders.map((elem, _index499)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".rawHeaders[" + _index499 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".rawHeaders",
                        expected: "Array<string>",
                        value: input.rawHeaders
                    }),
                    ("object" == typeof input.trailers && null !== input.trailers && false === Array.isArray(input.trailers) || _report(_exceptionable, {
                        path: _path + ".trailers",
                        expected: "global.NodeJS.Dict<string>",
                        value: input.trailers
                    })) && _vo160(input.trailers, _path + ".trailers", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".trailers",
                        expected: "global.NodeJS.Dict<string>",
                        value: input.trailers
                    }),
                    ("object" == typeof input.trailersDistinct && null !== input.trailersDistinct && false === Array.isArray(input.trailersDistinct) || _report(_exceptionable, {
                        path: _path + ".trailersDistinct",
                        expected: "global.NodeJS.Dict<Array<string>>",
                        value: input.trailersDistinct
                    })) && _vo159(input.trailersDistinct, _path + ".trailersDistinct", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".trailersDistinct",
                        expected: "global.NodeJS.Dict<Array<string>>",
                        value: input.trailersDistinct
                    }),
                    (Array.isArray(input.rawTrailers) || _report(_exceptionable, {
                        path: _path + ".rawTrailers",
                        expected: "Array<string>",
                        value: input.rawTrailers
                    })) && input.rawTrailers.map((elem, _index500)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".rawTrailers[" + _index500 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".rawTrailers",
                        expected: "Array<string>",
                        value: input.rawTrailers
                    }),
                    void 0 === input.method || "string" == typeof input.method || _report(_exceptionable, {
                        path: _path + ".method",
                        expected: "(string | undefined)",
                        value: input.method
                    }),
                    void 0 === input.url || "string" == typeof input.url || _report(_exceptionable, {
                        path: _path + ".url",
                        expected: "(string | undefined)",
                        value: input.url
                    }),
                    void 0 === input.statusCode || "number" == typeof input.statusCode || _report(_exceptionable, {
                        path: _path + ".statusCode",
                        expected: "(number | undefined)",
                        value: input.statusCode
                    }),
                    void 0 === input.statusMessage || "string" == typeof input.statusMessage || _report(_exceptionable, {
                        path: _path + ".statusMessage",
                        expected: "(string | undefined)",
                        value: input.statusMessage
                    }),
                    "boolean" == typeof input.readableAborted || _report(_exceptionable, {
                        path: _path + ".readableAborted",
                        expected: "boolean",
                        value: input.readableAborted
                    }),
                    "boolean" == typeof input.readable || _report(_exceptionable, {
                        path: _path + ".readable",
                        expected: "boolean",
                        value: input.readable
                    }),
                    "boolean" == typeof input.readableDidRead || _report(_exceptionable, {
                        path: _path + ".readableDidRead",
                        expected: "boolean",
                        value: input.readableDidRead
                    }),
                    null === input.readableEncoding || true === _vv501.has(input.readableEncoding) || _report(_exceptionable, {
                        path: _path + ".readableEncoding",
                        expected: "(\"ascii\" | \"base64\" | \"base64url\" | \"binary\" | \"hex\" | \"latin1\" | \"ucs-2\" | \"ucs2\" | \"utf-16le\" | \"utf-8\" | \"utf16le\" | \"utf8\" | null)",
                        value: input.readableEncoding
                    }),
                    "boolean" == typeof input.readableEnded || _report(_exceptionable, {
                        path: _path + ".readableEnded",
                        expected: "boolean",
                        value: input.readableEnded
                    }),
                    null === input.readableFlowing || "boolean" == typeof input.readableFlowing || _report(_exceptionable, {
                        path: _path + ".readableFlowing",
                        expected: "(boolean | null)",
                        value: input.readableFlowing
                    }),
                    "number" == typeof input.readableHighWaterMark || _report(_exceptionable, {
                        path: _path + ".readableHighWaterMark",
                        expected: "number",
                        value: input.readableHighWaterMark
                    }),
                    "number" == typeof input.readableLength || _report(_exceptionable, {
                        path: _path + ".readableLength",
                        expected: "number",
                        value: input.readableLength
                    }),
                    "boolean" == typeof input.readableObjectMode || _report(_exceptionable, {
                        path: _path + ".readableObjectMode",
                        expected: "boolean",
                        value: input.readableObjectMode
                    }),
                    "boolean" == typeof input.destroyed || _report(_exceptionable, {
                        path: _path + ".destroyed",
                        expected: "boolean",
                        value: input.destroyed
                    }),
                    "boolean" == typeof input.closed || _report(_exceptionable, {
                        path: _path + ".closed",
                        expected: "boolean",
                        value: input.closed
                    }),
                    null === input.errored || ("object" == typeof input.errored && null !== input.errored || _report(_exceptionable, {
                        path: _path + ".errored",
                        expected: "(Error | null)",
                        value: input.errored
                    })) && _vo157(input.errored, _path + ".errored", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".errored",
                        expected: "(Error | null)",
                        value: input.errored
                    }),
                    25 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "aborted",
                            "httpVersion",
                            "httpVersionMajor",
                            "httpVersionMinor",
                            "complete",
                            "connection",
                            "socket",
                            "headers",
                            "headersDistinct",
                            "rawHeaders",
                            "trailers",
                            "trailersDistinct",
                            "rawTrailers",
                            "method",
                            "url",
                            "statusCode",
                            "statusMessage",
                            "readableAborted",
                            "readable",
                            "readableDidRead",
                            "readableEncoding",
                            "readableEnded",
                            "readableFlowing",
                            "readableHighWaterMark",
                            "readableLength",
                            "readableObjectMode",
                            "destroyed",
                            "closed",
                            "errored"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo156 = (input, _path, _exceptionable = true)=>[
                    (Array.isArray(input.autoSelectFamilyAttemptedAddresses) || _report(_exceptionable, {
                        path: _path + ".autoSelectFamilyAttemptedAddresses",
                        expected: "Array<string>",
                        value: input.autoSelectFamilyAttemptedAddresses
                    })) && input.autoSelectFamilyAttemptedAddresses.map((elem, _index502)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".autoSelectFamilyAttemptedAddresses[" + _index502 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".autoSelectFamilyAttemptedAddresses",
                        expected: "Array<string>",
                        value: input.autoSelectFamilyAttemptedAddresses
                    }),
                    "number" == typeof input.bufferSize || _report(_exceptionable, {
                        path: _path + ".bufferSize",
                        expected: "number",
                        value: input.bufferSize
                    }),
                    "number" == typeof input.bytesRead || _report(_exceptionable, {
                        path: _path + ".bytesRead",
                        expected: "number",
                        value: input.bytesRead
                    }),
                    "number" == typeof input.bytesWritten || _report(_exceptionable, {
                        path: _path + ".bytesWritten",
                        expected: "number",
                        value: input.bytesWritten
                    }),
                    "boolean" == typeof input.connecting || _report(_exceptionable, {
                        path: _path + ".connecting",
                        expected: "boolean",
                        value: input.connecting
                    }),
                    "boolean" == typeof input.pending || _report(_exceptionable, {
                        path: _path + ".pending",
                        expected: "boolean",
                        value: input.pending
                    }),
                    "boolean" == typeof input.destroyed || _report(_exceptionable, {
                        path: _path + ".destroyed",
                        expected: "boolean",
                        value: input.destroyed
                    }),
                    void 0 === input.localAddress || "string" == typeof input.localAddress || _report(_exceptionable, {
                        path: _path + ".localAddress",
                        expected: "(string | undefined)",
                        value: input.localAddress
                    }),
                    void 0 === input.localPort || "number" == typeof input.localPort || _report(_exceptionable, {
                        path: _path + ".localPort",
                        expected: "(number | undefined)",
                        value: input.localPort
                    }),
                    void 0 === input.localFamily || "string" == typeof input.localFamily || _report(_exceptionable, {
                        path: _path + ".localFamily",
                        expected: "(string | undefined)",
                        value: input.localFamily
                    }),
                    "opening" === input.readyState || "open" === input.readyState || "readOnly" === input.readyState || "writeOnly" === input.readyState || "closed" === input.readyState || _report(_exceptionable, {
                        path: _path + ".readyState",
                        expected: "(\"closed\" | \"open\" | \"opening\" | \"readOnly\" | \"writeOnly\")",
                        value: input.readyState
                    }),
                    void 0 === input.remoteAddress || "string" == typeof input.remoteAddress || _report(_exceptionable, {
                        path: _path + ".remoteAddress",
                        expected: "(string | undefined)",
                        value: input.remoteAddress
                    }),
                    void 0 === input.remoteFamily || "string" == typeof input.remoteFamily || _report(_exceptionable, {
                        path: _path + ".remoteFamily",
                        expected: "(string | undefined)",
                        value: input.remoteFamily
                    }),
                    void 0 === input.remotePort || "number" == typeof input.remotePort || _report(_exceptionable, {
                        path: _path + ".remotePort",
                        expected: "(number | undefined)",
                        value: input.remotePort
                    }),
                    void 0 === input.timeout || "number" == typeof input.timeout || _report(_exceptionable, {
                        path: _path + ".timeout",
                        expected: "(number | undefined)",
                        value: input.timeout
                    }),
                    "boolean" == typeof input.allowHalfOpen || _report(_exceptionable, {
                        path: _path + ".allowHalfOpen",
                        expected: "boolean",
                        value: input.allowHalfOpen
                    }),
                    "boolean" == typeof input.readableAborted || _report(_exceptionable, {
                        path: _path + ".readableAborted",
                        expected: "boolean",
                        value: input.readableAborted
                    }),
                    "boolean" == typeof input.readable || _report(_exceptionable, {
                        path: _path + ".readable",
                        expected: "boolean",
                        value: input.readable
                    }),
                    "boolean" == typeof input.readableDidRead || _report(_exceptionable, {
                        path: _path + ".readableDidRead",
                        expected: "boolean",
                        value: input.readableDidRead
                    }),
                    null === input.readableEncoding || true === _vv503.has(input.readableEncoding) || _report(_exceptionable, {
                        path: _path + ".readableEncoding",
                        expected: "(\"ascii\" | \"base64\" | \"base64url\" | \"binary\" | \"hex\" | \"latin1\" | \"ucs-2\" | \"ucs2\" | \"utf-16le\" | \"utf-8\" | \"utf16le\" | \"utf8\" | null)",
                        value: input.readableEncoding
                    }),
                    "boolean" == typeof input.readableEnded || _report(_exceptionable, {
                        path: _path + ".readableEnded",
                        expected: "boolean",
                        value: input.readableEnded
                    }),
                    null === input.readableFlowing || "boolean" == typeof input.readableFlowing || _report(_exceptionable, {
                        path: _path + ".readableFlowing",
                        expected: "(boolean | null)",
                        value: input.readableFlowing
                    }),
                    "number" == typeof input.readableHighWaterMark || _report(_exceptionable, {
                        path: _path + ".readableHighWaterMark",
                        expected: "number",
                        value: input.readableHighWaterMark
                    }),
                    "number" == typeof input.readableLength || _report(_exceptionable, {
                        path: _path + ".readableLength",
                        expected: "number",
                        value: input.readableLength
                    }),
                    "boolean" == typeof input.readableObjectMode || _report(_exceptionable, {
                        path: _path + ".readableObjectMode",
                        expected: "boolean",
                        value: input.readableObjectMode
                    }),
                    "boolean" == typeof input.closed || _report(_exceptionable, {
                        path: _path + ".closed",
                        expected: "boolean",
                        value: input.closed
                    }),
                    null === input.errored || ("object" == typeof input.errored && null !== input.errored || _report(_exceptionable, {
                        path: _path + ".errored",
                        expected: "(Error | null)",
                        value: input.errored
                    })) && _vo157(input.errored, _path + ".errored", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".errored",
                        expected: "(Error | null)",
                        value: input.errored
                    }),
                    "boolean" == typeof input.writable || _report(_exceptionable, {
                        path: _path + ".writable",
                        expected: "boolean",
                        value: input.writable
                    }),
                    "boolean" == typeof input.writableAborted || _report(_exceptionable, {
                        path: _path + ".writableAborted",
                        expected: "boolean",
                        value: input.writableAborted
                    }),
                    "boolean" == typeof input.writableEnded || _report(_exceptionable, {
                        path: _path + ".writableEnded",
                        expected: "boolean",
                        value: input.writableEnded
                    }),
                    "boolean" == typeof input.writableFinished || _report(_exceptionable, {
                        path: _path + ".writableFinished",
                        expected: "boolean",
                        value: input.writableFinished
                    }),
                    "number" == typeof input.writableHighWaterMark || _report(_exceptionable, {
                        path: _path + ".writableHighWaterMark",
                        expected: "number",
                        value: input.writableHighWaterMark
                    }),
                    "number" == typeof input.writableLength || _report(_exceptionable, {
                        path: _path + ".writableLength",
                        expected: "number",
                        value: input.writableLength
                    }),
                    "boolean" == typeof input.writableObjectMode || _report(_exceptionable, {
                        path: _path + ".writableObjectMode",
                        expected: "boolean",
                        value: input.writableObjectMode
                    }),
                    "number" == typeof input.writableCorked || _report(_exceptionable, {
                        path: _path + ".writableCorked",
                        expected: "number",
                        value: input.writableCorked
                    }),
                    "boolean" == typeof input.writableNeedDrain || _report(_exceptionable, {
                        path: _path + ".writableNeedDrain",
                        expected: "boolean",
                        value: input.writableNeedDrain
                    }),
                    29 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "autoSelectFamilyAttemptedAddresses",
                            "bufferSize",
                            "bytesRead",
                            "bytesWritten",
                            "connecting",
                            "pending",
                            "destroyed",
                            "localAddress",
                            "localPort",
                            "localFamily",
                            "readyState",
                            "remoteAddress",
                            "remoteFamily",
                            "remotePort",
                            "timeout",
                            "allowHalfOpen",
                            "readableAborted",
                            "readable",
                            "readableDidRead",
                            "readableEncoding",
                            "readableEnded",
                            "readableFlowing",
                            "readableHighWaterMark",
                            "readableLength",
                            "readableObjectMode",
                            "closed",
                            "errored",
                            "writable",
                            "writableAborted",
                            "writableEnded",
                            "writableFinished",
                            "writableHighWaterMark",
                            "writableLength",
                            "writableObjectMode",
                            "writableCorked",
                            "writableNeedDrain"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo157 = (input, _path, _exceptionable = true)=>[
                    "string" == typeof input.name || _report(_exceptionable, {
                        path: _path + ".name",
                        expected: "string",
                        value: input.name
                    }),
                    "string" == typeof input.message || _report(_exceptionable, {
                        path: _path + ".message",
                        expected: "string",
                        value: input.message
                    }),
                    void 0 === input.stack || "string" == typeof input.stack || _report(_exceptionable, {
                        path: _path + ".stack",
                        expected: "(string | undefined)",
                        value: input.stack
                    }),
                    true,
                    2 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "name",
                            "message",
                            "stack",
                            "cause"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo158 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.accept || "string" == typeof input.accept || _report(_exceptionable, {
                        path: _path + ".accept",
                        expected: "(string | undefined)",
                        value: input.accept
                    }),
                    void 0 === input["accept-encoding"] || "string" == typeof input["accept-encoding"] || _report(_exceptionable, {
                        path: _path + "[\"accept-encoding\"]",
                        expected: "(string | undefined)",
                        value: input["accept-encoding"]
                    }),
                    void 0 === input["accept-language"] || "string" == typeof input["accept-language"] || _report(_exceptionable, {
                        path: _path + "[\"accept-language\"]",
                        expected: "(string | undefined)",
                        value: input["accept-language"]
                    }),
                    void 0 === input["accept-patch"] || "string" == typeof input["accept-patch"] || _report(_exceptionable, {
                        path: _path + "[\"accept-patch\"]",
                        expected: "(string | undefined)",
                        value: input["accept-patch"]
                    }),
                    void 0 === input["accept-ranges"] || "string" == typeof input["accept-ranges"] || _report(_exceptionable, {
                        path: _path + "[\"accept-ranges\"]",
                        expected: "(string | undefined)",
                        value: input["accept-ranges"]
                    }),
                    void 0 === input["access-control-allow-credentials"] || "string" == typeof input["access-control-allow-credentials"] || _report(_exceptionable, {
                        path: _path + "[\"access-control-allow-credentials\"]",
                        expected: "(string | undefined)",
                        value: input["access-control-allow-credentials"]
                    }),
                    void 0 === input["access-control-allow-headers"] || "string" == typeof input["access-control-allow-headers"] || _report(_exceptionable, {
                        path: _path + "[\"access-control-allow-headers\"]",
                        expected: "(string | undefined)",
                        value: input["access-control-allow-headers"]
                    }),
                    void 0 === input["access-control-allow-methods"] || "string" == typeof input["access-control-allow-methods"] || _report(_exceptionable, {
                        path: _path + "[\"access-control-allow-methods\"]",
                        expected: "(string | undefined)",
                        value: input["access-control-allow-methods"]
                    }),
                    void 0 === input["access-control-allow-origin"] || "string" == typeof input["access-control-allow-origin"] || _report(_exceptionable, {
                        path: _path + "[\"access-control-allow-origin\"]",
                        expected: "(string | undefined)",
                        value: input["access-control-allow-origin"]
                    }),
                    void 0 === input["access-control-expose-headers"] || "string" == typeof input["access-control-expose-headers"] || _report(_exceptionable, {
                        path: _path + "[\"access-control-expose-headers\"]",
                        expected: "(string | undefined)",
                        value: input["access-control-expose-headers"]
                    }),
                    void 0 === input["access-control-max-age"] || "string" == typeof input["access-control-max-age"] || _report(_exceptionable, {
                        path: _path + "[\"access-control-max-age\"]",
                        expected: "(string | undefined)",
                        value: input["access-control-max-age"]
                    }),
                    void 0 === input["access-control-request-headers"] || "string" == typeof input["access-control-request-headers"] || _report(_exceptionable, {
                        path: _path + "[\"access-control-request-headers\"]",
                        expected: "(string | undefined)",
                        value: input["access-control-request-headers"]
                    }),
                    void 0 === input["access-control-request-method"] || "string" == typeof input["access-control-request-method"] || _report(_exceptionable, {
                        path: _path + "[\"access-control-request-method\"]",
                        expected: "(string | undefined)",
                        value: input["access-control-request-method"]
                    }),
                    void 0 === input.age || "string" == typeof input.age || _report(_exceptionable, {
                        path: _path + ".age",
                        expected: "(string | undefined)",
                        value: input.age
                    }),
                    void 0 === input.allow || "string" == typeof input.allow || _report(_exceptionable, {
                        path: _path + ".allow",
                        expected: "(string | undefined)",
                        value: input.allow
                    }),
                    void 0 === input["alt-svc"] || "string" == typeof input["alt-svc"] || _report(_exceptionable, {
                        path: _path + "[\"alt-svc\"]",
                        expected: "(string | undefined)",
                        value: input["alt-svc"]
                    }),
                    void 0 === input.authorization || "string" == typeof input.authorization || _report(_exceptionable, {
                        path: _path + ".authorization",
                        expected: "(string | undefined)",
                        value: input.authorization
                    }),
                    void 0 === input["cache-control"] || "string" == typeof input["cache-control"] || _report(_exceptionable, {
                        path: _path + "[\"cache-control\"]",
                        expected: "(string | undefined)",
                        value: input["cache-control"]
                    }),
                    void 0 === input.connection || "string" == typeof input.connection || _report(_exceptionable, {
                        path: _path + ".connection",
                        expected: "(string | undefined)",
                        value: input.connection
                    }),
                    void 0 === input["content-disposition"] || "string" == typeof input["content-disposition"] || _report(_exceptionable, {
                        path: _path + "[\"content-disposition\"]",
                        expected: "(string | undefined)",
                        value: input["content-disposition"]
                    }),
                    void 0 === input["content-encoding"] || "string" == typeof input["content-encoding"] || _report(_exceptionable, {
                        path: _path + "[\"content-encoding\"]",
                        expected: "(string | undefined)",
                        value: input["content-encoding"]
                    }),
                    void 0 === input["content-language"] || "string" == typeof input["content-language"] || _report(_exceptionable, {
                        path: _path + "[\"content-language\"]",
                        expected: "(string | undefined)",
                        value: input["content-language"]
                    }),
                    void 0 === input["content-length"] || "string" == typeof input["content-length"] || _report(_exceptionable, {
                        path: _path + "[\"content-length\"]",
                        expected: "(string | undefined)",
                        value: input["content-length"]
                    }),
                    void 0 === input["content-location"] || "string" == typeof input["content-location"] || _report(_exceptionable, {
                        path: _path + "[\"content-location\"]",
                        expected: "(string | undefined)",
                        value: input["content-location"]
                    }),
                    void 0 === input["content-range"] || "string" == typeof input["content-range"] || _report(_exceptionable, {
                        path: _path + "[\"content-range\"]",
                        expected: "(string | undefined)",
                        value: input["content-range"]
                    }),
                    void 0 === input["content-type"] || "string" == typeof input["content-type"] || _report(_exceptionable, {
                        path: _path + "[\"content-type\"]",
                        expected: "(string | undefined)",
                        value: input["content-type"]
                    }),
                    void 0 === input.cookie || "string" == typeof input.cookie || _report(_exceptionable, {
                        path: _path + ".cookie",
                        expected: "(string | undefined)",
                        value: input.cookie
                    }),
                    void 0 === input.date || "string" == typeof input.date || _report(_exceptionable, {
                        path: _path + ".date",
                        expected: "(string | undefined)",
                        value: input.date
                    }),
                    void 0 === input.etag || "string" == typeof input.etag || _report(_exceptionable, {
                        path: _path + ".etag",
                        expected: "(string | undefined)",
                        value: input.etag
                    }),
                    void 0 === input.expect || "string" == typeof input.expect || _report(_exceptionable, {
                        path: _path + ".expect",
                        expected: "(string | undefined)",
                        value: input.expect
                    }),
                    void 0 === input.expires || "string" == typeof input.expires || _report(_exceptionable, {
                        path: _path + ".expires",
                        expected: "(string | undefined)",
                        value: input.expires
                    }),
                    void 0 === input.forwarded || "string" == typeof input.forwarded || _report(_exceptionable, {
                        path: _path + ".forwarded",
                        expected: "(string | undefined)",
                        value: input.forwarded
                    }),
                    void 0 === input.from || "string" == typeof input.from || _report(_exceptionable, {
                        path: _path + ".from",
                        expected: "(string | undefined)",
                        value: input.from
                    }),
                    void 0 === input.host || "string" == typeof input.host || _report(_exceptionable, {
                        path: _path + ".host",
                        expected: "(string | undefined)",
                        value: input.host
                    }),
                    void 0 === input["if-match"] || "string" == typeof input["if-match"] || _report(_exceptionable, {
                        path: _path + "[\"if-match\"]",
                        expected: "(string | undefined)",
                        value: input["if-match"]
                    }),
                    void 0 === input["if-modified-since"] || "string" == typeof input["if-modified-since"] || _report(_exceptionable, {
                        path: _path + "[\"if-modified-since\"]",
                        expected: "(string | undefined)",
                        value: input["if-modified-since"]
                    }),
                    void 0 === input["if-none-match"] || "string" == typeof input["if-none-match"] || _report(_exceptionable, {
                        path: _path + "[\"if-none-match\"]",
                        expected: "(string | undefined)",
                        value: input["if-none-match"]
                    }),
                    void 0 === input["if-unmodified-since"] || "string" == typeof input["if-unmodified-since"] || _report(_exceptionable, {
                        path: _path + "[\"if-unmodified-since\"]",
                        expected: "(string | undefined)",
                        value: input["if-unmodified-since"]
                    }),
                    void 0 === input["last-modified"] || "string" == typeof input["last-modified"] || _report(_exceptionable, {
                        path: _path + "[\"last-modified\"]",
                        expected: "(string | undefined)",
                        value: input["last-modified"]
                    }),
                    void 0 === input.location || "string" == typeof input.location || _report(_exceptionable, {
                        path: _path + ".location",
                        expected: "(string | undefined)",
                        value: input.location
                    }),
                    void 0 === input.origin || "string" == typeof input.origin || _report(_exceptionable, {
                        path: _path + ".origin",
                        expected: "(string | undefined)",
                        value: input.origin
                    }),
                    void 0 === input.pragma || "string" == typeof input.pragma || _report(_exceptionable, {
                        path: _path + ".pragma",
                        expected: "(string | undefined)",
                        value: input.pragma
                    }),
                    void 0 === input["proxy-authenticate"] || "string" == typeof input["proxy-authenticate"] || _report(_exceptionable, {
                        path: _path + "[\"proxy-authenticate\"]",
                        expected: "(string | undefined)",
                        value: input["proxy-authenticate"]
                    }),
                    void 0 === input["proxy-authorization"] || "string" == typeof input["proxy-authorization"] || _report(_exceptionable, {
                        path: _path + "[\"proxy-authorization\"]",
                        expected: "(string | undefined)",
                        value: input["proxy-authorization"]
                    }),
                    void 0 === input["public-key-pins"] || "string" == typeof input["public-key-pins"] || _report(_exceptionable, {
                        path: _path + "[\"public-key-pins\"]",
                        expected: "(string | undefined)",
                        value: input["public-key-pins"]
                    }),
                    void 0 === input.range || "string" == typeof input.range || _report(_exceptionable, {
                        path: _path + ".range",
                        expected: "(string | undefined)",
                        value: input.range
                    }),
                    void 0 === input.referer || "string" == typeof input.referer || _report(_exceptionable, {
                        path: _path + ".referer",
                        expected: "(string | undefined)",
                        value: input.referer
                    }),
                    void 0 === input["retry-after"] || "string" == typeof input["retry-after"] || _report(_exceptionable, {
                        path: _path + "[\"retry-after\"]",
                        expected: "(string | undefined)",
                        value: input["retry-after"]
                    }),
                    void 0 === input["sec-fetch-site"] || "string" == typeof input["sec-fetch-site"] || _report(_exceptionable, {
                        path: _path + "[\"sec-fetch-site\"]",
                        expected: "(string | undefined)",
                        value: input["sec-fetch-site"]
                    }),
                    void 0 === input["sec-fetch-mode"] || "string" == typeof input["sec-fetch-mode"] || _report(_exceptionable, {
                        path: _path + "[\"sec-fetch-mode\"]",
                        expected: "(string | undefined)",
                        value: input["sec-fetch-mode"]
                    }),
                    void 0 === input["sec-fetch-user"] || "string" == typeof input["sec-fetch-user"] || _report(_exceptionable, {
                        path: _path + "[\"sec-fetch-user\"]",
                        expected: "(string | undefined)",
                        value: input["sec-fetch-user"]
                    }),
                    void 0 === input["sec-fetch-dest"] || "string" == typeof input["sec-fetch-dest"] || _report(_exceptionable, {
                        path: _path + "[\"sec-fetch-dest\"]",
                        expected: "(string | undefined)",
                        value: input["sec-fetch-dest"]
                    }),
                    void 0 === input["sec-websocket-accept"] || "string" == typeof input["sec-websocket-accept"] || _report(_exceptionable, {
                        path: _path + "[\"sec-websocket-accept\"]",
                        expected: "(string | undefined)",
                        value: input["sec-websocket-accept"]
                    }),
                    void 0 === input["sec-websocket-extensions"] || "string" == typeof input["sec-websocket-extensions"] || _report(_exceptionable, {
                        path: _path + "[\"sec-websocket-extensions\"]",
                        expected: "(string | undefined)",
                        value: input["sec-websocket-extensions"]
                    }),
                    void 0 === input["sec-websocket-key"] || "string" == typeof input["sec-websocket-key"] || _report(_exceptionable, {
                        path: _path + "[\"sec-websocket-key\"]",
                        expected: "(string | undefined)",
                        value: input["sec-websocket-key"]
                    }),
                    void 0 === input["sec-websocket-protocol"] || "string" == typeof input["sec-websocket-protocol"] || _report(_exceptionable, {
                        path: _path + "[\"sec-websocket-protocol\"]",
                        expected: "(string | undefined)",
                        value: input["sec-websocket-protocol"]
                    }),
                    void 0 === input["sec-websocket-version"] || "string" == typeof input["sec-websocket-version"] || _report(_exceptionable, {
                        path: _path + "[\"sec-websocket-version\"]",
                        expected: "(string | undefined)",
                        value: input["sec-websocket-version"]
                    }),
                    void 0 === input["set-cookie"] || (Array.isArray(input["set-cookie"]) || _report(_exceptionable, {
                        path: _path + "[\"set-cookie\"]",
                        expected: "(Array<string> | undefined)",
                        value: input["set-cookie"]
                    })) && input["set-cookie"].map((elem, _index504)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + "[\"set-cookie\"][" + _index504 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + "[\"set-cookie\"]",
                        expected: "(Array<string> | undefined)",
                        value: input["set-cookie"]
                    }),
                    void 0 === input["strict-transport-security"] || "string" == typeof input["strict-transport-security"] || _report(_exceptionable, {
                        path: _path + "[\"strict-transport-security\"]",
                        expected: "(string | undefined)",
                        value: input["strict-transport-security"]
                    }),
                    void 0 === input.tk || "string" == typeof input.tk || _report(_exceptionable, {
                        path: _path + ".tk",
                        expected: "(string | undefined)",
                        value: input.tk
                    }),
                    void 0 === input.trailer || "string" == typeof input.trailer || _report(_exceptionable, {
                        path: _path + ".trailer",
                        expected: "(string | undefined)",
                        value: input.trailer
                    }),
                    void 0 === input["transfer-encoding"] || "string" == typeof input["transfer-encoding"] || _report(_exceptionable, {
                        path: _path + "[\"transfer-encoding\"]",
                        expected: "(string | undefined)",
                        value: input["transfer-encoding"]
                    }),
                    void 0 === input.upgrade || "string" == typeof input.upgrade || _report(_exceptionable, {
                        path: _path + ".upgrade",
                        expected: "(string | undefined)",
                        value: input.upgrade
                    }),
                    void 0 === input["user-agent"] || "string" == typeof input["user-agent"] || _report(_exceptionable, {
                        path: _path + "[\"user-agent\"]",
                        expected: "(string | undefined)",
                        value: input["user-agent"]
                    }),
                    void 0 === input.vary || "string" == typeof input.vary || _report(_exceptionable, {
                        path: _path + ".vary",
                        expected: "(string | undefined)",
                        value: input.vary
                    }),
                    void 0 === input.via || "string" == typeof input.via || _report(_exceptionable, {
                        path: _path + ".via",
                        expected: "(string | undefined)",
                        value: input.via
                    }),
                    void 0 === input.warning || "string" == typeof input.warning || _report(_exceptionable, {
                        path: _path + ".warning",
                        expected: "(string | undefined)",
                        value: input.warning
                    }),
                    void 0 === input["www-authenticate"] || "string" == typeof input["www-authenticate"] || _report(_exceptionable, {
                        path: _path + "[\"www-authenticate\"]",
                        expected: "(string | undefined)",
                        value: input["www-authenticate"]
                    }),
                    false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "accept",
                            "accept-encoding",
                            "accept-language",
                            "accept-patch",
                            "accept-ranges",
                            "access-control-allow-credentials",
                            "access-control-allow-headers",
                            "access-control-allow-methods",
                            "access-control-allow-origin",
                            "access-control-expose-headers",
                            "access-control-max-age",
                            "access-control-request-headers",
                            "access-control-request-method",
                            "age",
                            "allow",
                            "alt-svc",
                            "authorization",
                            "cache-control",
                            "connection",
                            "content-disposition",
                            "content-encoding",
                            "content-language",
                            "content-length",
                            "content-location",
                            "content-range",
                            "content-type",
                            "cookie",
                            "date",
                            "etag",
                            "expect",
                            "expires",
                            "forwarded",
                            "from",
                            "host",
                            "if-match",
                            "if-modified-since",
                            "if-none-match",
                            "if-unmodified-since",
                            "last-modified",
                            "location",
                            "origin",
                            "pragma",
                            "proxy-authenticate",
                            "proxy-authorization",
                            "public-key-pins",
                            "range",
                            "referer",
                            "retry-after",
                            "sec-fetch-site",
                            "sec-fetch-mode",
                            "sec-fetch-user",
                            "sec-fetch-dest",
                            "sec-websocket-accept",
                            "sec-websocket-extensions",
                            "sec-websocket-key",
                            "sec-websocket-protocol",
                            "sec-websocket-version",
                            "set-cookie",
                            "strict-transport-security",
                            "tk",
                            "trailer",
                            "transfer-encoding",
                            "upgrade",
                            "user-agent",
                            "vary",
                            "via",
                            "warning",
                            "www-authenticate"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return (null !== value || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(Array<string> | string | undefined)",
                            value: value
                        })) && (void 0 === value || "string" == typeof value || (Array.isArray(value) || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(Array<string> | string | undefined)",
                            value: value
                        })) && value.map((elem, _index505)=>"string" == typeof elem || _report(_exceptionable, {
                                path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key) + "[" + _index505 + "]",
                                expected: "string",
                                value: elem
                            })).every((flag)=>flag) || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(Array<string> | string | undefined)",
                            value: value
                        }));
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo159 = (input, _path, _exceptionable = true)=>[
                    false === _exceptionable || Object.keys(input).map((key)=>{
                        const value = input[key];
                        if (void 0 === value) return true;
                        return void 0 === value || (Array.isArray(value) || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(Array<string> | undefined)",
                            value: value
                        })) && value.map((elem, _index506)=>"string" == typeof elem || _report(_exceptionable, {
                                path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key) + "[" + _index506 + "]",
                                expected: "string",
                                value: elem
                            })).every((flag)=>flag) || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(Array<string> | undefined)",
                            value: value
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo160 = (input, _path, _exceptionable = true)=>[
                    false === _exceptionable || Object.keys(input).map((key)=>{
                        const value = input[key];
                        if (void 0 === value) return true;
                        return void 0 === value || "string" == typeof value || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(string | undefined)",
                            value: value
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo161 = (input, _path, _exceptionable = true)=>[
                    ("object" == typeof input.prototype && null !== input.prototype || _report(_exceptionable, {
                        path: _path + ".prototype",
                        expected: "\"http\".ServerResponse<any>",
                        value: input.prototype
                    })) && _vo162(input.prototype, _path + ".prototype", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".prototype",
                        expected: "\"http\".ServerResponse<any>",
                        value: input.prototype
                    }),
                    true,
                    true,
                    "boolean" == typeof input.captureRejections || _report(_exceptionable, {
                        path: _path + ".captureRejections",
                        expected: "boolean",
                        value: input.captureRejections
                    }),
                    "number" == typeof input.defaultMaxListeners || _report(_exceptionable, {
                        path: _path + ".defaultMaxListeners",
                        expected: "number",
                        value: input.defaultMaxListeners
                    }),
                    "number" == typeof input.length || _report(_exceptionable, {
                        path: _path + ".length",
                        expected: "number",
                        value: input.length
                    }),
                    true,
                    ("object" == typeof input.caller && null !== input.caller || _report(_exceptionable, {
                        path: _path + ".caller",
                        expected: "Function",
                        value: input.caller
                    })) && _vo33(input.caller, _path + ".caller", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".caller",
                        expected: "Function",
                        value: input.caller
                    }),
                    "string" == typeof input.name || _report(_exceptionable, {
                        path: _path + ".name",
                        expected: "string",
                        value: input.name
                    }),
                    9 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "prototype",
                            "errorMonitor",
                            "captureRejectionSymbol",
                            "captureRejections",
                            "defaultMaxListeners",
                            "length",
                            "arguments",
                            "caller",
                            "name"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo162 = (input, _path, _exceptionable = true)=>[
                    "number" == typeof input.statusCode || _report(_exceptionable, {
                        path: _path + ".statusCode",
                        expected: "number",
                        value: input.statusCode
                    }),
                    "string" == typeof input.statusMessage || _report(_exceptionable, {
                        path: _path + ".statusMessage",
                        expected: "string",
                        value: input.statusMessage
                    }),
                    "boolean" == typeof input.strictContentLength || _report(_exceptionable, {
                        path: _path + ".strictContentLength",
                        expected: "boolean",
                        value: input.strictContentLength
                    }),
                    true,
                    "boolean" == typeof input.chunkedEncoding || _report(_exceptionable, {
                        path: _path + ".chunkedEncoding",
                        expected: "boolean",
                        value: input.chunkedEncoding
                    }),
                    "boolean" == typeof input.shouldKeepAlive || _report(_exceptionable, {
                        path: _path + ".shouldKeepAlive",
                        expected: "boolean",
                        value: input.shouldKeepAlive
                    }),
                    "boolean" == typeof input.useChunkedEncodingByDefault || _report(_exceptionable, {
                        path: _path + ".useChunkedEncodingByDefault",
                        expected: "boolean",
                        value: input.useChunkedEncodingByDefault
                    }),
                    "boolean" == typeof input.sendDate || _report(_exceptionable, {
                        path: _path + ".sendDate",
                        expected: "boolean",
                        value: input.sendDate
                    }),
                    "boolean" == typeof input.finished || _report(_exceptionable, {
                        path: _path + ".finished",
                        expected: "boolean",
                        value: input.finished
                    }),
                    "boolean" == typeof input.headersSent || _report(_exceptionable, {
                        path: _path + ".headersSent",
                        expected: "boolean",
                        value: input.headersSent
                    }),
                    null === input.connection || ("object" == typeof input.connection && null !== input.connection || _report(_exceptionable, {
                        path: _path + ".connection",
                        expected: "(\"net\".Socket | null)",
                        value: input.connection
                    })) && _vo156(input.connection, _path + ".connection", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".connection",
                        expected: "(\"net\".Socket | null)",
                        value: input.connection
                    }),
                    null === input.socket || ("object" == typeof input.socket && null !== input.socket || _report(_exceptionable, {
                        path: _path + ".socket",
                        expected: "(\"net\".Socket | null)",
                        value: input.socket
                    })) && _vo156(input.socket, _path + ".socket", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".socket",
                        expected: "(\"net\".Socket | null)",
                        value: input.socket
                    }),
                    "boolean" == typeof input.writable || _report(_exceptionable, {
                        path: _path + ".writable",
                        expected: "boolean",
                        value: input.writable
                    }),
                    "boolean" == typeof input.writableAborted || _report(_exceptionable, {
                        path: _path + ".writableAborted",
                        expected: "boolean",
                        value: input.writableAborted
                    }),
                    "boolean" == typeof input.writableEnded || _report(_exceptionable, {
                        path: _path + ".writableEnded",
                        expected: "boolean",
                        value: input.writableEnded
                    }),
                    "boolean" == typeof input.writableFinished || _report(_exceptionable, {
                        path: _path + ".writableFinished",
                        expected: "boolean",
                        value: input.writableFinished
                    }),
                    "number" == typeof input.writableHighWaterMark || _report(_exceptionable, {
                        path: _path + ".writableHighWaterMark",
                        expected: "number",
                        value: input.writableHighWaterMark
                    }),
                    "number" == typeof input.writableLength || _report(_exceptionable, {
                        path: _path + ".writableLength",
                        expected: "number",
                        value: input.writableLength
                    }),
                    "boolean" == typeof input.writableObjectMode || _report(_exceptionable, {
                        path: _path + ".writableObjectMode",
                        expected: "boolean",
                        value: input.writableObjectMode
                    }),
                    "number" == typeof input.writableCorked || _report(_exceptionable, {
                        path: _path + ".writableCorked",
                        expected: "number",
                        value: input.writableCorked
                    }),
                    "boolean" == typeof input.destroyed || _report(_exceptionable, {
                        path: _path + ".destroyed",
                        expected: "boolean",
                        value: input.destroyed
                    }),
                    "boolean" == typeof input.closed || _report(_exceptionable, {
                        path: _path + ".closed",
                        expected: "boolean",
                        value: input.closed
                    }),
                    null === input.errored || ("object" == typeof input.errored && null !== input.errored || _report(_exceptionable, {
                        path: _path + ".errored",
                        expected: "(Error | null)",
                        value: input.errored
                    })) && _vo157(input.errored, _path + ".errored", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".errored",
                        expected: "(Error | null)",
                        value: input.errored
                    }),
                    "boolean" == typeof input.writableNeedDrain || _report(_exceptionable, {
                        path: _path + ".writableNeedDrain",
                        expected: "boolean",
                        value: input.writableNeedDrain
                    }),
                    24 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "statusCode",
                            "statusMessage",
                            "strictContentLength",
                            "req",
                            "chunkedEncoding",
                            "shouldKeepAlive",
                            "useChunkedEncodingByDefault",
                            "sendDate",
                            "finished",
                            "headersSent",
                            "connection",
                            "socket",
                            "writable",
                            "writableAborted",
                            "writableEnded",
                            "writableFinished",
                            "writableHighWaterMark",
                            "writableLength",
                            "writableObjectMode",
                            "writableCorked",
                            "destroyed",
                            "closed",
                            "errored",
                            "writableNeedDrain"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo163 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.plain || "boolean" == typeof input.plain || _report(_exceptionable, {
                        path: _path + ".plain",
                        expected: "(boolean | undefined)",
                        value: input.plain
                    }),
                    void 0 === input.ssl || "boolean" == typeof input.ssl || _report(_exceptionable, {
                        path: _path + ".ssl",
                        expected: "(boolean | undefined)",
                        value: input.ssl
                    }),
                    void 0 === input["x-forwarded-for"] || "string" == typeof input["x-forwarded-for"] || _report(_exceptionable, {
                        path: _path + "[\"x-forwarded-for\"]",
                        expected: "(string | undefined)",
                        value: input["x-forwarded-for"]
                    }),
                    void 0 === input.protocol || "string" == typeof input.protocol || _report(_exceptionable, {
                        path: _path + ".protocol",
                        expected: "(string | undefined)",
                        value: input.protocol
                    }),
                    void 0 === input.protocols || (Array.isArray(input.protocols) || _report(_exceptionable, {
                        path: _path + ".protocols",
                        expected: "(Array<string> | undefined)",
                        value: input.protocols
                    })) && input.protocols.map((elem, _index507)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".protocols[" + _index507 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".protocols",
                        expected: "(Array<string> | undefined)",
                        value: input.protocols
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "plain",
                            "ssl",
                            "x-forwarded-for",
                            "protocol",
                            "protocols"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo164 = (input, _path, _exceptionable = true)=>[
                    (null !== input.type || _report(_exceptionable, {
                        path: _path + ".type",
                        expected: "(Function | string | undefined)",
                        value: input.type
                    })) && (void 0 === input.type || "string" == typeof input.type || ("object" == typeof input.type && null !== input.type || _report(_exceptionable, {
                        path: _path + ".type",
                        expected: "(Function | string | undefined)",
                        value: input.type
                    })) && _vo33(input.type, _path + ".type", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".type",
                        expected: "(Function | string | undefined)",
                        value: input.type
                    })),
                    void 0 === input.options || ("object" == typeof input.options && null !== input.options && false === Array.isArray(input.options) || _report(_exceptionable, {
                        path: _path + ".options",
                        expected: "(Record<string, any> | undefined)",
                        value: input.options
                    })) && _vo19(input.options, _path + ".options", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".options",
                        expected: "(Record<string, any> | undefined)",
                        value: input.options
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "type",
                            "options"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo165 = (input, _path, _exceptionable = true)=>[
                    true,
                    true,
                    void 0 === input.bypass || true,
                    false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "path",
                            "context",
                            "bypass"
                        ].some((prop)=>key === prop)) return true;
                        input[key];
                        return true;
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo166 = (input, _path, _exceptionable = true)=>[
                    (null !== input.app || _report(_exceptionable, {
                        path: _path + ".app",
                        expected: "(Array<string> | OpenApp | string | undefined)",
                        value: input.app
                    })) && (void 0 === input.app || "string" == typeof input.app || Array.isArray(input.app) && input.app.map((elem, _index508)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".app[" + _index508 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || "object" == typeof input.app && null !== input.app && false === Array.isArray(input.app) && _vo167(input.app, _path + ".app", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".app",
                        expected: "(Array<string> | OpenApp | string | undefined)",
                        value: input.app
                    }) || _report(_exceptionable, {
                        path: _path + ".app",
                        expected: "(Array<string> | OpenApp | string | undefined)",
                        value: input.app
                    })),
                    (null !== input.target || _report(_exceptionable, {
                        path: _path + ".target",
                        expected: "(Array<string> | string | undefined)",
                        value: input.target
                    })) && (void 0 === input.target || "string" == typeof input.target || (Array.isArray(input.target) || _report(_exceptionable, {
                        path: _path + ".target",
                        expected: "(Array<string> | string | undefined)",
                        value: input.target
                    })) && input.target.map((elem, _index509)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".target[" + _index509 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".target",
                        expected: "(Array<string> | string | undefined)",
                        value: input.target
                    })),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "app",
                            "target"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo167 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.name || "string" == typeof input.name || _report(_exceptionable, {
                        path: _path + ".name",
                        expected: "(string | undefined)",
                        value: input.name
                    }),
                    void 0 === input.arguments || (Array.isArray(input.arguments) || _report(_exceptionable, {
                        path: _path + ".arguments",
                        expected: "(Array<string> | undefined)",
                        value: input.arguments
                    })) && input.arguments.map((elem, _index510)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".arguments[" + _index510 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".arguments",
                        expected: "(Array<string> | undefined)",
                        value: input.arguments
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "name",
                            "arguments"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo168 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.logging || "none" === input.logging || "verbose" === input.logging || "error" === input.logging || "warn" === input.logging || "info" === input.logging || "log" === input.logging || _report(_exceptionable, {
                        path: _path + ".logging",
                        expected: "(\"error\" | \"info\" | \"log\" | \"none\" | \"verbose\" | \"warn\" | undefined)",
                        value: input.logging
                    }),
                    (null !== input.overlay || _report(_exceptionable, {
                        path: _path + ".overlay",
                        expected: "(__type.o43 | boolean | undefined)",
                        value: input.overlay
                    })) && (void 0 === input.overlay || "boolean" == typeof input.overlay || ("object" == typeof input.overlay && null !== input.overlay && false === Array.isArray(input.overlay) || _report(_exceptionable, {
                        path: _path + ".overlay",
                        expected: "(__type.o43 | boolean | undefined)",
                        value: input.overlay
                    })) && _vo169(input.overlay, _path + ".overlay", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".overlay",
                        expected: "(__type.o43 | boolean | undefined)",
                        value: input.overlay
                    })),
                    void 0 === input.progress || "boolean" == typeof input.progress || _report(_exceptionable, {
                        path: _path + ".progress",
                        expected: "(boolean | undefined)",
                        value: input.progress
                    }),
                    void 0 === input.reconnect || "number" == typeof input.reconnect || "boolean" == typeof input.reconnect || _report(_exceptionable, {
                        path: _path + ".reconnect",
                        expected: "(boolean | number | undefined)",
                        value: input.reconnect
                    }),
                    void 0 === input.webSocketTransport || "string" == typeof input.webSocketTransport || _report(_exceptionable, {
                        path: _path + ".webSocketTransport",
                        expected: "(string | undefined)",
                        value: input.webSocketTransport
                    }),
                    (null !== input.webSocketURL || _report(_exceptionable, {
                        path: _path + ".webSocketURL",
                        expected: "(WebSocketURL | string | undefined)",
                        value: input.webSocketURL
                    })) && (void 0 === input.webSocketURL || "string" == typeof input.webSocketURL || ("object" == typeof input.webSocketURL && null !== input.webSocketURL && false === Array.isArray(input.webSocketURL) || _report(_exceptionable, {
                        path: _path + ".webSocketURL",
                        expected: "(WebSocketURL | string | undefined)",
                        value: input.webSocketURL
                    })) && _vo170(input.webSocketURL, _path + ".webSocketURL", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".webSocketURL",
                        expected: "(WebSocketURL | string | undefined)",
                        value: input.webSocketURL
                    })),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "logging",
                            "overlay",
                            "progress",
                            "reconnect",
                            "webSocketTransport",
                            "webSocketURL"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo169 = (input, _path, _exceptionable = true)=>[
                    (null !== input.warnings || _report(_exceptionable, {
                        path: _path + ".warnings",
                        expected: "(boolean | undefined)",
                        value: input.warnings
                    })) && (void 0 === input.warnings || "function" == typeof input.warnings || "boolean" == typeof input.warnings || _report(_exceptionable, {
                        path: _path + ".warnings",
                        expected: "(boolean | undefined)",
                        value: input.warnings
                    })),
                    (null !== input.errors || _report(_exceptionable, {
                        path: _path + ".errors",
                        expected: "(boolean | undefined)",
                        value: input.errors
                    })) && (void 0 === input.errors || "function" == typeof input.errors || "boolean" == typeof input.errors || _report(_exceptionable, {
                        path: _path + ".errors",
                        expected: "(boolean | undefined)",
                        value: input.errors
                    })),
                    (null !== input.runtimeErrors || _report(_exceptionable, {
                        path: _path + ".runtimeErrors",
                        expected: "(boolean | undefined)",
                        value: input.runtimeErrors
                    })) && (void 0 === input.runtimeErrors || "function" == typeof input.runtimeErrors || "boolean" == typeof input.runtimeErrors || _report(_exceptionable, {
                        path: _path + ".runtimeErrors",
                        expected: "(boolean | undefined)",
                        value: input.runtimeErrors
                    })),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "warnings",
                            "errors",
                            "runtimeErrors"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo170 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.hostname || "string" == typeof input.hostname || _report(_exceptionable, {
                        path: _path + ".hostname",
                        expected: "(string | undefined)",
                        value: input.hostname
                    }),
                    void 0 === input.password || "string" == typeof input.password || _report(_exceptionable, {
                        path: _path + ".password",
                        expected: "(string | undefined)",
                        value: input.password
                    }),
                    void 0 === input.pathname || "string" == typeof input.pathname || _report(_exceptionable, {
                        path: _path + ".pathname",
                        expected: "(string | undefined)",
                        value: input.pathname
                    }),
                    void 0 === input.port || "string" == typeof input.port || "number" == typeof input.port || _report(_exceptionable, {
                        path: _path + ".port",
                        expected: "(number | string | undefined)",
                        value: input.port
                    }),
                    void 0 === input.protocol || "string" == typeof input.protocol || _report(_exceptionable, {
                        path: _path + ".protocol",
                        expected: "(string | undefined)",
                        value: input.protocol
                    }),
                    void 0 === input.username || "string" == typeof input.username || _report(_exceptionable, {
                        path: _path + ".username",
                        expected: "(string | undefined)",
                        value: input.username
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "hostname",
                            "password",
                            "pathname",
                            "port",
                            "protocol",
                            "username"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo171 = (input, _path, _exceptionable = true)=>[
                    "string" == typeof input.key || _report(_exceptionable, {
                        path: _path + ".key",
                        expected: "string",
                        value: input.key
                    }),
                    "string" == typeof input.value || _report(_exceptionable, {
                        path: _path + ".value",
                        expected: "string",
                        value: input.value
                    }),
                    2 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "key",
                            "value"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo172 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.defaultRules || (Array.isArray(input.defaultRules) || _report(_exceptionable, {
                        path: _path + ".defaultRules",
                        expected: "(RuleSetRules | undefined)",
                        value: input.defaultRules
                    })) && input.defaultRules.map((elem, _index511)=>null == elem || false === elem || "" === elem || "..." === elem || 0 === elem || ("object" == typeof elem && null !== elem && false === Array.isArray(elem) || _report(_exceptionable, {
                            path: _path + ".defaultRules[" + _index511 + "]",
                            expected: "(\"\" | \"...\" | 0 | RuleSetRule | false | null | undefined)",
                            value: elem
                        })) && _vo173(elem, _path + ".defaultRules[" + _index511 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".defaultRules[" + _index511 + "]",
                            expected: "(\"\" | \"...\" | 0 | RuleSetRule | false | null | undefined)",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".defaultRules",
                        expected: "(RuleSetRules | undefined)",
                        value: input.defaultRules
                    }),
                    void 0 === input.rules || (Array.isArray(input.rules) || _report(_exceptionable, {
                        path: _path + ".rules",
                        expected: "(RuleSetRules | undefined)",
                        value: input.rules
                    })) && input.rules.map((elem, _index512)=>null == elem || false === elem || "" === elem || "..." === elem || 0 === elem || ("object" == typeof elem && null !== elem && false === Array.isArray(elem) || _report(_exceptionable, {
                            path: _path + ".rules[" + _index512 + "]",
                            expected: "(\"\" | \"...\" | 0 | RuleSetRule | false | null | undefined)",
                            value: elem
                        })) && _vo173(elem, _path + ".rules[" + _index512 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".rules[" + _index512 + "]",
                            expected: "(\"\" | \"...\" | 0 | RuleSetRule | false | null | undefined)",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".rules",
                        expected: "(RuleSetRules | undefined)",
                        value: input.rules
                    }),
                    void 0 === input.parser || ("object" == typeof input.parser && null !== input.parser && false === Array.isArray(input.parser) || _report(_exceptionable, {
                        path: _path + ".parser",
                        expected: "(ParserOptionsByModuleTypeKnown | ParserOptionsByModuleTypeUnknown | undefined)",
                        value: input.parser
                    })) && _vu11(input.parser, _path + ".parser", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".parser",
                        expected: "(ParserOptionsByModuleTypeKnown | ParserOptionsByModuleTypeUnknown | undefined)",
                        value: input.parser
                    }),
                    void 0 === input.generator || ("object" == typeof input.generator && null !== input.generator && false === Array.isArray(input.generator) || _report(_exceptionable, {
                        path: _path + ".generator",
                        expected: "(GeneratorOptionsByModuleTypeKnown | GeneratorOptionsByModuleTypeUnknown | undefined)",
                        value: input.generator
                    })) && _vu12(input.generator, _path + ".generator", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".generator",
                        expected: "(GeneratorOptionsByModuleTypeKnown | GeneratorOptionsByModuleTypeUnknown | undefined)",
                        value: input.generator
                    }),
                    (null !== input.noParse || _report(_exceptionable, {
                        path: _path + ".noParse",
                        expected: "(Array<NoParseOptionSingle> | RegExp | string | undefined)",
                        value: input.noParse
                    })) && (void 0 === input.noParse || "function" == typeof input.noParse || "string" == typeof input.noParse || input.noParse instanceof RegExp || (Array.isArray(input.noParse) || _report(_exceptionable, {
                        path: _path + ".noParse",
                        expected: "(Array<NoParseOptionSingle> | RegExp | string | undefined)",
                        value: input.noParse
                    })) && input.noParse.map((elem, _index513)=>(null !== elem || _report(_exceptionable, {
                            path: _path + ".noParse[" + _index513 + "]",
                            expected: "(RegExp | string)",
                            value: elem
                        })) && (void 0 !== elem || _report(_exceptionable, {
                            path: _path + ".noParse[" + _index513 + "]",
                            expected: "(RegExp | string)",
                            value: elem
                        })) && ("function" == typeof elem || "string" == typeof elem || elem instanceof RegExp || _report(_exceptionable, {
                            path: _path + ".noParse[" + _index513 + "]",
                            expected: "(RegExp | string)",
                            value: elem
                        }))).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".noParse",
                        expected: "(Array<NoParseOptionSingle> | RegExp | string | undefined)",
                        value: input.noParse
                    })),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "defaultRules",
                            "rules",
                            "parser",
                            "generator",
                            "noParse"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo173 = (input, _path, _exceptionable = true)=>[
                    (null !== input.test || _report(_exceptionable, {
                        path: _path + ".test",
                        expected: "(RegExp | RuleSetConditions | RuleSetLogicalConditions | string | undefined)",
                        value: input.test
                    })) && (void 0 === input.test || "function" == typeof input.test || "string" == typeof input.test || input.test instanceof RegExp || Array.isArray(input.test) && (_va0(input.test, _path + ".test", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".test",
                        expected: "RuleSetConditions",
                        value: input.test
                    })) || "object" == typeof input.test && null !== input.test && false === Array.isArray(input.test) && _vo174(input.test, _path + ".test", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".test",
                        expected: "(RegExp | RuleSetConditions | RuleSetLogicalConditions | string | undefined)",
                        value: input.test
                    }) || _report(_exceptionable, {
                        path: _path + ".test",
                        expected: "(RegExp | RuleSetConditions | RuleSetLogicalConditions | string | undefined)",
                        value: input.test
                    })),
                    (null !== input.exclude || _report(_exceptionable, {
                        path: _path + ".exclude",
                        expected: "(RegExp | RuleSetConditions | RuleSetLogicalConditions | string | undefined)",
                        value: input.exclude
                    })) && (void 0 === input.exclude || "function" == typeof input.exclude || "string" == typeof input.exclude || input.exclude instanceof RegExp || Array.isArray(input.exclude) && (_va0(input.exclude, _path + ".exclude", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".exclude",
                        expected: "RuleSetConditions",
                        value: input.exclude
                    })) || "object" == typeof input.exclude && null !== input.exclude && false === Array.isArray(input.exclude) && _vo174(input.exclude, _path + ".exclude", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".exclude",
                        expected: "(RegExp | RuleSetConditions | RuleSetLogicalConditions | string | undefined)",
                        value: input.exclude
                    }) || _report(_exceptionable, {
                        path: _path + ".exclude",
                        expected: "(RegExp | RuleSetConditions | RuleSetLogicalConditions | string | undefined)",
                        value: input.exclude
                    })),
                    (null !== input.include || _report(_exceptionable, {
                        path: _path + ".include",
                        expected: "(RegExp | RuleSetConditions | RuleSetLogicalConditions | string | undefined)",
                        value: input.include
                    })) && (void 0 === input.include || "function" == typeof input.include || "string" == typeof input.include || input.include instanceof RegExp || Array.isArray(input.include) && (_va0(input.include, _path + ".include", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".include",
                        expected: "RuleSetConditions",
                        value: input.include
                    })) || "object" == typeof input.include && null !== input.include && false === Array.isArray(input.include) && _vo174(input.include, _path + ".include", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".include",
                        expected: "(RegExp | RuleSetConditions | RuleSetLogicalConditions | string | undefined)",
                        value: input.include
                    }) || _report(_exceptionable, {
                        path: _path + ".include",
                        expected: "(RegExp | RuleSetConditions | RuleSetLogicalConditions | string | undefined)",
                        value: input.include
                    })),
                    (null !== input.issuer || _report(_exceptionable, {
                        path: _path + ".issuer",
                        expected: "(RegExp | RuleSetConditions | RuleSetLogicalConditions | string | undefined)",
                        value: input.issuer
                    })) && (void 0 === input.issuer || "function" == typeof input.issuer || "string" == typeof input.issuer || input.issuer instanceof RegExp || Array.isArray(input.issuer) && (_va0(input.issuer, _path + ".issuer", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".issuer",
                        expected: "RuleSetConditions",
                        value: input.issuer
                    })) || "object" == typeof input.issuer && null !== input.issuer && false === Array.isArray(input.issuer) && _vo174(input.issuer, _path + ".issuer", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".issuer",
                        expected: "(RegExp | RuleSetConditions | RuleSetLogicalConditions | string | undefined)",
                        value: input.issuer
                    }) || _report(_exceptionable, {
                        path: _path + ".issuer",
                        expected: "(RegExp | RuleSetConditions | RuleSetLogicalConditions | string | undefined)",
                        value: input.issuer
                    })),
                    (null !== input.issuerLayer || _report(_exceptionable, {
                        path: _path + ".issuerLayer",
                        expected: "(RegExp | RuleSetConditions | RuleSetLogicalConditions | string | undefined)",
                        value: input.issuerLayer
                    })) && (void 0 === input.issuerLayer || "function" == typeof input.issuerLayer || "string" == typeof input.issuerLayer || input.issuerLayer instanceof RegExp || Array.isArray(input.issuerLayer) && (_va0(input.issuerLayer, _path + ".issuerLayer", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".issuerLayer",
                        expected: "RuleSetConditions",
                        value: input.issuerLayer
                    })) || "object" == typeof input.issuerLayer && null !== input.issuerLayer && false === Array.isArray(input.issuerLayer) && _vo174(input.issuerLayer, _path + ".issuerLayer", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".issuerLayer",
                        expected: "(RegExp | RuleSetConditions | RuleSetLogicalConditions | string | undefined)",
                        value: input.issuerLayer
                    }) || _report(_exceptionable, {
                        path: _path + ".issuerLayer",
                        expected: "(RegExp | RuleSetConditions | RuleSetLogicalConditions | string | undefined)",
                        value: input.issuerLayer
                    })),
                    (null !== input.dependency || _report(_exceptionable, {
                        path: _path + ".dependency",
                        expected: "(RegExp | RuleSetConditions | RuleSetLogicalConditions | string | undefined)",
                        value: input.dependency
                    })) && (void 0 === input.dependency || "function" == typeof input.dependency || "string" == typeof input.dependency || input.dependency instanceof RegExp || Array.isArray(input.dependency) && (_va0(input.dependency, _path + ".dependency", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".dependency",
                        expected: "RuleSetConditions",
                        value: input.dependency
                    })) || "object" == typeof input.dependency && null !== input.dependency && false === Array.isArray(input.dependency) && _vo174(input.dependency, _path + ".dependency", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".dependency",
                        expected: "(RegExp | RuleSetConditions | RuleSetLogicalConditions | string | undefined)",
                        value: input.dependency
                    }) || _report(_exceptionable, {
                        path: _path + ".dependency",
                        expected: "(RegExp | RuleSetConditions | RuleSetLogicalConditions | string | undefined)",
                        value: input.dependency
                    })),
                    (null !== input.resource || _report(_exceptionable, {
                        path: _path + ".resource",
                        expected: "(RegExp | RuleSetConditions | RuleSetLogicalConditions | string | undefined)",
                        value: input.resource
                    })) && (void 0 === input.resource || "function" == typeof input.resource || "string" == typeof input.resource || input.resource instanceof RegExp || Array.isArray(input.resource) && (_va0(input.resource, _path + ".resource", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".resource",
                        expected: "RuleSetConditions",
                        value: input.resource
                    })) || "object" == typeof input.resource && null !== input.resource && false === Array.isArray(input.resource) && _vo174(input.resource, _path + ".resource", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".resource",
                        expected: "(RegExp | RuleSetConditions | RuleSetLogicalConditions | string | undefined)",
                        value: input.resource
                    }) || _report(_exceptionable, {
                        path: _path + ".resource",
                        expected: "(RegExp | RuleSetConditions | RuleSetLogicalConditions | string | undefined)",
                        value: input.resource
                    })),
                    (null !== input.resourceFragment || _report(_exceptionable, {
                        path: _path + ".resourceFragment",
                        expected: "(RegExp | RuleSetConditions | RuleSetLogicalConditions | string | undefined)",
                        value: input.resourceFragment
                    })) && (void 0 === input.resourceFragment || "function" == typeof input.resourceFragment || "string" == typeof input.resourceFragment || input.resourceFragment instanceof RegExp || Array.isArray(input.resourceFragment) && (_va0(input.resourceFragment, _path + ".resourceFragment", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".resourceFragment",
                        expected: "RuleSetConditions",
                        value: input.resourceFragment
                    })) || "object" == typeof input.resourceFragment && null !== input.resourceFragment && false === Array.isArray(input.resourceFragment) && _vo174(input.resourceFragment, _path + ".resourceFragment", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".resourceFragment",
                        expected: "(RegExp | RuleSetConditions | RuleSetLogicalConditions | string | undefined)",
                        value: input.resourceFragment
                    }) || _report(_exceptionable, {
                        path: _path + ".resourceFragment",
                        expected: "(RegExp | RuleSetConditions | RuleSetLogicalConditions | string | undefined)",
                        value: input.resourceFragment
                    })),
                    (null !== input.resourceQuery || _report(_exceptionable, {
                        path: _path + ".resourceQuery",
                        expected: "(RegExp | RuleSetConditions | RuleSetLogicalConditions | string | undefined)",
                        value: input.resourceQuery
                    })) && (void 0 === input.resourceQuery || "function" == typeof input.resourceQuery || "string" == typeof input.resourceQuery || input.resourceQuery instanceof RegExp || Array.isArray(input.resourceQuery) && (_va0(input.resourceQuery, _path + ".resourceQuery", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".resourceQuery",
                        expected: "RuleSetConditions",
                        value: input.resourceQuery
                    })) || "object" == typeof input.resourceQuery && null !== input.resourceQuery && false === Array.isArray(input.resourceQuery) && _vo174(input.resourceQuery, _path + ".resourceQuery", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".resourceQuery",
                        expected: "(RegExp | RuleSetConditions | RuleSetLogicalConditions | string | undefined)",
                        value: input.resourceQuery
                    }) || _report(_exceptionable, {
                        path: _path + ".resourceQuery",
                        expected: "(RegExp | RuleSetConditions | RuleSetLogicalConditions | string | undefined)",
                        value: input.resourceQuery
                    })),
                    (null !== input.mimetype || _report(_exceptionable, {
                        path: _path + ".mimetype",
                        expected: "(RegExp | RuleSetConditions | RuleSetLogicalConditions | string | undefined)",
                        value: input.mimetype
                    })) && (void 0 === input.mimetype || "function" == typeof input.mimetype || "string" == typeof input.mimetype || input.mimetype instanceof RegExp || Array.isArray(input.mimetype) && (_va0(input.mimetype, _path + ".mimetype", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".mimetype",
                        expected: "RuleSetConditions",
                        value: input.mimetype
                    })) || "object" == typeof input.mimetype && null !== input.mimetype && false === Array.isArray(input.mimetype) && _vo174(input.mimetype, _path + ".mimetype", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".mimetype",
                        expected: "(RegExp | RuleSetConditions | RuleSetLogicalConditions | string | undefined)",
                        value: input.mimetype
                    }) || _report(_exceptionable, {
                        path: _path + ".mimetype",
                        expected: "(RegExp | RuleSetConditions | RuleSetLogicalConditions | string | undefined)",
                        value: input.mimetype
                    })),
                    (null !== input.scheme || _report(_exceptionable, {
                        path: _path + ".scheme",
                        expected: "(RegExp | RuleSetConditions | RuleSetLogicalConditions | string | undefined)",
                        value: input.scheme
                    })) && (void 0 === input.scheme || "function" == typeof input.scheme || "string" == typeof input.scheme || input.scheme instanceof RegExp || Array.isArray(input.scheme) && (_va0(input.scheme, _path + ".scheme", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".scheme",
                        expected: "RuleSetConditions",
                        value: input.scheme
                    })) || "object" == typeof input.scheme && null !== input.scheme && false === Array.isArray(input.scheme) && _vo174(input.scheme, _path + ".scheme", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".scheme",
                        expected: "(RegExp | RuleSetConditions | RuleSetLogicalConditions | string | undefined)",
                        value: input.scheme
                    }) || _report(_exceptionable, {
                        path: _path + ".scheme",
                        expected: "(RegExp | RuleSetConditions | RuleSetLogicalConditions | string | undefined)",
                        value: input.scheme
                    })),
                    void 0 === input.descriptionData || ("object" == typeof input.descriptionData && null !== input.descriptionData && false === Array.isArray(input.descriptionData) || _report(_exceptionable, {
                        path: _path + ".descriptionData",
                        expected: "(Record<string, RuleSetCondition> | undefined)",
                        value: input.descriptionData
                    })) && _vo175(input.descriptionData, _path + ".descriptionData", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".descriptionData",
                        expected: "(Record<string, RuleSetCondition> | undefined)",
                        value: input.descriptionData
                    }),
                    void 0 === input["with"] || ("object" == typeof input["with"] && null !== input["with"] && false === Array.isArray(input["with"]) || _report(_exceptionable, {
                        path: _path + "[\"with\"]",
                        expected: "(Record<string, RuleSetCondition> | undefined)",
                        value: input["with"]
                    })) && _vo175(input["with"], _path + "[\"with\"]", _exceptionable) || _report(_exceptionable, {
                        path: _path + "[\"with\"]",
                        expected: "(Record<string, RuleSetCondition> | undefined)",
                        value: input["with"]
                    }),
                    void 0 === input.type || "string" == typeof input.type || _report(_exceptionable, {
                        path: _path + ".type",
                        expected: "(string | undefined)",
                        value: input.type
                    }),
                    void 0 === input.layer || "string" == typeof input.layer || _report(_exceptionable, {
                        path: _path + ".layer",
                        expected: "(string | undefined)",
                        value: input.layer
                    }),
                    void 0 === input.loader || "string" == typeof input.loader || _report(_exceptionable, {
                        path: _path + ".loader",
                        expected: "(string | undefined)",
                        value: input.loader
                    }),
                    (null !== input.options || _report(_exceptionable, {
                        path: _path + ".options",
                        expected: "(Record<string, any> | string | undefined)",
                        value: input.options
                    })) && (void 0 === input.options || "string" == typeof input.options || ("object" == typeof input.options && null !== input.options && false === Array.isArray(input.options) || _report(_exceptionable, {
                        path: _path + ".options",
                        expected: "(Record<string, any> | string | undefined)",
                        value: input.options
                    })) && _vo19(input.options, _path + ".options", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".options",
                        expected: "(Record<string, any> | string | undefined)",
                        value: input.options
                    })),
                    (null !== input.use || _report(_exceptionable, {
                        path: _path + ".use",
                        expected: "(Array<RuleSetUseItem> | RuleSetLoaderWithOptions | string | undefined)",
                        value: input.use
                    })) && (void 0 === input.use || "function" == typeof input.use || "string" == typeof input.use || Array.isArray(input.use) && input.use.map((elem, _index514)=>(null !== elem || _report(_exceptionable, {
                            path: _path + ".use[" + _index514 + "]",
                            expected: "(RuleSetLoaderWithOptions | string)",
                            value: elem
                        })) && (void 0 !== elem || _report(_exceptionable, {
                            path: _path + ".use[" + _index514 + "]",
                            expected: "(RuleSetLoaderWithOptions | string)",
                            value: elem
                        })) && ("string" == typeof elem || ("object" == typeof elem && null !== elem || _report(_exceptionable, {
                            path: _path + ".use[" + _index514 + "]",
                            expected: "(RuleSetLoaderWithOptions | string)",
                            value: elem
                        })) && _vo176(elem, _path + ".use[" + _index514 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".use[" + _index514 + "]",
                            expected: "(RuleSetLoaderWithOptions | string)",
                            value: elem
                        }))).every((flag)=>flag) || "object" == typeof input.use && null !== input.use && _vo176(input.use, _path + ".use", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".use",
                        expected: "(Array<RuleSetUseItem> | RuleSetLoaderWithOptions | string | undefined)",
                        value: input.use
                    }) || _report(_exceptionable, {
                        path: _path + ".use",
                        expected: "(Array<RuleSetUseItem> | RuleSetLoaderWithOptions | string | undefined)",
                        value: input.use
                    })),
                    void 0 === input.parser || ("object" == typeof input.parser && null !== input.parser && false === Array.isArray(input.parser) || _report(_exceptionable, {
                        path: _path + ".parser",
                        expected: "(Record<string, any> | undefined)",
                        value: input.parser
                    })) && _vo19(input.parser, _path + ".parser", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".parser",
                        expected: "(Record<string, any> | undefined)",
                        value: input.parser
                    }),
                    void 0 === input.generator || ("object" == typeof input.generator && null !== input.generator && false === Array.isArray(input.generator) || _report(_exceptionable, {
                        path: _path + ".generator",
                        expected: "(Record<string, any> | undefined)",
                        value: input.generator
                    })) && _vo19(input.generator, _path + ".generator", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".generator",
                        expected: "(Record<string, any> | undefined)",
                        value: input.generator
                    }),
                    void 0 === input.resolve || ("object" == typeof input.resolve && null !== input.resolve && false === Array.isArray(input.resolve) || _report(_exceptionable, {
                        path: _path + ".resolve",
                        expected: "(ResolveOptions | undefined)",
                        value: input.resolve
                    })) && _vo128(input.resolve, _path + ".resolve", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".resolve",
                        expected: "(ResolveOptions | undefined)",
                        value: input.resolve
                    }),
                    void 0 === input.sideEffects || "boolean" == typeof input.sideEffects || _report(_exceptionable, {
                        path: _path + ".sideEffects",
                        expected: "(boolean | undefined)",
                        value: input.sideEffects
                    }),
                    void 0 === input.enforce || "pre" === input.enforce || "post" === input.enforce || _report(_exceptionable, {
                        path: _path + ".enforce",
                        expected: "(\"post\" | \"pre\" | undefined)",
                        value: input.enforce
                    }),
                    void 0 === input.oneOf || (Array.isArray(input.oneOf) || _report(_exceptionable, {
                        path: _path + ".oneOf",
                        expected: "(Array<Falsy | RuleSetRule> | undefined)",
                        value: input.oneOf
                    })) && input.oneOf.map((elem, _index515)=>null == elem || false === elem || "" === elem || 0 === elem || ("object" == typeof elem && null !== elem && false === Array.isArray(elem) || _report(_exceptionable, {
                            path: _path + ".oneOf[" + _index515 + "]",
                            expected: "(\"\" | 0 | RuleSetRule | false | null | undefined)",
                            value: elem
                        })) && _vo173(elem, _path + ".oneOf[" + _index515 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".oneOf[" + _index515 + "]",
                            expected: "(\"\" | 0 | RuleSetRule | false | null | undefined)",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".oneOf",
                        expected: "(Array<Falsy | RuleSetRule> | undefined)",
                        value: input.oneOf
                    }),
                    void 0 === input.rules || (Array.isArray(input.rules) || _report(_exceptionable, {
                        path: _path + ".rules",
                        expected: "(Array<Falsy | RuleSetRule> | undefined)",
                        value: input.rules
                    })) && input.rules.map((elem, _index516)=>null == elem || false === elem || "" === elem || 0 === elem || ("object" == typeof elem && null !== elem && false === Array.isArray(elem) || _report(_exceptionable, {
                            path: _path + ".rules[" + _index516 + "]",
                            expected: "(\"\" | 0 | RuleSetRule | false | null | undefined)",
                            value: elem
                        })) && _vo173(elem, _path + ".rules[" + _index516 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".rules[" + _index516 + "]",
                            expected: "(\"\" | 0 | RuleSetRule | false | null | undefined)",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".rules",
                        expected: "(Array<Falsy | RuleSetRule> | undefined)",
                        value: input.rules
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "test",
                            "exclude",
                            "include",
                            "issuer",
                            "issuerLayer",
                            "dependency",
                            "resource",
                            "resourceFragment",
                            "resourceQuery",
                            "mimetype",
                            "scheme",
                            "descriptionData",
                            "with",
                            "type",
                            "layer",
                            "loader",
                            "options",
                            "use",
                            "parser",
                            "generator",
                            "resolve",
                            "sideEffects",
                            "enforce",
                            "oneOf",
                            "rules"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo174 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.and || (Array.isArray(input.and) || _report(_exceptionable, {
                        path: _path + ".and",
                        expected: "(RuleSetConditions | undefined)",
                        value: input.and
                    })) && (_va0(input.and, _path + ".and", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".and",
                        expected: "RuleSetConditions",
                        value: input.and
                    })) || _report(_exceptionable, {
                        path: _path + ".and",
                        expected: "(RuleSetConditions | undefined)",
                        value: input.and
                    }),
                    void 0 === input.or || (Array.isArray(input.or) || _report(_exceptionable, {
                        path: _path + ".or",
                        expected: "(RuleSetConditions | undefined)",
                        value: input.or
                    })) && (_va0(input.or, _path + ".or", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".or",
                        expected: "RuleSetConditions",
                        value: input.or
                    })) || _report(_exceptionable, {
                        path: _path + ".or",
                        expected: "(RuleSetConditions | undefined)",
                        value: input.or
                    }),
                    (null !== input.not || _report(_exceptionable, {
                        path: _path + ".not",
                        expected: "(RegExp | RuleSetConditions | RuleSetLogicalConditions | string | undefined)",
                        value: input.not
                    })) && (void 0 === input.not || "function" == typeof input.not || "string" == typeof input.not || input.not instanceof RegExp || Array.isArray(input.not) && (_va0(input.not, _path + ".not", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".not",
                        expected: "RuleSetConditions",
                        value: input.not
                    })) || "object" == typeof input.not && null !== input.not && false === Array.isArray(input.not) && _vo174(input.not, _path + ".not", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".not",
                        expected: "(RegExp | RuleSetConditions | RuleSetLogicalConditions | string | undefined)",
                        value: input.not
                    }) || _report(_exceptionable, {
                        path: _path + ".not",
                        expected: "(RegExp | RuleSetConditions | RuleSetLogicalConditions | string | undefined)",
                        value: input.not
                    })),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "and",
                            "or",
                            "not"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo175 = (input, _path, _exceptionable = true)=>[
                    false === _exceptionable || Object.keys(input).map((key)=>{
                        const value = input[key];
                        if (void 0 === value) return true;
                        return (null !== value || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(RegExp | RuleSetConditions | RuleSetLogicalConditions | string)",
                            value: value
                        })) && (void 0 !== value || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(RegExp | RuleSetConditions | RuleSetLogicalConditions | string)",
                            value: value
                        })) && ("function" == typeof value || "string" == typeof value || value instanceof RegExp || Array.isArray(value) && (_va0(value, _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key), _exceptionable) || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "RuleSetConditions",
                            value: value
                        })) || "object" == typeof value && null !== value && false === Array.isArray(value) && _vo174(value, _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key), _exceptionable) || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(RegExp | RuleSetConditions | RuleSetLogicalConditions | string)",
                            value: value
                        }) || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(RegExp | RuleSetConditions | RuleSetLogicalConditions | string)",
                            value: value
                        }));
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo176 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.ident || "string" == typeof input.ident || _report(_exceptionable, {
                        path: _path + ".ident",
                        expected: "(string | undefined)",
                        value: input.ident
                    }),
                    "string" == typeof input.loader || _report(_exceptionable, {
                        path: _path + ".loader",
                        expected: "string",
                        value: input.loader
                    }),
                    void 0 === input.parallel || "boolean" == typeof input.parallel || _report(_exceptionable, {
                        path: _path + ".parallel",
                        expected: "(boolean | undefined)",
                        value: input.parallel
                    }),
                    (null !== input.options || _report(_exceptionable, {
                        path: _path + ".options",
                        expected: "(Record<string, any> | string | undefined)",
                        value: input.options
                    })) && (void 0 === input.options || "string" == typeof input.options || ("object" == typeof input.options && null !== input.options && false === Array.isArray(input.options) || _report(_exceptionable, {
                        path: _path + ".options",
                        expected: "(Record<string, any> | string | undefined)",
                        value: input.options
                    })) && _vo19(input.options, _path + ".options", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".options",
                        expected: "(Record<string, any> | string | undefined)",
                        value: input.options
                    })),
                    1 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "ident",
                            "loader",
                            "parallel",
                            "options"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo177 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.asset || ("object" == typeof input.asset && null !== input.asset && false === Array.isArray(input.asset) || _report(_exceptionable, {
                        path: _path + ".asset",
                        expected: "(AssetParserOptions | undefined)",
                        value: input.asset
                    })) && _vo178(input.asset, _path + ".asset", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".asset",
                        expected: "(AssetParserOptions | undefined)",
                        value: input.asset
                    }),
                    void 0 === input.css || ("object" == typeof input.css && null !== input.css && false === Array.isArray(input.css) || _report(_exceptionable, {
                        path: _path + ".css",
                        expected: "(CssParserOptions | undefined)",
                        value: input.css
                    })) && _vo180(input.css, _path + ".css", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".css",
                        expected: "(CssParserOptions | undefined)",
                        value: input.css
                    }),
                    void 0 === input["css/auto"] || ("object" == typeof input["css/auto"] && null !== input["css/auto"] && false === Array.isArray(input["css/auto"]) || _report(_exceptionable, {
                        path: _path + "[\"css/auto\"]",
                        expected: "(CssAutoParserOptions | undefined)",
                        value: input["css/auto"]
                    })) && _vo181(input["css/auto"], _path + "[\"css/auto\"]", _exceptionable) || _report(_exceptionable, {
                        path: _path + "[\"css/auto\"]",
                        expected: "(CssAutoParserOptions | undefined)",
                        value: input["css/auto"]
                    }),
                    void 0 === input["css/module"] || ("object" == typeof input["css/module"] && null !== input["css/module"] && false === Array.isArray(input["css/module"]) || _report(_exceptionable, {
                        path: _path + "[\"css/module\"]",
                        expected: "(CssModuleParserOptions | undefined)",
                        value: input["css/module"]
                    })) && _vo182(input["css/module"], _path + "[\"css/module\"]", _exceptionable) || _report(_exceptionable, {
                        path: _path + "[\"css/module\"]",
                        expected: "(CssModuleParserOptions | undefined)",
                        value: input["css/module"]
                    }),
                    void 0 === input.javascript || ("object" == typeof input.javascript && null !== input.javascript && false === Array.isArray(input.javascript) || _report(_exceptionable, {
                        path: _path + ".javascript",
                        expected: "(JavascriptParserOptions | undefined)",
                        value: input.javascript
                    })) && _vo183(input.javascript, _path + ".javascript", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".javascript",
                        expected: "(JavascriptParserOptions | undefined)",
                        value: input.javascript
                    }),
                    void 0 === input["javascript/auto"] || ("object" == typeof input["javascript/auto"] && null !== input["javascript/auto"] && false === Array.isArray(input["javascript/auto"]) || _report(_exceptionable, {
                        path: _path + '["javascript/auto"]',
                        expected: "(JavascriptParserOptions | undefined)",
                        value: input["javascript/auto"]
                    })) && _vo183(input["javascript/auto"], _path + '["javascript/auto"]', _exceptionable) || _report(_exceptionable, {
                        path: _path + '["javascript/auto"]',
                        expected: "(JavascriptParserOptions | undefined)",
                        value: input["javascript/auto"]
                    }),
                    void 0 === input["javascript/dynamic"] || ("object" == typeof input["javascript/dynamic"] && null !== input["javascript/dynamic"] && false === Array.isArray(input["javascript/dynamic"]) || _report(_exceptionable, {
                        path: _path + '["javascript/dynamic"]',
                        expected: "(JavascriptParserOptions | undefined)",
                        value: input["javascript/dynamic"]
                    })) && _vo183(input["javascript/dynamic"], _path + '["javascript/dynamic"]', _exceptionable) || _report(_exceptionable, {
                        path: _path + '["javascript/dynamic"]',
                        expected: "(JavascriptParserOptions | undefined)",
                        value: input["javascript/dynamic"]
                    }),
                    void 0 === input["javascript/esm"] || ("object" == typeof input["javascript/esm"] && null !== input["javascript/esm"] && false === Array.isArray(input["javascript/esm"]) || _report(_exceptionable, {
                        path: _path + '["javascript/esm"]',
                        expected: "(JavascriptParserOptions | undefined)",
                        value: input["javascript/esm"]
                    })) && _vo183(input["javascript/esm"], _path + '["javascript/esm"]', _exceptionable) || _report(_exceptionable, {
                        path: _path + '["javascript/esm"]',
                        expected: "(JavascriptParserOptions | undefined)",
                        value: input["javascript/esm"]
                    }),
                    void 0 === input.json || ("object" == typeof input.json && null !== input.json && false === Array.isArray(input.json) || _report(_exceptionable, {
                        path: _path + ".json",
                        expected: "(JsonParserOptions | undefined)",
                        value: input.json
                    })) && _vo184(input.json, _path + ".json", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".json",
                        expected: "(JsonParserOptions | undefined)",
                        value: input.json
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "asset",
                            "css",
                            "css/auto",
                            "css/module",
                            "javascript",
                            "javascript/auto",
                            "javascript/dynamic",
                            "javascript/esm",
                            "json"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo178 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.dataUrlCondition || ("object" == typeof input.dataUrlCondition && null !== input.dataUrlCondition && false === Array.isArray(input.dataUrlCondition) || _report(_exceptionable, {
                        path: _path + ".dataUrlCondition",
                        expected: "(AssetParserDataUrlOptions | undefined)",
                        value: input.dataUrlCondition
                    })) && _vo179(input.dataUrlCondition, _path + ".dataUrlCondition", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".dataUrlCondition",
                        expected: "(AssetParserDataUrlOptions | undefined)",
                        value: input.dataUrlCondition
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "dataUrlCondition"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo179 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.maxSize || "number" == typeof input.maxSize || _report(_exceptionable, {
                        path: _path + ".maxSize",
                        expected: "(number | undefined)",
                        value: input.maxSize
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "maxSize"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo180 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.namedExports || "boolean" == typeof input.namedExports || _report(_exceptionable, {
                        path: _path + ".namedExports",
                        expected: "(boolean | undefined)",
                        value: input.namedExports
                    }),
                    void 0 === input.url || "boolean" == typeof input.url || _report(_exceptionable, {
                        path: _path + ".url",
                        expected: "(boolean | undefined)",
                        value: input.url
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "namedExports",
                            "url"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo181 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.namedExports || "boolean" == typeof input.namedExports || _report(_exceptionable, {
                        path: _path + ".namedExports",
                        expected: "(boolean | undefined)",
                        value: input.namedExports
                    }),
                    void 0 === input.url || "boolean" == typeof input.url || _report(_exceptionable, {
                        path: _path + ".url",
                        expected: "(boolean | undefined)",
                        value: input.url
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "namedExports",
                            "url"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo182 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.namedExports || "boolean" == typeof input.namedExports || _report(_exceptionable, {
                        path: _path + ".namedExports",
                        expected: "(boolean | undefined)",
                        value: input.namedExports
                    }),
                    void 0 === input.url || "boolean" == typeof input.url || _report(_exceptionable, {
                        path: _path + ".url",
                        expected: "(boolean | undefined)",
                        value: input.url
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "namedExports",
                            "url"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo183 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.dynamicImportMode || "weak" === input.dynamicImportMode || "eager" === input.dynamicImportMode || "lazy" === input.dynamicImportMode || "lazy-once" === input.dynamicImportMode || _report(_exceptionable, {
                        path: _path + ".dynamicImportMode",
                        expected: "(\"eager\" | \"lazy\" | \"lazy-once\" | \"weak\" | undefined)",
                        value: input.dynamicImportMode
                    }),
                    void 0 === input.dynamicImportPreload || "number" == typeof input.dynamicImportPreload || "boolean" == typeof input.dynamicImportPreload || _report(_exceptionable, {
                        path: _path + ".dynamicImportPreload",
                        expected: "(boolean | number | undefined)",
                        value: input.dynamicImportPreload
                    }),
                    void 0 === input.dynamicImportPrefetch || "number" == typeof input.dynamicImportPrefetch || "boolean" == typeof input.dynamicImportPrefetch || _report(_exceptionable, {
                        path: _path + ".dynamicImportPrefetch",
                        expected: "(boolean | number | undefined)",
                        value: input.dynamicImportPrefetch
                    }),
                    void 0 === input.dynamicImportFetchPriority || "auto" === input.dynamicImportFetchPriority || "low" === input.dynamicImportFetchPriority || "high" === input.dynamicImportFetchPriority || _report(_exceptionable, {
                        path: _path + ".dynamicImportFetchPriority",
                        expected: "(\"auto\" | \"high\" | \"low\" | undefined)",
                        value: input.dynamicImportFetchPriority
                    }),
                    void 0 === input.importMeta || "boolean" == typeof input.importMeta || _report(_exceptionable, {
                        path: _path + ".importMeta",
                        expected: "(boolean | undefined)",
                        value: input.importMeta
                    }),
                    void 0 === input.url || "relative" === input.url || "boolean" == typeof input.url || _report(_exceptionable, {
                        path: _path + ".url",
                        expected: "(\"relative\" | boolean | undefined)",
                        value: input.url
                    }),
                    void 0 === input.exprContextCritical || "boolean" == typeof input.exprContextCritical || _report(_exceptionable, {
                        path: _path + ".exprContextCritical",
                        expected: "(boolean | undefined)",
                        value: input.exprContextCritical
                    }),
                    void 0 === input.unknownContextCritical || "boolean" == typeof input.unknownContextCritical || _report(_exceptionable, {
                        path: _path + ".unknownContextCritical",
                        expected: "(boolean | undefined)",
                        value: input.unknownContextCritical
                    }),
                    void 0 === input.wrappedContextCritical || "boolean" == typeof input.wrappedContextCritical || _report(_exceptionable, {
                        path: _path + ".wrappedContextCritical",
                        expected: "(boolean | undefined)",
                        value: input.wrappedContextCritical
                    }),
                    void 0 === input.wrappedContextRegExp || input.wrappedContextRegExp instanceof RegExp || _report(_exceptionable, {
                        path: _path + ".wrappedContextRegExp",
                        expected: "(RegExp | undefined)",
                        value: input.wrappedContextRegExp
                    }),
                    void 0 === input.exportsPresence || false === input.exportsPresence || "auto" === input.exportsPresence || "error" === input.exportsPresence || "warn" === input.exportsPresence || _report(_exceptionable, {
                        path: _path + ".exportsPresence",
                        expected: "(\"auto\" | \"error\" | \"warn\" | false | undefined)",
                        value: input.exportsPresence
                    }),
                    void 0 === input.importExportsPresence || false === input.importExportsPresence || "auto" === input.importExportsPresence || "error" === input.importExportsPresence || "warn" === input.importExportsPresence || _report(_exceptionable, {
                        path: _path + ".importExportsPresence",
                        expected: "(\"auto\" | \"error\" | \"warn\" | false | undefined)",
                        value: input.importExportsPresence
                    }),
                    void 0 === input.reexportExportsPresence || false === input.reexportExportsPresence || "auto" === input.reexportExportsPresence || "error" === input.reexportExportsPresence || "warn" === input.reexportExportsPresence || _report(_exceptionable, {
                        path: _path + ".reexportExportsPresence",
                        expected: "(\"auto\" | \"error\" | \"warn\" | false | undefined)",
                        value: input.reexportExportsPresence
                    }),
                    void 0 === input.strictExportPresence || "boolean" == typeof input.strictExportPresence || _report(_exceptionable, {
                        path: _path + ".strictExportPresence",
                        expected: "(boolean | undefined)",
                        value: input.strictExportPresence
                    }),
                    (null !== input.worker || _report(_exceptionable, {
                        path: _path + ".worker",
                        expected: "(Array<string> | boolean | undefined)",
                        value: input.worker
                    })) && (void 0 === input.worker || "boolean" == typeof input.worker || (Array.isArray(input.worker) || _report(_exceptionable, {
                        path: _path + ".worker",
                        expected: "(Array<string> | boolean | undefined)",
                        value: input.worker
                    })) && input.worker.map((elem, _index517)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".worker[" + _index517 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".worker",
                        expected: "(Array<string> | boolean | undefined)",
                        value: input.worker
                    })),
                    void 0 === input.overrideStrict || "strict" === input.overrideStrict || "non-strict" === input.overrideStrict || _report(_exceptionable, {
                        path: _path + ".overrideStrict",
                        expected: "(\"non-strict\" | \"strict\" | undefined)",
                        value: input.overrideStrict
                    }),
                    void 0 === input.requireAsExpression || "boolean" == typeof input.requireAsExpression || _report(_exceptionable, {
                        path: _path + ".requireAsExpression",
                        expected: "(boolean | undefined)",
                        value: input.requireAsExpression
                    }),
                    void 0 === input.requireDynamic || "boolean" == typeof input.requireDynamic || _report(_exceptionable, {
                        path: _path + ".requireDynamic",
                        expected: "(boolean | undefined)",
                        value: input.requireDynamic
                    }),
                    void 0 === input.requireResolve || "boolean" == typeof input.requireResolve || _report(_exceptionable, {
                        path: _path + ".requireResolve",
                        expected: "(boolean | undefined)",
                        value: input.requireResolve
                    }),
                    void 0 === input.importDynamic || "boolean" == typeof input.importDynamic || _report(_exceptionable, {
                        path: _path + ".importDynamic",
                        expected: "(boolean | undefined)",
                        value: input.importDynamic
                    }),
                    void 0 === input.inlineConst || "boolean" == typeof input.inlineConst || _report(_exceptionable, {
                        path: _path + ".inlineConst",
                        expected: "(boolean | undefined)",
                        value: input.inlineConst
                    }),
                    void 0 === input.typeReexportsPresence || "no-tolerant" === input.typeReexportsPresence || "tolerant" === input.typeReexportsPresence || "tolerant-no-check" === input.typeReexportsPresence || _report(_exceptionable, {
                        path: _path + ".typeReexportsPresence",
                        expected: "(\"no-tolerant\" | \"tolerant\" | \"tolerant-no-check\" | undefined)",
                        value: input.typeReexportsPresence
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "dynamicImportMode",
                            "dynamicImportPreload",
                            "dynamicImportPrefetch",
                            "dynamicImportFetchPriority",
                            "importMeta",
                            "url",
                            "exprContextCritical",
                            "unknownContextCritical",
                            "wrappedContextCritical",
                            "wrappedContextRegExp",
                            "exportsPresence",
                            "importExportsPresence",
                            "reexportExportsPresence",
                            "strictExportPresence",
                            "worker",
                            "overrideStrict",
                            "requireAsExpression",
                            "requireDynamic",
                            "requireResolve",
                            "importDynamic",
                            "inlineConst",
                            "typeReexportsPresence"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo184 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.exportsDepth || "number" == typeof input.exportsDepth || _report(_exceptionable, {
                        path: _path + ".exportsDepth",
                        expected: "(number | undefined)",
                        value: input.exportsDepth
                    }),
                    void 0 === input.parse || true,
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "exportsDepth",
                            "parse"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo185 = (input, _path, _exceptionable = true)=>[
                    false === _exceptionable || Object.keys(input).map((key)=>{
                        const value = input[key];
                        if (void 0 === value) return true;
                        return ("object" == typeof value && null !== value && false === Array.isArray(value) || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "Record<string, any>",
                            value: value
                        })) && _vo19(value, _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key), _exceptionable) || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "Record<string, any>",
                            value: value
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo186 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.asset || ("object" == typeof input.asset && null !== input.asset && false === Array.isArray(input.asset) || _report(_exceptionable, {
                        path: _path + ".asset",
                        expected: "(AssetGeneratorOptions | undefined)",
                        value: input.asset
                    })) && _vo187(input.asset, _path + ".asset", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".asset",
                        expected: "(AssetGeneratorOptions | undefined)",
                        value: input.asset
                    }),
                    void 0 === input["asset/inline"] || ("object" == typeof input["asset/inline"] && null !== input["asset/inline"] && false === Array.isArray(input["asset/inline"]) || _report(_exceptionable, {
                        path: _path + "[\"asset/inline\"]",
                        expected: "(AssetInlineGeneratorOptions | undefined)",
                        value: input["asset/inline"]
                    })) && _vo189(input["asset/inline"], _path + "[\"asset/inline\"]", _exceptionable) || _report(_exceptionable, {
                        path: _path + "[\"asset/inline\"]",
                        expected: "(AssetInlineGeneratorOptions | undefined)",
                        value: input["asset/inline"]
                    }),
                    void 0 === input["asset/resource"] || ("object" == typeof input["asset/resource"] && null !== input["asset/resource"] && false === Array.isArray(input["asset/resource"]) || _report(_exceptionable, {
                        path: _path + "[\"asset/resource\"]",
                        expected: "(AssetResourceGeneratorOptions | undefined)",
                        value: input["asset/resource"]
                    })) && _vo190(input["asset/resource"], _path + "[\"asset/resource\"]", _exceptionable) || _report(_exceptionable, {
                        path: _path + "[\"asset/resource\"]",
                        expected: "(AssetResourceGeneratorOptions | undefined)",
                        value: input["asset/resource"]
                    }),
                    void 0 === input.css || ("object" == typeof input.css && null !== input.css && false === Array.isArray(input.css) || _report(_exceptionable, {
                        path: _path + ".css",
                        expected: "(CssGeneratorOptions | undefined)",
                        value: input.css
                    })) && _vo191(input.css, _path + ".css", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".css",
                        expected: "(CssGeneratorOptions | undefined)",
                        value: input.css
                    }),
                    void 0 === input["css/auto"] || ("object" == typeof input["css/auto"] && null !== input["css/auto"] && false === Array.isArray(input["css/auto"]) || _report(_exceptionable, {
                        path: _path + "[\"css/auto\"]",
                        expected: "(CssAutoGeneratorOptions | undefined)",
                        value: input["css/auto"]
                    })) && _vo192(input["css/auto"], _path + "[\"css/auto\"]", _exceptionable) || _report(_exceptionable, {
                        path: _path + "[\"css/auto\"]",
                        expected: "(CssAutoGeneratorOptions | undefined)",
                        value: input["css/auto"]
                    }),
                    void 0 === input["css/module"] || ("object" == typeof input["css/module"] && null !== input["css/module"] && false === Array.isArray(input["css/module"]) || _report(_exceptionable, {
                        path: _path + "[\"css/module\"]",
                        expected: "(CssAutoGeneratorOptions | undefined)",
                        value: input["css/module"]
                    })) && _vo192(input["css/module"], _path + "[\"css/module\"]", _exceptionable) || _report(_exceptionable, {
                        path: _path + "[\"css/module\"]",
                        expected: "(CssAutoGeneratorOptions | undefined)",
                        value: input["css/module"]
                    }),
                    void 0 === input.json || ("object" == typeof input.json && null !== input.json && false === Array.isArray(input.json) || _report(_exceptionable, {
                        path: _path + ".json",
                        expected: "(JsonGeneratorOptions | undefined)",
                        value: input.json
                    })) && _vo193(input.json, _path + ".json", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".json",
                        expected: "(JsonGeneratorOptions | undefined)",
                        value: input.json
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "asset",
                            "asset/inline",
                            "asset/resource",
                            "css",
                            "css/auto",
                            "css/module",
                            "json"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo187 = (input, _path, _exceptionable = true)=>[
                    (null !== input.dataUrl || _report(_exceptionable, {
                        path: _path + ".dataUrl",
                        expected: "(AssetGeneratorDataUrlOptions | undefined)",
                        value: input.dataUrl
                    })) && (void 0 === input.dataUrl || "function" == typeof input.dataUrl || ("object" == typeof input.dataUrl && null !== input.dataUrl && false === Array.isArray(input.dataUrl) || _report(_exceptionable, {
                        path: _path + ".dataUrl",
                        expected: "(AssetGeneratorDataUrlOptions | undefined)",
                        value: input.dataUrl
                    })) && _vo188(input.dataUrl, _path + ".dataUrl", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".dataUrl",
                        expected: "(AssetGeneratorDataUrlOptions | undefined)",
                        value: input.dataUrl
                    })),
                    void 0 === input.binary || "boolean" == typeof input.binary || _report(_exceptionable, {
                        path: _path + ".binary",
                        expected: "(boolean | undefined)",
                        value: input.binary
                    }),
                    void 0 === input.emit || "boolean" == typeof input.emit || _report(_exceptionable, {
                        path: _path + ".emit",
                        expected: "(boolean | undefined)",
                        value: input.emit
                    }),
                    (null !== input.filename || _report(_exceptionable, {
                        path: _path + ".filename",
                        expected: "(string | undefined)",
                        value: input.filename
                    })) && (void 0 === input.filename || "function" == typeof input.filename || "string" == typeof input.filename || _report(_exceptionable, {
                        path: _path + ".filename",
                        expected: "(string | undefined)",
                        value: input.filename
                    })),
                    (null !== input.outputPath || _report(_exceptionable, {
                        path: _path + ".outputPath",
                        expected: "(string | undefined)",
                        value: input.outputPath
                    })) && (void 0 === input.outputPath || "function" == typeof input.outputPath || "string" == typeof input.outputPath || _report(_exceptionable, {
                        path: _path + ".outputPath",
                        expected: "(string | undefined)",
                        value: input.outputPath
                    })),
                    (null !== input.publicPath || _report(_exceptionable, {
                        path: _path + ".publicPath",
                        expected: "(string | undefined)",
                        value: input.publicPath
                    })) && (void 0 === input.publicPath || "function" == typeof input.publicPath || "string" == typeof input.publicPath || _report(_exceptionable, {
                        path: _path + ".publicPath",
                        expected: "(string | undefined)",
                        value: input.publicPath
                    })),
                    void 0 === input.importMode || "url" === input.importMode || "preserve" === input.importMode || _report(_exceptionable, {
                        path: _path + ".importMode",
                        expected: "(\"preserve\" | \"url\" | undefined)",
                        value: input.importMode
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "dataUrl",
                            "binary",
                            "emit",
                            "filename",
                            "outputPath",
                            "publicPath",
                            "importMode"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo188 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.encoding || false === input.encoding || "base64" === input.encoding || _report(_exceptionable, {
                        path: _path + ".encoding",
                        expected: "(\"base64\" | false | undefined)",
                        value: input.encoding
                    }),
                    void 0 === input.mimetype || "string" == typeof input.mimetype || _report(_exceptionable, {
                        path: _path + ".mimetype",
                        expected: "(string | undefined)",
                        value: input.mimetype
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "encoding",
                            "mimetype"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo189 = (input, _path, _exceptionable = true)=>[
                    (null !== input.dataUrl || _report(_exceptionable, {
                        path: _path + ".dataUrl",
                        expected: "(AssetGeneratorDataUrlOptions | undefined)",
                        value: input.dataUrl
                    })) && (void 0 === input.dataUrl || "function" == typeof input.dataUrl || ("object" == typeof input.dataUrl && null !== input.dataUrl && false === Array.isArray(input.dataUrl) || _report(_exceptionable, {
                        path: _path + ".dataUrl",
                        expected: "(AssetGeneratorDataUrlOptions | undefined)",
                        value: input.dataUrl
                    })) && _vo188(input.dataUrl, _path + ".dataUrl", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".dataUrl",
                        expected: "(AssetGeneratorDataUrlOptions | undefined)",
                        value: input.dataUrl
                    })),
                    void 0 === input.binary || "boolean" == typeof input.binary || _report(_exceptionable, {
                        path: _path + ".binary",
                        expected: "(boolean | undefined)",
                        value: input.binary
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "dataUrl",
                            "binary"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo190 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.emit || "boolean" == typeof input.emit || _report(_exceptionable, {
                        path: _path + ".emit",
                        expected: "(boolean | undefined)",
                        value: input.emit
                    }),
                    (null !== input.filename || _report(_exceptionable, {
                        path: _path + ".filename",
                        expected: "(string | undefined)",
                        value: input.filename
                    })) && (void 0 === input.filename || "function" == typeof input.filename || "string" == typeof input.filename || _report(_exceptionable, {
                        path: _path + ".filename",
                        expected: "(string | undefined)",
                        value: input.filename
                    })),
                    (null !== input.outputPath || _report(_exceptionable, {
                        path: _path + ".outputPath",
                        expected: "(string | undefined)",
                        value: input.outputPath
                    })) && (void 0 === input.outputPath || "function" == typeof input.outputPath || "string" == typeof input.outputPath || _report(_exceptionable, {
                        path: _path + ".outputPath",
                        expected: "(string | undefined)",
                        value: input.outputPath
                    })),
                    (null !== input.publicPath || _report(_exceptionable, {
                        path: _path + ".publicPath",
                        expected: "(string | undefined)",
                        value: input.publicPath
                    })) && (void 0 === input.publicPath || "function" == typeof input.publicPath || "string" == typeof input.publicPath || _report(_exceptionable, {
                        path: _path + ".publicPath",
                        expected: "(string | undefined)",
                        value: input.publicPath
                    })),
                    void 0 === input.importMode || "url" === input.importMode || "preserve" === input.importMode || _report(_exceptionable, {
                        path: _path + ".importMode",
                        expected: "(\"preserve\" | \"url\" | undefined)",
                        value: input.importMode
                    }),
                    void 0 === input.binary || "boolean" == typeof input.binary || _report(_exceptionable, {
                        path: _path + ".binary",
                        expected: "(boolean | undefined)",
                        value: input.binary
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "emit",
                            "filename",
                            "outputPath",
                            "publicPath",
                            "importMode",
                            "binary"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo191 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.exportsOnly || "boolean" == typeof input.exportsOnly || _report(_exceptionable, {
                        path: _path + ".exportsOnly",
                        expected: "(boolean | undefined)",
                        value: input.exportsOnly
                    }),
                    void 0 === input.esModule || "boolean" == typeof input.esModule || _report(_exceptionable, {
                        path: _path + ".esModule",
                        expected: "(boolean | undefined)",
                        value: input.esModule
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "exportsOnly",
                            "esModule"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo192 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.exportsConvention || "as-is" === input.exportsConvention || "camel-case" === input.exportsConvention || "camel-case-only" === input.exportsConvention || "dashes" === input.exportsConvention || "dashes-only" === input.exportsConvention || _report(_exceptionable, {
                        path: _path + ".exportsConvention",
                        expected: "(\"as-is\" | \"camel-case\" | \"camel-case-only\" | \"dashes\" | \"dashes-only\" | undefined)",
                        value: input.exportsConvention
                    }),
                    void 0 === input.exportsOnly || "boolean" == typeof input.exportsOnly || _report(_exceptionable, {
                        path: _path + ".exportsOnly",
                        expected: "(boolean | undefined)",
                        value: input.exportsOnly
                    }),
                    void 0 === input.localIdentName || "string" == typeof input.localIdentName || _report(_exceptionable, {
                        path: _path + ".localIdentName",
                        expected: "(string | undefined)",
                        value: input.localIdentName
                    }),
                    void 0 === input.esModule || "boolean" == typeof input.esModule || _report(_exceptionable, {
                        path: _path + ".esModule",
                        expected: "(boolean | undefined)",
                        value: input.esModule
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "exportsConvention",
                            "exportsOnly",
                            "localIdentName",
                            "esModule"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo193 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.JSONParse || "boolean" == typeof input.JSONParse || _report(_exceptionable, {
                        path: _path + ".JSONParse",
                        expected: "(boolean | undefined)",
                        value: input.JSONParse
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "JSONParse"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo194 = (input, _path, _exceptionable = true)=>[
                    false === _exceptionable || Object.keys(input).map((key)=>{
                        const value = input[key];
                        if (void 0 === value) return true;
                        return ("object" == typeof value && null !== value && false === Array.isArray(value) || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "Record<string, any>",
                            value: value
                        })) && _vo19(value, _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key), _exceptionable) || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "Record<string, any>",
                            value: value
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo195 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.assetFilter || true,
                    void 0 === input.hints || false === input.hints || "error" === input.hints || "warning" === input.hints || _report(_exceptionable, {
                        path: _path + ".hints",
                        expected: "(\"error\" | \"warning\" | false | undefined)",
                        value: input.hints
                    }),
                    void 0 === input.maxAssetSize || "number" == typeof input.maxAssetSize || _report(_exceptionable, {
                        path: _path + ".maxAssetSize",
                        expected: "(number | undefined)",
                        value: input.maxAssetSize
                    }),
                    void 0 === input.maxEntrypointSize || "number" == typeof input.maxEntrypointSize || _report(_exceptionable, {
                        path: _path + ".maxEntrypointSize",
                        expected: "(number | undefined)",
                        value: input.maxEntrypointSize
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "assetFilter",
                            "hints",
                            "maxAssetSize",
                            "maxEntrypointSize"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo196 = (input, _path, _exceptionable = true)=>[
                    (null !== input.amd || _report(_exceptionable, {
                        path: _path + ".amd",
                        expected: "(__type.o46 | false | undefined)",
                        value: input.amd
                    })) && (void 0 === input.amd || false === input.amd || ("object" == typeof input.amd && null !== input.amd && false === Array.isArray(input.amd) || _report(_exceptionable, {
                        path: _path + ".amd",
                        expected: "(__type.o46 | false | undefined)",
                        value: input.amd
                    })) && _vo197(input.amd, _path + ".amd", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".amd",
                        expected: "(__type.o46 | false | undefined)",
                        value: input.amd
                    })),
                    void 0 === input.bail || "boolean" == typeof input.bail || _report(_exceptionable, {
                        path: _path + ".bail",
                        expected: "(boolean | undefined)",
                        value: input.bail
                    }),
                    (null !== input.cache || _report(_exceptionable, {
                        path: _path + ".cache",
                        expected: "(FileCacheOptions | MemoryCacheOptions | boolean | undefined)",
                        value: input.cache
                    })) && (void 0 === input.cache || "boolean" == typeof input.cache || ("object" == typeof input.cache && null !== input.cache || _report(_exceptionable, {
                        path: _path + ".cache",
                        expected: "(FileCacheOptions | MemoryCacheOptions | boolean | undefined)",
                        value: input.cache
                    })) && _vu13(input.cache, _path + ".cache", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".cache",
                        expected: "(FileCacheOptions | MemoryCacheOptions | boolean | undefined)",
                        value: input.cache
                    })),
                    void 0 === input.context || "string" == typeof input.context || _report(_exceptionable, {
                        path: _path + ".context",
                        expected: "(string | undefined)",
                        value: input.context
                    }),
                    void 0 === input.dependencies || (Array.isArray(input.dependencies) || _report(_exceptionable, {
                        path: _path + ".dependencies",
                        expected: "(Array<string> | undefined)",
                        value: input.dependencies
                    })) && input.dependencies.map((elem, _index518)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".dependencies[" + _index518 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".dependencies",
                        expected: "(Array<string> | undefined)",
                        value: input.dependencies
                    }),
                    void 0 === input.devtool || false === input.devtool || "string" == typeof input.devtool || _report(_exceptionable, {
                        path: _path + ".devtool",
                        expected: "(false | string | undefined)",
                        value: input.devtool
                    }),
                    (null !== input.entry || _report(_exceptionable, {
                        path: _path + ".entry",
                        expected: "(Array<string> | EntryObject.o1 | string | undefined)",
                        value: input.entry
                    })) && (void 0 === input.entry || "function" == typeof input.entry || "string" == typeof input.entry || Array.isArray(input.entry) && input.entry.map((elem, _index519)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".entry[" + _index519 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || "object" == typeof input.entry && null !== input.entry && false === Array.isArray(input.entry) && _vo201(input.entry, _path + ".entry", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".entry",
                        expected: "(Array<string> | EntryObject.o1 | string | undefined)",
                        value: input.entry
                    }) || _report(_exceptionable, {
                        path: _path + ".entry",
                        expected: "(Array<string> | EntryObject.o1 | string | undefined)",
                        value: input.entry
                    })),
                    void 0 === input.experiments || ("object" == typeof input.experiments && null !== input.experiments && false === Array.isArray(input.experiments) || _report(_exceptionable, {
                        path: _path + ".experiments",
                        expected: "(Experiments.o1 | undefined)",
                        value: input.experiments
                    })) && _vo206(input.experiments, _path + ".experiments", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".experiments",
                        expected: "(Experiments.o1 | undefined)",
                        value: input.experiments
                    }),
                    (null !== input["extends"] || _report(_exceptionable, {
                        path: _path + "[\"extends\"]",
                        expected: "(Array<string> | string | undefined)",
                        value: input["extends"]
                    })) && (void 0 === input["extends"] || "string" == typeof input["extends"] || (Array.isArray(input["extends"]) || _report(_exceptionable, {
                        path: _path + "[\"extends\"]",
                        expected: "(Array<string> | string | undefined)",
                        value: input["extends"]
                    })) && input["extends"].map((elem, _index520)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + "[\"extends\"][" + _index520 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + "[\"extends\"]",
                        expected: "(Array<string> | string | undefined)",
                        value: input["extends"]
                    })),
                    (null !== input.externals || _report(_exceptionable, {
                        path: _path + ".externals",
                        expected: "(Array<ExternalItem>.o1 | ExternalItemObjectKnown & ExternalItemObjectUnknown | RegExp | string | undefined)",
                        value: input.externals
                    })) && (void 0 === input.externals || "function" == typeof input.externals || "string" == typeof input.externals || input.externals instanceof RegExp || Array.isArray(input.externals) && input.externals.map((elem, _index521)=>(null !== elem || _report(_exceptionable, {
                            path: _path + ".externals[" + _index521 + "]",
                            expected: "(ExternalItemObjectKnown & ExternalItemObjectUnknown | RegExp | string)",
                            value: elem
                        })) && (void 0 !== elem || _report(_exceptionable, {
                            path: _path + ".externals[" + _index521 + "]",
                            expected: "(ExternalItemObjectKnown & ExternalItemObjectUnknown | RegExp | string)",
                            value: elem
                        })) && ("function" == typeof elem || "string" == typeof elem || elem instanceof RegExp || ("object" == typeof elem && null !== elem && false === Array.isArray(elem) || _report(_exceptionable, {
                            path: _path + ".externals[" + _index521 + "]",
                            expected: "(ExternalItemObjectKnown & ExternalItemObjectUnknown | RegExp | string)",
                            value: elem
                        })) && _vo214(elem, _path + ".externals[" + _index521 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".externals[" + _index521 + "]",
                            expected: "(ExternalItemObjectKnown & ExternalItemObjectUnknown | RegExp | string)",
                            value: elem
                        }))).every((flag)=>flag) || "object" == typeof input.externals && null !== input.externals && false === Array.isArray(input.externals) && _vo214(input.externals, _path + ".externals", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".externals",
                        expected: "(Array<ExternalItem>.o1 | ExternalItemObjectKnown & ExternalItemObjectUnknown | RegExp | string | undefined)",
                        value: input.externals
                    }) || _report(_exceptionable, {
                        path: _path + ".externals",
                        expected: "(Array<ExternalItem>.o1 | ExternalItemObjectKnown & ExternalItemObjectUnknown | RegExp | string | undefined)",
                        value: input.externals
                    })),
                    void 0 === input.externalsPresets || ("object" == typeof input.externalsPresets && null !== input.externalsPresets && false === Array.isArray(input.externalsPresets) || _report(_exceptionable, {
                        path: _path + ".externalsPresets",
                        expected: "(ExternalsPresets.o1 | undefined)",
                        value: input.externalsPresets
                    })) && _vo217(input.externalsPresets, _path + ".externalsPresets", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".externalsPresets",
                        expected: "(ExternalsPresets.o1 | undefined)",
                        value: input.externalsPresets
                    }),
                    void 0 === input.externalsType || true === _vv522.has(input.externalsType) || _report(_exceptionable, {
                        path: _path + ".externalsType",
                        expected: '("amd" | "amd-require" | "assign" | "commonjs" | "commonjs-module" | "commonjs-static" | "commonjs2" | "global" | "import" | "jsonp" | "module" | "module-import" | "node-commonjs" | "promise" | "script" | "self" | "system" | "this" | "umd" | "umd2" | "var" | "window" | undefined)',
                        value: input.externalsType
                    }),
                    void 0 === input.ignoreWarnings || (Array.isArray(input.ignoreWarnings) || _report(_exceptionable, {
                        path: _path + ".ignoreWarnings",
                        expected: "(Array<RegExp | { file?: RegExp; message?: RegExp; module?: RegExp; } | ((warning: Error, compilation: Compilation) => boolean)> | undefined)",
                        value: input.ignoreWarnings
                    })) && input.ignoreWarnings.map((elem, _index523)=>(null !== elem || _report(_exceptionable, {
                            path: _path + ".ignoreWarnings[" + _index523 + "]",
                            expected: "(RegExp | __type.o50)",
                            value: elem
                        })) && (void 0 !== elem || _report(_exceptionable, {
                            path: _path + ".ignoreWarnings[" + _index523 + "]",
                            expected: "(RegExp | __type.o50)",
                            value: elem
                        })) && ("function" == typeof elem || elem instanceof RegExp || ("object" == typeof elem && null !== elem && false === Array.isArray(elem) || _report(_exceptionable, {
                            path: _path + ".ignoreWarnings[" + _index523 + "]",
                            expected: "(RegExp | __type.o50)",
                            value: elem
                        })) && _vo218(elem, _path + ".ignoreWarnings[" + _index523 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".ignoreWarnings[" + _index523 + "]",
                            expected: "(RegExp | __type.o50)",
                            value: elem
                        }))).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".ignoreWarnings",
                        expected: "(Array<RegExp | { file?: RegExp; message?: RegExp; module?: RegExp; } | ((warning: Error, compilation: Compilation) => boolean)> | undefined)",
                        value: input.ignoreWarnings
                    }),
                    void 0 === input.infrastructureLogging || ("object" == typeof input.infrastructureLogging && null !== input.infrastructureLogging && false === Array.isArray(input.infrastructureLogging) || _report(_exceptionable, {
                        path: _path + ".infrastructureLogging",
                        expected: "(InfrastructureLogging.o1 | undefined)",
                        value: input.infrastructureLogging
                    })) && _vo219(input.infrastructureLogging, _path + ".infrastructureLogging", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".infrastructureLogging",
                        expected: "(InfrastructureLogging.o1 | undefined)",
                        value: input.infrastructureLogging
                    }),
                    void 0 === input.loader || ("object" == typeof input.loader && null !== input.loader && false === Array.isArray(input.loader) || _report(_exceptionable, {
                        path: _path + ".loader",
                        expected: "(Loader.o1 | undefined)",
                        value: input.loader
                    })) && _vo221(input.loader, _path + ".loader", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".loader",
                        expected: "(Loader.o1 | undefined)",
                        value: input.loader
                    }),
                    void 0 === input.mode || "none" === input.mode || "development" === input.mode || "production" === input.mode || _report(_exceptionable, {
                        path: _path + ".mode",
                        expected: "(\"development\" | \"none\" | \"production\" | undefined)",
                        value: input.mode
                    }),
                    void 0 === input["module"] || ("object" == typeof input["module"] && null !== input["module"] && false === Array.isArray(input["module"]) || _report(_exceptionable, {
                        path: _path + "[\"module\"]",
                        expected: "(ModuleOptions.o1 | undefined)",
                        value: input["module"]
                    })) && _vo222(input["module"], _path + "[\"module\"]", _exceptionable) || _report(_exceptionable, {
                        path: _path + "[\"module\"]",
                        expected: "(ModuleOptions.o1 | undefined)",
                        value: input["module"]
                    }),
                    void 0 === input.name || "string" == typeof input.name || _report(_exceptionable, {
                        path: _path + ".name",
                        expected: "(string | undefined)",
                        value: input.name
                    }),
                    (null !== input.node || _report(_exceptionable, {
                        path: _path + ".node",
                        expected: "(NodeOptions.o1 | false | undefined)",
                        value: input.node
                    })) && (void 0 === input.node || false === input.node || ("object" == typeof input.node && null !== input.node && false === Array.isArray(input.node) || _report(_exceptionable, {
                        path: _path + ".node",
                        expected: "(NodeOptions.o1 | false | undefined)",
                        value: input.node
                    })) && _vo307(input.node, _path + ".node", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".node",
                        expected: "(NodeOptions.o1 | false | undefined)",
                        value: input.node
                    })),
                    void 0 === input.optimization || ("object" == typeof input.optimization && null !== input.optimization && false === Array.isArray(input.optimization) || _report(_exceptionable, {
                        path: _path + ".optimization",
                        expected: "(Optimization.o1 | undefined)",
                        value: input.optimization
                    })) && _vo310(input.optimization, _path + ".optimization", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".optimization",
                        expected: "(Optimization.o1 | undefined)",
                        value: input.optimization
                    }),
                    void 0 === input.output || ("object" == typeof input.output && null !== input.output && false === Array.isArray(input.output) || _report(_exceptionable, {
                        path: _path + ".output",
                        expected: "(Output.o1 | undefined)",
                        value: input.output
                    })) && _vo336(input.output, _path + ".output", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".output",
                        expected: "(Output.o1 | undefined)",
                        value: input.output
                    }),
                    void 0 === input.parallelism || "number" == typeof input.parallelism || _report(_exceptionable, {
                        path: _path + ".parallelism",
                        expected: "(number | undefined)",
                        value: input.parallelism
                    }),
                    (null !== input.performance || _report(_exceptionable, {
                        path: _path + ".performance",
                        expected: "(PerformanceOptions | false | undefined)",
                        value: input.performance
                    })) && (void 0 === input.performance || false === input.performance || ("object" == typeof input.performance && null !== input.performance && false === Array.isArray(input.performance) || _report(_exceptionable, {
                        path: _path + ".performance",
                        expected: "(PerformanceOptions | false | undefined)",
                        value: input.performance
                    })) && _vo342(input.performance, _path + ".performance", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".performance",
                        expected: "(PerformanceOptions | false | undefined)",
                        value: input.performance
                    })),
                    void 0 === input.plugins || (Array.isArray(input.plugins) || _report(_exceptionable, {
                        path: _path + ".plugins",
                        expected: "(Array<false | \"\" | 0 | WebpackPluginInstance | ((this: Compiler, compiler: Compiler) => void) | null | undefined> | undefined)",
                        value: input.plugins
                    })) && input.plugins.map((elem, _index524)=>null == elem || "function" == typeof elem || false === elem || "" === elem || 0 === elem || ("object" == typeof elem && null !== elem || _report(_exceptionable, {
                            path: _path + ".plugins[" + _index524 + "]",
                            expected: "(\"\" | 0 | WebpackPluginInstance.o1 | false | null | undefined)",
                            value: elem
                        })) && _vo311(elem, _path + ".plugins[" + _index524 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".plugins[" + _index524 + "]",
                            expected: "(\"\" | 0 | WebpackPluginInstance.o1 | false | null | undefined)",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".plugins",
                        expected: "(Array<false | \"\" | 0 | WebpackPluginInstance | ((this: Compiler, compiler: Compiler) => void) | null | undefined> | undefined)",
                        value: input.plugins
                    }),
                    void 0 === input.profile || "boolean" == typeof input.profile || _report(_exceptionable, {
                        path: _path + ".profile",
                        expected: "(boolean | undefined)",
                        value: input.profile
                    }),
                    void 0 === input.recordsInputPath || false === input.recordsInputPath || "string" == typeof input.recordsInputPath || _report(_exceptionable, {
                        path: _path + ".recordsInputPath",
                        expected: "(false | string | undefined)",
                        value: input.recordsInputPath
                    }),
                    void 0 === input.recordsOutputPath || false === input.recordsOutputPath || "string" == typeof input.recordsOutputPath || _report(_exceptionable, {
                        path: _path + ".recordsOutputPath",
                        expected: "(false | string | undefined)",
                        value: input.recordsOutputPath
                    }),
                    void 0 === input.recordsPath || false === input.recordsPath || "string" == typeof input.recordsPath || _report(_exceptionable, {
                        path: _path + ".recordsPath",
                        expected: "(false | string | undefined)",
                        value: input.recordsPath
                    }),
                    void 0 === input.resolve || ("object" == typeof input.resolve && null !== input.resolve && false === Array.isArray(input.resolve) || _report(_exceptionable, {
                        path: _path + ".resolve",
                        expected: "(ResolveOptions.o1 | undefined)",
                        value: input.resolve
                    })) && _vo231(input.resolve, _path + ".resolve", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".resolve",
                        expected: "(ResolveOptions.o1 | undefined)",
                        value: input.resolve
                    }),
                    void 0 === input.resolveLoader || ("object" == typeof input.resolveLoader && null !== input.resolveLoader && false === Array.isArray(input.resolveLoader) || _report(_exceptionable, {
                        path: _path + ".resolveLoader",
                        expected: "(ResolveOptions.o1 | undefined)",
                        value: input.resolveLoader
                    })) && _vo231(input.resolveLoader, _path + ".resolveLoader", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".resolveLoader",
                        expected: "(ResolveOptions.o1 | undefined)",
                        value: input.resolveLoader
                    }),
                    void 0 === input.snapshot || ("object" == typeof input.snapshot && null !== input.snapshot && false === Array.isArray(input.snapshot) || _report(_exceptionable, {
                        path: _path + ".snapshot",
                        expected: "(SnapshotOptionsWebpackOptions | undefined)",
                        value: input.snapshot
                    })) && _vo343(input.snapshot, _path + ".snapshot", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".snapshot",
                        expected: "(SnapshotOptionsWebpackOptions | undefined)",
                        value: input.snapshot
                    }),
                    (null !== input.stats || _report(_exceptionable, {
                        path: _path + ".stats",
                        expected: "(\"detailed\" | \"errors-only\" | \"errors-warnings\" | \"minimal\" | \"none\" | \"normal\" | \"summary\" | \"verbose\" | StatsOptions.o1 | boolean | undefined)",
                        value: input.stats
                    })) && (void 0 === input.stats || "none" === input.stats || "verbose" === input.stats || "normal" === input.stats || "errors-only" === input.stats || "errors-warnings" === input.stats || "minimal" === input.stats || "detailed" === input.stats || "summary" === input.stats || "boolean" == typeof input.stats || ("object" == typeof input.stats && null !== input.stats && false === Array.isArray(input.stats) || _report(_exceptionable, {
                        path: _path + ".stats",
                        expected: "(\"detailed\" | \"errors-only\" | \"errors-warnings\" | \"minimal\" | \"none\" | \"normal\" | \"summary\" | \"verbose\" | StatsOptions.o1 | boolean | undefined)",
                        value: input.stats
                    })) && _vo348(input.stats, _path + ".stats", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".stats",
                        expected: "(\"detailed\" | \"errors-only\" | \"errors-warnings\" | \"minimal\" | \"none\" | \"normal\" | \"summary\" | \"verbose\" | StatsOptions.o1 | boolean | undefined)",
                        value: input.stats
                    })),
                    (null !== input.target || _report(_exceptionable, {
                        path: _path + ".target",
                        expected: "(Array<string> | false | string | undefined)",
                        value: input.target
                    })) && (void 0 === input.target || false === input.target || "string" == typeof input.target || (Array.isArray(input.target) || _report(_exceptionable, {
                        path: _path + ".target",
                        expected: "(Array<string> | false | string | undefined)",
                        value: input.target
                    })) && input.target.map((elem, _index525)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".target[" + _index525 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".target",
                        expected: "(Array<string> | false | string | undefined)",
                        value: input.target
                    })),
                    void 0 === input.watch || "boolean" == typeof input.watch || _report(_exceptionable, {
                        path: _path + ".watch",
                        expected: "(boolean | undefined)",
                        value: input.watch
                    }),
                    void 0 === input.watchOptions || ("object" == typeof input.watchOptions && null !== input.watchOptions && false === Array.isArray(input.watchOptions) || _report(_exceptionable, {
                        path: _path + ".watchOptions",
                        expected: "(WatchOptions.o1 | undefined)",
                        value: input.watchOptions
                    })) && _vo350(input.watchOptions, _path + ".watchOptions", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".watchOptions",
                        expected: "(WatchOptions.o1 | undefined)",
                        value: input.watchOptions
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "amd",
                            "bail",
                            "cache",
                            "context",
                            "dependencies",
                            "devtool",
                            "entry",
                            "experiments",
                            "extends",
                            "externals",
                            "externalsPresets",
                            "externalsType",
                            "ignoreWarnings",
                            "infrastructureLogging",
                            "loader",
                            "mode",
                            "module",
                            "name",
                            "node",
                            "optimization",
                            "output",
                            "parallelism",
                            "performance",
                            "plugins",
                            "profile",
                            "recordsInputPath",
                            "recordsOutputPath",
                            "recordsPath",
                            "resolve",
                            "resolveLoader",
                            "snapshot",
                            "stats",
                            "target",
                            "watch",
                            "watchOptions"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo197 = (input, _path, _exceptionable = true)=>[
                    false === _exceptionable || Object.keys(input).map((key)=>{
                        input[key];
                        return true;
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo198 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.allowCollectingMemory || "boolean" == typeof input.allowCollectingMemory || _report(_exceptionable, {
                        path: _path + ".allowCollectingMemory",
                        expected: "(boolean | undefined)",
                        value: input.allowCollectingMemory
                    }),
                    void 0 === input.buildDependencies || ("object" == typeof input.buildDependencies && null !== input.buildDependencies && false === Array.isArray(input.buildDependencies) || _report(_exceptionable, {
                        path: _path + ".buildDependencies",
                        expected: "(__type.o47 | undefined)",
                        value: input.buildDependencies
                    })) && _vo199(input.buildDependencies, _path + ".buildDependencies", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".buildDependencies",
                        expected: "(__type.o47 | undefined)",
                        value: input.buildDependencies
                    }),
                    void 0 === input.cacheDirectory || "string" == typeof input.cacheDirectory || _report(_exceptionable, {
                        path: _path + ".cacheDirectory",
                        expected: "(string | undefined)",
                        value: input.cacheDirectory
                    }),
                    void 0 === input.cacheLocation || "string" == typeof input.cacheLocation || _report(_exceptionable, {
                        path: _path + ".cacheLocation",
                        expected: "(string | undefined)",
                        value: input.cacheLocation
                    }),
                    void 0 === input.compression || false === input.compression || "gzip" === input.compression || "brotli" === input.compression || _report(_exceptionable, {
                        path: _path + ".compression",
                        expected: "(\"brotli\" | \"gzip\" | false | undefined)",
                        value: input.compression
                    }),
                    void 0 === input.hashAlgorithm || "string" == typeof input.hashAlgorithm || _report(_exceptionable, {
                        path: _path + ".hashAlgorithm",
                        expected: "(string | undefined)",
                        value: input.hashAlgorithm
                    }),
                    void 0 === input.idleTimeout || "number" == typeof input.idleTimeout || _report(_exceptionable, {
                        path: _path + ".idleTimeout",
                        expected: "(number | undefined)",
                        value: input.idleTimeout
                    }),
                    void 0 === input.idleTimeoutAfterLargeChanges || "number" == typeof input.idleTimeoutAfterLargeChanges || _report(_exceptionable, {
                        path: _path + ".idleTimeoutAfterLargeChanges",
                        expected: "(number | undefined)",
                        value: input.idleTimeoutAfterLargeChanges
                    }),
                    void 0 === input.idleTimeoutForInitialStore || "number" == typeof input.idleTimeoutForInitialStore || _report(_exceptionable, {
                        path: _path + ".idleTimeoutForInitialStore",
                        expected: "(number | undefined)",
                        value: input.idleTimeoutForInitialStore
                    }),
                    void 0 === input.immutablePaths || (Array.isArray(input.immutablePaths) || _report(_exceptionable, {
                        path: _path + ".immutablePaths",
                        expected: "(Array<string | RegExp> | undefined)",
                        value: input.immutablePaths
                    })) && input.immutablePaths.map((elem, _index526)=>(null !== elem || _report(_exceptionable, {
                            path: _path + ".immutablePaths[" + _index526 + "]",
                            expected: "(RegExp | string)",
                            value: elem
                        })) && (void 0 !== elem || _report(_exceptionable, {
                            path: _path + ".immutablePaths[" + _index526 + "]",
                            expected: "(RegExp | string)",
                            value: elem
                        })) && ("string" == typeof elem || elem instanceof RegExp || _report(_exceptionable, {
                            path: _path + ".immutablePaths[" + _index526 + "]",
                            expected: "(RegExp | string)",
                            value: elem
                        }))).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".immutablePaths",
                        expected: "(Array<string | RegExp> | undefined)",
                        value: input.immutablePaths
                    }),
                    void 0 === input.managedPaths || (Array.isArray(input.managedPaths) || _report(_exceptionable, {
                        path: _path + ".managedPaths",
                        expected: "(Array<string | RegExp> | undefined)",
                        value: input.managedPaths
                    })) && input.managedPaths.map((elem, _index527)=>(null !== elem || _report(_exceptionable, {
                            path: _path + ".managedPaths[" + _index527 + "]",
                            expected: "(RegExp | string)",
                            value: elem
                        })) && (void 0 !== elem || _report(_exceptionable, {
                            path: _path + ".managedPaths[" + _index527 + "]",
                            expected: "(RegExp | string)",
                            value: elem
                        })) && ("string" == typeof elem || elem instanceof RegExp || _report(_exceptionable, {
                            path: _path + ".managedPaths[" + _index527 + "]",
                            expected: "(RegExp | string)",
                            value: elem
                        }))).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".managedPaths",
                        expected: "(Array<string | RegExp> | undefined)",
                        value: input.managedPaths
                    }),
                    void 0 === input.maxAge || "number" == typeof input.maxAge || _report(_exceptionable, {
                        path: _path + ".maxAge",
                        expected: "(number | undefined)",
                        value: input.maxAge
                    }),
                    void 0 === input.maxMemoryGenerations || "number" == typeof input.maxMemoryGenerations || _report(_exceptionable, {
                        path: _path + ".maxMemoryGenerations",
                        expected: "(number | undefined)",
                        value: input.maxMemoryGenerations
                    }),
                    void 0 === input.memoryCacheUnaffected || "boolean" == typeof input.memoryCacheUnaffected || _report(_exceptionable, {
                        path: _path + ".memoryCacheUnaffected",
                        expected: "(boolean | undefined)",
                        value: input.memoryCacheUnaffected
                    }),
                    void 0 === input.name || "string" == typeof input.name || _report(_exceptionable, {
                        path: _path + ".name",
                        expected: "(string | undefined)",
                        value: input.name
                    }),
                    void 0 === input.profile || "boolean" == typeof input.profile || _report(_exceptionable, {
                        path: _path + ".profile",
                        expected: "(boolean | undefined)",
                        value: input.profile
                    }),
                    void 0 === input.readonly || "boolean" == typeof input.readonly || _report(_exceptionable, {
                        path: _path + ".readonly",
                        expected: "(boolean | undefined)",
                        value: input.readonly
                    }),
                    void 0 === input.store || "pack" === input.store || _report(_exceptionable, {
                        path: _path + ".store",
                        expected: "(\"pack\" | undefined)",
                        value: input.store
                    }),
                    "filesystem" === input.type || _report(_exceptionable, {
                        path: _path + ".type",
                        expected: "\"filesystem\"",
                        value: input.type
                    }),
                    void 0 === input.version || "string" == typeof input.version || _report(_exceptionable, {
                        path: _path + ".version",
                        expected: "(string | undefined)",
                        value: input.version
                    }),
                    1 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "allowCollectingMemory",
                            "buildDependencies",
                            "cacheDirectory",
                            "cacheLocation",
                            "compression",
                            "hashAlgorithm",
                            "idleTimeout",
                            "idleTimeoutAfterLargeChanges",
                            "idleTimeoutForInitialStore",
                            "immutablePaths",
                            "managedPaths",
                            "maxAge",
                            "maxMemoryGenerations",
                            "memoryCacheUnaffected",
                            "name",
                            "profile",
                            "readonly",
                            "store",
                            "type",
                            "version"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo199 = (input, _path, _exceptionable = true)=>[
                    false === _exceptionable || Object.keys(input).map((key)=>{
                        const value = input[key];
                        if (void 0 === value) return true;
                        return (Array.isArray(value) || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "Array<string>",
                            value: value
                        })) && value.map((elem, _index528)=>"string" == typeof elem || _report(_exceptionable, {
                                path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key) + "[" + _index528 + "]",
                                expected: "string",
                                value: elem
                            })).every((flag)=>flag) || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "Array<string>",
                            value: value
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo200 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.cacheUnaffected || "boolean" == typeof input.cacheUnaffected || _report(_exceptionable, {
                        path: _path + ".cacheUnaffected",
                        expected: "(boolean | undefined)",
                        value: input.cacheUnaffected
                    }),
                    void 0 === input.maxGenerations || "number" == typeof input.maxGenerations || _report(_exceptionable, {
                        path: _path + ".maxGenerations",
                        expected: "(number | undefined)",
                        value: input.maxGenerations
                    }),
                    "memory" === input.type || _report(_exceptionable, {
                        path: _path + ".type",
                        expected: "\"memory\"",
                        value: input.type
                    }),
                    1 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "cacheUnaffected",
                            "maxGenerations",
                            "type"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo201 = (input, _path, _exceptionable = true)=>[
                    false === _exceptionable || Object.keys(input).map((key)=>{
                        const value = input[key];
                        if (void 0 === value) return true;
                        return (null !== value || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(Array<string> | EntryDescription.o1 | string)",
                            value: value
                        })) && (void 0 !== value || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(Array<string> | EntryDescription.o1 | string)",
                            value: value
                        })) && ("string" == typeof value || Array.isArray(value) && value.map((elem, _index529)=>"string" == typeof elem || _report(_exceptionable, {
                                path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key) + "[" + _index529 + "]",
                                expected: "string",
                                value: elem
                            })).every((flag)=>flag) || "object" == typeof value && null !== value && _vo202(value, _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key), _exceptionable) || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(Array<string> | EntryDescription.o1 | string)",
                            value: value
                        }) || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(Array<string> | EntryDescription.o1 | string)",
                            value: value
                        }));
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo202 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.asyncChunks || "boolean" == typeof input.asyncChunks || _report(_exceptionable, {
                        path: _path + ".asyncChunks",
                        expected: "(boolean | undefined)",
                        value: input.asyncChunks
                    }),
                    void 0 === input.baseUri || "string" == typeof input.baseUri || _report(_exceptionable, {
                        path: _path + ".baseUri",
                        expected: "(string | undefined)",
                        value: input.baseUri
                    }),
                    void 0 === input.chunkLoading || false === input.chunkLoading || "string" == typeof input.chunkLoading || _report(_exceptionable, {
                        path: _path + ".chunkLoading",
                        expected: "(false | string | undefined)",
                        value: input.chunkLoading
                    }),
                    (null !== input.dependOn || _report(_exceptionable, {
                        path: _path + ".dependOn",
                        expected: "(Array<string> | string | undefined)",
                        value: input.dependOn
                    })) && (void 0 === input.dependOn || "string" == typeof input.dependOn || (Array.isArray(input.dependOn) || _report(_exceptionable, {
                        path: _path + ".dependOn",
                        expected: "(Array<string> | string | undefined)",
                        value: input.dependOn
                    })) && input.dependOn.map((elem, _index530)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".dependOn[" + _index530 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".dependOn",
                        expected: "(Array<string> | string | undefined)",
                        value: input.dependOn
                    })),
                    (null !== input.filename || _report(_exceptionable, {
                        path: _path + ".filename",
                        expected: "(string | undefined)",
                        value: input.filename
                    })) && (void 0 === input.filename || "function" == typeof input.filename || "string" == typeof input.filename || _report(_exceptionable, {
                        path: _path + ".filename",
                        expected: "(string | undefined)",
                        value: input.filename
                    })),
                    (null !== input["import"] || _report(_exceptionable, {
                        path: _path + "[\"import\"]",
                        expected: "(Array<string> | string)",
                        value: input["import"]
                    })) && (void 0 !== input["import"] || _report(_exceptionable, {
                        path: _path + "[\"import\"]",
                        expected: "(Array<string> | string)",
                        value: input["import"]
                    })) && ("string" == typeof input["import"] || (Array.isArray(input["import"]) || _report(_exceptionable, {
                        path: _path + "[\"import\"]",
                        expected: "(Array<string> | string)",
                        value: input["import"]
                    })) && input["import"].map((elem, _index531)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + "[\"import\"][" + _index531 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + "[\"import\"]",
                        expected: "(Array<string> | string)",
                        value: input["import"]
                    })),
                    null === input.layer || void 0 === input.layer || "string" == typeof input.layer || _report(_exceptionable, {
                        path: _path + ".layer",
                        expected: "(null | string | undefined)",
                        value: input.layer
                    }),
                    void 0 === input.library || ("object" == typeof input.library && null !== input.library || _report(_exceptionable, {
                        path: _path + ".library",
                        expected: "(LibraryOptions.o1 | undefined)",
                        value: input.library
                    })) && _vo203(input.library, _path + ".library", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".library",
                        expected: "(LibraryOptions.o1 | undefined)",
                        value: input.library
                    }),
                    (null !== input.publicPath || _report(_exceptionable, {
                        path: _path + ".publicPath",
                        expected: "(string | undefined)",
                        value: input.publicPath
                    })) && (void 0 === input.publicPath || "function" == typeof input.publicPath || "string" == typeof input.publicPath || _report(_exceptionable, {
                        path: _path + ".publicPath",
                        expected: "(string | undefined)",
                        value: input.publicPath
                    })),
                    void 0 === input.runtime || false === input.runtime || "string" == typeof input.runtime || _report(_exceptionable, {
                        path: _path + ".runtime",
                        expected: "(false | string | undefined)",
                        value: input.runtime
                    }),
                    void 0 === input.wasmLoading || false === input.wasmLoading || "string" == typeof input.wasmLoading || _report(_exceptionable, {
                        path: _path + ".wasmLoading",
                        expected: "(false | string | undefined)",
                        value: input.wasmLoading
                    }),
                    1 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "asyncChunks",
                            "baseUri",
                            "chunkLoading",
                            "dependOn",
                            "filename",
                            "import",
                            "layer",
                            "library",
                            "publicPath",
                            "runtime",
                            "wasmLoading"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo203 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.amdContainer || "string" == typeof input.amdContainer || _report(_exceptionable, {
                        path: _path + ".amdContainer",
                        expected: "(string | undefined)",
                        value: input.amdContainer
                    }),
                    (null !== input.auxiliaryComment || _report(_exceptionable, {
                        path: _path + ".auxiliaryComment",
                        expected: "(LibraryCustomUmdCommentObject.o1 | string | undefined)",
                        value: input.auxiliaryComment
                    })) && (void 0 === input.auxiliaryComment || "string" == typeof input.auxiliaryComment || ("object" == typeof input.auxiliaryComment && null !== input.auxiliaryComment && false === Array.isArray(input.auxiliaryComment) || _report(_exceptionable, {
                        path: _path + ".auxiliaryComment",
                        expected: "(LibraryCustomUmdCommentObject.o1 | string | undefined)",
                        value: input.auxiliaryComment
                    })) && _vo204(input.auxiliaryComment, _path + ".auxiliaryComment", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".auxiliaryComment",
                        expected: "(LibraryCustomUmdCommentObject.o1 | string | undefined)",
                        value: input.auxiliaryComment
                    })),
                    (null !== input["export"] || _report(_exceptionable, {
                        path: _path + "[\"export\"]",
                        expected: "(Array<string> | string | undefined)",
                        value: input["export"]
                    })) && (void 0 === input["export"] || "string" == typeof input["export"] || (Array.isArray(input["export"]) || _report(_exceptionable, {
                        path: _path + "[\"export\"]",
                        expected: "(Array<string> | string | undefined)",
                        value: input["export"]
                    })) && input["export"].map((elem, _index532)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + "[\"export\"][" + _index532 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + "[\"export\"]",
                        expected: "(Array<string> | string | undefined)",
                        value: input["export"]
                    })),
                    (null !== input.name || _report(_exceptionable, {
                        path: _path + ".name",
                        expected: "(Array<string> | LibraryCustomUmdObject.o1 | string | undefined)",
                        value: input.name
                    })) && (void 0 === input.name || "string" == typeof input.name || Array.isArray(input.name) && input.name.map((elem, _index533)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".name[" + _index533 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || "object" == typeof input.name && null !== input.name && false === Array.isArray(input.name) && _vo205(input.name, _path + ".name", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".name",
                        expected: "(Array<string> | LibraryCustomUmdObject.o1 | string | undefined)",
                        value: input.name
                    }) || _report(_exceptionable, {
                        path: _path + ".name",
                        expected: "(Array<string> | LibraryCustomUmdObject.o1 | string | undefined)",
                        value: input.name
                    })),
                    "string" == typeof input.type || _report(_exceptionable, {
                        path: _path + ".type",
                        expected: "string",
                        value: input.type
                    }),
                    void 0 === input.umdNamedDefine || "boolean" == typeof input.umdNamedDefine || _report(_exceptionable, {
                        path: _path + ".umdNamedDefine",
                        expected: "(boolean | undefined)",
                        value: input.umdNamedDefine
                    }),
                    1 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "amdContainer",
                            "auxiliaryComment",
                            "export",
                            "name",
                            "type",
                            "umdNamedDefine"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo204 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.amd || "string" == typeof input.amd || _report(_exceptionable, {
                        path: _path + ".amd",
                        expected: "(string | undefined)",
                        value: input.amd
                    }),
                    void 0 === input.commonjs || "string" == typeof input.commonjs || _report(_exceptionable, {
                        path: _path + ".commonjs",
                        expected: "(string | undefined)",
                        value: input.commonjs
                    }),
                    void 0 === input.commonjs2 || "string" == typeof input.commonjs2 || _report(_exceptionable, {
                        path: _path + ".commonjs2",
                        expected: "(string | undefined)",
                        value: input.commonjs2
                    }),
                    void 0 === input.root || "string" == typeof input.root || _report(_exceptionable, {
                        path: _path + ".root",
                        expected: "(string | undefined)",
                        value: input.root
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "amd",
                            "commonjs",
                            "commonjs2",
                            "root"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo205 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.amd || "string" == typeof input.amd || _report(_exceptionable, {
                        path: _path + ".amd",
                        expected: "(string | undefined)",
                        value: input.amd
                    }),
                    void 0 === input.commonjs || "string" == typeof input.commonjs || _report(_exceptionable, {
                        path: _path + ".commonjs",
                        expected: "(string | undefined)",
                        value: input.commonjs
                    }),
                    (null !== input.root || _report(_exceptionable, {
                        path: _path + ".root",
                        expected: "(Array<string> | string | undefined)",
                        value: input.root
                    })) && (void 0 === input.root || "string" == typeof input.root || (Array.isArray(input.root) || _report(_exceptionable, {
                        path: _path + ".root",
                        expected: "(Array<string> | string | undefined)",
                        value: input.root
                    })) && input.root.map((elem, _index534)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".root[" + _index534 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".root",
                        expected: "(Array<string> | string | undefined)",
                        value: input.root
                    })),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "amd",
                            "commonjs",
                            "root"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo206 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.asyncWebAssembly || "boolean" == typeof input.asyncWebAssembly || _report(_exceptionable, {
                        path: _path + ".asyncWebAssembly",
                        expected: "(boolean | undefined)",
                        value: input.asyncWebAssembly
                    }),
                    void 0 === input.backCompat || "boolean" == typeof input.backCompat || _report(_exceptionable, {
                        path: _path + ".backCompat",
                        expected: "(boolean | undefined)",
                        value: input.backCompat
                    }),
                    void 0 === input.cacheUnaffected || "boolean" == typeof input.cacheUnaffected || _report(_exceptionable, {
                        path: _path + ".cacheUnaffected",
                        expected: "(boolean | undefined)",
                        value: input.cacheUnaffected
                    }),
                    void 0 === input.futureDefaults || "boolean" == typeof input.futureDefaults || _report(_exceptionable, {
                        path: _path + ".futureDefaults",
                        expected: "(boolean | undefined)",
                        value: input.futureDefaults
                    }),
                    void 0 === input.layers || "boolean" == typeof input.layers || _report(_exceptionable, {
                        path: _path + ".layers",
                        expected: "(boolean | undefined)",
                        value: input.layers
                    }),
                    void 0 === input.outputModule || "boolean" == typeof input.outputModule || _report(_exceptionable, {
                        path: _path + ".outputModule",
                        expected: "(boolean | undefined)",
                        value: input.outputModule
                    }),
                    void 0 === input.syncWebAssembly || "boolean" == typeof input.syncWebAssembly || _report(_exceptionable, {
                        path: _path + ".syncWebAssembly",
                        expected: "(boolean | undefined)",
                        value: input.syncWebAssembly
                    }),
                    void 0 === input.topLevelAwait || "boolean" == typeof input.topLevelAwait || _report(_exceptionable, {
                        path: _path + ".topLevelAwait",
                        expected: "(boolean | undefined)",
                        value: input.topLevelAwait
                    }),
                    (null !== input.buildHttp || _report(_exceptionable, {
                        path: _path + ".buildHttp",
                        expected: "(Array<string | RegExp | ((uri: string) => boolean)>.o1 | HttpUriOptions | undefined)",
                        value: input.buildHttp
                    })) && (void 0 === input.buildHttp || Array.isArray(input.buildHttp) && input.buildHttp.map((elem, _index535)=>(null !== elem || _report(_exceptionable, {
                            path: _path + ".buildHttp[" + _index535 + "]",
                            expected: "(RegExp | string)",
                            value: elem
                        })) && (void 0 !== elem || _report(_exceptionable, {
                            path: _path + ".buildHttp[" + _index535 + "]",
                            expected: "(RegExp | string)",
                            value: elem
                        })) && ("function" == typeof elem || "string" == typeof elem || elem instanceof RegExp || _report(_exceptionable, {
                            path: _path + ".buildHttp[" + _index535 + "]",
                            expected: "(RegExp | string)",
                            value: elem
                        }))).every((flag)=>flag) || "object" == typeof input.buildHttp && null !== input.buildHttp && _vo207(input.buildHttp, _path + ".buildHttp", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".buildHttp",
                        expected: "(Array<string | RegExp | ((uri: string) => boolean)>.o1 | HttpUriOptions | undefined)",
                        value: input.buildHttp
                    }) || _report(_exceptionable, {
                        path: _path + ".buildHttp",
                        expected: "(Array<string | RegExp | ((uri: string) => boolean)>.o1 | HttpUriOptions | undefined)",
                        value: input.buildHttp
                    })),
                    void 0 === input.css || "boolean" == typeof input.css || _report(_exceptionable, {
                        path: _path + ".css",
                        expected: "(boolean | undefined)",
                        value: input.css
                    }),
                    void 0 === input.deferImport || "boolean" == typeof input.deferImport || _report(_exceptionable, {
                        path: _path + ".deferImport",
                        expected: "(boolean | undefined)",
                        value: input.deferImport
                    }),
                    (null !== input.lazyCompilation || _report(_exceptionable, {
                        path: _path + ".lazyCompilation",
                        expected: "(LazyCompilationOptions.o1 | boolean | undefined)",
                        value: input.lazyCompilation
                    })) && (void 0 === input.lazyCompilation || "boolean" == typeof input.lazyCompilation || ("object" == typeof input.lazyCompilation && null !== input.lazyCompilation && false === Array.isArray(input.lazyCompilation) || _report(_exceptionable, {
                        path: _path + ".lazyCompilation",
                        expected: "(LazyCompilationOptions.o1 | boolean | undefined)",
                        value: input.lazyCompilation
                    })) && _vo208(input.lazyCompilation, _path + ".lazyCompilation", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".lazyCompilation",
                        expected: "(LazyCompilationOptions.o1 | boolean | undefined)",
                        value: input.lazyCompilation
                    })),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "asyncWebAssembly",
                            "backCompat",
                            "cacheUnaffected",
                            "futureDefaults",
                            "layers",
                            "outputModule",
                            "syncWebAssembly",
                            "topLevelAwait",
                            "buildHttp",
                            "css",
                            "deferImport",
                            "lazyCompilation"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo207 = (input, _path, _exceptionable = true)=>[
                    (Array.isArray(input.allowedUris) || _report(_exceptionable, {
                        path: _path + ".allowedUris",
                        expected: "Array<string | RegExp | ((uri: string) => boolean)>",
                        value: input.allowedUris
                    })) && input.allowedUris.map((elem, _index536)=>(null !== elem || _report(_exceptionable, {
                            path: _path + ".allowedUris[" + _index536 + "]",
                            expected: "(RegExp | string)",
                            value: elem
                        })) && (void 0 !== elem || _report(_exceptionable, {
                            path: _path + ".allowedUris[" + _index536 + "]",
                            expected: "(RegExp | string)",
                            value: elem
                        })) && ("function" == typeof elem || "string" == typeof elem || elem instanceof RegExp || _report(_exceptionable, {
                            path: _path + ".allowedUris[" + _index536 + "]",
                            expected: "(RegExp | string)",
                            value: elem
                        }))).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".allowedUris",
                        expected: "Array<string | RegExp | ((uri: string) => boolean)>",
                        value: input.allowedUris
                    }),
                    void 0 === input.cacheLocation || false === input.cacheLocation || "string" == typeof input.cacheLocation || _report(_exceptionable, {
                        path: _path + ".cacheLocation",
                        expected: "(false | string | undefined)",
                        value: input.cacheLocation
                    }),
                    void 0 === input.frozen || "boolean" == typeof input.frozen || _report(_exceptionable, {
                        path: _path + ".frozen",
                        expected: "(boolean | undefined)",
                        value: input.frozen
                    }),
                    void 0 === input.lockfileLocation || "string" == typeof input.lockfileLocation || _report(_exceptionable, {
                        path: _path + ".lockfileLocation",
                        expected: "(string | undefined)",
                        value: input.lockfileLocation
                    }),
                    void 0 === input.proxy || "string" == typeof input.proxy || _report(_exceptionable, {
                        path: _path + ".proxy",
                        expected: "(string | undefined)",
                        value: input.proxy
                    }),
                    void 0 === input.upgrade || "boolean" == typeof input.upgrade || _report(_exceptionable, {
                        path: _path + ".upgrade",
                        expected: "(boolean | undefined)",
                        value: input.upgrade
                    }),
                    1 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "allowedUris",
                            "cacheLocation",
                            "frozen",
                            "lockfileLocation",
                            "proxy",
                            "upgrade"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo208 = (input, _path, _exceptionable = true)=>[
                    (null !== input.backend || _report(_exceptionable, {
                        path: _path + ".backend",
                        expected: "(LazyCompilationDefaultBackendOptions | undefined)",
                        value: input.backend
                    })) && (void 0 === input.backend || "function" == typeof input.backend || ("object" == typeof input.backend && null !== input.backend && false === Array.isArray(input.backend) || _report(_exceptionable, {
                        path: _path + ".backend",
                        expected: "(LazyCompilationDefaultBackendOptions | undefined)",
                        value: input.backend
                    })) && _vo209(input.backend, _path + ".backend", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".backend",
                        expected: "(LazyCompilationDefaultBackendOptions | undefined)",
                        value: input.backend
                    })),
                    void 0 === input.entries || "boolean" == typeof input.entries || _report(_exceptionable, {
                        path: _path + ".entries",
                        expected: "(boolean | undefined)",
                        value: input.entries
                    }),
                    void 0 === input.imports || "boolean" == typeof input.imports || _report(_exceptionable, {
                        path: _path + ".imports",
                        expected: "(boolean | undefined)",
                        value: input.imports
                    }),
                    (null !== input.test || _report(_exceptionable, {
                        path: _path + ".test",
                        expected: "(RegExp | string | undefined)",
                        value: input.test
                    })) && (void 0 === input.test || "function" == typeof input.test || "string" == typeof input.test || input.test instanceof RegExp || _report(_exceptionable, {
                        path: _path + ".test",
                        expected: "(RegExp | string | undefined)",
                        value: input.test
                    })),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "backend",
                            "entries",
                            "imports",
                            "test"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo209 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.client || "string" == typeof input.client || _report(_exceptionable, {
                        path: _path + ".client",
                        expected: "(string | undefined)",
                        value: input.client
                    }),
                    (null !== input.listen || _report(_exceptionable, {
                        path: _path + ".listen",
                        expected: "(\"net\".ListenOptions | number | undefined)",
                        value: input.listen
                    })) && (void 0 === input.listen || "function" == typeof input.listen || "number" == typeof input.listen || ("object" == typeof input.listen && null !== input.listen && false === Array.isArray(input.listen) || _report(_exceptionable, {
                        path: _path + ".listen",
                        expected: "(\"net\".ListenOptions | number | undefined)",
                        value: input.listen
                    })) && _vo210(input.listen, _path + ".listen", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".listen",
                        expected: "(\"net\".ListenOptions | number | undefined)",
                        value: input.listen
                    })),
                    void 0 === input.protocol || "http" === input.protocol || "https" === input.protocol || _report(_exceptionable, {
                        path: _path + ".protocol",
                        expected: "(\"http\" | \"https\" | undefined)",
                        value: input.protocol
                    }),
                    (null !== input.server || _report(_exceptionable, {
                        path: _path + ".server",
                        expected: "(\"http\".ServerOptions<\"http\".IncomingMessage, \"http\".ServerResponse> | HttpsServerOptions | undefined)",
                        value: input.server
                    })) && (void 0 === input.server || "function" == typeof input.server || ("object" == typeof input.server && null !== input.server && false === Array.isArray(input.server) || _report(_exceptionable, {
                        path: _path + ".server",
                        expected: "(\"http\".ServerOptions<\"http\".IncomingMessage, \"http\".ServerResponse> | HttpsServerOptions | undefined)",
                        value: input.server
                    })) && _vu14(input.server, _path + ".server", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".server",
                        expected: "(\"http\".ServerOptions<\"http\".IncomingMessage, \"http\".ServerResponse> | HttpsServerOptions | undefined)",
                        value: input.server
                    })),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "client",
                            "listen",
                            "protocol",
                            "server"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo210 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.backlog || "number" == typeof input.backlog || _report(_exceptionable, {
                        path: _path + ".backlog",
                        expected: "(number | undefined)",
                        value: input.backlog
                    }),
                    void 0 === input.exclusive || "boolean" == typeof input.exclusive || _report(_exceptionable, {
                        path: _path + ".exclusive",
                        expected: "(boolean | undefined)",
                        value: input.exclusive
                    }),
                    void 0 === input.host || "string" == typeof input.host || _report(_exceptionable, {
                        path: _path + ".host",
                        expected: "(string | undefined)",
                        value: input.host
                    }),
                    void 0 === input.ipv6Only || "boolean" == typeof input.ipv6Only || _report(_exceptionable, {
                        path: _path + ".ipv6Only",
                        expected: "(boolean | undefined)",
                        value: input.ipv6Only
                    }),
                    void 0 === input.reusePort || "boolean" == typeof input.reusePort || _report(_exceptionable, {
                        path: _path + ".reusePort",
                        expected: "(boolean | undefined)",
                        value: input.reusePort
                    }),
                    void 0 === input.path || "string" == typeof input.path || _report(_exceptionable, {
                        path: _path + ".path",
                        expected: "(string | undefined)",
                        value: input.path
                    }),
                    void 0 === input.port || "number" == typeof input.port || _report(_exceptionable, {
                        path: _path + ".port",
                        expected: "(number | undefined)",
                        value: input.port
                    }),
                    void 0 === input.readableAll || "boolean" == typeof input.readableAll || _report(_exceptionable, {
                        path: _path + ".readableAll",
                        expected: "(boolean | undefined)",
                        value: input.readableAll
                    }),
                    void 0 === input.writableAll || "boolean" == typeof input.writableAll || _report(_exceptionable, {
                        path: _path + ".writableAll",
                        expected: "(boolean | undefined)",
                        value: input.writableAll
                    }),
                    void 0 === input.signal || ("object" == typeof input.signal && null !== input.signal || _report(_exceptionable, {
                        path: _path + ".signal",
                        expected: "(global.AbortSignal | undefined)",
                        value: input.signal
                    })) && _vo211(input.signal, _path + ".signal", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".signal",
                        expected: "(global.AbortSignal | undefined)",
                        value: input.signal
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "backlog",
                            "exclusive",
                            "host",
                            "ipv6Only",
                            "reusePort",
                            "path",
                            "port",
                            "readableAll",
                            "writableAll",
                            "signal"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo211 = (input, _path, _exceptionable = true)=>[
                    "boolean" == typeof input.aborted || _report(_exceptionable, {
                        path: _path + ".aborted",
                        expected: "boolean",
                        value: input.aborted
                    }),
                    null === input.onabort || true,
                    true,
                    3 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "aborted",
                            "onabort",
                            "reason"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo212 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.IncomingMessage || ("object" == typeof input.IncomingMessage && null !== input.IncomingMessage || _report(_exceptionable, {
                        path: _path + ".IncomingMessage",
                        expected: "(\"http\".IncomingMessage | undefined)",
                        value: input.IncomingMessage
                    })) && _vo154(input.IncomingMessage, _path + ".IncomingMessage", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".IncomingMessage",
                        expected: "(\"http\".IncomingMessage | undefined)",
                        value: input.IncomingMessage
                    }),
                    void 0 === input.ServerResponse || ("object" == typeof input.ServerResponse && null !== input.ServerResponse || _report(_exceptionable, {
                        path: _path + ".ServerResponse",
                        expected: "(\"http\".ServerResponse | undefined)",
                        value: input.ServerResponse
                    })) && _vo161(input.ServerResponse, _path + ".ServerResponse", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".ServerResponse",
                        expected: "(\"http\".ServerResponse | undefined)",
                        value: input.ServerResponse
                    }),
                    void 0 === input.requestTimeout || "number" == typeof input.requestTimeout || _report(_exceptionable, {
                        path: _path + ".requestTimeout",
                        expected: "(number | undefined)",
                        value: input.requestTimeout
                    }),
                    void 0 === input.joinDuplicateHeaders || "boolean" == typeof input.joinDuplicateHeaders || _report(_exceptionable, {
                        path: _path + ".joinDuplicateHeaders",
                        expected: "(boolean | undefined)",
                        value: input.joinDuplicateHeaders
                    }),
                    void 0 === input.keepAliveTimeout || "number" == typeof input.keepAliveTimeout || _report(_exceptionable, {
                        path: _path + ".keepAliveTimeout",
                        expected: "(number | undefined)",
                        value: input.keepAliveTimeout
                    }),
                    void 0 === input.connectionsCheckingInterval || "number" == typeof input.connectionsCheckingInterval || _report(_exceptionable, {
                        path: _path + ".connectionsCheckingInterval",
                        expected: "(number | undefined)",
                        value: input.connectionsCheckingInterval
                    }),
                    void 0 === input.headersTimeout || "number" == typeof input.headersTimeout || _report(_exceptionable, {
                        path: _path + ".headersTimeout",
                        expected: "(number | undefined)",
                        value: input.headersTimeout
                    }),
                    void 0 === input.highWaterMark || "number" == typeof input.highWaterMark || _report(_exceptionable, {
                        path: _path + ".highWaterMark",
                        expected: "(number | undefined)",
                        value: input.highWaterMark
                    }),
                    void 0 === input.insecureHTTPParser || "boolean" == typeof input.insecureHTTPParser || _report(_exceptionable, {
                        path: _path + ".insecureHTTPParser",
                        expected: "(boolean | undefined)",
                        value: input.insecureHTTPParser
                    }),
                    void 0 === input.maxHeaderSize || "number" == typeof input.maxHeaderSize || _report(_exceptionable, {
                        path: _path + ".maxHeaderSize",
                        expected: "(number | undefined)",
                        value: input.maxHeaderSize
                    }),
                    void 0 === input.noDelay || "boolean" == typeof input.noDelay || _report(_exceptionable, {
                        path: _path + ".noDelay",
                        expected: "(boolean | undefined)",
                        value: input.noDelay
                    }),
                    void 0 === input.requireHostHeader || "boolean" == typeof input.requireHostHeader || _report(_exceptionable, {
                        path: _path + ".requireHostHeader",
                        expected: "(boolean | undefined)",
                        value: input.requireHostHeader
                    }),
                    void 0 === input.keepAlive || "boolean" == typeof input.keepAlive || _report(_exceptionable, {
                        path: _path + ".keepAlive",
                        expected: "(boolean | undefined)",
                        value: input.keepAlive
                    }),
                    void 0 === input.keepAliveInitialDelay || "number" == typeof input.keepAliveInitialDelay || _report(_exceptionable, {
                        path: _path + ".keepAliveInitialDelay",
                        expected: "(number | undefined)",
                        value: input.keepAliveInitialDelay
                    }),
                    void 0 === input.uniqueHeaders || (Array.isArray(input.uniqueHeaders) || _report(_exceptionable, {
                        path: _path + ".uniqueHeaders",
                        expected: "(Array<string | string[]> | undefined)",
                        value: input.uniqueHeaders
                    })) && input.uniqueHeaders.map((elem, _index537)=>(null !== elem || _report(_exceptionable, {
                            path: _path + ".uniqueHeaders[" + _index537 + "]",
                            expected: "(Array<string> | string)",
                            value: elem
                        })) && (void 0 !== elem || _report(_exceptionable, {
                            path: _path + ".uniqueHeaders[" + _index537 + "]",
                            expected: "(Array<string> | string)",
                            value: elem
                        })) && ("string" == typeof elem || (Array.isArray(elem) || _report(_exceptionable, {
                            path: _path + ".uniqueHeaders[" + _index537 + "]",
                            expected: "(Array<string> | string)",
                            value: elem
                        })) && elem.map((elem, _index538)=>"string" == typeof elem || _report(_exceptionable, {
                                path: _path + ".uniqueHeaders[" + _index537 + "][" + _index538 + "]",
                                expected: "string",
                                value: elem
                            })).every((flag)=>flag) || _report(_exceptionable, {
                            path: _path + ".uniqueHeaders[" + _index537 + "]",
                            expected: "(Array<string> | string)",
                            value: elem
                        }))).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".uniqueHeaders",
                        expected: "(Array<string | string[]> | undefined)",
                        value: input.uniqueHeaders
                    }),
                    void 0 === input.rejectNonStandardBodyWrites || "boolean" == typeof input.rejectNonStandardBodyWrites || _report(_exceptionable, {
                        path: _path + ".rejectNonStandardBodyWrites",
                        expected: "(boolean | undefined)",
                        value: input.rejectNonStandardBodyWrites
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "IncomingMessage",
                            "ServerResponse",
                            "requestTimeout",
                            "joinDuplicateHeaders",
                            "keepAliveTimeout",
                            "connectionsCheckingInterval",
                            "headersTimeout",
                            "highWaterMark",
                            "insecureHTTPParser",
                            "maxHeaderSize",
                            "noDelay",
                            "requireHostHeader",
                            "keepAlive",
                            "keepAliveInitialDelay",
                            "uniqueHeaders",
                            "rejectNonStandardBodyWrites"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo213 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.ALPNCallback || true,
                    void 0 === input.allowPartialTrustChain || "boolean" == typeof input.allowPartialTrustChain || _report(_exceptionable, {
                        path: _path + ".allowPartialTrustChain",
                        expected: "(boolean | undefined)",
                        value: input.allowPartialTrustChain
                    }),
                    (null !== input.ca || _report(_exceptionable, {
                        path: _path + ".ca",
                        expected: "(\"buffer\".global.Buffer<ArrayBufferLike> | Array<string | Buffer<ArrayBufferLike>> | string | undefined)",
                        value: input.ca
                    })) && (void 0 === input.ca || "string" == typeof input.ca || Array.isArray(input.ca) && input.ca.map((elem, _index539)=>(null !== elem || _report(_exceptionable, {
                            path: _path + ".ca[" + _index539 + "]",
                            expected: "(\"buffer\".global.Buffer<ArrayBufferLike> | string)",
                            value: elem
                        })) && (void 0 !== elem || _report(_exceptionable, {
                            path: _path + ".ca[" + _index539 + "]",
                            expected: "(\"buffer\".global.Buffer<ArrayBufferLike> | string)",
                            value: elem
                        })) && ("string" == typeof elem || ("object" == typeof elem && null !== elem || _report(_exceptionable, {
                            path: _path + ".ca[" + _index539 + "]",
                            expected: "(\"buffer\".global.Buffer<ArrayBufferLike> | string)",
                            value: elem
                        })) && _vo149(elem, _path + ".ca[" + _index539 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".ca[" + _index539 + "]",
                            expected: "(\"buffer\".global.Buffer<ArrayBufferLike> | string)",
                            value: elem
                        }))).every((flag)=>flag) || "object" == typeof input.ca && null !== input.ca && _vo149(input.ca, _path + ".ca", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".ca",
                        expected: "(\"buffer\".global.Buffer<ArrayBufferLike> | Array<string | Buffer<ArrayBufferLike>> | string | undefined)",
                        value: input.ca
                    }) || _report(_exceptionable, {
                        path: _path + ".ca",
                        expected: "(\"buffer\".global.Buffer<ArrayBufferLike> | Array<string | Buffer<ArrayBufferLike>> | string | undefined)",
                        value: input.ca
                    })),
                    (null !== input.cert || _report(_exceptionable, {
                        path: _path + ".cert",
                        expected: "(\"buffer\".global.Buffer<ArrayBufferLike> | Array<string | Buffer<ArrayBufferLike>> | string | undefined)",
                        value: input.cert
                    })) && (void 0 === input.cert || "string" == typeof input.cert || Array.isArray(input.cert) && input.cert.map((elem, _index540)=>(null !== elem || _report(_exceptionable, {
                            path: _path + ".cert[" + _index540 + "]",
                            expected: "(\"buffer\".global.Buffer<ArrayBufferLike> | string)",
                            value: elem
                        })) && (void 0 !== elem || _report(_exceptionable, {
                            path: _path + ".cert[" + _index540 + "]",
                            expected: "(\"buffer\".global.Buffer<ArrayBufferLike> | string)",
                            value: elem
                        })) && ("string" == typeof elem || ("object" == typeof elem && null !== elem || _report(_exceptionable, {
                            path: _path + ".cert[" + _index540 + "]",
                            expected: "(\"buffer\".global.Buffer<ArrayBufferLike> | string)",
                            value: elem
                        })) && _vo149(elem, _path + ".cert[" + _index540 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".cert[" + _index540 + "]",
                            expected: "(\"buffer\".global.Buffer<ArrayBufferLike> | string)",
                            value: elem
                        }))).every((flag)=>flag) || "object" == typeof input.cert && null !== input.cert && _vo149(input.cert, _path + ".cert", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".cert",
                        expected: "(\"buffer\".global.Buffer<ArrayBufferLike> | Array<string | Buffer<ArrayBufferLike>> | string | undefined)",
                        value: input.cert
                    }) || _report(_exceptionable, {
                        path: _path + ".cert",
                        expected: "(\"buffer\".global.Buffer<ArrayBufferLike> | Array<string | Buffer<ArrayBufferLike>> | string | undefined)",
                        value: input.cert
                    })),
                    void 0 === input.sigalgs || "string" == typeof input.sigalgs || _report(_exceptionable, {
                        path: _path + ".sigalgs",
                        expected: "(string | undefined)",
                        value: input.sigalgs
                    }),
                    void 0 === input.ciphers || "string" == typeof input.ciphers || _report(_exceptionable, {
                        path: _path + ".ciphers",
                        expected: "(string | undefined)",
                        value: input.ciphers
                    }),
                    void 0 === input.clientCertEngine || "string" == typeof input.clientCertEngine || _report(_exceptionable, {
                        path: _path + ".clientCertEngine",
                        expected: "(string | undefined)",
                        value: input.clientCertEngine
                    }),
                    (null !== input.crl || _report(_exceptionable, {
                        path: _path + ".crl",
                        expected: "(\"buffer\".global.Buffer<ArrayBufferLike> | Array<string | Buffer<ArrayBufferLike>> | string | undefined)",
                        value: input.crl
                    })) && (void 0 === input.crl || "string" == typeof input.crl || Array.isArray(input.crl) && input.crl.map((elem, _index541)=>(null !== elem || _report(_exceptionable, {
                            path: _path + ".crl[" + _index541 + "]",
                            expected: "(\"buffer\".global.Buffer<ArrayBufferLike> | string)",
                            value: elem
                        })) && (void 0 !== elem || _report(_exceptionable, {
                            path: _path + ".crl[" + _index541 + "]",
                            expected: "(\"buffer\".global.Buffer<ArrayBufferLike> | string)",
                            value: elem
                        })) && ("string" == typeof elem || ("object" == typeof elem && null !== elem || _report(_exceptionable, {
                            path: _path + ".crl[" + _index541 + "]",
                            expected: "(\"buffer\".global.Buffer<ArrayBufferLike> | string)",
                            value: elem
                        })) && _vo149(elem, _path + ".crl[" + _index541 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".crl[" + _index541 + "]",
                            expected: "(\"buffer\".global.Buffer<ArrayBufferLike> | string)",
                            value: elem
                        }))).every((flag)=>flag) || "object" == typeof input.crl && null !== input.crl && _vo149(input.crl, _path + ".crl", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".crl",
                        expected: "(\"buffer\".global.Buffer<ArrayBufferLike> | Array<string | Buffer<ArrayBufferLike>> | string | undefined)",
                        value: input.crl
                    }) || _report(_exceptionable, {
                        path: _path + ".crl",
                        expected: "(\"buffer\".global.Buffer<ArrayBufferLike> | Array<string | Buffer<ArrayBufferLike>> | string | undefined)",
                        value: input.crl
                    })),
                    (null !== input.dhparam || _report(_exceptionable, {
                        path: _path + ".dhparam",
                        expected: "(\"buffer\".global.Buffer<ArrayBufferLike> | string | undefined)",
                        value: input.dhparam
                    })) && (void 0 === input.dhparam || "string" == typeof input.dhparam || ("object" == typeof input.dhparam && null !== input.dhparam || _report(_exceptionable, {
                        path: _path + ".dhparam",
                        expected: "(\"buffer\".global.Buffer<ArrayBufferLike> | string | undefined)",
                        value: input.dhparam
                    })) && _vo149(input.dhparam, _path + ".dhparam", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".dhparam",
                        expected: "(\"buffer\".global.Buffer<ArrayBufferLike> | string | undefined)",
                        value: input.dhparam
                    })),
                    void 0 === input.ecdhCurve || "string" == typeof input.ecdhCurve || _report(_exceptionable, {
                        path: _path + ".ecdhCurve",
                        expected: "(string | undefined)",
                        value: input.ecdhCurve
                    }),
                    void 0 === input.honorCipherOrder || "boolean" == typeof input.honorCipherOrder || _report(_exceptionable, {
                        path: _path + ".honorCipherOrder",
                        expected: "(boolean | undefined)",
                        value: input.honorCipherOrder
                    }),
                    (null !== input.key || _report(_exceptionable, {
                        path: _path + ".key",
                        expected: "(\"buffer\".global.Buffer<ArrayBufferLike> | Array<string | Buffer<ArrayBufferLike> | KeyObject> | string | undefined)",
                        value: input.key
                    })) && (void 0 === input.key || "string" == typeof input.key || Array.isArray(input.key) && input.key.map((elem, _index542)=>(null !== elem || _report(_exceptionable, {
                            path: _path + ".key[" + _index542 + "]",
                            expected: "(\"buffer\".global.Buffer<ArrayBufferLike> | \"tls\".KeyObject | string)",
                            value: elem
                        })) && (void 0 !== elem || _report(_exceptionable, {
                            path: _path + ".key[" + _index542 + "]",
                            expected: "(\"buffer\".global.Buffer<ArrayBufferLike> | \"tls\".KeyObject | string)",
                            value: elem
                        })) && ("string" == typeof elem || ("object" == typeof elem && null !== elem || _report(_exceptionable, {
                            path: _path + ".key[" + _index542 + "]",
                            expected: "(\"buffer\".global.Buffer<ArrayBufferLike> | \"tls\".KeyObject | string)",
                            value: elem
                        })) && _vu1(elem, _path + ".key[" + _index542 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".key[" + _index542 + "]",
                            expected: "(\"buffer\".global.Buffer<ArrayBufferLike> | \"tls\".KeyObject | string)",
                            value: elem
                        }))).every((flag)=>flag) || "object" == typeof input.key && null !== input.key && _vo149(input.key, _path + ".key", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".key",
                        expected: "(\"buffer\".global.Buffer<ArrayBufferLike> | Array<string | Buffer<ArrayBufferLike> | KeyObject> | string | undefined)",
                        value: input.key
                    }) || _report(_exceptionable, {
                        path: _path + ".key",
                        expected: "(\"buffer\".global.Buffer<ArrayBufferLike> | Array<string | Buffer<ArrayBufferLike> | KeyObject> | string | undefined)",
                        value: input.key
                    })),
                    void 0 === input.privateKeyEngine || "string" == typeof input.privateKeyEngine || _report(_exceptionable, {
                        path: _path + ".privateKeyEngine",
                        expected: "(string | undefined)",
                        value: input.privateKeyEngine
                    }),
                    void 0 === input.privateKeyIdentifier || "string" == typeof input.privateKeyIdentifier || _report(_exceptionable, {
                        path: _path + ".privateKeyIdentifier",
                        expected: "(string | undefined)",
                        value: input.privateKeyIdentifier
                    }),
                    void 0 === input.maxVersion || "TLSv1.3" === input.maxVersion || "TLSv1.2" === input.maxVersion || "TLSv1.1" === input.maxVersion || "TLSv1" === input.maxVersion || _report(_exceptionable, {
                        path: _path + ".maxVersion",
                        expected: "(\"TLSv1\" | \"TLSv1.1\" | \"TLSv1.2\" | \"TLSv1.3\" | undefined)",
                        value: input.maxVersion
                    }),
                    void 0 === input.minVersion || "TLSv1.3" === input.minVersion || "TLSv1.2" === input.minVersion || "TLSv1.1" === input.minVersion || "TLSv1" === input.minVersion || _report(_exceptionable, {
                        path: _path + ".minVersion",
                        expected: "(\"TLSv1\" | \"TLSv1.1\" | \"TLSv1.2\" | \"TLSv1.3\" | undefined)",
                        value: input.minVersion
                    }),
                    void 0 === input.passphrase || "string" == typeof input.passphrase || _report(_exceptionable, {
                        path: _path + ".passphrase",
                        expected: "(string | undefined)",
                        value: input.passphrase
                    }),
                    (null !== input.pfx || _report(_exceptionable, {
                        path: _path + ".pfx",
                        expected: "(\"buffer\".global.Buffer<ArrayBufferLike> | Array<string | Buffer<ArrayBufferLike> | PxfObject> | string | undefined)",
                        value: input.pfx
                    })) && (void 0 === input.pfx || "string" == typeof input.pfx || Array.isArray(input.pfx) && input.pfx.map((elem, _index543)=>(null !== elem || _report(_exceptionable, {
                            path: _path + ".pfx[" + _index543 + "]",
                            expected: "(\"buffer\".global.Buffer<ArrayBufferLike> | \"tls\".PxfObject | string)",
                            value: elem
                        })) && (void 0 !== elem || _report(_exceptionable, {
                            path: _path + ".pfx[" + _index543 + "]",
                            expected: "(\"buffer\".global.Buffer<ArrayBufferLike> | \"tls\".PxfObject | string)",
                            value: elem
                        })) && ("string" == typeof elem || ("object" == typeof elem && null !== elem || _report(_exceptionable, {
                            path: _path + ".pfx[" + _index543 + "]",
                            expected: "(\"buffer\".global.Buffer<ArrayBufferLike> | \"tls\".PxfObject | string)",
                            value: elem
                        })) && _vu2(elem, _path + ".pfx[" + _index543 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".pfx[" + _index543 + "]",
                            expected: "(\"buffer\".global.Buffer<ArrayBufferLike> | \"tls\".PxfObject | string)",
                            value: elem
                        }))).every((flag)=>flag) || "object" == typeof input.pfx && null !== input.pfx && _vo149(input.pfx, _path + ".pfx", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".pfx",
                        expected: "(\"buffer\".global.Buffer<ArrayBufferLike> | Array<string | Buffer<ArrayBufferLike> | PxfObject> | string | undefined)",
                        value: input.pfx
                    }) || _report(_exceptionable, {
                        path: _path + ".pfx",
                        expected: "(\"buffer\".global.Buffer<ArrayBufferLike> | Array<string | Buffer<ArrayBufferLike> | PxfObject> | string | undefined)",
                        value: input.pfx
                    })),
                    void 0 === input.secureOptions || "number" == typeof input.secureOptions || _report(_exceptionable, {
                        path: _path + ".secureOptions",
                        expected: "(number | undefined)",
                        value: input.secureOptions
                    }),
                    void 0 === input.secureProtocol || "string" == typeof input.secureProtocol || _report(_exceptionable, {
                        path: _path + ".secureProtocol",
                        expected: "(string | undefined)",
                        value: input.secureProtocol
                    }),
                    void 0 === input.sessionIdContext || "string" == typeof input.sessionIdContext || _report(_exceptionable, {
                        path: _path + ".sessionIdContext",
                        expected: "(string | undefined)",
                        value: input.sessionIdContext
                    }),
                    void 0 === input.ticketKeys || ("object" == typeof input.ticketKeys && null !== input.ticketKeys || _report(_exceptionable, {
                        path: _path + ".ticketKeys",
                        expected: "(\"buffer\".global.Buffer<ArrayBufferLike> | undefined)",
                        value: input.ticketKeys
                    })) && _vo149(input.ticketKeys, _path + ".ticketKeys", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".ticketKeys",
                        expected: "(\"buffer\".global.Buffer<ArrayBufferLike> | undefined)",
                        value: input.ticketKeys
                    }),
                    void 0 === input.sessionTimeout || "number" == typeof input.sessionTimeout || _report(_exceptionable, {
                        path: _path + ".sessionTimeout",
                        expected: "(number | undefined)",
                        value: input.sessionTimeout
                    }),
                    void 0 === input.handshakeTimeout || "number" == typeof input.handshakeTimeout || _report(_exceptionable, {
                        path: _path + ".handshakeTimeout",
                        expected: "(number | undefined)",
                        value: input.handshakeTimeout
                    }),
                    void 0 === input.pskIdentityHint || "string" == typeof input.pskIdentityHint || _report(_exceptionable, {
                        path: _path + ".pskIdentityHint",
                        expected: "(string | undefined)",
                        value: input.pskIdentityHint
                    }),
                    void 0 === input.secureContext || ("object" == typeof input.secureContext && null !== input.secureContext || _report(_exceptionable, {
                        path: _path + ".secureContext",
                        expected: "(\"tls\".SecureContext | undefined)",
                        value: input.secureContext
                    })) && _vo152(input.secureContext, _path + ".secureContext", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".secureContext",
                        expected: "(\"tls\".SecureContext | undefined)",
                        value: input.secureContext
                    }),
                    void 0 === input.enableTrace || "boolean" == typeof input.enableTrace || _report(_exceptionable, {
                        path: _path + ".enableTrace",
                        expected: "(boolean | undefined)",
                        value: input.enableTrace
                    }),
                    void 0 === input.requestCert || "boolean" == typeof input.requestCert || _report(_exceptionable, {
                        path: _path + ".requestCert",
                        expected: "(boolean | undefined)",
                        value: input.requestCert
                    }),
                    (null !== input.ALPNProtocols || _report(_exceptionable, {
                        path: _path + ".ALPNProtocols",
                        expected: "(Array<Uint8Array<ArrayBufferLike>> | Array<string> | Uint8Array | undefined)",
                        value: input.ALPNProtocols
                    })) && (void 0 === input.ALPNProtocols || input.ALPNProtocols instanceof Uint8Array || (Array.isArray(input.ALPNProtocols) || _report(_exceptionable, {
                        path: _path + ".ALPNProtocols",
                        expected: "(Array<Uint8Array<ArrayBufferLike>> | Array<string> | Uint8Array | undefined)",
                        value: input.ALPNProtocols
                    })) && (_vp3(input.ALPNProtocols, _path + ".ALPNProtocols", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".ALPNProtocols",
                        expected: "Array<string> | Array<Uint8Array<ArrayBufferLike>>",
                        value: input.ALPNProtocols
                    })) || _report(_exceptionable, {
                        path: _path + ".ALPNProtocols",
                        expected: "(Array<Uint8Array<ArrayBufferLike>> | Array<string> | Uint8Array | undefined)",
                        value: input.ALPNProtocols
                    })),
                    void 0 === input.SNICallback || true,
                    void 0 === input.rejectUnauthorized || "boolean" == typeof input.rejectUnauthorized || _report(_exceptionable, {
                        path: _path + ".rejectUnauthorized",
                        expected: "(boolean | undefined)",
                        value: input.rejectUnauthorized
                    }),
                    void 0 === input.allowHalfOpen || "boolean" == typeof input.allowHalfOpen || _report(_exceptionable, {
                        path: _path + ".allowHalfOpen",
                        expected: "(boolean | undefined)",
                        value: input.allowHalfOpen
                    }),
                    void 0 === input.pauseOnConnect || "boolean" == typeof input.pauseOnConnect || _report(_exceptionable, {
                        path: _path + ".pauseOnConnect",
                        expected: "(boolean | undefined)",
                        value: input.pauseOnConnect
                    }),
                    void 0 === input.noDelay || "boolean" == typeof input.noDelay || _report(_exceptionable, {
                        path: _path + ".noDelay",
                        expected: "(boolean | undefined)",
                        value: input.noDelay
                    }),
                    void 0 === input.keepAlive || "boolean" == typeof input.keepAlive || _report(_exceptionable, {
                        path: _path + ".keepAlive",
                        expected: "(boolean | undefined)",
                        value: input.keepAlive
                    }),
                    void 0 === input.keepAliveInitialDelay || "number" == typeof input.keepAliveInitialDelay || _report(_exceptionable, {
                        path: _path + ".keepAliveInitialDelay",
                        expected: "(number | undefined)",
                        value: input.keepAliveInitialDelay
                    }),
                    void 0 === input.highWaterMark || "number" == typeof input.highWaterMark || _report(_exceptionable, {
                        path: _path + ".highWaterMark",
                        expected: "(number | undefined)",
                        value: input.highWaterMark
                    }),
                    void 0 === input.blockList || ("object" == typeof input.blockList && null !== input.blockList || _report(_exceptionable, {
                        path: _path + ".blockList",
                        expected: "(\"net\".BlockList | undefined)",
                        value: input.blockList
                    })) && _vo153(input.blockList, _path + ".blockList", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".blockList",
                        expected: "(\"net\".BlockList | undefined)",
                        value: input.blockList
                    }),
                    void 0 === input.IncomingMessage || ("object" == typeof input.IncomingMessage && null !== input.IncomingMessage || _report(_exceptionable, {
                        path: _path + ".IncomingMessage",
                        expected: "(\"http\".IncomingMessage | undefined)",
                        value: input.IncomingMessage
                    })) && _vo154(input.IncomingMessage, _path + ".IncomingMessage", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".IncomingMessage",
                        expected: "(\"http\".IncomingMessage | undefined)",
                        value: input.IncomingMessage
                    }),
                    void 0 === input.ServerResponse || ("object" == typeof input.ServerResponse && null !== input.ServerResponse || _report(_exceptionable, {
                        path: _path + ".ServerResponse",
                        expected: "(\"http\".ServerResponse | undefined)",
                        value: input.ServerResponse
                    })) && _vo161(input.ServerResponse, _path + ".ServerResponse", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".ServerResponse",
                        expected: "(\"http\".ServerResponse | undefined)",
                        value: input.ServerResponse
                    }),
                    void 0 === input.requestTimeout || "number" == typeof input.requestTimeout || _report(_exceptionable, {
                        path: _path + ".requestTimeout",
                        expected: "(number | undefined)",
                        value: input.requestTimeout
                    }),
                    void 0 === input.joinDuplicateHeaders || "boolean" == typeof input.joinDuplicateHeaders || _report(_exceptionable, {
                        path: _path + ".joinDuplicateHeaders",
                        expected: "(boolean | undefined)",
                        value: input.joinDuplicateHeaders
                    }),
                    void 0 === input.keepAliveTimeout || "number" == typeof input.keepAliveTimeout || _report(_exceptionable, {
                        path: _path + ".keepAliveTimeout",
                        expected: "(number | undefined)",
                        value: input.keepAliveTimeout
                    }),
                    void 0 === input.connectionsCheckingInterval || "number" == typeof input.connectionsCheckingInterval || _report(_exceptionable, {
                        path: _path + ".connectionsCheckingInterval",
                        expected: "(number | undefined)",
                        value: input.connectionsCheckingInterval
                    }),
                    void 0 === input.headersTimeout || "number" == typeof input.headersTimeout || _report(_exceptionable, {
                        path: _path + ".headersTimeout",
                        expected: "(number | undefined)",
                        value: input.headersTimeout
                    }),
                    void 0 === input.insecureHTTPParser || "boolean" == typeof input.insecureHTTPParser || _report(_exceptionable, {
                        path: _path + ".insecureHTTPParser",
                        expected: "(boolean | undefined)",
                        value: input.insecureHTTPParser
                    }),
                    void 0 === input.maxHeaderSize || "number" == typeof input.maxHeaderSize || _report(_exceptionable, {
                        path: _path + ".maxHeaderSize",
                        expected: "(number | undefined)",
                        value: input.maxHeaderSize
                    }),
                    void 0 === input.requireHostHeader || "boolean" == typeof input.requireHostHeader || _report(_exceptionable, {
                        path: _path + ".requireHostHeader",
                        expected: "(boolean | undefined)",
                        value: input.requireHostHeader
                    }),
                    void 0 === input.uniqueHeaders || (Array.isArray(input.uniqueHeaders) || _report(_exceptionable, {
                        path: _path + ".uniqueHeaders",
                        expected: "(Array<string | string[]> | undefined)",
                        value: input.uniqueHeaders
                    })) && input.uniqueHeaders.map((elem, _index546)=>(null !== elem || _report(_exceptionable, {
                            path: _path + ".uniqueHeaders[" + _index546 + "]",
                            expected: "(Array<string> | string)",
                            value: elem
                        })) && (void 0 !== elem || _report(_exceptionable, {
                            path: _path + ".uniqueHeaders[" + _index546 + "]",
                            expected: "(Array<string> | string)",
                            value: elem
                        })) && ("string" == typeof elem || (Array.isArray(elem) || _report(_exceptionable, {
                            path: _path + ".uniqueHeaders[" + _index546 + "]",
                            expected: "(Array<string> | string)",
                            value: elem
                        })) && elem.map((elem, _index547)=>"string" == typeof elem || _report(_exceptionable, {
                                path: _path + ".uniqueHeaders[" + _index546 + "][" + _index547 + "]",
                                expected: "string",
                                value: elem
                            })).every((flag)=>flag) || _report(_exceptionable, {
                            path: _path + ".uniqueHeaders[" + _index546 + "]",
                            expected: "(Array<string> | string)",
                            value: elem
                        }))).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".uniqueHeaders",
                        expected: "(Array<string | string[]> | undefined)",
                        value: input.uniqueHeaders
                    }),
                    void 0 === input.rejectNonStandardBodyWrites || "boolean" == typeof input.rejectNonStandardBodyWrites || _report(_exceptionable, {
                        path: _path + ".rejectNonStandardBodyWrites",
                        expected: "(boolean | undefined)",
                        value: input.rejectNonStandardBodyWrites
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "ALPNCallback",
                            "allowPartialTrustChain",
                            "ca",
                            "cert",
                            "sigalgs",
                            "ciphers",
                            "clientCertEngine",
                            "crl",
                            "dhparam",
                            "ecdhCurve",
                            "honorCipherOrder",
                            "key",
                            "privateKeyEngine",
                            "privateKeyIdentifier",
                            "maxVersion",
                            "minVersion",
                            "passphrase",
                            "pfx",
                            "secureOptions",
                            "secureProtocol",
                            "sessionIdContext",
                            "ticketKeys",
                            "sessionTimeout",
                            "handshakeTimeout",
                            "pskIdentityHint",
                            "secureContext",
                            "enableTrace",
                            "requestCert",
                            "ALPNProtocols",
                            "SNICallback",
                            "rejectUnauthorized",
                            "allowHalfOpen",
                            "pauseOnConnect",
                            "noDelay",
                            "keepAlive",
                            "keepAliveInitialDelay",
                            "highWaterMark",
                            "blockList",
                            "IncomingMessage",
                            "ServerResponse",
                            "requestTimeout",
                            "joinDuplicateHeaders",
                            "keepAliveTimeout",
                            "connectionsCheckingInterval",
                            "headersTimeout",
                            "insecureHTTPParser",
                            "maxHeaderSize",
                            "requireHostHeader",
                            "uniqueHeaders",
                            "rejectNonStandardBodyWrites"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo214 = (input, _path, _exceptionable = true)=>[
                    (null !== input.byLayer || _report(_exceptionable, {
                        path: _path + ".byLayer",
                        expected: "(__type.o48 | undefined)",
                        value: input.byLayer
                    })) && (void 0 === input.byLayer || "function" == typeof input.byLayer || ("object" == typeof input.byLayer && null !== input.byLayer && false === Array.isArray(input.byLayer) || _report(_exceptionable, {
                        path: _path + ".byLayer",
                        expected: "(__type.o48 | undefined)",
                        value: input.byLayer
                    })) && _vo215(input.byLayer, _path + ".byLayer", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".byLayer",
                        expected: "(__type.o48 | undefined)",
                        value: input.byLayer
                    })),
                    false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "byLayer"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return (null !== value || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(Array<string> | __type.o49 | boolean | string)",
                            value: value
                        })) && (void 0 !== value || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(Array<string> | __type.o49 | boolean | string)",
                            value: value
                        })) && ("string" == typeof value || "boolean" == typeof value || Array.isArray(value) && value.map((elem, _index548)=>"string" == typeof elem || _report(_exceptionable, {
                                path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key) + "[" + _index548 + "]",
                                expected: "string",
                                value: elem
                            })).every((flag)=>flag) || "object" == typeof value && null !== value && false === Array.isArray(value) && _vo216(value, _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key), _exceptionable) || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(Array<string> | __type.o49 | boolean | string)",
                            value: value
                        }) || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(Array<string> | __type.o49 | boolean | string)",
                            value: value
                        }));
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo215 = (input, _path, _exceptionable = true)=>[
                    false === _exceptionable || Object.keys(input).map((key)=>{
                        const value = input[key];
                        if (void 0 === value) return true;
                        return (null !== value || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(ExternalItemObjectKnown & ExternalItemObjectUnknown | RegExp | string)",
                            value: value
                        })) && (void 0 !== value || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(ExternalItemObjectKnown & ExternalItemObjectUnknown | RegExp | string)",
                            value: value
                        })) && ("function" == typeof value || "string" == typeof value || value instanceof RegExp || ("object" == typeof value && null !== value && false === Array.isArray(value) || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(ExternalItemObjectKnown & ExternalItemObjectUnknown | RegExp | string)",
                            value: value
                        })) && _vo214(value, _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key), _exceptionable) || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(ExternalItemObjectKnown & ExternalItemObjectUnknown | RegExp | string)",
                            value: value
                        }));
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo216 = (input, _path, _exceptionable = true)=>[
                    false === _exceptionable || Object.keys(input).map((key)=>{
                        input[key];
                        return true;
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo217 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.electron || "boolean" == typeof input.electron || _report(_exceptionable, {
                        path: _path + ".electron",
                        expected: "(boolean | undefined)",
                        value: input.electron
                    }),
                    void 0 === input.electronMain || "boolean" == typeof input.electronMain || _report(_exceptionable, {
                        path: _path + ".electronMain",
                        expected: "(boolean | undefined)",
                        value: input.electronMain
                    }),
                    void 0 === input.electronPreload || "boolean" == typeof input.electronPreload || _report(_exceptionable, {
                        path: _path + ".electronPreload",
                        expected: "(boolean | undefined)",
                        value: input.electronPreload
                    }),
                    void 0 === input.electronRenderer || "boolean" == typeof input.electronRenderer || _report(_exceptionable, {
                        path: _path + ".electronRenderer",
                        expected: "(boolean | undefined)",
                        value: input.electronRenderer
                    }),
                    void 0 === input.node || "boolean" == typeof input.node || _report(_exceptionable, {
                        path: _path + ".node",
                        expected: "(boolean | undefined)",
                        value: input.node
                    }),
                    void 0 === input.nwjs || "boolean" == typeof input.nwjs || _report(_exceptionable, {
                        path: _path + ".nwjs",
                        expected: "(boolean | undefined)",
                        value: input.nwjs
                    }),
                    void 0 === input.web || "boolean" == typeof input.web || _report(_exceptionable, {
                        path: _path + ".web",
                        expected: "(boolean | undefined)",
                        value: input.web
                    }),
                    void 0 === input.webAsync || "boolean" == typeof input.webAsync || _report(_exceptionable, {
                        path: _path + ".webAsync",
                        expected: "(boolean | undefined)",
                        value: input.webAsync
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "electron",
                            "electronMain",
                            "electronPreload",
                            "electronRenderer",
                            "node",
                            "nwjs",
                            "web",
                            "webAsync"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo218 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.file || input.file instanceof RegExp || _report(_exceptionable, {
                        path: _path + ".file",
                        expected: "(RegExp | undefined)",
                        value: input.file
                    }),
                    void 0 === input.message || input.message instanceof RegExp || _report(_exceptionable, {
                        path: _path + ".message",
                        expected: "(RegExp | undefined)",
                        value: input.message
                    }),
                    void 0 === input["module"] || input["module"] instanceof RegExp || _report(_exceptionable, {
                        path: _path + "[\"module\"]",
                        expected: "(RegExp | undefined)",
                        value: input["module"]
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "file",
                            "message",
                            "module"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo219 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.appendOnly || "boolean" == typeof input.appendOnly || _report(_exceptionable, {
                        path: _path + ".appendOnly",
                        expected: "(boolean | undefined)",
                        value: input.appendOnly
                    }),
                    void 0 === input.colors || "boolean" == typeof input.colors || _report(_exceptionable, {
                        path: _path + ".colors",
                        expected: "(boolean | undefined)",
                        value: input.colors
                    }),
                    void 0 === input.console || ("object" == typeof input.console && null !== input.console || _report(_exceptionable, {
                        path: _path + ".console",
                        expected: "(\"node:console\".global.Console | undefined)",
                        value: input.console
                    })) && _vo110(input.console, _path + ".console", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".console",
                        expected: "(\"node:console\".global.Console | undefined)",
                        value: input.console
                    }),
                    (null !== input.debug || _report(_exceptionable, {
                        path: _path + ".debug",
                        expected: "(Array<FilterItemTypes>.o1 | RegExp | boolean | string | undefined)",
                        value: input.debug
                    })) && (void 0 === input.debug || "function" == typeof input.debug || "string" == typeof input.debug || "boolean" == typeof input.debug || input.debug instanceof RegExp || (Array.isArray(input.debug) || _report(_exceptionable, {
                        path: _path + ".debug",
                        expected: "(Array<FilterItemTypes>.o1 | RegExp | boolean | string | undefined)",
                        value: input.debug
                    })) && input.debug.map((elem, _index549)=>(null !== elem || _report(_exceptionable, {
                            path: _path + ".debug[" + _index549 + "]",
                            expected: "(RegExp | string)",
                            value: elem
                        })) && (void 0 !== elem || _report(_exceptionable, {
                            path: _path + ".debug[" + _index549 + "]",
                            expected: "(RegExp | string)",
                            value: elem
                        })) && ("function" == typeof elem || "string" == typeof elem || elem instanceof RegExp || _report(_exceptionable, {
                            path: _path + ".debug[" + _index549 + "]",
                            expected: "(RegExp | string)",
                            value: elem
                        }))).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".debug",
                        expected: "(Array<FilterItemTypes>.o1 | RegExp | boolean | string | undefined)",
                        value: input.debug
                    })),
                    void 0 === input.level || "none" === input.level || "verbose" === input.level || "error" === input.level || "warn" === input.level || "info" === input.level || "log" === input.level || _report(_exceptionable, {
                        path: _path + ".level",
                        expected: "(\"error\" | \"info\" | \"log\" | \"none\" | \"verbose\" | \"warn\" | undefined)",
                        value: input.level
                    }),
                    void 0 === input.stream || ("object" == typeof input.stream && null !== input.stream || _report(_exceptionable, {
                        path: _path + ".stream",
                        expected: "(WritableStream & { isTTY?: boolean; columns?: number; rows?: number; } | undefined)",
                        value: input.stream
                    })) && _vo220(input.stream, _path + ".stream", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".stream",
                        expected: "(WritableStream & { isTTY?: boolean; columns?: number; rows?: number; } | undefined)",
                        value: input.stream
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "appendOnly",
                            "colors",
                            "console",
                            "debug",
                            "level",
                            "stream"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo220 = (input, _path, _exceptionable = true)=>[
                    "boolean" == typeof input.writable || _report(_exceptionable, {
                        path: _path + ".writable",
                        expected: "boolean",
                        value: input.writable
                    }),
                    void 0 === input.isTTY || "boolean" == typeof input.isTTY || _report(_exceptionable, {
                        path: _path + ".isTTY",
                        expected: "(boolean | undefined)",
                        value: input.isTTY
                    }),
                    void 0 === input.columns || "number" == typeof input.columns || _report(_exceptionable, {
                        path: _path + ".columns",
                        expected: "(number | undefined)",
                        value: input.columns
                    }),
                    void 0 === input.rows || "number" == typeof input.rows || _report(_exceptionable, {
                        path: _path + ".rows",
                        expected: "(number | undefined)",
                        value: input.rows
                    }),
                    1 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "writable",
                            "isTTY",
                            "columns",
                            "rows"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo221 = (input, _path, _exceptionable = true)=>[
                    false === _exceptionable || Object.keys(input).map((key)=>{
                        input[key];
                        return true;
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo222 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.defaultRules || (Array.isArray(input.defaultRules) || _report(_exceptionable, {
                        path: _path + ".defaultRules",
                        expected: "(Array<false | \"\" | 0 | \"...\" | RuleSetRule | null | undefined> | undefined)",
                        value: input.defaultRules
                    })) && input.defaultRules.map((elem, _index550)=>null == elem || false === elem || "" === elem || "..." === elem || 0 === elem || ("object" == typeof elem && null !== elem && false === Array.isArray(elem) || _report(_exceptionable, {
                            path: _path + ".defaultRules[" + _index550 + "]",
                            expected: "(\"\" | \"...\" | 0 | RuleSetRule.o1 | false | null | undefined)",
                            value: elem
                        })) && _vo223(elem, _path + ".defaultRules[" + _index550 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".defaultRules[" + _index550 + "]",
                            expected: "(\"\" | \"...\" | 0 | RuleSetRule.o1 | false | null | undefined)",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".defaultRules",
                        expected: "(Array<false | \"\" | 0 | \"...\" | RuleSetRule | null | undefined> | undefined)",
                        value: input.defaultRules
                    }),
                    void 0 === input.exprContextCritical || "boolean" == typeof input.exprContextCritical || _report(_exceptionable, {
                        path: _path + ".exprContextCritical",
                        expected: "(boolean | undefined)",
                        value: input.exprContextCritical
                    }),
                    void 0 === input.exprContextRecursive || "boolean" == typeof input.exprContextRecursive || _report(_exceptionable, {
                        path: _path + ".exprContextRecursive",
                        expected: "(boolean | undefined)",
                        value: input.exprContextRecursive
                    }),
                    (null !== input.exprContextRegExp || _report(_exceptionable, {
                        path: _path + ".exprContextRegExp",
                        expected: "(RegExp | boolean | undefined)",
                        value: input.exprContextRegExp
                    })) && (void 0 === input.exprContextRegExp || "boolean" == typeof input.exprContextRegExp || input.exprContextRegExp instanceof RegExp || _report(_exceptionable, {
                        path: _path + ".exprContextRegExp",
                        expected: "(RegExp | boolean | undefined)",
                        value: input.exprContextRegExp
                    })),
                    void 0 === input.exprContextRequest || "string" == typeof input.exprContextRequest || _report(_exceptionable, {
                        path: _path + ".exprContextRequest",
                        expected: "(string | undefined)",
                        value: input.exprContextRequest
                    }),
                    void 0 === input.generator || ("object" == typeof input.generator && null !== input.generator && false === Array.isArray(input.generator) || _report(_exceptionable, {
                        path: _path + ".generator",
                        expected: "(GeneratorOptionsByModuleType | undefined)",
                        value: input.generator
                    })) && _vo285(input.generator, _path + ".generator", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".generator",
                        expected: "(GeneratorOptionsByModuleType | undefined)",
                        value: input.generator
                    }),
                    (null !== input.noParse || _report(_exceptionable, {
                        path: _path + ".noParse",
                        expected: "(Array<string | RegExp | ((content: string) => boolean)> | RegExp | string | undefined)",
                        value: input.noParse
                    })) && (void 0 === input.noParse || "function" == typeof input.noParse || "string" == typeof input.noParse || input.noParse instanceof RegExp || (Array.isArray(input.noParse) || _report(_exceptionable, {
                        path: _path + ".noParse",
                        expected: "(Array<string | RegExp | ((content: string) => boolean)> | RegExp | string | undefined)",
                        value: input.noParse
                    })) && input.noParse.map((elem, _index551)=>(null !== elem || _report(_exceptionable, {
                            path: _path + ".noParse[" + _index551 + "]",
                            expected: "(RegExp | string)",
                            value: elem
                        })) && (void 0 !== elem || _report(_exceptionable, {
                            path: _path + ".noParse[" + _index551 + "]",
                            expected: "(RegExp | string)",
                            value: elem
                        })) && ("function" == typeof elem || "string" == typeof elem || elem instanceof RegExp || _report(_exceptionable, {
                            path: _path + ".noParse[" + _index551 + "]",
                            expected: "(RegExp | string)",
                            value: elem
                        }))).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".noParse",
                        expected: "(Array<string | RegExp | ((content: string) => boolean)> | RegExp | string | undefined)",
                        value: input.noParse
                    })),
                    void 0 === input.parser || ("object" == typeof input.parser && null !== input.parser && false === Array.isArray(input.parser) || _report(_exceptionable, {
                        path: _path + ".parser",
                        expected: "(ParserOptionsByModuleType | undefined)",
                        value: input.parser
                    })) && _vo297(input.parser, _path + ".parser", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".parser",
                        expected: "(ParserOptionsByModuleType | undefined)",
                        value: input.parser
                    }),
                    void 0 === input.rules || (Array.isArray(input.rules) || _report(_exceptionable, {
                        path: _path + ".rules",
                        expected: "(Array<false | \"\" | 0 | \"...\" | RuleSetRule | null | undefined> | undefined)",
                        value: input.rules
                    })) && input.rules.map((elem, _index552)=>null == elem || false === elem || "" === elem || "..." === elem || 0 === elem || ("object" == typeof elem && null !== elem && false === Array.isArray(elem) || _report(_exceptionable, {
                            path: _path + ".rules[" + _index552 + "]",
                            expected: "(\"\" | \"...\" | 0 | RuleSetRule.o1 | false | null | undefined)",
                            value: elem
                        })) && _vo223(elem, _path + ".rules[" + _index552 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".rules[" + _index552 + "]",
                            expected: "(\"\" | \"...\" | 0 | RuleSetRule.o1 | false | null | undefined)",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".rules",
                        expected: "(Array<false | \"\" | 0 | \"...\" | RuleSetRule | null | undefined> | undefined)",
                        value: input.rules
                    }),
                    void 0 === input.strictExportPresence || "boolean" == typeof input.strictExportPresence || _report(_exceptionable, {
                        path: _path + ".strictExportPresence",
                        expected: "(boolean | undefined)",
                        value: input.strictExportPresence
                    }),
                    void 0 === input.strictThisContextOnImports || "boolean" == typeof input.strictThisContextOnImports || _report(_exceptionable, {
                        path: _path + ".strictThisContextOnImports",
                        expected: "(boolean | undefined)",
                        value: input.strictThisContextOnImports
                    }),
                    void 0 === input.unknownContextCritical || "boolean" == typeof input.unknownContextCritical || _report(_exceptionable, {
                        path: _path + ".unknownContextCritical",
                        expected: "(boolean | undefined)",
                        value: input.unknownContextCritical
                    }),
                    void 0 === input.unknownContextRecursive || "boolean" == typeof input.unknownContextRecursive || _report(_exceptionable, {
                        path: _path + ".unknownContextRecursive",
                        expected: "(boolean | undefined)",
                        value: input.unknownContextRecursive
                    }),
                    (null !== input.unknownContextRegExp || _report(_exceptionable, {
                        path: _path + ".unknownContextRegExp",
                        expected: "(RegExp | boolean | undefined)",
                        value: input.unknownContextRegExp
                    })) && (void 0 === input.unknownContextRegExp || "boolean" == typeof input.unknownContextRegExp || input.unknownContextRegExp instanceof RegExp || _report(_exceptionable, {
                        path: _path + ".unknownContextRegExp",
                        expected: "(RegExp | boolean | undefined)",
                        value: input.unknownContextRegExp
                    })),
                    void 0 === input.unknownContextRequest || "string" == typeof input.unknownContextRequest || _report(_exceptionable, {
                        path: _path + ".unknownContextRequest",
                        expected: "(string | undefined)",
                        value: input.unknownContextRequest
                    }),
                    (null !== input.unsafeCache || _report(_exceptionable, {
                        path: _path + ".unsafeCache",
                        expected: "(boolean | undefined)",
                        value: input.unsafeCache
                    })) && (void 0 === input.unsafeCache || "function" == typeof input.unsafeCache || "boolean" == typeof input.unsafeCache || _report(_exceptionable, {
                        path: _path + ".unsafeCache",
                        expected: "(boolean | undefined)",
                        value: input.unsafeCache
                    })),
                    void 0 === input.wrappedContextCritical || "boolean" == typeof input.wrappedContextCritical || _report(_exceptionable, {
                        path: _path + ".wrappedContextCritical",
                        expected: "(boolean | undefined)",
                        value: input.wrappedContextCritical
                    }),
                    void 0 === input.wrappedContextRecursive || "boolean" == typeof input.wrappedContextRecursive || _report(_exceptionable, {
                        path: _path + ".wrappedContextRecursive",
                        expected: "(boolean | undefined)",
                        value: input.wrappedContextRecursive
                    }),
                    void 0 === input.wrappedContextRegExp || input.wrappedContextRegExp instanceof RegExp || _report(_exceptionable, {
                        path: _path + ".wrappedContextRegExp",
                        expected: "(RegExp | undefined)",
                        value: input.wrappedContextRegExp
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "defaultRules",
                            "exprContextCritical",
                            "exprContextRecursive",
                            "exprContextRegExp",
                            "exprContextRequest",
                            "generator",
                            "noParse",
                            "parser",
                            "rules",
                            "strictExportPresence",
                            "strictThisContextOnImports",
                            "unknownContextCritical",
                            "unknownContextRecursive",
                            "unknownContextRegExp",
                            "unknownContextRequest",
                            "unsafeCache",
                            "wrappedContextCritical",
                            "wrappedContextRecursive",
                            "wrappedContextRegExp"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo223 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.assert || ("object" == typeof input.assert && null !== input.assert && false === Array.isArray(input.assert) || _report(_exceptionable, {
                        path: _path + ".assert",
                        expected: "(__type.o52 | undefined)",
                        value: input.assert
                    })) && _vo224(input.assert, _path + ".assert", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".assert",
                        expected: "(__type.o52 | undefined)",
                        value: input.assert
                    }),
                    (null !== input.compiler || _report(_exceptionable, {
                        path: _path + ".compiler",
                        expected: "(Array<RuleSetCondition> | RegExp | RuleSetLogicalConditions.o1 | string | undefined)",
                        value: input.compiler
                    })) && (void 0 === input.compiler || "function" == typeof input.compiler || "string" == typeof input.compiler || input.compiler instanceof RegExp || Array.isArray(input.compiler) && input.compiler.map((elem, _index553)=>(null !== elem || _report(_exceptionable, {
                            path: _path + ".compiler[" + _index553 + "]",
                            expected: "(Array<RuleSetCondition>.o1 | RegExp | RuleSetLogicalConditions.o1 | string)",
                            value: elem
                        })) && (void 0 !== elem || _report(_exceptionable, {
                            path: _path + ".compiler[" + _index553 + "]",
                            expected: "(Array<RuleSetCondition>.o1 | RegExp | RuleSetLogicalConditions.o1 | string)",
                            value: elem
                        })) && ("function" == typeof elem || "string" == typeof elem || elem instanceof RegExp || Array.isArray(elem) && (_va1(elem, _path + ".compiler[" + _index553 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".compiler[" + _index553 + "]",
                            expected: "Array<RuleSetCondition>.o1",
                            value: elem
                        })) || "object" == typeof elem && null !== elem && false === Array.isArray(elem) && _vo225(elem, _path + ".compiler[" + _index553 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".compiler[" + _index553 + "]",
                            expected: "(Array<RuleSetCondition>.o1 | RegExp | RuleSetLogicalConditions.o1 | string)",
                            value: elem
                        }) || _report(_exceptionable, {
                            path: _path + ".compiler[" + _index553 + "]",
                            expected: "(Array<RuleSetCondition>.o1 | RegExp | RuleSetLogicalConditions.o1 | string)",
                            value: elem
                        }))).every((flag)=>flag) || "object" == typeof input.compiler && null !== input.compiler && false === Array.isArray(input.compiler) && _vo225(input.compiler, _path + ".compiler", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".compiler",
                        expected: "(Array<RuleSetCondition> | RegExp | RuleSetLogicalConditions.o1 | string | undefined)",
                        value: input.compiler
                    }) || _report(_exceptionable, {
                        path: _path + ".compiler",
                        expected: "(Array<RuleSetCondition> | RegExp | RuleSetLogicalConditions.o1 | string | undefined)",
                        value: input.compiler
                    })),
                    (null !== input.dependency || _report(_exceptionable, {
                        path: _path + ".dependency",
                        expected: "(Array<RuleSetCondition> | RegExp | RuleSetLogicalConditions.o1 | string | undefined)",
                        value: input.dependency
                    })) && (void 0 === input.dependency || "function" == typeof input.dependency || "string" == typeof input.dependency || input.dependency instanceof RegExp || Array.isArray(input.dependency) && input.dependency.map((elem, _index554)=>(null !== elem || _report(_exceptionable, {
                            path: _path + ".dependency[" + _index554 + "]",
                            expected: "(Array<RuleSetCondition>.o1 | RegExp | RuleSetLogicalConditions.o1 | string)",
                            value: elem
                        })) && (void 0 !== elem || _report(_exceptionable, {
                            path: _path + ".dependency[" + _index554 + "]",
                            expected: "(Array<RuleSetCondition>.o1 | RegExp | RuleSetLogicalConditions.o1 | string)",
                            value: elem
                        })) && ("function" == typeof elem || "string" == typeof elem || elem instanceof RegExp || Array.isArray(elem) && (_va1(elem, _path + ".dependency[" + _index554 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".dependency[" + _index554 + "]",
                            expected: "Array<RuleSetCondition>.o1",
                            value: elem
                        })) || "object" == typeof elem && null !== elem && false === Array.isArray(elem) && _vo225(elem, _path + ".dependency[" + _index554 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".dependency[" + _index554 + "]",
                            expected: "(Array<RuleSetCondition>.o1 | RegExp | RuleSetLogicalConditions.o1 | string)",
                            value: elem
                        }) || _report(_exceptionable, {
                            path: _path + ".dependency[" + _index554 + "]",
                            expected: "(Array<RuleSetCondition>.o1 | RegExp | RuleSetLogicalConditions.o1 | string)",
                            value: elem
                        }))).every((flag)=>flag) || "object" == typeof input.dependency && null !== input.dependency && false === Array.isArray(input.dependency) && _vo225(input.dependency, _path + ".dependency", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".dependency",
                        expected: "(Array<RuleSetCondition> | RegExp | RuleSetLogicalConditions.o1 | string | undefined)",
                        value: input.dependency
                    }) || _report(_exceptionable, {
                        path: _path + ".dependency",
                        expected: "(Array<RuleSetCondition> | RegExp | RuleSetLogicalConditions.o1 | string | undefined)",
                        value: input.dependency
                    })),
                    void 0 === input.descriptionData || ("object" == typeof input.descriptionData && null !== input.descriptionData && false === Array.isArray(input.descriptionData) || _report(_exceptionable, {
                        path: _path + ".descriptionData",
                        expected: "(__type.o53 | undefined)",
                        value: input.descriptionData
                    })) && _vo226(input.descriptionData, _path + ".descriptionData", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".descriptionData",
                        expected: "(__type.o53 | undefined)",
                        value: input.descriptionData
                    }),
                    void 0 === input.enforce || "pre" === input.enforce || "post" === input.enforce || _report(_exceptionable, {
                        path: _path + ".enforce",
                        expected: "(\"post\" | \"pre\" | undefined)",
                        value: input.enforce
                    }),
                    (null !== input.exclude || _report(_exceptionable, {
                        path: _path + ".exclude",
                        expected: "(Array<RuleSetConditionAbsolute> | RegExp | RuleSetLogicalConditionsAbsolute | string | undefined)",
                        value: input.exclude
                    })) && (void 0 === input.exclude || "function" == typeof input.exclude || "string" == typeof input.exclude || input.exclude instanceof RegExp || Array.isArray(input.exclude) && input.exclude.map((elem, _index555)=>(null !== elem || _report(_exceptionable, {
                            path: _path + ".exclude[" + _index555 + "]",
                            expected: "(Array<RuleSetConditionAbsolute>.o1 | RegExp | RuleSetLogicalConditionsAbsolute | string)",
                            value: elem
                        })) && (void 0 !== elem || _report(_exceptionable, {
                            path: _path + ".exclude[" + _index555 + "]",
                            expected: "(Array<RuleSetConditionAbsolute>.o1 | RegExp | RuleSetLogicalConditionsAbsolute | string)",
                            value: elem
                        })) && ("function" == typeof elem || "string" == typeof elem || elem instanceof RegExp || Array.isArray(elem) && (_va2(elem, _path + ".exclude[" + _index555 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".exclude[" + _index555 + "]",
                            expected: "Array<RuleSetConditionAbsolute>.o1",
                            value: elem
                        })) || "object" == typeof elem && null !== elem && false === Array.isArray(elem) && _vo227(elem, _path + ".exclude[" + _index555 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".exclude[" + _index555 + "]",
                            expected: "(Array<RuleSetConditionAbsolute>.o1 | RegExp | RuleSetLogicalConditionsAbsolute | string)",
                            value: elem
                        }) || _report(_exceptionable, {
                            path: _path + ".exclude[" + _index555 + "]",
                            expected: "(Array<RuleSetConditionAbsolute>.o1 | RegExp | RuleSetLogicalConditionsAbsolute | string)",
                            value: elem
                        }))).every((flag)=>flag) || "object" == typeof input.exclude && null !== input.exclude && false === Array.isArray(input.exclude) && _vo227(input.exclude, _path + ".exclude", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".exclude",
                        expected: "(Array<RuleSetConditionAbsolute> | RegExp | RuleSetLogicalConditionsAbsolute | string | undefined)",
                        value: input.exclude
                    }) || _report(_exceptionable, {
                        path: _path + ".exclude",
                        expected: "(Array<RuleSetConditionAbsolute> | RegExp | RuleSetLogicalConditionsAbsolute | string | undefined)",
                        value: input.exclude
                    })),
                    void 0 === input.generator || ("object" == typeof input.generator && null !== input.generator && false === Array.isArray(input.generator) || _report(_exceptionable, {
                        path: _path + ".generator",
                        expected: "(__type.o54 | undefined)",
                        value: input.generator
                    })) && _vo228(input.generator, _path + ".generator", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".generator",
                        expected: "(__type.o54 | undefined)",
                        value: input.generator
                    }),
                    (null !== input.include || _report(_exceptionable, {
                        path: _path + ".include",
                        expected: "(Array<RuleSetConditionAbsolute> | RegExp | RuleSetLogicalConditionsAbsolute | string | undefined)",
                        value: input.include
                    })) && (void 0 === input.include || "function" == typeof input.include || "string" == typeof input.include || input.include instanceof RegExp || Array.isArray(input.include) && input.include.map((elem, _index556)=>(null !== elem || _report(_exceptionable, {
                            path: _path + ".include[" + _index556 + "]",
                            expected: "(Array<RuleSetConditionAbsolute>.o1 | RegExp | RuleSetLogicalConditionsAbsolute | string)",
                            value: elem
                        })) && (void 0 !== elem || _report(_exceptionable, {
                            path: _path + ".include[" + _index556 + "]",
                            expected: "(Array<RuleSetConditionAbsolute>.o1 | RegExp | RuleSetLogicalConditionsAbsolute | string)",
                            value: elem
                        })) && ("function" == typeof elem || "string" == typeof elem || elem instanceof RegExp || Array.isArray(elem) && (_va2(elem, _path + ".include[" + _index556 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".include[" + _index556 + "]",
                            expected: "Array<RuleSetConditionAbsolute>.o1",
                            value: elem
                        })) || "object" == typeof elem && null !== elem && false === Array.isArray(elem) && _vo227(elem, _path + ".include[" + _index556 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".include[" + _index556 + "]",
                            expected: "(Array<RuleSetConditionAbsolute>.o1 | RegExp | RuleSetLogicalConditionsAbsolute | string)",
                            value: elem
                        }) || _report(_exceptionable, {
                            path: _path + ".include[" + _index556 + "]",
                            expected: "(Array<RuleSetConditionAbsolute>.o1 | RegExp | RuleSetLogicalConditionsAbsolute | string)",
                            value: elem
                        }))).every((flag)=>flag) || "object" == typeof input.include && null !== input.include && false === Array.isArray(input.include) && _vo227(input.include, _path + ".include", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".include",
                        expected: "(Array<RuleSetConditionAbsolute> | RegExp | RuleSetLogicalConditionsAbsolute | string | undefined)",
                        value: input.include
                    }) || _report(_exceptionable, {
                        path: _path + ".include",
                        expected: "(Array<RuleSetConditionAbsolute> | RegExp | RuleSetLogicalConditionsAbsolute | string | undefined)",
                        value: input.include
                    })),
                    (null !== input.issuer || _report(_exceptionable, {
                        path: _path + ".issuer",
                        expected: "(Array<RuleSetConditionAbsolute> | RegExp | RuleSetLogicalConditionsAbsolute | string | undefined)",
                        value: input.issuer
                    })) && (void 0 === input.issuer || "function" == typeof input.issuer || "string" == typeof input.issuer || input.issuer instanceof RegExp || Array.isArray(input.issuer) && input.issuer.map((elem, _index557)=>(null !== elem || _report(_exceptionable, {
                            path: _path + ".issuer[" + _index557 + "]",
                            expected: "(Array<RuleSetConditionAbsolute>.o1 | RegExp | RuleSetLogicalConditionsAbsolute | string)",
                            value: elem
                        })) && (void 0 !== elem || _report(_exceptionable, {
                            path: _path + ".issuer[" + _index557 + "]",
                            expected: "(Array<RuleSetConditionAbsolute>.o1 | RegExp | RuleSetLogicalConditionsAbsolute | string)",
                            value: elem
                        })) && ("function" == typeof elem || "string" == typeof elem || elem instanceof RegExp || Array.isArray(elem) && (_va2(elem, _path + ".issuer[" + _index557 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".issuer[" + _index557 + "]",
                            expected: "Array<RuleSetConditionAbsolute>.o1",
                            value: elem
                        })) || "object" == typeof elem && null !== elem && false === Array.isArray(elem) && _vo227(elem, _path + ".issuer[" + _index557 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".issuer[" + _index557 + "]",
                            expected: "(Array<RuleSetConditionAbsolute>.o1 | RegExp | RuleSetLogicalConditionsAbsolute | string)",
                            value: elem
                        }) || _report(_exceptionable, {
                            path: _path + ".issuer[" + _index557 + "]",
                            expected: "(Array<RuleSetConditionAbsolute>.o1 | RegExp | RuleSetLogicalConditionsAbsolute | string)",
                            value: elem
                        }))).every((flag)=>flag) || "object" == typeof input.issuer && null !== input.issuer && false === Array.isArray(input.issuer) && _vo227(input.issuer, _path + ".issuer", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".issuer",
                        expected: "(Array<RuleSetConditionAbsolute> | RegExp | RuleSetLogicalConditionsAbsolute | string | undefined)",
                        value: input.issuer
                    }) || _report(_exceptionable, {
                        path: _path + ".issuer",
                        expected: "(Array<RuleSetConditionAbsolute> | RegExp | RuleSetLogicalConditionsAbsolute | string | undefined)",
                        value: input.issuer
                    })),
                    (null !== input.issuerLayer || _report(_exceptionable, {
                        path: _path + ".issuerLayer",
                        expected: "(Array<RuleSetCondition> | RegExp | RuleSetLogicalConditions.o1 | string | undefined)",
                        value: input.issuerLayer
                    })) && (void 0 === input.issuerLayer || "function" == typeof input.issuerLayer || "string" == typeof input.issuerLayer || input.issuerLayer instanceof RegExp || Array.isArray(input.issuerLayer) && input.issuerLayer.map((elem, _index558)=>(null !== elem || _report(_exceptionable, {
                            path: _path + ".issuerLayer[" + _index558 + "]",
                            expected: "(Array<RuleSetCondition>.o1 | RegExp | RuleSetLogicalConditions.o1 | string)",
                            value: elem
                        })) && (void 0 !== elem || _report(_exceptionable, {
                            path: _path + ".issuerLayer[" + _index558 + "]",
                            expected: "(Array<RuleSetCondition>.o1 | RegExp | RuleSetLogicalConditions.o1 | string)",
                            value: elem
                        })) && ("function" == typeof elem || "string" == typeof elem || elem instanceof RegExp || Array.isArray(elem) && (_va1(elem, _path + ".issuerLayer[" + _index558 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".issuerLayer[" + _index558 + "]",
                            expected: "Array<RuleSetCondition>.o1",
                            value: elem
                        })) || "object" == typeof elem && null !== elem && false === Array.isArray(elem) && _vo225(elem, _path + ".issuerLayer[" + _index558 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".issuerLayer[" + _index558 + "]",
                            expected: "(Array<RuleSetCondition>.o1 | RegExp | RuleSetLogicalConditions.o1 | string)",
                            value: elem
                        }) || _report(_exceptionable, {
                            path: _path + ".issuerLayer[" + _index558 + "]",
                            expected: "(Array<RuleSetCondition>.o1 | RegExp | RuleSetLogicalConditions.o1 | string)",
                            value: elem
                        }))).every((flag)=>flag) || "object" == typeof input.issuerLayer && null !== input.issuerLayer && false === Array.isArray(input.issuerLayer) && _vo225(input.issuerLayer, _path + ".issuerLayer", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".issuerLayer",
                        expected: "(Array<RuleSetCondition> | RegExp | RuleSetLogicalConditions.o1 | string | undefined)",
                        value: input.issuerLayer
                    }) || _report(_exceptionable, {
                        path: _path + ".issuerLayer",
                        expected: "(Array<RuleSetCondition> | RegExp | RuleSetLogicalConditions.o1 | string | undefined)",
                        value: input.issuerLayer
                    })),
                    void 0 === input.layer || "string" == typeof input.layer || _report(_exceptionable, {
                        path: _path + ".layer",
                        expected: "(string | undefined)",
                        value: input.layer
                    }),
                    void 0 === input.loader || "string" == typeof input.loader || _report(_exceptionable, {
                        path: _path + ".loader",
                        expected: "(string | undefined)",
                        value: input.loader
                    }),
                    (null !== input.mimetype || _report(_exceptionable, {
                        path: _path + ".mimetype",
                        expected: "(Array<RuleSetCondition> | RegExp | RuleSetLogicalConditions.o1 | string | undefined)",
                        value: input.mimetype
                    })) && (void 0 === input.mimetype || "function" == typeof input.mimetype || "string" == typeof input.mimetype || input.mimetype instanceof RegExp || Array.isArray(input.mimetype) && input.mimetype.map((elem, _index559)=>(null !== elem || _report(_exceptionable, {
                            path: _path + ".mimetype[" + _index559 + "]",
                            expected: "(Array<RuleSetCondition>.o1 | RegExp | RuleSetLogicalConditions.o1 | string)",
                            value: elem
                        })) && (void 0 !== elem || _report(_exceptionable, {
                            path: _path + ".mimetype[" + _index559 + "]",
                            expected: "(Array<RuleSetCondition>.o1 | RegExp | RuleSetLogicalConditions.o1 | string)",
                            value: elem
                        })) && ("function" == typeof elem || "string" == typeof elem || elem instanceof RegExp || Array.isArray(elem) && (_va1(elem, _path + ".mimetype[" + _index559 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".mimetype[" + _index559 + "]",
                            expected: "Array<RuleSetCondition>.o1",
                            value: elem
                        })) || "object" == typeof elem && null !== elem && false === Array.isArray(elem) && _vo225(elem, _path + ".mimetype[" + _index559 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".mimetype[" + _index559 + "]",
                            expected: "(Array<RuleSetCondition>.o1 | RegExp | RuleSetLogicalConditions.o1 | string)",
                            value: elem
                        }) || _report(_exceptionable, {
                            path: _path + ".mimetype[" + _index559 + "]",
                            expected: "(Array<RuleSetCondition>.o1 | RegExp | RuleSetLogicalConditions.o1 | string)",
                            value: elem
                        }))).every((flag)=>flag) || "object" == typeof input.mimetype && null !== input.mimetype && false === Array.isArray(input.mimetype) && _vo225(input.mimetype, _path + ".mimetype", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".mimetype",
                        expected: "(Array<RuleSetCondition> | RegExp | RuleSetLogicalConditions.o1 | string | undefined)",
                        value: input.mimetype
                    }) || _report(_exceptionable, {
                        path: _path + ".mimetype",
                        expected: "(Array<RuleSetCondition> | RegExp | RuleSetLogicalConditions.o1 | string | undefined)",
                        value: input.mimetype
                    })),
                    void 0 === input.oneOf || (Array.isArray(input.oneOf) || _report(_exceptionable, {
                        path: _path + ".oneOf",
                        expected: "(Array<false | \"\" | 0 | RuleSetRule | null | undefined> | undefined)",
                        value: input.oneOf
                    })) && input.oneOf.map((elem, _index560)=>null == elem || false === elem || "" === elem || 0 === elem || ("object" == typeof elem && null !== elem && false === Array.isArray(elem) || _report(_exceptionable, {
                            path: _path + ".oneOf[" + _index560 + "]",
                            expected: "(\"\" | 0 | RuleSetRule.o1 | false | null | undefined)",
                            value: elem
                        })) && _vo223(elem, _path + ".oneOf[" + _index560 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".oneOf[" + _index560 + "]",
                            expected: "(\"\" | 0 | RuleSetRule.o1 | false | null | undefined)",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".oneOf",
                        expected: "(Array<false | \"\" | 0 | RuleSetRule | null | undefined> | undefined)",
                        value: input.oneOf
                    }),
                    (null !== input.options || _report(_exceptionable, {
                        path: _path + ".options",
                        expected: "(__type.o55 | string | undefined)",
                        value: input.options
                    })) && (void 0 === input.options || "string" == typeof input.options || ("object" == typeof input.options && null !== input.options && false === Array.isArray(input.options) || _report(_exceptionable, {
                        path: _path + ".options",
                        expected: "(__type.o55 | string | undefined)",
                        value: input.options
                    })) && _vo229(input.options, _path + ".options", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".options",
                        expected: "(__type.o55 | string | undefined)",
                        value: input.options
                    })),
                    void 0 === input.parser || ("object" == typeof input.parser && null !== input.parser && false === Array.isArray(input.parser) || _report(_exceptionable, {
                        path: _path + ".parser",
                        expected: "(__type.o56 | undefined)",
                        value: input.parser
                    })) && _vo230(input.parser, _path + ".parser", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".parser",
                        expected: "(__type.o56 | undefined)",
                        value: input.parser
                    }),
                    (null !== input.realResource || _report(_exceptionable, {
                        path: _path + ".realResource",
                        expected: "(Array<RuleSetConditionAbsolute> | RegExp | RuleSetLogicalConditionsAbsolute | string | undefined)",
                        value: input.realResource
                    })) && (void 0 === input.realResource || "function" == typeof input.realResource || "string" == typeof input.realResource || input.realResource instanceof RegExp || Array.isArray(input.realResource) && input.realResource.map((elem, _index561)=>(null !== elem || _report(_exceptionable, {
                            path: _path + ".realResource[" + _index561 + "]",
                            expected: "(Array<RuleSetConditionAbsolute>.o1 | RegExp | RuleSetLogicalConditionsAbsolute | string)",
                            value: elem
                        })) && (void 0 !== elem || _report(_exceptionable, {
                            path: _path + ".realResource[" + _index561 + "]",
                            expected: "(Array<RuleSetConditionAbsolute>.o1 | RegExp | RuleSetLogicalConditionsAbsolute | string)",
                            value: elem
                        })) && ("function" == typeof elem || "string" == typeof elem || elem instanceof RegExp || Array.isArray(elem) && (_va2(elem, _path + ".realResource[" + _index561 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".realResource[" + _index561 + "]",
                            expected: "Array<RuleSetConditionAbsolute>.o1",
                            value: elem
                        })) || "object" == typeof elem && null !== elem && false === Array.isArray(elem) && _vo227(elem, _path + ".realResource[" + _index561 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".realResource[" + _index561 + "]",
                            expected: "(Array<RuleSetConditionAbsolute>.o1 | RegExp | RuleSetLogicalConditionsAbsolute | string)",
                            value: elem
                        }) || _report(_exceptionable, {
                            path: _path + ".realResource[" + _index561 + "]",
                            expected: "(Array<RuleSetConditionAbsolute>.o1 | RegExp | RuleSetLogicalConditionsAbsolute | string)",
                            value: elem
                        }))).every((flag)=>flag) || "object" == typeof input.realResource && null !== input.realResource && false === Array.isArray(input.realResource) && _vo227(input.realResource, _path + ".realResource", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".realResource",
                        expected: "(Array<RuleSetConditionAbsolute> | RegExp | RuleSetLogicalConditionsAbsolute | string | undefined)",
                        value: input.realResource
                    }) || _report(_exceptionable, {
                        path: _path + ".realResource",
                        expected: "(Array<RuleSetConditionAbsolute> | RegExp | RuleSetLogicalConditionsAbsolute | string | undefined)",
                        value: input.realResource
                    })),
                    void 0 === input.resolve || ("object" == typeof input.resolve && null !== input.resolve && false === Array.isArray(input.resolve) || _report(_exceptionable, {
                        path: _path + ".resolve",
                        expected: "(ResolveOptions.o1 | undefined)",
                        value: input.resolve
                    })) && _vo231(input.resolve, _path + ".resolve", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".resolve",
                        expected: "(ResolveOptions.o1 | undefined)",
                        value: input.resolve
                    }),
                    (null !== input.resource || _report(_exceptionable, {
                        path: _path + ".resource",
                        expected: "(Array<RuleSetConditionAbsolute> | RegExp | RuleSetLogicalConditionsAbsolute | string | undefined)",
                        value: input.resource
                    })) && (void 0 === input.resource || "function" == typeof input.resource || "string" == typeof input.resource || input.resource instanceof RegExp || Array.isArray(input.resource) && input.resource.map((elem, _index562)=>(null !== elem || _report(_exceptionable, {
                            path: _path + ".resource[" + _index562 + "]",
                            expected: "(Array<RuleSetConditionAbsolute>.o1 | RegExp | RuleSetLogicalConditionsAbsolute | string)",
                            value: elem
                        })) && (void 0 !== elem || _report(_exceptionable, {
                            path: _path + ".resource[" + _index562 + "]",
                            expected: "(Array<RuleSetConditionAbsolute>.o1 | RegExp | RuleSetLogicalConditionsAbsolute | string)",
                            value: elem
                        })) && ("function" == typeof elem || "string" == typeof elem || elem instanceof RegExp || Array.isArray(elem) && (_va2(elem, _path + ".resource[" + _index562 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".resource[" + _index562 + "]",
                            expected: "Array<RuleSetConditionAbsolute>.o1",
                            value: elem
                        })) || "object" == typeof elem && null !== elem && false === Array.isArray(elem) && _vo227(elem, _path + ".resource[" + _index562 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".resource[" + _index562 + "]",
                            expected: "(Array<RuleSetConditionAbsolute>.o1 | RegExp | RuleSetLogicalConditionsAbsolute | string)",
                            value: elem
                        }) || _report(_exceptionable, {
                            path: _path + ".resource[" + _index562 + "]",
                            expected: "(Array<RuleSetConditionAbsolute>.o1 | RegExp | RuleSetLogicalConditionsAbsolute | string)",
                            value: elem
                        }))).every((flag)=>flag) || "object" == typeof input.resource && null !== input.resource && false === Array.isArray(input.resource) && _vo227(input.resource, _path + ".resource", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".resource",
                        expected: "(Array<RuleSetConditionAbsolute> | RegExp | RuleSetLogicalConditionsAbsolute | string | undefined)",
                        value: input.resource
                    }) || _report(_exceptionable, {
                        path: _path + ".resource",
                        expected: "(Array<RuleSetConditionAbsolute> | RegExp | RuleSetLogicalConditionsAbsolute | string | undefined)",
                        value: input.resource
                    })),
                    (null !== input.resourceFragment || _report(_exceptionable, {
                        path: _path + ".resourceFragment",
                        expected: "(Array<RuleSetCondition> | RegExp | RuleSetLogicalConditions.o1 | string | undefined)",
                        value: input.resourceFragment
                    })) && (void 0 === input.resourceFragment || "function" == typeof input.resourceFragment || "string" == typeof input.resourceFragment || input.resourceFragment instanceof RegExp || Array.isArray(input.resourceFragment) && input.resourceFragment.map((elem, _index563)=>(null !== elem || _report(_exceptionable, {
                            path: _path + ".resourceFragment[" + _index563 + "]",
                            expected: "(Array<RuleSetCondition>.o1 | RegExp | RuleSetLogicalConditions.o1 | string)",
                            value: elem
                        })) && (void 0 !== elem || _report(_exceptionable, {
                            path: _path + ".resourceFragment[" + _index563 + "]",
                            expected: "(Array<RuleSetCondition>.o1 | RegExp | RuleSetLogicalConditions.o1 | string)",
                            value: elem
                        })) && ("function" == typeof elem || "string" == typeof elem || elem instanceof RegExp || Array.isArray(elem) && (_va1(elem, _path + ".resourceFragment[" + _index563 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".resourceFragment[" + _index563 + "]",
                            expected: "Array<RuleSetCondition>.o1",
                            value: elem
                        })) || "object" == typeof elem && null !== elem && false === Array.isArray(elem) && _vo225(elem, _path + ".resourceFragment[" + _index563 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".resourceFragment[" + _index563 + "]",
                            expected: "(Array<RuleSetCondition>.o1 | RegExp | RuleSetLogicalConditions.o1 | string)",
                            value: elem
                        }) || _report(_exceptionable, {
                            path: _path + ".resourceFragment[" + _index563 + "]",
                            expected: "(Array<RuleSetCondition>.o1 | RegExp | RuleSetLogicalConditions.o1 | string)",
                            value: elem
                        }))).every((flag)=>flag) || "object" == typeof input.resourceFragment && null !== input.resourceFragment && false === Array.isArray(input.resourceFragment) && _vo225(input.resourceFragment, _path + ".resourceFragment", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".resourceFragment",
                        expected: "(Array<RuleSetCondition> | RegExp | RuleSetLogicalConditions.o1 | string | undefined)",
                        value: input.resourceFragment
                    }) || _report(_exceptionable, {
                        path: _path + ".resourceFragment",
                        expected: "(Array<RuleSetCondition> | RegExp | RuleSetLogicalConditions.o1 | string | undefined)",
                        value: input.resourceFragment
                    })),
                    (null !== input.resourceQuery || _report(_exceptionable, {
                        path: _path + ".resourceQuery",
                        expected: "(Array<RuleSetCondition> | RegExp | RuleSetLogicalConditions.o1 | string | undefined)",
                        value: input.resourceQuery
                    })) && (void 0 === input.resourceQuery || "function" == typeof input.resourceQuery || "string" == typeof input.resourceQuery || input.resourceQuery instanceof RegExp || Array.isArray(input.resourceQuery) && input.resourceQuery.map((elem, _index564)=>(null !== elem || _report(_exceptionable, {
                            path: _path + ".resourceQuery[" + _index564 + "]",
                            expected: "(Array<RuleSetCondition>.o1 | RegExp | RuleSetLogicalConditions.o1 | string)",
                            value: elem
                        })) && (void 0 !== elem || _report(_exceptionable, {
                            path: _path + ".resourceQuery[" + _index564 + "]",
                            expected: "(Array<RuleSetCondition>.o1 | RegExp | RuleSetLogicalConditions.o1 | string)",
                            value: elem
                        })) && ("function" == typeof elem || "string" == typeof elem || elem instanceof RegExp || Array.isArray(elem) && (_va1(elem, _path + ".resourceQuery[" + _index564 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".resourceQuery[" + _index564 + "]",
                            expected: "Array<RuleSetCondition>.o1",
                            value: elem
                        })) || "object" == typeof elem && null !== elem && false === Array.isArray(elem) && _vo225(elem, _path + ".resourceQuery[" + _index564 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".resourceQuery[" + _index564 + "]",
                            expected: "(Array<RuleSetCondition>.o1 | RegExp | RuleSetLogicalConditions.o1 | string)",
                            value: elem
                        }) || _report(_exceptionable, {
                            path: _path + ".resourceQuery[" + _index564 + "]",
                            expected: "(Array<RuleSetCondition>.o1 | RegExp | RuleSetLogicalConditions.o1 | string)",
                            value: elem
                        }))).every((flag)=>flag) || "object" == typeof input.resourceQuery && null !== input.resourceQuery && false === Array.isArray(input.resourceQuery) && _vo225(input.resourceQuery, _path + ".resourceQuery", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".resourceQuery",
                        expected: "(Array<RuleSetCondition> | RegExp | RuleSetLogicalConditions.o1 | string | undefined)",
                        value: input.resourceQuery
                    }) || _report(_exceptionable, {
                        path: _path + ".resourceQuery",
                        expected: "(Array<RuleSetCondition> | RegExp | RuleSetLogicalConditions.o1 | string | undefined)",
                        value: input.resourceQuery
                    })),
                    void 0 === input.rules || (Array.isArray(input.rules) || _report(_exceptionable, {
                        path: _path + ".rules",
                        expected: "(Array<false | \"\" | 0 | RuleSetRule | null | undefined> | undefined)",
                        value: input.rules
                    })) && input.rules.map((elem, _index565)=>null == elem || false === elem || "" === elem || 0 === elem || ("object" == typeof elem && null !== elem && false === Array.isArray(elem) || _report(_exceptionable, {
                            path: _path + ".rules[" + _index565 + "]",
                            expected: "(\"\" | 0 | RuleSetRule.o1 | false | null | undefined)",
                            value: elem
                        })) && _vo223(elem, _path + ".rules[" + _index565 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".rules[" + _index565 + "]",
                            expected: "(\"\" | 0 | RuleSetRule.o1 | false | null | undefined)",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".rules",
                        expected: "(Array<false | \"\" | 0 | RuleSetRule | null | undefined> | undefined)",
                        value: input.rules
                    }),
                    (null !== input.scheme || _report(_exceptionable, {
                        path: _path + ".scheme",
                        expected: "(Array<RuleSetCondition> | RegExp | RuleSetLogicalConditions.o1 | string | undefined)",
                        value: input.scheme
                    })) && (void 0 === input.scheme || "function" == typeof input.scheme || "string" == typeof input.scheme || input.scheme instanceof RegExp || Array.isArray(input.scheme) && input.scheme.map((elem, _index566)=>(null !== elem || _report(_exceptionable, {
                            path: _path + ".scheme[" + _index566 + "]",
                            expected: "(Array<RuleSetCondition>.o1 | RegExp | RuleSetLogicalConditions.o1 | string)",
                            value: elem
                        })) && (void 0 !== elem || _report(_exceptionable, {
                            path: _path + ".scheme[" + _index566 + "]",
                            expected: "(Array<RuleSetCondition>.o1 | RegExp | RuleSetLogicalConditions.o1 | string)",
                            value: elem
                        })) && ("function" == typeof elem || "string" == typeof elem || elem instanceof RegExp || Array.isArray(elem) && (_va1(elem, _path + ".scheme[" + _index566 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".scheme[" + _index566 + "]",
                            expected: "Array<RuleSetCondition>.o1",
                            value: elem
                        })) || "object" == typeof elem && null !== elem && false === Array.isArray(elem) && _vo225(elem, _path + ".scheme[" + _index566 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".scheme[" + _index566 + "]",
                            expected: "(Array<RuleSetCondition>.o1 | RegExp | RuleSetLogicalConditions.o1 | string)",
                            value: elem
                        }) || _report(_exceptionable, {
                            path: _path + ".scheme[" + _index566 + "]",
                            expected: "(Array<RuleSetCondition>.o1 | RegExp | RuleSetLogicalConditions.o1 | string)",
                            value: elem
                        }))).every((flag)=>flag) || "object" == typeof input.scheme && null !== input.scheme && false === Array.isArray(input.scheme) && _vo225(input.scheme, _path + ".scheme", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".scheme",
                        expected: "(Array<RuleSetCondition> | RegExp | RuleSetLogicalConditions.o1 | string | undefined)",
                        value: input.scheme
                    }) || _report(_exceptionable, {
                        path: _path + ".scheme",
                        expected: "(Array<RuleSetCondition> | RegExp | RuleSetLogicalConditions.o1 | string | undefined)",
                        value: input.scheme
                    })),
                    void 0 === input.sideEffects || "boolean" == typeof input.sideEffects || _report(_exceptionable, {
                        path: _path + ".sideEffects",
                        expected: "(boolean | undefined)",
                        value: input.sideEffects
                    }),
                    (null !== input.test || _report(_exceptionable, {
                        path: _path + ".test",
                        expected: "(Array<RuleSetConditionAbsolute> | RegExp | RuleSetLogicalConditionsAbsolute | string | undefined)",
                        value: input.test
                    })) && (void 0 === input.test || "function" == typeof input.test || "string" == typeof input.test || input.test instanceof RegExp || Array.isArray(input.test) && input.test.map((elem, _index567)=>(null !== elem || _report(_exceptionable, {
                            path: _path + ".test[" + _index567 + "]",
                            expected: "(Array<RuleSetConditionAbsolute>.o1 | RegExp | RuleSetLogicalConditionsAbsolute | string)",
                            value: elem
                        })) && (void 0 !== elem || _report(_exceptionable, {
                            path: _path + ".test[" + _index567 + "]",
                            expected: "(Array<RuleSetConditionAbsolute>.o1 | RegExp | RuleSetLogicalConditionsAbsolute | string)",
                            value: elem
                        })) && ("function" == typeof elem || "string" == typeof elem || elem instanceof RegExp || Array.isArray(elem) && (_va2(elem, _path + ".test[" + _index567 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".test[" + _index567 + "]",
                            expected: "Array<RuleSetConditionAbsolute>.o1",
                            value: elem
                        })) || "object" == typeof elem && null !== elem && false === Array.isArray(elem) && _vo227(elem, _path + ".test[" + _index567 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".test[" + _index567 + "]",
                            expected: "(Array<RuleSetConditionAbsolute>.o1 | RegExp | RuleSetLogicalConditionsAbsolute | string)",
                            value: elem
                        }) || _report(_exceptionable, {
                            path: _path + ".test[" + _index567 + "]",
                            expected: "(Array<RuleSetConditionAbsolute>.o1 | RegExp | RuleSetLogicalConditionsAbsolute | string)",
                            value: elem
                        }))).every((flag)=>flag) || "object" == typeof input.test && null !== input.test && false === Array.isArray(input.test) && _vo227(input.test, _path + ".test", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".test",
                        expected: "(Array<RuleSetConditionAbsolute> | RegExp | RuleSetLogicalConditionsAbsolute | string | undefined)",
                        value: input.test
                    }) || _report(_exceptionable, {
                        path: _path + ".test",
                        expected: "(Array<RuleSetConditionAbsolute> | RegExp | RuleSetLogicalConditionsAbsolute | string | undefined)",
                        value: input.test
                    })),
                    void 0 === input.type || "string" == typeof input.type || _report(_exceptionable, {
                        path: _path + ".type",
                        expected: "(string | undefined)",
                        value: input.type
                    }),
                    (null !== input.use || _report(_exceptionable, {
                        path: _path + ".use",
                        expected: "(Array<string | false | 0 | RuleSetUseFunction | { ident?: string; loader?: string; options?: string | { [index: string]: any; }; } | null | undefined> | __type.o71 | string | undefined)",
                        value: input.use
                    })) && (void 0 === input.use || "function" == typeof input.use || "string" == typeof input.use || Array.isArray(input.use) && input.use.map((elem, _index568)=>null == elem || "function" == typeof elem || false === elem || 0 === elem || "string" == typeof elem || ("object" == typeof elem && null !== elem && false === Array.isArray(elem) || _report(_exceptionable, {
                            path: _path + ".use[" + _index568 + "]",
                            expected: "(0 | __type.o69 | false | null | string | undefined)",
                            value: elem
                        })) && _vo280(elem, _path + ".use[" + _index568 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".use[" + _index568 + "]",
                            expected: "(0 | __type.o69 | false | null | string | undefined)",
                            value: elem
                        })).every((flag)=>flag) || "object" == typeof input.use && null !== input.use && false === Array.isArray(input.use) && _vo282(input.use, _path + ".use", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".use",
                        expected: "(Array<string | false | 0 | RuleSetUseFunction | { ident?: string; loader?: string; options?: string | { [index: string]: any; }; } | null | undefined> | __type.o71 | string | undefined)",
                        value: input.use
                    }) || _report(_exceptionable, {
                        path: _path + ".use",
                        expected: "(Array<string | false | 0 | RuleSetUseFunction | { ident?: string; loader?: string; options?: string | { [index: string]: any; }; } | null | undefined> | __type.o71 | string | undefined)",
                        value: input.use
                    })),
                    void 0 === input["with"] || ("object" == typeof input["with"] && null !== input["with"] && false === Array.isArray(input["with"]) || _report(_exceptionable, {
                        path: _path + "[\"with\"]",
                        expected: "(__type.o73 | undefined)",
                        value: input["with"]
                    })) && _vo284(input["with"], _path + "[\"with\"]", _exceptionable) || _report(_exceptionable, {
                        path: _path + "[\"with\"]",
                        expected: "(__type.o73 | undefined)",
                        value: input["with"]
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "assert",
                            "compiler",
                            "dependency",
                            "descriptionData",
                            "enforce",
                            "exclude",
                            "generator",
                            "include",
                            "issuer",
                            "issuerLayer",
                            "layer",
                            "loader",
                            "mimetype",
                            "oneOf",
                            "options",
                            "parser",
                            "realResource",
                            "resolve",
                            "resource",
                            "resourceFragment",
                            "resourceQuery",
                            "rules",
                            "scheme",
                            "sideEffects",
                            "test",
                            "type",
                            "use",
                            "with"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo224 = (input, _path, _exceptionable = true)=>[
                    false === _exceptionable || Object.keys(input).map((key)=>{
                        const value = input[key];
                        if (void 0 === value) return true;
                        return (null !== value || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(Array<RuleSetCondition>.o2 | RegExp | RuleSetLogicalConditions.o1 | string)",
                            value: value
                        })) && (void 0 !== value || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(Array<RuleSetCondition>.o2 | RegExp | RuleSetLogicalConditions.o1 | string)",
                            value: value
                        })) && ("function" == typeof value || "string" == typeof value || value instanceof RegExp || Array.isArray(value) && value.map((elem, _index569)=>(null !== elem || _report(_exceptionable, {
                                path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key) + "[" + _index569 + "]",
                                expected: "(Array<RuleSetCondition>.o1 | RegExp | RuleSetLogicalConditions.o1 | string)",
                                value: elem
                            })) && (void 0 !== elem || _report(_exceptionable, {
                                path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key) + "[" + _index569 + "]",
                                expected: "(Array<RuleSetCondition>.o1 | RegExp | RuleSetLogicalConditions.o1 | string)",
                                value: elem
                            })) && ("function" == typeof elem || "string" == typeof elem || elem instanceof RegExp || Array.isArray(elem) && (_va1(elem, _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key) + "[" + _index569 + "]", _exceptionable) || _report(_exceptionable, {
                                path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key) + "[" + _index569 + "]",
                                expected: "Array<RuleSetCondition>.o1",
                                value: elem
                            })) || "object" == typeof elem && null !== elem && false === Array.isArray(elem) && _vo225(elem, _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key) + "[" + _index569 + "]", _exceptionable) || _report(_exceptionable, {
                                path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key) + "[" + _index569 + "]",
                                expected: "(Array<RuleSetCondition>.o1 | RegExp | RuleSetLogicalConditions.o1 | string)",
                                value: elem
                            }) || _report(_exceptionable, {
                                path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key) + "[" + _index569 + "]",
                                expected: "(Array<RuleSetCondition>.o1 | RegExp | RuleSetLogicalConditions.o1 | string)",
                                value: elem
                            }))).every((flag)=>flag) || "object" == typeof value && null !== value && false === Array.isArray(value) && _vo225(value, _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key), _exceptionable) || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(Array<RuleSetCondition>.o2 | RegExp | RuleSetLogicalConditions.o1 | string)",
                            value: value
                        }) || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(Array<RuleSetCondition>.o2 | RegExp | RuleSetLogicalConditions.o1 | string)",
                            value: value
                        }));
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo225 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.and || (Array.isArray(input.and) || _report(_exceptionable, {
                        path: _path + ".and",
                        expected: "(Array<RuleSetCondition> | undefined)",
                        value: input.and
                    })) && input.and.map((elem, _index570)=>(null !== elem || _report(_exceptionable, {
                            path: _path + ".and[" + _index570 + "]",
                            expected: "(Array<RuleSetCondition>.o1 | RegExp | RuleSetLogicalConditions.o1 | string)",
                            value: elem
                        })) && (void 0 !== elem || _report(_exceptionable, {
                            path: _path + ".and[" + _index570 + "]",
                            expected: "(Array<RuleSetCondition>.o1 | RegExp | RuleSetLogicalConditions.o1 | string)",
                            value: elem
                        })) && ("function" == typeof elem || "string" == typeof elem || elem instanceof RegExp || Array.isArray(elem) && (_va1(elem, _path + ".and[" + _index570 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".and[" + _index570 + "]",
                            expected: "Array<RuleSetCondition>.o1",
                            value: elem
                        })) || "object" == typeof elem && null !== elem && false === Array.isArray(elem) && _vo225(elem, _path + ".and[" + _index570 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".and[" + _index570 + "]",
                            expected: "(Array<RuleSetCondition>.o1 | RegExp | RuleSetLogicalConditions.o1 | string)",
                            value: elem
                        }) || _report(_exceptionable, {
                            path: _path + ".and[" + _index570 + "]",
                            expected: "(Array<RuleSetCondition>.o1 | RegExp | RuleSetLogicalConditions.o1 | string)",
                            value: elem
                        }))).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".and",
                        expected: "(Array<RuleSetCondition> | undefined)",
                        value: input.and
                    }),
                    (null !== input.not || _report(_exceptionable, {
                        path: _path + ".not",
                        expected: "(Array<RuleSetCondition> | RegExp | RuleSetLogicalConditions.o1 | string | undefined)",
                        value: input.not
                    })) && (void 0 === input.not || "function" == typeof input.not || "string" == typeof input.not || input.not instanceof RegExp || Array.isArray(input.not) && input.not.map((elem, _index571)=>(null !== elem || _report(_exceptionable, {
                            path: _path + ".not[" + _index571 + "]",
                            expected: "(Array<RuleSetCondition>.o1 | RegExp | RuleSetLogicalConditions.o1 | string)",
                            value: elem
                        })) && (void 0 !== elem || _report(_exceptionable, {
                            path: _path + ".not[" + _index571 + "]",
                            expected: "(Array<RuleSetCondition>.o1 | RegExp | RuleSetLogicalConditions.o1 | string)",
                            value: elem
                        })) && ("function" == typeof elem || "string" == typeof elem || elem instanceof RegExp || Array.isArray(elem) && (_va1(elem, _path + ".not[" + _index571 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".not[" + _index571 + "]",
                            expected: "Array<RuleSetCondition>.o1",
                            value: elem
                        })) || "object" == typeof elem && null !== elem && false === Array.isArray(elem) && _vo225(elem, _path + ".not[" + _index571 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".not[" + _index571 + "]",
                            expected: "(Array<RuleSetCondition>.o1 | RegExp | RuleSetLogicalConditions.o1 | string)",
                            value: elem
                        }) || _report(_exceptionable, {
                            path: _path + ".not[" + _index571 + "]",
                            expected: "(Array<RuleSetCondition>.o1 | RegExp | RuleSetLogicalConditions.o1 | string)",
                            value: elem
                        }))).every((flag)=>flag) || "object" == typeof input.not && null !== input.not && false === Array.isArray(input.not) && _vo225(input.not, _path + ".not", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".not",
                        expected: "(Array<RuleSetCondition> | RegExp | RuleSetLogicalConditions.o1 | string | undefined)",
                        value: input.not
                    }) || _report(_exceptionable, {
                        path: _path + ".not",
                        expected: "(Array<RuleSetCondition> | RegExp | RuleSetLogicalConditions.o1 | string | undefined)",
                        value: input.not
                    })),
                    void 0 === input.or || (Array.isArray(input.or) || _report(_exceptionable, {
                        path: _path + ".or",
                        expected: "(Array<RuleSetCondition> | undefined)",
                        value: input.or
                    })) && input.or.map((elem, _index572)=>(null !== elem || _report(_exceptionable, {
                            path: _path + ".or[" + _index572 + "]",
                            expected: "(Array<RuleSetCondition>.o1 | RegExp | RuleSetLogicalConditions.o1 | string)",
                            value: elem
                        })) && (void 0 !== elem || _report(_exceptionable, {
                            path: _path + ".or[" + _index572 + "]",
                            expected: "(Array<RuleSetCondition>.o1 | RegExp | RuleSetLogicalConditions.o1 | string)",
                            value: elem
                        })) && ("function" == typeof elem || "string" == typeof elem || elem instanceof RegExp || Array.isArray(elem) && (_va1(elem, _path + ".or[" + _index572 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".or[" + _index572 + "]",
                            expected: "Array<RuleSetCondition>.o1",
                            value: elem
                        })) || "object" == typeof elem && null !== elem && false === Array.isArray(elem) && _vo225(elem, _path + ".or[" + _index572 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".or[" + _index572 + "]",
                            expected: "(Array<RuleSetCondition>.o1 | RegExp | RuleSetLogicalConditions.o1 | string)",
                            value: elem
                        }) || _report(_exceptionable, {
                            path: _path + ".or[" + _index572 + "]",
                            expected: "(Array<RuleSetCondition>.o1 | RegExp | RuleSetLogicalConditions.o1 | string)",
                            value: elem
                        }))).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".or",
                        expected: "(Array<RuleSetCondition> | undefined)",
                        value: input.or
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "and",
                            "not",
                            "or"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo226 = (input, _path, _exceptionable = true)=>[
                    false === _exceptionable || Object.keys(input).map((key)=>{
                        const value = input[key];
                        if (void 0 === value) return true;
                        return (null !== value || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(Array<RuleSetCondition>.o2 | RegExp | RuleSetLogicalConditions.o1 | string)",
                            value: value
                        })) && (void 0 !== value || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(Array<RuleSetCondition>.o2 | RegExp | RuleSetLogicalConditions.o1 | string)",
                            value: value
                        })) && ("function" == typeof value || "string" == typeof value || value instanceof RegExp || Array.isArray(value) && value.map((elem, _index573)=>(null !== elem || _report(_exceptionable, {
                                path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key) + "[" + _index573 + "]",
                                expected: "(Array<RuleSetCondition>.o1 | RegExp | RuleSetLogicalConditions.o1 | string)",
                                value: elem
                            })) && (void 0 !== elem || _report(_exceptionable, {
                                path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key) + "[" + _index573 + "]",
                                expected: "(Array<RuleSetCondition>.o1 | RegExp | RuleSetLogicalConditions.o1 | string)",
                                value: elem
                            })) && ("function" == typeof elem || "string" == typeof elem || elem instanceof RegExp || Array.isArray(elem) && (_va1(elem, _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key) + "[" + _index573 + "]", _exceptionable) || _report(_exceptionable, {
                                path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key) + "[" + _index573 + "]",
                                expected: "Array<RuleSetCondition>.o1",
                                value: elem
                            })) || "object" == typeof elem && null !== elem && false === Array.isArray(elem) && _vo225(elem, _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key) + "[" + _index573 + "]", _exceptionable) || _report(_exceptionable, {
                                path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key) + "[" + _index573 + "]",
                                expected: "(Array<RuleSetCondition>.o1 | RegExp | RuleSetLogicalConditions.o1 | string)",
                                value: elem
                            }) || _report(_exceptionable, {
                                path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key) + "[" + _index573 + "]",
                                expected: "(Array<RuleSetCondition>.o1 | RegExp | RuleSetLogicalConditions.o1 | string)",
                                value: elem
                            }))).every((flag)=>flag) || "object" == typeof value && null !== value && false === Array.isArray(value) && _vo225(value, _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key), _exceptionable) || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(Array<RuleSetCondition>.o2 | RegExp | RuleSetLogicalConditions.o1 | string)",
                            value: value
                        }) || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(Array<RuleSetCondition>.o2 | RegExp | RuleSetLogicalConditions.o1 | string)",
                            value: value
                        }));
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo227 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.and || (Array.isArray(input.and) || _report(_exceptionable, {
                        path: _path + ".and",
                        expected: "(Array<RuleSetConditionAbsolute> | undefined)",
                        value: input.and
                    })) && input.and.map((elem, _index574)=>(null !== elem || _report(_exceptionable, {
                            path: _path + ".and[" + _index574 + "]",
                            expected: "(Array<RuleSetConditionAbsolute>.o1 | RegExp | RuleSetLogicalConditionsAbsolute | string)",
                            value: elem
                        })) && (void 0 !== elem || _report(_exceptionable, {
                            path: _path + ".and[" + _index574 + "]",
                            expected: "(Array<RuleSetConditionAbsolute>.o1 | RegExp | RuleSetLogicalConditionsAbsolute | string)",
                            value: elem
                        })) && ("function" == typeof elem || "string" == typeof elem || elem instanceof RegExp || Array.isArray(elem) && (_va2(elem, _path + ".and[" + _index574 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".and[" + _index574 + "]",
                            expected: "Array<RuleSetConditionAbsolute>.o1",
                            value: elem
                        })) || "object" == typeof elem && null !== elem && false === Array.isArray(elem) && _vo227(elem, _path + ".and[" + _index574 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".and[" + _index574 + "]",
                            expected: "(Array<RuleSetConditionAbsolute>.o1 | RegExp | RuleSetLogicalConditionsAbsolute | string)",
                            value: elem
                        }) || _report(_exceptionable, {
                            path: _path + ".and[" + _index574 + "]",
                            expected: "(Array<RuleSetConditionAbsolute>.o1 | RegExp | RuleSetLogicalConditionsAbsolute | string)",
                            value: elem
                        }))).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".and",
                        expected: "(Array<RuleSetConditionAbsolute> | undefined)",
                        value: input.and
                    }),
                    (null !== input.not || _report(_exceptionable, {
                        path: _path + ".not",
                        expected: "(Array<RuleSetConditionAbsolute> | RegExp | RuleSetLogicalConditionsAbsolute | string | undefined)",
                        value: input.not
                    })) && (void 0 === input.not || "function" == typeof input.not || "string" == typeof input.not || input.not instanceof RegExp || Array.isArray(input.not) && input.not.map((elem, _index575)=>(null !== elem || _report(_exceptionable, {
                            path: _path + ".not[" + _index575 + "]",
                            expected: "(Array<RuleSetConditionAbsolute>.o1 | RegExp | RuleSetLogicalConditionsAbsolute | string)",
                            value: elem
                        })) && (void 0 !== elem || _report(_exceptionable, {
                            path: _path + ".not[" + _index575 + "]",
                            expected: "(Array<RuleSetConditionAbsolute>.o1 | RegExp | RuleSetLogicalConditionsAbsolute | string)",
                            value: elem
                        })) && ("function" == typeof elem || "string" == typeof elem || elem instanceof RegExp || Array.isArray(elem) && (_va2(elem, _path + ".not[" + _index575 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".not[" + _index575 + "]",
                            expected: "Array<RuleSetConditionAbsolute>.o1",
                            value: elem
                        })) || "object" == typeof elem && null !== elem && false === Array.isArray(elem) && _vo227(elem, _path + ".not[" + _index575 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".not[" + _index575 + "]",
                            expected: "(Array<RuleSetConditionAbsolute>.o1 | RegExp | RuleSetLogicalConditionsAbsolute | string)",
                            value: elem
                        }) || _report(_exceptionable, {
                            path: _path + ".not[" + _index575 + "]",
                            expected: "(Array<RuleSetConditionAbsolute>.o1 | RegExp | RuleSetLogicalConditionsAbsolute | string)",
                            value: elem
                        }))).every((flag)=>flag) || "object" == typeof input.not && null !== input.not && false === Array.isArray(input.not) && _vo227(input.not, _path + ".not", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".not",
                        expected: "(Array<RuleSetConditionAbsolute> | RegExp | RuleSetLogicalConditionsAbsolute | string | undefined)",
                        value: input.not
                    }) || _report(_exceptionable, {
                        path: _path + ".not",
                        expected: "(Array<RuleSetConditionAbsolute> | RegExp | RuleSetLogicalConditionsAbsolute | string | undefined)",
                        value: input.not
                    })),
                    void 0 === input.or || (Array.isArray(input.or) || _report(_exceptionable, {
                        path: _path + ".or",
                        expected: "(Array<RuleSetConditionAbsolute> | undefined)",
                        value: input.or
                    })) && input.or.map((elem, _index576)=>(null !== elem || _report(_exceptionable, {
                            path: _path + ".or[" + _index576 + "]",
                            expected: "(Array<RuleSetConditionAbsolute>.o1 | RegExp | RuleSetLogicalConditionsAbsolute | string)",
                            value: elem
                        })) && (void 0 !== elem || _report(_exceptionable, {
                            path: _path + ".or[" + _index576 + "]",
                            expected: "(Array<RuleSetConditionAbsolute>.o1 | RegExp | RuleSetLogicalConditionsAbsolute | string)",
                            value: elem
                        })) && ("function" == typeof elem || "string" == typeof elem || elem instanceof RegExp || Array.isArray(elem) && (_va2(elem, _path + ".or[" + _index576 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".or[" + _index576 + "]",
                            expected: "Array<RuleSetConditionAbsolute>.o1",
                            value: elem
                        })) || "object" == typeof elem && null !== elem && false === Array.isArray(elem) && _vo227(elem, _path + ".or[" + _index576 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".or[" + _index576 + "]",
                            expected: "(Array<RuleSetConditionAbsolute>.o1 | RegExp | RuleSetLogicalConditionsAbsolute | string)",
                            value: elem
                        }) || _report(_exceptionable, {
                            path: _path + ".or[" + _index576 + "]",
                            expected: "(Array<RuleSetConditionAbsolute>.o1 | RegExp | RuleSetLogicalConditionsAbsolute | string)",
                            value: elem
                        }))).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".or",
                        expected: "(Array<RuleSetConditionAbsolute> | undefined)",
                        value: input.or
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "and",
                            "not",
                            "or"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo228 = (input, _path, _exceptionable = true)=>[
                    false === _exceptionable || Object.keys(input).map((key)=>{
                        input[key];
                        return true;
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo229 = (input, _path, _exceptionable = true)=>[
                    false === _exceptionable || Object.keys(input).map((key)=>{
                        input[key];
                        return true;
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo230 = (input, _path, _exceptionable = true)=>[
                    false === _exceptionable || Object.keys(input).map((key)=>{
                        input[key];
                        return true;
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo231 = (input, _path, _exceptionable = true)=>[
                    (null !== input.alias || _report(_exceptionable, {
                        path: _path + ".alias",
                        expected: "(Array<__type>.o2 | __type.o58 | undefined)",
                        value: input.alias
                    })) && (void 0 === input.alias || Array.isArray(input.alias) && input.alias.map((elem, _index577)=>("object" == typeof elem && null !== elem || _report(_exceptionable, {
                            path: _path + ".alias[" + _index577 + "]",
                            expected: "__type.o57",
                            value: elem
                        })) && _vo232(elem, _path + ".alias[" + _index577 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".alias[" + _index577 + "]",
                            expected: "__type.o57",
                            value: elem
                        })).every((flag)=>flag) || "object" == typeof input.alias && null !== input.alias && false === Array.isArray(input.alias) && _vo233(input.alias, _path + ".alias", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".alias",
                        expected: "(Array<__type>.o2 | __type.o58 | undefined)",
                        value: input.alias
                    }) || _report(_exceptionable, {
                        path: _path + ".alias",
                        expected: "(Array<__type>.o2 | __type.o58 | undefined)",
                        value: input.alias
                    })),
                    void 0 === input.aliasFields || (Array.isArray(input.aliasFields) || _report(_exceptionable, {
                        path: _path + ".aliasFields",
                        expected: "(Array<string | string[]> | undefined)",
                        value: input.aliasFields
                    })) && input.aliasFields.map((elem, _index578)=>(null !== elem || _report(_exceptionable, {
                            path: _path + ".aliasFields[" + _index578 + "]",
                            expected: "(Array<string> | string)",
                            value: elem
                        })) && (void 0 !== elem || _report(_exceptionable, {
                            path: _path + ".aliasFields[" + _index578 + "]",
                            expected: "(Array<string> | string)",
                            value: elem
                        })) && ("string" == typeof elem || (Array.isArray(elem) || _report(_exceptionable, {
                            path: _path + ".aliasFields[" + _index578 + "]",
                            expected: "(Array<string> | string)",
                            value: elem
                        })) && elem.map((elem, _index579)=>"string" == typeof elem || _report(_exceptionable, {
                                path: _path + ".aliasFields[" + _index578 + "][" + _index579 + "]",
                                expected: "string",
                                value: elem
                            })).every((flag)=>flag) || _report(_exceptionable, {
                            path: _path + ".aliasFields[" + _index578 + "]",
                            expected: "(Array<string> | string)",
                            value: elem
                        }))).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".aliasFields",
                        expected: "(Array<string | string[]> | undefined)",
                        value: input.aliasFields
                    }),
                    void 0 === input.byDependency || ("object" == typeof input.byDependency && null !== input.byDependency && false === Array.isArray(input.byDependency) || _report(_exceptionable, {
                        path: _path + ".byDependency",
                        expected: "(__type.o59 | undefined)",
                        value: input.byDependency
                    })) && _vo234(input.byDependency, _path + ".byDependency", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".byDependency",
                        expected: "(__type.o59 | undefined)",
                        value: input.byDependency
                    }),
                    void 0 === input.cache || "boolean" == typeof input.cache || _report(_exceptionable, {
                        path: _path + ".cache",
                        expected: "(boolean | undefined)",
                        value: input.cache
                    }),
                    void 0 === input.cachePredicate || true,
                    void 0 === input.cacheWithContext || "boolean" == typeof input.cacheWithContext || _report(_exceptionable, {
                        path: _path + ".cacheWithContext",
                        expected: "(boolean | undefined)",
                        value: input.cacheWithContext
                    }),
                    void 0 === input.conditionNames || (Array.isArray(input.conditionNames) || _report(_exceptionable, {
                        path: _path + ".conditionNames",
                        expected: "(Array<string> | undefined)",
                        value: input.conditionNames
                    })) && input.conditionNames.map((elem, _index580)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".conditionNames[" + _index580 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".conditionNames",
                        expected: "(Array<string> | undefined)",
                        value: input.conditionNames
                    }),
                    void 0 === input.descriptionFiles || (Array.isArray(input.descriptionFiles) || _report(_exceptionable, {
                        path: _path + ".descriptionFiles",
                        expected: "(Array<string> | undefined)",
                        value: input.descriptionFiles
                    })) && input.descriptionFiles.map((elem, _index581)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".descriptionFiles[" + _index581 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".descriptionFiles",
                        expected: "(Array<string> | undefined)",
                        value: input.descriptionFiles
                    }),
                    void 0 === input.enforceExtension || "boolean" == typeof input.enforceExtension || _report(_exceptionable, {
                        path: _path + ".enforceExtension",
                        expected: "(boolean | undefined)",
                        value: input.enforceExtension
                    }),
                    void 0 === input.exportsFields || (Array.isArray(input.exportsFields) || _report(_exceptionable, {
                        path: _path + ".exportsFields",
                        expected: "(Array<string> | undefined)",
                        value: input.exportsFields
                    })) && input.exportsFields.map((elem, _index582)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".exportsFields[" + _index582 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".exportsFields",
                        expected: "(Array<string> | undefined)",
                        value: input.exportsFields
                    }),
                    void 0 === input.extensionAlias || ("object" == typeof input.extensionAlias && null !== input.extensionAlias && false === Array.isArray(input.extensionAlias) || _report(_exceptionable, {
                        path: _path + ".extensionAlias",
                        expected: "(__type.o60 | undefined)",
                        value: input.extensionAlias
                    })) && _vo235(input.extensionAlias, _path + ".extensionAlias", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".extensionAlias",
                        expected: "(__type.o60 | undefined)",
                        value: input.extensionAlias
                    }),
                    void 0 === input.extensions || (Array.isArray(input.extensions) || _report(_exceptionable, {
                        path: _path + ".extensions",
                        expected: "(Array<string> | undefined)",
                        value: input.extensions
                    })) && input.extensions.map((elem, _index583)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".extensions[" + _index583 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".extensions",
                        expected: "(Array<string> | undefined)",
                        value: input.extensions
                    }),
                    (null !== input.fallback || _report(_exceptionable, {
                        path: _path + ".fallback",
                        expected: "(Array<__type>.o3 | __type.o62 | undefined)",
                        value: input.fallback
                    })) && (void 0 === input.fallback || Array.isArray(input.fallback) && input.fallback.map((elem, _index584)=>("object" == typeof elem && null !== elem || _report(_exceptionable, {
                            path: _path + ".fallback[" + _index584 + "]",
                            expected: "__type.o61",
                            value: elem
                        })) && _vo236(elem, _path + ".fallback[" + _index584 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".fallback[" + _index584 + "]",
                            expected: "__type.o61",
                            value: elem
                        })).every((flag)=>flag) || "object" == typeof input.fallback && null !== input.fallback && false === Array.isArray(input.fallback) && _vo237(input.fallback, _path + ".fallback", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".fallback",
                        expected: "(Array<__type>.o3 | __type.o62 | undefined)",
                        value: input.fallback
                    }) || _report(_exceptionable, {
                        path: _path + ".fallback",
                        expected: "(Array<__type>.o3 | __type.o62 | undefined)",
                        value: input.fallback
                    })),
                    void 0 === input.fileSystem || ("object" == typeof input.fileSystem && null !== input.fileSystem || _report(_exceptionable, {
                        path: _path + ".fileSystem",
                        expected: "(InputFileSystem | undefined)",
                        value: input.fileSystem
                    })) && _vo238(input.fileSystem, _path + ".fileSystem", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".fileSystem",
                        expected: "(InputFileSystem | undefined)",
                        value: input.fileSystem
                    }),
                    void 0 === input.fullySpecified || "boolean" == typeof input.fullySpecified || _report(_exceptionable, {
                        path: _path + ".fullySpecified",
                        expected: "(boolean | undefined)",
                        value: input.fullySpecified
                    }),
                    void 0 === input.importsFields || (Array.isArray(input.importsFields) || _report(_exceptionable, {
                        path: _path + ".importsFields",
                        expected: "(Array<string> | undefined)",
                        value: input.importsFields
                    })) && input.importsFields.map((elem, _index585)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".importsFields[" + _index585 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".importsFields",
                        expected: "(Array<string> | undefined)",
                        value: input.importsFields
                    }),
                    void 0 === input.mainFields || (Array.isArray(input.mainFields) || _report(_exceptionable, {
                        path: _path + ".mainFields",
                        expected: "(Array<string | string[]> | undefined)",
                        value: input.mainFields
                    })) && input.mainFields.map((elem, _index586)=>(null !== elem || _report(_exceptionable, {
                            path: _path + ".mainFields[" + _index586 + "]",
                            expected: "(Array<string> | string)",
                            value: elem
                        })) && (void 0 !== elem || _report(_exceptionable, {
                            path: _path + ".mainFields[" + _index586 + "]",
                            expected: "(Array<string> | string)",
                            value: elem
                        })) && ("string" == typeof elem || (Array.isArray(elem) || _report(_exceptionable, {
                            path: _path + ".mainFields[" + _index586 + "]",
                            expected: "(Array<string> | string)",
                            value: elem
                        })) && elem.map((elem, _index587)=>"string" == typeof elem || _report(_exceptionable, {
                                path: _path + ".mainFields[" + _index586 + "][" + _index587 + "]",
                                expected: "string",
                                value: elem
                            })).every((flag)=>flag) || _report(_exceptionable, {
                            path: _path + ".mainFields[" + _index586 + "]",
                            expected: "(Array<string> | string)",
                            value: elem
                        }))).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".mainFields",
                        expected: "(Array<string | string[]> | undefined)",
                        value: input.mainFields
                    }),
                    void 0 === input.mainFiles || (Array.isArray(input.mainFiles) || _report(_exceptionable, {
                        path: _path + ".mainFiles",
                        expected: "(Array<string> | undefined)",
                        value: input.mainFiles
                    })) && input.mainFiles.map((elem, _index588)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".mainFiles[" + _index588 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".mainFiles",
                        expected: "(Array<string> | undefined)",
                        value: input.mainFiles
                    }),
                    void 0 === input.modules || (Array.isArray(input.modules) || _report(_exceptionable, {
                        path: _path + ".modules",
                        expected: "(Array<string> | undefined)",
                        value: input.modules
                    })) && input.modules.map((elem, _index589)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".modules[" + _index589 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".modules",
                        expected: "(Array<string> | undefined)",
                        value: input.modules
                    }),
                    void 0 === input.plugins || (Array.isArray(input.plugins) || _report(_exceptionable, {
                        path: _path + ".plugins",
                        expected: "(Array<false | \"\" | 0 | \"...\" | { [index: string]: any; apply: (arg0: Resolver) => void; } | ((this: Resolver, arg1: Resolver) => void) | null | undefined> | undefined)",
                        value: input.plugins
                    })) && input.plugins.map((elem, _index590)=>null == elem || "function" == typeof elem || false === elem || "" === elem || "..." === elem || 0 === elem || ("object" == typeof elem && null !== elem || _report(_exceptionable, {
                            path: _path + ".plugins[" + _index590 + "]",
                            expected: "(\"\" | \"...\" | 0 | __type.o63 | false | null | undefined)",
                            value: elem
                        })) && _vo251(elem, _path + ".plugins[" + _index590 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".plugins[" + _index590 + "]",
                            expected: "(\"\" | \"...\" | 0 | __type.o63 | false | null | undefined)",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".plugins",
                        expected: "(Array<false | \"\" | 0 | \"...\" | { [index: string]: any; apply: (arg0: Resolver) => void; } | ((this: Resolver, arg1: Resolver) => void) | null | undefined> | undefined)",
                        value: input.plugins
                    }),
                    void 0 === input.preferAbsolute || "boolean" == typeof input.preferAbsolute || _report(_exceptionable, {
                        path: _path + ".preferAbsolute",
                        expected: "(boolean | undefined)",
                        value: input.preferAbsolute
                    }),
                    void 0 === input.preferRelative || "boolean" == typeof input.preferRelative || _report(_exceptionable, {
                        path: _path + ".preferRelative",
                        expected: "(boolean | undefined)",
                        value: input.preferRelative
                    }),
                    void 0 === input.resolver || ("object" == typeof input.resolver && null !== input.resolver || _report(_exceptionable, {
                        path: _path + ".resolver",
                        expected: "(Resolver | undefined)",
                        value: input.resolver
                    })) && _vo252(input.resolver, _path + ".resolver", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".resolver",
                        expected: "(Resolver | undefined)",
                        value: input.resolver
                    }),
                    void 0 === input.restrictions || (Array.isArray(input.restrictions) || _report(_exceptionable, {
                        path: _path + ".restrictions",
                        expected: "(Array<string | RegExp> | undefined)",
                        value: input.restrictions
                    })) && input.restrictions.map((elem, _index591)=>(null !== elem || _report(_exceptionable, {
                            path: _path + ".restrictions[" + _index591 + "]",
                            expected: "(RegExp | string)",
                            value: elem
                        })) && (void 0 !== elem || _report(_exceptionable, {
                            path: _path + ".restrictions[" + _index591 + "]",
                            expected: "(RegExp | string)",
                            value: elem
                        })) && ("string" == typeof elem || elem instanceof RegExp || _report(_exceptionable, {
                            path: _path + ".restrictions[" + _index591 + "]",
                            expected: "(RegExp | string)",
                            value: elem
                        }))).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".restrictions",
                        expected: "(Array<string | RegExp> | undefined)",
                        value: input.restrictions
                    }),
                    void 0 === input.roots || (Array.isArray(input.roots) || _report(_exceptionable, {
                        path: _path + ".roots",
                        expected: "(Array<string> | undefined)",
                        value: input.roots
                    })) && input.roots.map((elem, _index592)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".roots[" + _index592 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".roots",
                        expected: "(Array<string> | undefined)",
                        value: input.roots
                    }),
                    void 0 === input.symlinks || "boolean" == typeof input.symlinks || _report(_exceptionable, {
                        path: _path + ".symlinks",
                        expected: "(boolean | undefined)",
                        value: input.symlinks
                    }),
                    (null !== input.unsafeCache || _report(_exceptionable, {
                        path: _path + ".unsafeCache",
                        expected: "(__type.o68 | boolean | undefined)",
                        value: input.unsafeCache
                    })) && (void 0 === input.unsafeCache || "boolean" == typeof input.unsafeCache || ("object" == typeof input.unsafeCache && null !== input.unsafeCache && false === Array.isArray(input.unsafeCache) || _report(_exceptionable, {
                        path: _path + ".unsafeCache",
                        expected: "(__type.o68 | boolean | undefined)",
                        value: input.unsafeCache
                    })) && _vo279(input.unsafeCache, _path + ".unsafeCache", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".unsafeCache",
                        expected: "(__type.o68 | boolean | undefined)",
                        value: input.unsafeCache
                    })),
                    void 0 === input.useSyncFileSystemCalls || "boolean" == typeof input.useSyncFileSystemCalls || _report(_exceptionable, {
                        path: _path + ".useSyncFileSystemCalls",
                        expected: "(boolean | undefined)",
                        value: input.useSyncFileSystemCalls
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "alias",
                            "aliasFields",
                            "byDependency",
                            "cache",
                            "cachePredicate",
                            "cacheWithContext",
                            "conditionNames",
                            "descriptionFiles",
                            "enforceExtension",
                            "exportsFields",
                            "extensionAlias",
                            "extensions",
                            "fallback",
                            "fileSystem",
                            "fullySpecified",
                            "importsFields",
                            "mainFields",
                            "mainFiles",
                            "modules",
                            "plugins",
                            "preferAbsolute",
                            "preferRelative",
                            "resolver",
                            "restrictions",
                            "roots",
                            "symlinks",
                            "unsafeCache",
                            "useSyncFileSystemCalls"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo232 = (input, _path, _exceptionable = true)=>[
                    (null !== input.alias || _report(_exceptionable, {
                        path: _path + ".alias",
                        expected: "(Array<string> | false | string)",
                        value: input.alias
                    })) && (void 0 !== input.alias || _report(_exceptionable, {
                        path: _path + ".alias",
                        expected: "(Array<string> | false | string)",
                        value: input.alias
                    })) && (false === input.alias || "string" == typeof input.alias || (Array.isArray(input.alias) || _report(_exceptionable, {
                        path: _path + ".alias",
                        expected: "(Array<string> | false | string)",
                        value: input.alias
                    })) && input.alias.map((elem, _index593)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".alias[" + _index593 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".alias",
                        expected: "(Array<string> | false | string)",
                        value: input.alias
                    })),
                    "string" == typeof input.name || _report(_exceptionable, {
                        path: _path + ".name",
                        expected: "string",
                        value: input.name
                    }),
                    void 0 === input.onlyModule || "boolean" == typeof input.onlyModule || _report(_exceptionable, {
                        path: _path + ".onlyModule",
                        expected: "(boolean | undefined)",
                        value: input.onlyModule
                    }),
                    2 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "alias",
                            "name",
                            "onlyModule"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo233 = (input, _path, _exceptionable = true)=>[
                    false === _exceptionable || Object.keys(input).map((key)=>{
                        const value = input[key];
                        if (void 0 === value) return true;
                        return (null !== value || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(Array<string> | false | string)",
                            value: value
                        })) && (void 0 !== value || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(Array<string> | false | string)",
                            value: value
                        })) && (false === value || "string" == typeof value || (Array.isArray(value) || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(Array<string> | false | string)",
                            value: value
                        })) && value.map((elem, _index594)=>"string" == typeof elem || _report(_exceptionable, {
                                path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key) + "[" + _index594 + "]",
                                expected: "string",
                                value: elem
                            })).every((flag)=>flag) || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(Array<string> | false | string)",
                            value: value
                        }));
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo234 = (input, _path, _exceptionable = true)=>[
                    false === _exceptionable || Object.keys(input).map((key)=>{
                        const value = input[key];
                        if (void 0 === value) return true;
                        return ("object" == typeof value && null !== value && false === Array.isArray(value) || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "ResolveOptions.o1",
                            value: value
                        })) && _vo231(value, _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key), _exceptionable) || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "ResolveOptions.o1",
                            value: value
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo235 = (input, _path, _exceptionable = true)=>[
                    false === _exceptionable || Object.keys(input).map((key)=>{
                        const value = input[key];
                        if (void 0 === value) return true;
                        return (null !== value || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(Array<string> | string)",
                            value: value
                        })) && (void 0 !== value || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(Array<string> | string)",
                            value: value
                        })) && ("string" == typeof value || (Array.isArray(value) || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(Array<string> | string)",
                            value: value
                        })) && value.map((elem, _index595)=>"string" == typeof elem || _report(_exceptionable, {
                                path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key) + "[" + _index595 + "]",
                                expected: "string",
                                value: elem
                            })).every((flag)=>flag) || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(Array<string> | string)",
                            value: value
                        }));
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo236 = (input, _path, _exceptionable = true)=>[
                    (null !== input.alias || _report(_exceptionable, {
                        path: _path + ".alias",
                        expected: "(Array<string> | false | string)",
                        value: input.alias
                    })) && (void 0 !== input.alias || _report(_exceptionable, {
                        path: _path + ".alias",
                        expected: "(Array<string> | false | string)",
                        value: input.alias
                    })) && (false === input.alias || "string" == typeof input.alias || (Array.isArray(input.alias) || _report(_exceptionable, {
                        path: _path + ".alias",
                        expected: "(Array<string> | false | string)",
                        value: input.alias
                    })) && input.alias.map((elem, _index596)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".alias[" + _index596 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".alias",
                        expected: "(Array<string> | false | string)",
                        value: input.alias
                    })),
                    "string" == typeof input.name || _report(_exceptionable, {
                        path: _path + ".name",
                        expected: "string",
                        value: input.name
                    }),
                    void 0 === input.onlyModule || "boolean" == typeof input.onlyModule || _report(_exceptionable, {
                        path: _path + ".onlyModule",
                        expected: "(boolean | undefined)",
                        value: input.onlyModule
                    }),
                    2 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "alias",
                            "name",
                            "onlyModule"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo237 = (input, _path, _exceptionable = true)=>[
                    false === _exceptionable || Object.keys(input).map((key)=>{
                        const value = input[key];
                        if (void 0 === value) return true;
                        return (null !== value || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(Array<string> | false | string)",
                            value: value
                        })) && (void 0 !== value || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(Array<string> | false | string)",
                            value: value
                        })) && (false === value || "string" == typeof value || (Array.isArray(value) || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(Array<string> | false | string)",
                            value: value
                        })) && value.map((elem, _index597)=>"string" == typeof elem || _report(_exceptionable, {
                                path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key) + "[" + _index597 + "]",
                                expected: "string",
                                value: elem
                            })).every((flag)=>flag) || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(Array<string> | false | string)",
                            value: value
                        }));
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo238 = (input, _path, _exceptionable = true)=>[
                    ("object" == typeof input.readFile && null !== input.readFile || _report(_exceptionable, {
                        path: _path + ".readFile",
                        expected: "ReadFileFs",
                        value: input.readFile
                    })) && _vo239(input.readFile, _path + ".readFile", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".readFile",
                        expected: "ReadFileFs",
                        value: input.readFile
                    }),
                    void 0 === input.readFileSync || ("object" == typeof input.readFileSync && null !== input.readFileSync || _report(_exceptionable, {
                        path: _path + ".readFileSync",
                        expected: "(ReadFileSync | undefined)",
                        value: input.readFileSync
                    })) && _vo240(input.readFileSync, _path + ".readFileSync", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".readFileSync",
                        expected: "(ReadFileSync | undefined)",
                        value: input.readFileSync
                    }),
                    ("object" == typeof input.readlink && null !== input.readlink || _report(_exceptionable, {
                        path: _path + ".readlink",
                        expected: "ReadlinkFs",
                        value: input.readlink
                    })) && _vo241(input.readlink, _path + ".readlink", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".readlink",
                        expected: "ReadlinkFs",
                        value: input.readlink
                    }),
                    void 0 === input.readlinkSync || ("object" == typeof input.readlinkSync && null !== input.readlinkSync || _report(_exceptionable, {
                        path: _path + ".readlinkSync",
                        expected: "(ReadlinkSync | undefined)",
                        value: input.readlinkSync
                    })) && _vo242(input.readlinkSync, _path + ".readlinkSync", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".readlinkSync",
                        expected: "(ReadlinkSync | undefined)",
                        value: input.readlinkSync
                    }),
                    ("object" == typeof input.readdir && null !== input.readdir || _report(_exceptionable, {
                        path: _path + ".readdir",
                        expected: "ReaddirFs",
                        value: input.readdir
                    })) && _vo243(input.readdir, _path + ".readdir", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".readdir",
                        expected: "ReaddirFs",
                        value: input.readdir
                    }),
                    void 0 === input.readdirSync || ("object" == typeof input.readdirSync && null !== input.readdirSync || _report(_exceptionable, {
                        path: _path + ".readdirSync",
                        expected: "(ReaddirSync | undefined)",
                        value: input.readdirSync
                    })) && _vo244(input.readdirSync, _path + ".readdirSync", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".readdirSync",
                        expected: "(ReaddirSync | undefined)",
                        value: input.readdirSync
                    }),
                    ("object" == typeof input.stat && null !== input.stat || _report(_exceptionable, {
                        path: _path + ".stat",
                        expected: "StatFs",
                        value: input.stat
                    })) && _vo245(input.stat, _path + ".stat", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".stat",
                        expected: "StatFs",
                        value: input.stat
                    }),
                    void 0 === input.statSync || ("object" == typeof input.statSync && null !== input.statSync || _report(_exceptionable, {
                        path: _path + ".statSync",
                        expected: "(StatSync | undefined)",
                        value: input.statSync
                    })) && _vo246(input.statSync, _path + ".statSync", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".statSync",
                        expected: "(StatSync | undefined)",
                        value: input.statSync
                    }),
                    void 0 === input.lstat || ("object" == typeof input.lstat && null !== input.lstat || _report(_exceptionable, {
                        path: _path + ".lstat",
                        expected: "(LStatFs | undefined)",
                        value: input.lstat
                    })) && _vo247(input.lstat, _path + ".lstat", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".lstat",
                        expected: "(LStatFs | undefined)",
                        value: input.lstat
                    }),
                    void 0 === input.lstatSync || ("object" == typeof input.lstatSync && null !== input.lstatSync || _report(_exceptionable, {
                        path: _path + ".lstatSync",
                        expected: "(LStatSync | undefined)",
                        value: input.lstatSync
                    })) && _vo248(input.lstatSync, _path + ".lstatSync", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".lstatSync",
                        expected: "(LStatSync | undefined)",
                        value: input.lstatSync
                    }),
                    void 0 === input.realpath || ("object" == typeof input.realpath && null !== input.realpath || _report(_exceptionable, {
                        path: _path + ".realpath",
                        expected: "(RealPathFs | undefined)",
                        value: input.realpath
                    })) && _vo249(input.realpath, _path + ".realpath", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".realpath",
                        expected: "(RealPathFs | undefined)",
                        value: input.realpath
                    }),
                    void 0 === input.realpathSync || ("object" == typeof input.realpathSync && null !== input.realpathSync || _report(_exceptionable, {
                        path: _path + ".realpathSync",
                        expected: "(RealPathSync | undefined)",
                        value: input.realpathSync
                    })) && _vo250(input.realpathSync, _path + ".realpathSync", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".realpathSync",
                        expected: "(RealPathSync | undefined)",
                        value: input.realpathSync
                    }),
                    void 0 === input.readJson || true,
                    void 0 === input.readJsonSync || true,
                    void 0 === input.purge || true,
                    void 0 === input.join || true,
                    void 0 === input.relative || true,
                    void 0 === input.dirname || true,
                    4 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "readFile",
                            "readFileSync",
                            "readlink",
                            "readlinkSync",
                            "readdir",
                            "readdirSync",
                            "stat",
                            "statSync",
                            "lstat",
                            "lstatSync",
                            "realpath",
                            "realpathSync",
                            "readJson",
                            "readJsonSync",
                            "purge",
                            "join",
                            "relative",
                            "dirname"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo239 = (input, _path, _exceptionable = true)=>[
                    true,
                    "number" == typeof input.length || _report(_exceptionable, {
                        path: _path + ".length",
                        expected: "number",
                        value: input.length
                    }),
                    true,
                    ("object" == typeof input.caller && null !== input.caller || _report(_exceptionable, {
                        path: _path + ".caller",
                        expected: "Function",
                        value: input.caller
                    })) && _vo33(input.caller, _path + ".caller", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".caller",
                        expected: "Function",
                        value: input.caller
                    }),
                    "string" == typeof input.name || _report(_exceptionable, {
                        path: _path + ".name",
                        expected: "string",
                        value: input.name
                    }),
                    5 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "prototype",
                            "length",
                            "arguments",
                            "caller",
                            "name"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo240 = (input, _path, _exceptionable = true)=>[
                    true,
                    "number" == typeof input.length || _report(_exceptionable, {
                        path: _path + ".length",
                        expected: "number",
                        value: input.length
                    }),
                    true,
                    ("object" == typeof input.caller && null !== input.caller || _report(_exceptionable, {
                        path: _path + ".caller",
                        expected: "Function",
                        value: input.caller
                    })) && _vo33(input.caller, _path + ".caller", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".caller",
                        expected: "Function",
                        value: input.caller
                    }),
                    "string" == typeof input.name || _report(_exceptionable, {
                        path: _path + ".name",
                        expected: "string",
                        value: input.name
                    }),
                    5 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "prototype",
                            "length",
                            "arguments",
                            "caller",
                            "name"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo241 = (input, _path, _exceptionable = true)=>[
                    true,
                    "number" == typeof input.length || _report(_exceptionable, {
                        path: _path + ".length",
                        expected: "number",
                        value: input.length
                    }),
                    true,
                    ("object" == typeof input.caller && null !== input.caller || _report(_exceptionable, {
                        path: _path + ".caller",
                        expected: "Function",
                        value: input.caller
                    })) && _vo33(input.caller, _path + ".caller", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".caller",
                        expected: "Function",
                        value: input.caller
                    }),
                    "string" == typeof input.name || _report(_exceptionable, {
                        path: _path + ".name",
                        expected: "string",
                        value: input.name
                    }),
                    5 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "prototype",
                            "length",
                            "arguments",
                            "caller",
                            "name"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo242 = (input, _path, _exceptionable = true)=>[
                    true,
                    "number" == typeof input.length || _report(_exceptionable, {
                        path: _path + ".length",
                        expected: "number",
                        value: input.length
                    }),
                    true,
                    ("object" == typeof input.caller && null !== input.caller || _report(_exceptionable, {
                        path: _path + ".caller",
                        expected: "Function",
                        value: input.caller
                    })) && _vo33(input.caller, _path + ".caller", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".caller",
                        expected: "Function",
                        value: input.caller
                    }),
                    "string" == typeof input.name || _report(_exceptionable, {
                        path: _path + ".name",
                        expected: "string",
                        value: input.name
                    }),
                    5 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "prototype",
                            "length",
                            "arguments",
                            "caller",
                            "name"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo243 = (input, _path, _exceptionable = true)=>[
                    true,
                    "number" == typeof input.length || _report(_exceptionable, {
                        path: _path + ".length",
                        expected: "number",
                        value: input.length
                    }),
                    true,
                    ("object" == typeof input.caller && null !== input.caller || _report(_exceptionable, {
                        path: _path + ".caller",
                        expected: "Function",
                        value: input.caller
                    })) && _vo33(input.caller, _path + ".caller", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".caller",
                        expected: "Function",
                        value: input.caller
                    }),
                    "string" == typeof input.name || _report(_exceptionable, {
                        path: _path + ".name",
                        expected: "string",
                        value: input.name
                    }),
                    5 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "prototype",
                            "length",
                            "arguments",
                            "caller",
                            "name"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo244 = (input, _path, _exceptionable = true)=>[
                    true,
                    "number" == typeof input.length || _report(_exceptionable, {
                        path: _path + ".length",
                        expected: "number",
                        value: input.length
                    }),
                    true,
                    ("object" == typeof input.caller && null !== input.caller || _report(_exceptionable, {
                        path: _path + ".caller",
                        expected: "Function",
                        value: input.caller
                    })) && _vo33(input.caller, _path + ".caller", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".caller",
                        expected: "Function",
                        value: input.caller
                    }),
                    "string" == typeof input.name || _report(_exceptionable, {
                        path: _path + ".name",
                        expected: "string",
                        value: input.name
                    }),
                    5 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "prototype",
                            "length",
                            "arguments",
                            "caller",
                            "name"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo245 = (input, _path, _exceptionable = true)=>[
                    true,
                    "number" == typeof input.length || _report(_exceptionable, {
                        path: _path + ".length",
                        expected: "number",
                        value: input.length
                    }),
                    true,
                    ("object" == typeof input.caller && null !== input.caller || _report(_exceptionable, {
                        path: _path + ".caller",
                        expected: "Function",
                        value: input.caller
                    })) && _vo33(input.caller, _path + ".caller", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".caller",
                        expected: "Function",
                        value: input.caller
                    }),
                    "string" == typeof input.name || _report(_exceptionable, {
                        path: _path + ".name",
                        expected: "string",
                        value: input.name
                    }),
                    5 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "prototype",
                            "length",
                            "arguments",
                            "caller",
                            "name"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo246 = (input, _path, _exceptionable = true)=>[
                    true,
                    "number" == typeof input.length || _report(_exceptionable, {
                        path: _path + ".length",
                        expected: "number",
                        value: input.length
                    }),
                    true,
                    ("object" == typeof input.caller && null !== input.caller || _report(_exceptionable, {
                        path: _path + ".caller",
                        expected: "Function",
                        value: input.caller
                    })) && _vo33(input.caller, _path + ".caller", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".caller",
                        expected: "Function",
                        value: input.caller
                    }),
                    "string" == typeof input.name || _report(_exceptionable, {
                        path: _path + ".name",
                        expected: "string",
                        value: input.name
                    }),
                    5 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "prototype",
                            "length",
                            "arguments",
                            "caller",
                            "name"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo247 = (input, _path, _exceptionable = true)=>[
                    true,
                    "number" == typeof input.length || _report(_exceptionable, {
                        path: _path + ".length",
                        expected: "number",
                        value: input.length
                    }),
                    true,
                    ("object" == typeof input.caller && null !== input.caller || _report(_exceptionable, {
                        path: _path + ".caller",
                        expected: "Function",
                        value: input.caller
                    })) && _vo33(input.caller, _path + ".caller", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".caller",
                        expected: "Function",
                        value: input.caller
                    }),
                    "string" == typeof input.name || _report(_exceptionable, {
                        path: _path + ".name",
                        expected: "string",
                        value: input.name
                    }),
                    5 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "prototype",
                            "length",
                            "arguments",
                            "caller",
                            "name"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo248 = (input, _path, _exceptionable = true)=>[
                    true,
                    "number" == typeof input.length || _report(_exceptionable, {
                        path: _path + ".length",
                        expected: "number",
                        value: input.length
                    }),
                    true,
                    ("object" == typeof input.caller && null !== input.caller || _report(_exceptionable, {
                        path: _path + ".caller",
                        expected: "Function",
                        value: input.caller
                    })) && _vo33(input.caller, _path + ".caller", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".caller",
                        expected: "Function",
                        value: input.caller
                    }),
                    "string" == typeof input.name || _report(_exceptionable, {
                        path: _path + ".name",
                        expected: "string",
                        value: input.name
                    }),
                    5 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "prototype",
                            "length",
                            "arguments",
                            "caller",
                            "name"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo249 = (input, _path, _exceptionable = true)=>[
                    true,
                    "number" == typeof input.length || _report(_exceptionable, {
                        path: _path + ".length",
                        expected: "number",
                        value: input.length
                    }),
                    true,
                    ("object" == typeof input.caller && null !== input.caller || _report(_exceptionable, {
                        path: _path + ".caller",
                        expected: "Function",
                        value: input.caller
                    })) && _vo33(input.caller, _path + ".caller", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".caller",
                        expected: "Function",
                        value: input.caller
                    }),
                    "string" == typeof input.name || _report(_exceptionable, {
                        path: _path + ".name",
                        expected: "string",
                        value: input.name
                    }),
                    5 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "prototype",
                            "length",
                            "arguments",
                            "caller",
                            "name"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo250 = (input, _path, _exceptionable = true)=>[
                    true,
                    "number" == typeof input.length || _report(_exceptionable, {
                        path: _path + ".length",
                        expected: "number",
                        value: input.length
                    }),
                    true,
                    ("object" == typeof input.caller && null !== input.caller || _report(_exceptionable, {
                        path: _path + ".caller",
                        expected: "Function",
                        value: input.caller
                    })) && _vo33(input.caller, _path + ".caller", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".caller",
                        expected: "Function",
                        value: input.caller
                    }),
                    "string" == typeof input.name || _report(_exceptionable, {
                        path: _path + ".name",
                        expected: "string",
                        value: input.name
                    }),
                    5 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "prototype",
                            "length",
                            "arguments",
                            "caller",
                            "name"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo251 = (input, _path, _exceptionable = true)=>[
                    true,
                    false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "apply"
                        ].some((prop)=>key === prop)) return true;
                        input[key];
                        return true;
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo252 = (input, _path, _exceptionable = true)=>[
                    ("object" == typeof input.fileSystem && null !== input.fileSystem || _report(_exceptionable, {
                        path: _path + ".fileSystem",
                        expected: "FileSystem",
                        value: input.fileSystem
                    })) && _vo253(input.fileSystem, _path + ".fileSystem", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".fileSystem",
                        expected: "FileSystem",
                        value: input.fileSystem
                    }),
                    ("object" == typeof input.options && null !== input.options || _report(_exceptionable, {
                        path: _path + ".options",
                        expected: "ResolveOptionsResolverFactoryObject1",
                        value: input.options
                    })) && _vo260(input.options, _path + ".options", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".options",
                        expected: "ResolveOptionsResolverFactoryObject1",
                        value: input.options
                    }),
                    ("object" == typeof input.hooks && null !== input.hooks || _report(_exceptionable, {
                        path: _path + ".hooks",
                        expected: "KnownHooks",
                        value: input.hooks
                    })) && _vo269(input.hooks, _path + ".hooks", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".hooks",
                        expected: "KnownHooks",
                        value: input.hooks
                    }),
                    3 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "fileSystem",
                            "options",
                            "hooks"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo253 = (input, _path, _exceptionable = true)=>[
                    ("object" == typeof input.readFile && null !== input.readFile || _report(_exceptionable, {
                        path: _path + ".readFile",
                        expected: "ReadFileTypes",
                        value: input.readFile
                    })) && _vo254(input.readFile, _path + ".readFile", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".readFile",
                        expected: "ReadFileTypes",
                        value: input.readFile
                    }),
                    ("object" == typeof input.readdir && null !== input.readdir || _report(_exceptionable, {
                        path: _path + ".readdir",
                        expected: "ReaddirTypes",
                        value: input.readdir
                    })) && _vo255(input.readdir, _path + ".readdir", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".readdir",
                        expected: "ReaddirTypes",
                        value: input.readdir
                    }),
                    void 0 === input.readJson || true,
                    ("object" == typeof input.readlink && null !== input.readlink || _report(_exceptionable, {
                        path: _path + ".readlink",
                        expected: "ReadlinkTypes",
                        value: input.readlink
                    })) && _vo256(input.readlink, _path + ".readlink", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".readlink",
                        expected: "ReadlinkTypes",
                        value: input.readlink
                    }),
                    void 0 === input.lstat || ("object" == typeof input.lstat && null !== input.lstat || _report(_exceptionable, {
                        path: _path + ".lstat",
                        expected: "(LStatTypes | undefined)",
                        value: input.lstat
                    })) && _vo257(input.lstat, _path + ".lstat", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".lstat",
                        expected: "(LStatTypes | undefined)",
                        value: input.lstat
                    }),
                    ("object" == typeof input.stat && null !== input.stat || _report(_exceptionable, {
                        path: _path + ".stat",
                        expected: "StatTypes",
                        value: input.stat
                    })) && _vo258(input.stat, _path + ".stat", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".stat",
                        expected: "StatTypes",
                        value: input.stat
                    }),
                    void 0 === input.realpath || ("object" == typeof input.realpath && null !== input.realpath || _report(_exceptionable, {
                        path: _path + ".realpath",
                        expected: "(RealPathTypes | undefined)",
                        value: input.realpath
                    })) && _vo259(input.realpath, _path + ".realpath", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".realpath",
                        expected: "(RealPathTypes | undefined)",
                        value: input.realpath
                    }),
                    4 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "readFile",
                            "readdir",
                            "readJson",
                            "readlink",
                            "lstat",
                            "stat",
                            "realpath"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo254 = (input, _path, _exceptionable = true)=>[
                    true,
                    "number" == typeof input.length || _report(_exceptionable, {
                        path: _path + ".length",
                        expected: "number",
                        value: input.length
                    }),
                    true,
                    ("object" == typeof input.caller && null !== input.caller || _report(_exceptionable, {
                        path: _path + ".caller",
                        expected: "Function",
                        value: input.caller
                    })) && _vo33(input.caller, _path + ".caller", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".caller",
                        expected: "Function",
                        value: input.caller
                    }),
                    "string" == typeof input.name || _report(_exceptionable, {
                        path: _path + ".name",
                        expected: "string",
                        value: input.name
                    }),
                    5 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "prototype",
                            "length",
                            "arguments",
                            "caller",
                            "name"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo255 = (input, _path, _exceptionable = true)=>[
                    true,
                    "number" == typeof input.length || _report(_exceptionable, {
                        path: _path + ".length",
                        expected: "number",
                        value: input.length
                    }),
                    true,
                    ("object" == typeof input.caller && null !== input.caller || _report(_exceptionable, {
                        path: _path + ".caller",
                        expected: "Function",
                        value: input.caller
                    })) && _vo33(input.caller, _path + ".caller", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".caller",
                        expected: "Function",
                        value: input.caller
                    }),
                    "string" == typeof input.name || _report(_exceptionable, {
                        path: _path + ".name",
                        expected: "string",
                        value: input.name
                    }),
                    5 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "prototype",
                            "length",
                            "arguments",
                            "caller",
                            "name"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo256 = (input, _path, _exceptionable = true)=>[
                    true,
                    "number" == typeof input.length || _report(_exceptionable, {
                        path: _path + ".length",
                        expected: "number",
                        value: input.length
                    }),
                    true,
                    ("object" == typeof input.caller && null !== input.caller || _report(_exceptionable, {
                        path: _path + ".caller",
                        expected: "Function",
                        value: input.caller
                    })) && _vo33(input.caller, _path + ".caller", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".caller",
                        expected: "Function",
                        value: input.caller
                    }),
                    "string" == typeof input.name || _report(_exceptionable, {
                        path: _path + ".name",
                        expected: "string",
                        value: input.name
                    }),
                    5 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "prototype",
                            "length",
                            "arguments",
                            "caller",
                            "name"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo257 = (input, _path, _exceptionable = true)=>[
                    true,
                    "number" == typeof input.length || _report(_exceptionable, {
                        path: _path + ".length",
                        expected: "number",
                        value: input.length
                    }),
                    true,
                    ("object" == typeof input.caller && null !== input.caller || _report(_exceptionable, {
                        path: _path + ".caller",
                        expected: "Function",
                        value: input.caller
                    })) && _vo33(input.caller, _path + ".caller", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".caller",
                        expected: "Function",
                        value: input.caller
                    }),
                    "string" == typeof input.name || _report(_exceptionable, {
                        path: _path + ".name",
                        expected: "string",
                        value: input.name
                    }),
                    5 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "prototype",
                            "length",
                            "arguments",
                            "caller",
                            "name"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo258 = (input, _path, _exceptionable = true)=>[
                    true,
                    "number" == typeof input.length || _report(_exceptionable, {
                        path: _path + ".length",
                        expected: "number",
                        value: input.length
                    }),
                    true,
                    ("object" == typeof input.caller && null !== input.caller || _report(_exceptionable, {
                        path: _path + ".caller",
                        expected: "Function",
                        value: input.caller
                    })) && _vo33(input.caller, _path + ".caller", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".caller",
                        expected: "Function",
                        value: input.caller
                    }),
                    "string" == typeof input.name || _report(_exceptionable, {
                        path: _path + ".name",
                        expected: "string",
                        value: input.name
                    }),
                    5 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "prototype",
                            "length",
                            "arguments",
                            "caller",
                            "name"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo259 = (input, _path, _exceptionable = true)=>[
                    true,
                    "number" == typeof input.length || _report(_exceptionable, {
                        path: _path + ".length",
                        expected: "number",
                        value: input.length
                    }),
                    true,
                    ("object" == typeof input.caller && null !== input.caller || _report(_exceptionable, {
                        path: _path + ".caller",
                        expected: "Function",
                        value: input.caller
                    })) && _vo33(input.caller, _path + ".caller", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".caller",
                        expected: "Function",
                        value: input.caller
                    }),
                    "string" == typeof input.name || _report(_exceptionable, {
                        path: _path + ".name",
                        expected: "string",
                        value: input.name
                    }),
                    5 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "prototype",
                            "length",
                            "arguments",
                            "caller",
                            "name"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo260 = (input, _path, _exceptionable = true)=>[
                    (Array.isArray(input.alias) || _report(_exceptionable, {
                        path: _path + ".alias",
                        expected: "Array<AliasOption>",
                        value: input.alias
                    })) && input.alias.map((elem, _index598)=>("object" == typeof elem && null !== elem || _report(_exceptionable, {
                            path: _path + ".alias[" + _index598 + "]",
                            expected: "AliasOption",
                            value: elem
                        })) && _vo261(elem, _path + ".alias[" + _index598 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".alias[" + _index598 + "]",
                            expected: "AliasOption",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".alias",
                        expected: "Array<AliasOption>",
                        value: input.alias
                    }),
                    (Array.isArray(input.fallback) || _report(_exceptionable, {
                        path: _path + ".fallback",
                        expected: "Array<AliasOption>",
                        value: input.fallback
                    })) && input.fallback.map((elem, _index599)=>("object" == typeof elem && null !== elem || _report(_exceptionable, {
                            path: _path + ".fallback[" + _index599 + "]",
                            expected: "AliasOption",
                            value: elem
                        })) && _vo261(elem, _path + ".fallback[" + _index599 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".fallback[" + _index599 + "]",
                            expected: "AliasOption",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".fallback",
                        expected: "Array<AliasOption>",
                        value: input.fallback
                    }),
                    (input.aliasFields instanceof Set || _report(_exceptionable, {
                        path: _path + ".aliasFields",
                        expected: "Set<(Array<string> | string)>",
                        value: input.aliasFields
                    })) && (()=>[
                            ...input.aliasFields
                        ].map((elem, _index600)=>(null !== elem || _report(_exceptionable, {
                                path: _path + ".aliasFields[" + _index600 + "]",
                                expected: "(Array<string> | string)",
                                value: elem
                            })) && (void 0 !== elem || _report(_exceptionable, {
                                path: _path + ".aliasFields[" + _index600 + "]",
                                expected: "(Array<string> | string)",
                                value: elem
                            })) && ("string" == typeof elem || (Array.isArray(elem) || _report(_exceptionable, {
                                path: _path + ".aliasFields[" + _index600 + "]",
                                expected: "(Array<string> | string)",
                                value: elem
                            })) && elem.map((elem, _index601)=>"string" == typeof elem || _report(_exceptionable, {
                                    path: _path + ".aliasFields[" + _index600 + "][" + _index601 + "]",
                                    expected: "string",
                                    value: elem
                                })).every((flag)=>flag) || _report(_exceptionable, {
                                path: _path + ".aliasFields[" + _index600 + "]",
                                expected: "(Array<string> | string)",
                                value: elem
                            }))).every((flag)=>flag))() || _report(_exceptionable, {
                        path: _path + ".aliasFields",
                        expected: "Set<(Array<string> | string)>",
                        value: input.aliasFields
                    }),
                    (Array.isArray(input.extensionAlias) || _report(_exceptionable, {
                        path: _path + ".extensionAlias",
                        expected: "Array<ExtensionAliasOption>",
                        value: input.extensionAlias
                    })) && input.extensionAlias.map((elem, _index602)=>("object" == typeof elem && null !== elem || _report(_exceptionable, {
                            path: _path + ".extensionAlias[" + _index602 + "]",
                            expected: "ExtensionAliasOption",
                            value: elem
                        })) && _vo262(elem, _path + ".extensionAlias[" + _index602 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".extensionAlias[" + _index602 + "]",
                            expected: "ExtensionAliasOption",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".extensionAlias",
                        expected: "Array<ExtensionAliasOption>",
                        value: input.extensionAlias
                    }),
                    true,
                    "boolean" == typeof input.cacheWithContext || _report(_exceptionable, {
                        path: _path + ".cacheWithContext",
                        expected: "boolean",
                        value: input.cacheWithContext
                    }),
                    (input.conditionNames instanceof Set || _report(_exceptionable, {
                        path: _path + ".conditionNames",
                        expected: "Set<string>",
                        value: input.conditionNames
                    })) && (()=>[
                            ...input.conditionNames
                        ].map((elem, _index603)=>"string" == typeof elem || _report(_exceptionable, {
                                path: _path + ".conditionNames[" + _index603 + "]",
                                expected: "string",
                                value: elem
                            })).every((flag)=>flag))() || _report(_exceptionable, {
                        path: _path + ".conditionNames",
                        expected: "Set<string>",
                        value: input.conditionNames
                    }),
                    (Array.isArray(input.descriptionFiles) || _report(_exceptionable, {
                        path: _path + ".descriptionFiles",
                        expected: "Array<string>",
                        value: input.descriptionFiles
                    })) && input.descriptionFiles.map((elem, _index604)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".descriptionFiles[" + _index604 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".descriptionFiles",
                        expected: "Array<string>",
                        value: input.descriptionFiles
                    }),
                    "boolean" == typeof input.enforceExtension || _report(_exceptionable, {
                        path: _path + ".enforceExtension",
                        expected: "boolean",
                        value: input.enforceExtension
                    }),
                    (input.exportsFields instanceof Set || _report(_exceptionable, {
                        path: _path + ".exportsFields",
                        expected: "Set<(Array<string> | string)>",
                        value: input.exportsFields
                    })) && (()=>[
                            ...input.exportsFields
                        ].map((elem, _index605)=>(null !== elem || _report(_exceptionable, {
                                path: _path + ".exportsFields[" + _index605 + "]",
                                expected: "(Array<string> | string)",
                                value: elem
                            })) && (void 0 !== elem || _report(_exceptionable, {
                                path: _path + ".exportsFields[" + _index605 + "]",
                                expected: "(Array<string> | string)",
                                value: elem
                            })) && ("string" == typeof elem || (Array.isArray(elem) || _report(_exceptionable, {
                                path: _path + ".exportsFields[" + _index605 + "]",
                                expected: "(Array<string> | string)",
                                value: elem
                            })) && elem.map((elem, _index606)=>"string" == typeof elem || _report(_exceptionable, {
                                    path: _path + ".exportsFields[" + _index605 + "][" + _index606 + "]",
                                    expected: "string",
                                    value: elem
                                })).every((flag)=>flag) || _report(_exceptionable, {
                                path: _path + ".exportsFields[" + _index605 + "]",
                                expected: "(Array<string> | string)",
                                value: elem
                            }))).every((flag)=>flag))() || _report(_exceptionable, {
                        path: _path + ".exportsFields",
                        expected: "Set<(Array<string> | string)>",
                        value: input.exportsFields
                    }),
                    (input.importsFields instanceof Set || _report(_exceptionable, {
                        path: _path + ".importsFields",
                        expected: "Set<(Array<string> | string)>",
                        value: input.importsFields
                    })) && (()=>[
                            ...input.importsFields
                        ].map((elem, _index607)=>(null !== elem || _report(_exceptionable, {
                                path: _path + ".importsFields[" + _index607 + "]",
                                expected: "(Array<string> | string)",
                                value: elem
                            })) && (void 0 !== elem || _report(_exceptionable, {
                                path: _path + ".importsFields[" + _index607 + "]",
                                expected: "(Array<string> | string)",
                                value: elem
                            })) && ("string" == typeof elem || (Array.isArray(elem) || _report(_exceptionable, {
                                path: _path + ".importsFields[" + _index607 + "]",
                                expected: "(Array<string> | string)",
                                value: elem
                            })) && elem.map((elem, _index608)=>"string" == typeof elem || _report(_exceptionable, {
                                    path: _path + ".importsFields[" + _index607 + "][" + _index608 + "]",
                                    expected: "string",
                                    value: elem
                                })).every((flag)=>flag) || _report(_exceptionable, {
                                path: _path + ".importsFields[" + _index607 + "]",
                                expected: "(Array<string> | string)",
                                value: elem
                            }))).every((flag)=>flag))() || _report(_exceptionable, {
                        path: _path + ".importsFields",
                        expected: "Set<(Array<string> | string)>",
                        value: input.importsFields
                    }),
                    (input.extensions instanceof Set || _report(_exceptionable, {
                        path: _path + ".extensions",
                        expected: "Set<string>",
                        value: input.extensions
                    })) && (()=>[
                            ...input.extensions
                        ].map((elem, _index609)=>"string" == typeof elem || _report(_exceptionable, {
                                path: _path + ".extensions[" + _index609 + "]",
                                expected: "string",
                                value: elem
                            })).every((flag)=>flag))() || _report(_exceptionable, {
                        path: _path + ".extensions",
                        expected: "Set<string>",
                        value: input.extensions
                    }),
                    ("object" == typeof input.fileSystem && null !== input.fileSystem || _report(_exceptionable, {
                        path: _path + ".fileSystem",
                        expected: "FileSystem",
                        value: input.fileSystem
                    })) && _vo253(input.fileSystem, _path + ".fileSystem", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".fileSystem",
                        expected: "FileSystem",
                        value: input.fileSystem
                    }),
                    (null !== input.unsafeCache || _report(_exceptionable, {
                        path: _path + ".unsafeCache",
                        expected: "(CacheTypes | false)",
                        value: input.unsafeCache
                    })) && (void 0 !== input.unsafeCache || _report(_exceptionable, {
                        path: _path + ".unsafeCache",
                        expected: "(CacheTypes | false)",
                        value: input.unsafeCache
                    })) && (false === input.unsafeCache || ("object" == typeof input.unsafeCache && null !== input.unsafeCache && false === Array.isArray(input.unsafeCache) || _report(_exceptionable, {
                        path: _path + ".unsafeCache",
                        expected: "(CacheTypes | false)",
                        value: input.unsafeCache
                    })) && _vo263(input.unsafeCache, _path + ".unsafeCache", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".unsafeCache",
                        expected: "(CacheTypes | false)",
                        value: input.unsafeCache
                    })),
                    "boolean" == typeof input.symlinks || _report(_exceptionable, {
                        path: _path + ".symlinks",
                        expected: "boolean",
                        value: input.symlinks
                    }),
                    void 0 === input.resolver || ("object" == typeof input.resolver && null !== input.resolver || _report(_exceptionable, {
                        path: _path + ".resolver",
                        expected: "(Resolver | undefined)",
                        value: input.resolver
                    })) && _vo252(input.resolver, _path + ".resolver", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".resolver",
                        expected: "(Resolver | undefined)",
                        value: input.resolver
                    }),
                    (Array.isArray(input.modules) || _report(_exceptionable, {
                        path: _path + ".modules",
                        expected: "Array<string | string[]>",
                        value: input.modules
                    })) && input.modules.map((elem, _index610)=>(null !== elem || _report(_exceptionable, {
                            path: _path + ".modules[" + _index610 + "]",
                            expected: "(Array<string> | string)",
                            value: elem
                        })) && (void 0 !== elem || _report(_exceptionable, {
                            path: _path + ".modules[" + _index610 + "]",
                            expected: "(Array<string> | string)",
                            value: elem
                        })) && ("string" == typeof elem || (Array.isArray(elem) || _report(_exceptionable, {
                            path: _path + ".modules[" + _index610 + "]",
                            expected: "(Array<string> | string)",
                            value: elem
                        })) && elem.map((elem, _index611)=>"string" == typeof elem || _report(_exceptionable, {
                                path: _path + ".modules[" + _index610 + "][" + _index611 + "]",
                                expected: "string",
                                value: elem
                            })).every((flag)=>flag) || _report(_exceptionable, {
                            path: _path + ".modules[" + _index610 + "]",
                            expected: "(Array<string> | string)",
                            value: elem
                        }))).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".modules",
                        expected: "Array<string | string[]>",
                        value: input.modules
                    }),
                    (Array.isArray(input.mainFields) || _report(_exceptionable, {
                        path: _path + ".mainFields",
                        expected: "Array<__type>.o4",
                        value: input.mainFields
                    })) && input.mainFields.map((elem, _index612)=>("object" == typeof elem && null !== elem || _report(_exceptionable, {
                            path: _path + ".mainFields[" + _index612 + "]",
                            expected: "__type.o64",
                            value: elem
                        })) && _vo266(elem, _path + ".mainFields[" + _index612 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".mainFields[" + _index612 + "]",
                            expected: "__type.o64",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".mainFields",
                        expected: "Array<__type>.o4",
                        value: input.mainFields
                    }),
                    (input.mainFiles instanceof Set || _report(_exceptionable, {
                        path: _path + ".mainFiles",
                        expected: "Set<string>",
                        value: input.mainFiles
                    })) && (()=>[
                            ...input.mainFiles
                        ].map((elem, _index613)=>"string" == typeof elem || _report(_exceptionable, {
                                path: _path + ".mainFiles[" + _index613 + "]",
                                expected: "string",
                                value: elem
                            })).every((flag)=>flag))() || _report(_exceptionable, {
                        path: _path + ".mainFiles",
                        expected: "Set<string>",
                        value: input.mainFiles
                    }),
                    (Array.isArray(input.plugins) || _report(_exceptionable, {
                        path: _path + ".plugins",
                        expected: "Array<Plugin>",
                        value: input.plugins
                    })) && input.plugins.map((elem, _index614)=>null == elem || "function" == typeof elem || false === elem || "" === elem || 0 === elem || ("object" == typeof elem && null !== elem || _report(_exceptionable, {
                            path: _path + ".plugins[" + _index614 + "]",
                            expected: "(\"\" | 0 | __type.o65 | false | null | undefined)",
                            value: elem
                        })) && _vo267(elem, _path + ".plugins[" + _index614 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".plugins[" + _index614 + "]",
                            expected: "(\"\" | 0 | __type.o65 | false | null | undefined)",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".plugins",
                        expected: "Array<Plugin>",
                        value: input.plugins
                    }),
                    null === input.pnpApi || ("object" == typeof input.pnpApi && null !== input.pnpApi || _report(_exceptionable, {
                        path: _path + ".pnpApi",
                        expected: "(PnpApi | null)",
                        value: input.pnpApi
                    })) && _vo268(input.pnpApi, _path + ".pnpApi", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".pnpApi",
                        expected: "(PnpApi | null)",
                        value: input.pnpApi
                    }),
                    (input.roots instanceof Set || _report(_exceptionable, {
                        path: _path + ".roots",
                        expected: "Set<string>",
                        value: input.roots
                    })) && (()=>[
                            ...input.roots
                        ].map((elem, _index615)=>"string" == typeof elem || _report(_exceptionable, {
                                path: _path + ".roots[" + _index615 + "]",
                                expected: "string",
                                value: elem
                            })).every((flag)=>flag))() || _report(_exceptionable, {
                        path: _path + ".roots",
                        expected: "Set<string>",
                        value: input.roots
                    }),
                    "boolean" == typeof input.fullySpecified || _report(_exceptionable, {
                        path: _path + ".fullySpecified",
                        expected: "boolean",
                        value: input.fullySpecified
                    }),
                    "boolean" == typeof input.resolveToContext || _report(_exceptionable, {
                        path: _path + ".resolveToContext",
                        expected: "boolean",
                        value: input.resolveToContext
                    }),
                    (input.restrictions instanceof Set || _report(_exceptionable, {
                        path: _path + ".restrictions",
                        expected: "Set<(RegExp | string)>",
                        value: input.restrictions
                    })) && (()=>[
                            ...input.restrictions
                        ].map((elem, _index616)=>(null !== elem || _report(_exceptionable, {
                                path: _path + ".restrictions[" + _index616 + "]",
                                expected: "(RegExp | string)",
                                value: elem
                            })) && (void 0 !== elem || _report(_exceptionable, {
                                path: _path + ".restrictions[" + _index616 + "]",
                                expected: "(RegExp | string)",
                                value: elem
                            })) && ("string" == typeof elem || elem instanceof RegExp || _report(_exceptionable, {
                                path: _path + ".restrictions[" + _index616 + "]",
                                expected: "(RegExp | string)",
                                value: elem
                            }))).every((flag)=>flag))() || _report(_exceptionable, {
                        path: _path + ".restrictions",
                        expected: "Set<(RegExp | string)>",
                        value: input.restrictions
                    }),
                    "boolean" == typeof input.preferRelative || _report(_exceptionable, {
                        path: _path + ".preferRelative",
                        expected: "boolean",
                        value: input.preferRelative
                    }),
                    "boolean" == typeof input.preferAbsolute || _report(_exceptionable, {
                        path: _path + ".preferAbsolute",
                        expected: "boolean",
                        value: input.preferAbsolute
                    }),
                    26 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "alias",
                            "fallback",
                            "aliasFields",
                            "extensionAlias",
                            "cachePredicate",
                            "cacheWithContext",
                            "conditionNames",
                            "descriptionFiles",
                            "enforceExtension",
                            "exportsFields",
                            "importsFields",
                            "extensions",
                            "fileSystem",
                            "unsafeCache",
                            "symlinks",
                            "resolver",
                            "modules",
                            "mainFields",
                            "mainFiles",
                            "plugins",
                            "pnpApi",
                            "roots",
                            "fullySpecified",
                            "resolveToContext",
                            "restrictions",
                            "preferRelative",
                            "preferAbsolute"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo261 = (input, _path, _exceptionable = true)=>[
                    (null !== input.alias || _report(_exceptionable, {
                        path: _path + ".alias",
                        expected: "(Array<string> | false | string)",
                        value: input.alias
                    })) && (void 0 !== input.alias || _report(_exceptionable, {
                        path: _path + ".alias",
                        expected: "(Array<string> | false | string)",
                        value: input.alias
                    })) && (false === input.alias || "string" == typeof input.alias || (Array.isArray(input.alias) || _report(_exceptionable, {
                        path: _path + ".alias",
                        expected: "(Array<string> | false | string)",
                        value: input.alias
                    })) && input.alias.map((elem, _index617)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".alias[" + _index617 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".alias",
                        expected: "(Array<string> | false | string)",
                        value: input.alias
                    })),
                    "string" == typeof input.name || _report(_exceptionable, {
                        path: _path + ".name",
                        expected: "string",
                        value: input.name
                    }),
                    void 0 === input.onlyModule || "boolean" == typeof input.onlyModule || _report(_exceptionable, {
                        path: _path + ".onlyModule",
                        expected: "(boolean | undefined)",
                        value: input.onlyModule
                    }),
                    2 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "alias",
                            "name",
                            "onlyModule"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo262 = (input, _path, _exceptionable = true)=>[
                    (null !== input.alias || _report(_exceptionable, {
                        path: _path + ".alias",
                        expected: "(Array<string> | string)",
                        value: input.alias
                    })) && (void 0 !== input.alias || _report(_exceptionable, {
                        path: _path + ".alias",
                        expected: "(Array<string> | string)",
                        value: input.alias
                    })) && ("string" == typeof input.alias || (Array.isArray(input.alias) || _report(_exceptionable, {
                        path: _path + ".alias",
                        expected: "(Array<string> | string)",
                        value: input.alias
                    })) && input.alias.map((elem, _index618)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".alias[" + _index618 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".alias",
                        expected: "(Array<string> | string)",
                        value: input.alias
                    })),
                    "string" == typeof input.extension || _report(_exceptionable, {
                        path: _path + ".extension",
                        expected: "string",
                        value: input.extension
                    }),
                    2 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "alias",
                            "extension"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo263 = (input, _path, _exceptionable = true)=>[
                    false === _exceptionable || Object.keys(input).map((key)=>{
                        const value = input[key];
                        if (void 0 === value) return true;
                        return (null !== value || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(Array<ResolveRequest> | ResolveRequest | undefined)",
                            value: value
                        })) && (void 0 === value || Array.isArray(value) && value.map((elem, _index619)=>("object" == typeof elem && null !== elem || _report(_exceptionable, {
                                path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key) + "[" + _index619 + "]",
                                expected: "ResolveRequest",
                                value: elem
                            })) && _vo264(elem, _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key) + "[" + _index619 + "]", _exceptionable) || _report(_exceptionable, {
                                path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key) + "[" + _index619 + "]",
                                expected: "ResolveRequest",
                                value: elem
                            })).every((flag)=>flag) || "object" == typeof value && null !== value && _vo264(value, _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key), _exceptionable) || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(Array<ResolveRequest> | ResolveRequest | undefined)",
                            value: value
                        }) || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(Array<ResolveRequest> | ResolveRequest | undefined)",
                            value: value
                        }));
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo264 = (input, _path, _exceptionable = true)=>[
                    false === input.path || "string" == typeof input.path || _report(_exceptionable, {
                        path: _path + ".path",
                        expected: "(false | string)",
                        value: input.path
                    }),
                    void 0 === input.context || ("object" == typeof input.context && null !== input.context && false === Array.isArray(input.context) || _report(_exceptionable, {
                        path: _path + ".context",
                        expected: "(object | undefined)",
                        value: input.context
                    })) && _vo31(input.context, _path + ".context", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".context",
                        expected: "(object | undefined)",
                        value: input.context
                    }),
                    void 0 === input.descriptionFilePath || "string" == typeof input.descriptionFilePath || _report(_exceptionable, {
                        path: _path + ".descriptionFilePath",
                        expected: "(string | undefined)",
                        value: input.descriptionFilePath
                    }),
                    void 0 === input.descriptionFileRoot || "string" == typeof input.descriptionFileRoot || _report(_exceptionable, {
                        path: _path + ".descriptionFileRoot",
                        expected: "(string | undefined)",
                        value: input.descriptionFileRoot
                    }),
                    void 0 === input.descriptionFileData || ("object" == typeof input.descriptionFileData && null !== input.descriptionFileData && false === Array.isArray(input.descriptionFileData) || _report(_exceptionable, {
                        path: _path + ".descriptionFileData",
                        expected: "(JsonObjectTypes | undefined)",
                        value: input.descriptionFileData
                    })) && _vo265(input.descriptionFileData, _path + ".descriptionFileData", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".descriptionFileData",
                        expected: "(JsonObjectTypes | undefined)",
                        value: input.descriptionFileData
                    }),
                    void 0 === input.relativePath || "string" == typeof input.relativePath || _report(_exceptionable, {
                        path: _path + ".relativePath",
                        expected: "(string | undefined)",
                        value: input.relativePath
                    }),
                    void 0 === input.ignoreSymlinks || "boolean" == typeof input.ignoreSymlinks || _report(_exceptionable, {
                        path: _path + ".ignoreSymlinks",
                        expected: "(boolean | undefined)",
                        value: input.ignoreSymlinks
                    }),
                    void 0 === input.fullySpecified || "boolean" == typeof input.fullySpecified || _report(_exceptionable, {
                        path: _path + ".fullySpecified",
                        expected: "(boolean | undefined)",
                        value: input.fullySpecified
                    }),
                    void 0 === input.__innerRequest || "string" == typeof input.__innerRequest || _report(_exceptionable, {
                        path: _path + ".__innerRequest",
                        expected: "(string | undefined)",
                        value: input.__innerRequest
                    }),
                    void 0 === input.__innerRequest_request || "string" == typeof input.__innerRequest_request || _report(_exceptionable, {
                        path: _path + ".__innerRequest_request",
                        expected: "(string | undefined)",
                        value: input.__innerRequest_request
                    }),
                    void 0 === input.__innerRequest_relativePath || "string" == typeof input.__innerRequest_relativePath || _report(_exceptionable, {
                        path: _path + ".__innerRequest_relativePath",
                        expected: "(string | undefined)",
                        value: input.__innerRequest_relativePath
                    }),
                    void 0 === input.request || "string" == typeof input.request || _report(_exceptionable, {
                        path: _path + ".request",
                        expected: "(string | undefined)",
                        value: input.request
                    }),
                    void 0 === input.query || "string" == typeof input.query || _report(_exceptionable, {
                        path: _path + ".query",
                        expected: "(string | undefined)",
                        value: input.query
                    }),
                    void 0 === input.fragment || "string" == typeof input.fragment || _report(_exceptionable, {
                        path: _path + ".fragment",
                        expected: "(string | undefined)",
                        value: input.fragment
                    }),
                    void 0 === input.directory || "boolean" == typeof input.directory || _report(_exceptionable, {
                        path: _path + ".directory",
                        expected: "(boolean | undefined)",
                        value: input.directory
                    }),
                    void 0 === input["module"] || "boolean" == typeof input["module"] || _report(_exceptionable, {
                        path: _path + "[\"module\"]",
                        expected: "(boolean | undefined)",
                        value: input["module"]
                    }),
                    void 0 === input.file || "boolean" == typeof input.file || _report(_exceptionable, {
                        path: _path + ".file",
                        expected: "(boolean | undefined)",
                        value: input.file
                    }),
                    void 0 === input.internal || "boolean" == typeof input.internal || _report(_exceptionable, {
                        path: _path + ".internal",
                        expected: "(boolean | undefined)",
                        value: input.internal
                    }),
                    1 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "path",
                            "context",
                            "descriptionFilePath",
                            "descriptionFileRoot",
                            "descriptionFileData",
                            "relativePath",
                            "ignoreSymlinks",
                            "fullySpecified",
                            "__innerRequest",
                            "__innerRequest_request",
                            "__innerRequest_relativePath",
                            "request",
                            "query",
                            "fragment",
                            "directory",
                            "module",
                            "file",
                            "internal"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo265 = (input, _path, _exceptionable = true)=>[
                    false === _exceptionable || Object.keys(input).map((key)=>{
                        const value = input[key];
                        if (void 0 === value) return true;
                        return null == value || "string" == typeof value || "number" == typeof value || "boolean" == typeof value || Array.isArray(value) && value.map((elem, _index620)=>(void 0 !== elem || _report(_exceptionable, {
                                path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key) + "[" + _index620 + "]",
                                expected: "(Array<JsonValueTypes>.o1 | JsonObjectTypes | boolean | null | number | string)",
                                value: elem
                            })) && (null === elem || "string" == typeof elem || "number" == typeof elem || "boolean" == typeof elem || Array.isArray(elem) && (_va3(elem, _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key) + "[" + _index620 + "]", _exceptionable) || _report(_exceptionable, {
                                path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key) + "[" + _index620 + "]",
                                expected: "Array<JsonValueTypes>.o1",
                                value: elem
                            })) || "object" == typeof elem && null !== elem && false === Array.isArray(elem) && _vo265(elem, _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key) + "[" + _index620 + "]", _exceptionable) || _report(_exceptionable, {
                                path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key) + "[" + _index620 + "]",
                                expected: "(Array<JsonValueTypes>.o1 | JsonObjectTypes | boolean | null | number | string)",
                                value: elem
                            }) || _report(_exceptionable, {
                                path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key) + "[" + _index620 + "]",
                                expected: "(Array<JsonValueTypes>.o1 | JsonObjectTypes | boolean | null | number | string)",
                                value: elem
                            }))).every((flag)=>flag) || "object" == typeof value && null !== value && false === Array.isArray(value) && _vo265(value, _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key), _exceptionable) || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(Array<JsonValueTypes> | JsonObjectTypes | boolean | null | number | string | undefined)",
                            value: value
                        }) || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(Array<JsonValueTypes> | JsonObjectTypes | boolean | null | number | string | undefined)",
                            value: value
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo266 = (input, _path, _exceptionable = true)=>[
                    (Array.isArray(input.name) || _report(_exceptionable, {
                        path: _path + ".name",
                        expected: "Array<string>",
                        value: input.name
                    })) && input.name.map((elem, _index621)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".name[" + _index621 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".name",
                        expected: "Array<string>",
                        value: input.name
                    }),
                    "boolean" == typeof input.forceRelative || _report(_exceptionable, {
                        path: _path + ".forceRelative",
                        expected: "boolean",
                        value: input.forceRelative
                    }),
                    2 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "name",
                            "forceRelative"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo267 = (input, _path, _exceptionable = true)=>[
                    true,
                    1 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "apply"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo268 = (input, _path, _exceptionable = true)=>[
                    true,
                    1 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "resolveToUnqualified"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo269 = (input, _path, _exceptionable = true)=>[
                    ("object" == typeof input.resolveStep && null !== input.resolveStep || _report(_exceptionable, {
                        path: _path + ".resolveStep",
                        expected: "SyncHook<[AsyncSeriesBailHook<[ResolveRequest, ResolveContext], ResolveRequest | null, UnsetAdditionalOptions>, ResolveRequest], void, UnsetAdditionalOptions>",
                        value: input.resolveStep
                    })) && _vo270(input.resolveStep, _path + ".resolveStep", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".resolveStep",
                        expected: "SyncHook<[AsyncSeriesBailHook<[ResolveRequest, ResolveContext], ResolveRequest | null, UnsetAdditionalOptions>, ResolveRequest], void, UnsetAdditionalOptions>",
                        value: input.resolveStep
                    }),
                    ("object" == typeof input.noResolve && null !== input.noResolve || _report(_exceptionable, {
                        path: _path + ".noResolve",
                        expected: "SyncHook<[ResolveRequest, Error], void, UnsetAdditionalOptions>",
                        value: input.noResolve
                    })) && _vo273(input.noResolve, _path + ".noResolve", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".noResolve",
                        expected: "SyncHook<[ResolveRequest, Error], void, UnsetAdditionalOptions>",
                        value: input.noResolve
                    }),
                    ("object" == typeof input.resolve && null !== input.resolve || _report(_exceptionable, {
                        path: _path + ".resolve",
                        expected: "AsyncSeriesBailHook<[ResolveRequest, ResolveContext], ResolveRequest | null, UnsetAdditionalOptions>",
                        value: input.resolve
                    })) && _vo275(input.resolve, _path + ".resolve", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".resolve",
                        expected: "AsyncSeriesBailHook<[ResolveRequest, ResolveContext], ResolveRequest | null, UnsetAdditionalOptions>",
                        value: input.resolve
                    }),
                    ("object" == typeof input.result && null !== input.result || _report(_exceptionable, {
                        path: _path + ".result",
                        expected: "AsyncSeriesHook<[ResolveRequest, ResolveContext], UnsetAdditionalOptions>",
                        value: input.result
                    })) && _vo277(input.result, _path + ".result", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".result",
                        expected: "AsyncSeriesHook<[ResolveRequest, ResolveContext], UnsetAdditionalOptions>",
                        value: input.result
                    }),
                    4 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "resolveStep",
                            "noResolve",
                            "resolve",
                            "result"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo270 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.name || "string" == typeof input.name || _report(_exceptionable, {
                        path: _path + ".name",
                        expected: "(string | undefined)",
                        value: input.name
                    }),
                    (Array.isArray(input.interceptors) || _report(_exceptionable, {
                        path: _path + ".interceptors",
                        expected: "Array<HookInterceptor<[AsyncSeriesBailHook<[ResolveRequest, ResolveContext], ResolveRequest | null, UnsetAdditionalOptions>, ResolveRequest], void, UnsetAdditionalOptions>>",
                        value: input.interceptors
                    })) && input.interceptors.map((elem, _index622)=>("object" == typeof elem && null !== elem && false === Array.isArray(elem) || _report(_exceptionable, {
                            path: _path + ".interceptors[" + _index622 + "]",
                            expected: "HookInterceptor<[AsyncSeriesBailHook<[ResolveRequest, ResolveContext], ResolveRequest | null, UnsetAdditionalOptions>, ResolveRequest], void, UnsetAdditionalOptions>",
                            value: elem
                        })) && _vo271(elem, _path + ".interceptors[" + _index622 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".interceptors[" + _index622 + "]",
                            expected: "HookInterceptor<[AsyncSeriesBailHook<[ResolveRequest, ResolveContext], ResolveRequest | null, UnsetAdditionalOptions>, ResolveRequest], void, UnsetAdditionalOptions>",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".interceptors",
                        expected: "Array<HookInterceptor<[AsyncSeriesBailHook<[ResolveRequest, ResolveContext], ResolveRequest | null, UnsetAdditionalOptions>, ResolveRequest], void, UnsetAdditionalOptions>>",
                        value: input.interceptors
                    }),
                    (Array.isArray(input.taps) || _report(_exceptionable, {
                        path: _path + ".taps",
                        expected: "Array<FullTap>",
                        value: input.taps
                    })) && input.taps.map((elem, _index623)=>("object" == typeof elem && null !== elem || _report(_exceptionable, {
                            path: _path + ".taps[" + _index623 + "]",
                            expected: "FullTap",
                            value: elem
                        })) && _vo272(elem, _path + ".taps[" + _index623 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".taps[" + _index623 + "]",
                            expected: "FullTap",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".taps",
                        expected: "Array<FullTap>",
                        value: input.taps
                    }),
                    2 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "name",
                            "interceptors",
                            "taps"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo271 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.name || "string" == typeof input.name || _report(_exceptionable, {
                        path: _path + ".name",
                        expected: "(string | undefined)",
                        value: input.name
                    }),
                    void 0 === input.tap || true,
                    void 0 === input.call || true,
                    void 0 === input.loop || true,
                    void 0 === input.error || true,
                    void 0 === input.result || true,
                    void 0 === input.done || true,
                    void 0 === input.register || true,
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "name",
                            "tap",
                            "call",
                            "loop",
                            "error",
                            "result",
                            "done",
                            "register"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo272 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.before || "string" == typeof input.before || _report(_exceptionable, {
                        path: _path + ".before",
                        expected: "(string | undefined)",
                        value: input.before
                    }),
                    void 0 === input.stage || "number" == typeof input.stage || _report(_exceptionable, {
                        path: _path + ".stage",
                        expected: "(number | undefined)",
                        value: input.stage
                    }),
                    "string" == typeof input.name || _report(_exceptionable, {
                        path: _path + ".name",
                        expected: "string",
                        value: input.name
                    }),
                    "promise" === input.type || "async" === input.type || "sync" === input.type || _report(_exceptionable, {
                        path: _path + ".type",
                        expected: "(\"async\" | \"promise\" | \"sync\")",
                        value: input.type
                    }),
                    ("object" == typeof input.fn && null !== input.fn || _report(_exceptionable, {
                        path: _path + ".fn",
                        expected: "Function",
                        value: input.fn
                    })) && _vo33(input.fn, _path + ".fn", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".fn",
                        expected: "Function",
                        value: input.fn
                    }),
                    3 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "before",
                            "stage",
                            "name",
                            "type",
                            "fn"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo273 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.name || "string" == typeof input.name || _report(_exceptionable, {
                        path: _path + ".name",
                        expected: "(string | undefined)",
                        value: input.name
                    }),
                    (Array.isArray(input.interceptors) || _report(_exceptionable, {
                        path: _path + ".interceptors",
                        expected: "Array<HookInterceptor<[ResolveRequest, Error], void, UnsetAdditionalOptions>>",
                        value: input.interceptors
                    })) && input.interceptors.map((elem, _index624)=>("object" == typeof elem && null !== elem && false === Array.isArray(elem) || _report(_exceptionable, {
                            path: _path + ".interceptors[" + _index624 + "]",
                            expected: "HookInterceptor<[ResolveRequest, Error], void, UnsetAdditionalOptions>",
                            value: elem
                        })) && _vo274(elem, _path + ".interceptors[" + _index624 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".interceptors[" + _index624 + "]",
                            expected: "HookInterceptor<[ResolveRequest, Error], void, UnsetAdditionalOptions>",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".interceptors",
                        expected: "Array<HookInterceptor<[ResolveRequest, Error], void, UnsetAdditionalOptions>>",
                        value: input.interceptors
                    }),
                    (Array.isArray(input.taps) || _report(_exceptionable, {
                        path: _path + ".taps",
                        expected: "Array<FullTap>",
                        value: input.taps
                    })) && input.taps.map((elem, _index625)=>("object" == typeof elem && null !== elem || _report(_exceptionable, {
                            path: _path + ".taps[" + _index625 + "]",
                            expected: "FullTap",
                            value: elem
                        })) && _vo272(elem, _path + ".taps[" + _index625 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".taps[" + _index625 + "]",
                            expected: "FullTap",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".taps",
                        expected: "Array<FullTap>",
                        value: input.taps
                    }),
                    2 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "name",
                            "interceptors",
                            "taps"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo274 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.name || "string" == typeof input.name || _report(_exceptionable, {
                        path: _path + ".name",
                        expected: "(string | undefined)",
                        value: input.name
                    }),
                    void 0 === input.tap || true,
                    void 0 === input.call || true,
                    void 0 === input.loop || true,
                    void 0 === input.error || true,
                    void 0 === input.result || true,
                    void 0 === input.done || true,
                    void 0 === input.register || true,
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "name",
                            "tap",
                            "call",
                            "loop",
                            "error",
                            "result",
                            "done",
                            "register"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo275 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.name || "string" == typeof input.name || _report(_exceptionable, {
                        path: _path + ".name",
                        expected: "(string | undefined)",
                        value: input.name
                    }),
                    (Array.isArray(input.interceptors) || _report(_exceptionable, {
                        path: _path + ".interceptors",
                        expected: "Array<HookInterceptor<[ResolveRequest, ResolveContext], ResolveRequest | null, UnsetAdditionalOptions>>",
                        value: input.interceptors
                    })) && input.interceptors.map((elem, _index626)=>("object" == typeof elem && null !== elem && false === Array.isArray(elem) || _report(_exceptionable, {
                            path: _path + ".interceptors[" + _index626 + "]",
                            expected: "HookInterceptor<[ResolveRequest, ResolveContext], ResolveRequest | null, UnsetAdditionalOptions>",
                            value: elem
                        })) && _vo276(elem, _path + ".interceptors[" + _index626 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".interceptors[" + _index626 + "]",
                            expected: "HookInterceptor<[ResolveRequest, ResolveContext], ResolveRequest | null, UnsetAdditionalOptions>",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".interceptors",
                        expected: "Array<HookInterceptor<[ResolveRequest, ResolveContext], ResolveRequest | null, UnsetAdditionalOptions>>",
                        value: input.interceptors
                    }),
                    (Array.isArray(input.taps) || _report(_exceptionable, {
                        path: _path + ".taps",
                        expected: "Array<FullTap>",
                        value: input.taps
                    })) && input.taps.map((elem, _index627)=>("object" == typeof elem && null !== elem || _report(_exceptionable, {
                            path: _path + ".taps[" + _index627 + "]",
                            expected: "FullTap",
                            value: elem
                        })) && _vo272(elem, _path + ".taps[" + _index627 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".taps[" + _index627 + "]",
                            expected: "FullTap",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".taps",
                        expected: "Array<FullTap>",
                        value: input.taps
                    }),
                    2 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "name",
                            "interceptors",
                            "taps"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo276 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.name || "string" == typeof input.name || _report(_exceptionable, {
                        path: _path + ".name",
                        expected: "(string | undefined)",
                        value: input.name
                    }),
                    void 0 === input.tap || true,
                    void 0 === input.call || true,
                    void 0 === input.loop || true,
                    void 0 === input.error || true,
                    void 0 === input.result || true,
                    void 0 === input.done || true,
                    void 0 === input.register || true,
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "name",
                            "tap",
                            "call",
                            "loop",
                            "error",
                            "result",
                            "done",
                            "register"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo277 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.name || "string" == typeof input.name || _report(_exceptionable, {
                        path: _path + ".name",
                        expected: "(string | undefined)",
                        value: input.name
                    }),
                    (Array.isArray(input.interceptors) || _report(_exceptionable, {
                        path: _path + ".interceptors",
                        expected: "Array<HookInterceptor<[ResolveRequest, ResolveContext], void, UnsetAdditionalOptions>>",
                        value: input.interceptors
                    })) && input.interceptors.map((elem, _index628)=>("object" == typeof elem && null !== elem && false === Array.isArray(elem) || _report(_exceptionable, {
                            path: _path + ".interceptors[" + _index628 + "]",
                            expected: "HookInterceptor<[ResolveRequest, ResolveContext], void, UnsetAdditionalOptions>",
                            value: elem
                        })) && _vo278(elem, _path + ".interceptors[" + _index628 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".interceptors[" + _index628 + "]",
                            expected: "HookInterceptor<[ResolveRequest, ResolveContext], void, UnsetAdditionalOptions>",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".interceptors",
                        expected: "Array<HookInterceptor<[ResolveRequest, ResolveContext], void, UnsetAdditionalOptions>>",
                        value: input.interceptors
                    }),
                    (Array.isArray(input.taps) || _report(_exceptionable, {
                        path: _path + ".taps",
                        expected: "Array<FullTap>",
                        value: input.taps
                    })) && input.taps.map((elem, _index629)=>("object" == typeof elem && null !== elem || _report(_exceptionable, {
                            path: _path + ".taps[" + _index629 + "]",
                            expected: "FullTap",
                            value: elem
                        })) && _vo272(elem, _path + ".taps[" + _index629 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".taps[" + _index629 + "]",
                            expected: "FullTap",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".taps",
                        expected: "Array<FullTap>",
                        value: input.taps
                    }),
                    2 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "name",
                            "interceptors",
                            "taps"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo278 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.name || "string" == typeof input.name || _report(_exceptionable, {
                        path: _path + ".name",
                        expected: "(string | undefined)",
                        value: input.name
                    }),
                    void 0 === input.tap || true,
                    void 0 === input.call || true,
                    void 0 === input.loop || true,
                    void 0 === input.error || true,
                    void 0 === input.result || true,
                    void 0 === input.done || true,
                    void 0 === input.register || true,
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "name",
                            "tap",
                            "call",
                            "loop",
                            "error",
                            "result",
                            "done",
                            "register"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo279 = (input, _path, _exceptionable = true)=>[
                    false === _exceptionable || Object.keys(input).map((key)=>{
                        input[key];
                        return true;
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo280 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.ident || "string" == typeof input.ident || _report(_exceptionable, {
                        path: _path + ".ident",
                        expected: "(string | undefined)",
                        value: input.ident
                    }),
                    void 0 === input.loader || "string" == typeof input.loader || _report(_exceptionable, {
                        path: _path + ".loader",
                        expected: "(string | undefined)",
                        value: input.loader
                    }),
                    (null !== input.options || _report(_exceptionable, {
                        path: _path + ".options",
                        expected: "(__type.o70 | string | undefined)",
                        value: input.options
                    })) && (void 0 === input.options || "string" == typeof input.options || ("object" == typeof input.options && null !== input.options && false === Array.isArray(input.options) || _report(_exceptionable, {
                        path: _path + ".options",
                        expected: "(__type.o70 | string | undefined)",
                        value: input.options
                    })) && _vo281(input.options, _path + ".options", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".options",
                        expected: "(__type.o70 | string | undefined)",
                        value: input.options
                    })),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "ident",
                            "loader",
                            "options"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo281 = (input, _path, _exceptionable = true)=>[
                    false === _exceptionable || Object.keys(input).map((key)=>{
                        input[key];
                        return true;
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo282 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.ident || "string" == typeof input.ident || _report(_exceptionable, {
                        path: _path + ".ident",
                        expected: "(string | undefined)",
                        value: input.ident
                    }),
                    void 0 === input.loader || "string" == typeof input.loader || _report(_exceptionable, {
                        path: _path + ".loader",
                        expected: "(string | undefined)",
                        value: input.loader
                    }),
                    (null !== input.options || _report(_exceptionable, {
                        path: _path + ".options",
                        expected: "(__type.o72 | string | undefined)",
                        value: input.options
                    })) && (void 0 === input.options || "string" == typeof input.options || ("object" == typeof input.options && null !== input.options && false === Array.isArray(input.options) || _report(_exceptionable, {
                        path: _path + ".options",
                        expected: "(__type.o72 | string | undefined)",
                        value: input.options
                    })) && _vo283(input.options, _path + ".options", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".options",
                        expected: "(__type.o72 | string | undefined)",
                        value: input.options
                    })),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "ident",
                            "loader",
                            "options"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo283 = (input, _path, _exceptionable = true)=>[
                    false === _exceptionable || Object.keys(input).map((key)=>{
                        input[key];
                        return true;
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo284 = (input, _path, _exceptionable = true)=>[
                    false === _exceptionable || Object.keys(input).map((key)=>{
                        const value = input[key];
                        if (void 0 === value) return true;
                        return (null !== value || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(Array<RuleSetCondition>.o2 | RegExp | RuleSetLogicalConditions.o1 | string)",
                            value: value
                        })) && (void 0 !== value || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(Array<RuleSetCondition>.o2 | RegExp | RuleSetLogicalConditions.o1 | string)",
                            value: value
                        })) && ("function" == typeof value || "string" == typeof value || value instanceof RegExp || Array.isArray(value) && value.map((elem, _index630)=>(null !== elem || _report(_exceptionable, {
                                path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key) + "[" + _index630 + "]",
                                expected: "(Array<RuleSetCondition>.o1 | RegExp | RuleSetLogicalConditions.o1 | string)",
                                value: elem
                            })) && (void 0 !== elem || _report(_exceptionable, {
                                path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key) + "[" + _index630 + "]",
                                expected: "(Array<RuleSetCondition>.o1 | RegExp | RuleSetLogicalConditions.o1 | string)",
                                value: elem
                            })) && ("function" == typeof elem || "string" == typeof elem || elem instanceof RegExp || Array.isArray(elem) && (_va1(elem, _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key) + "[" + _index630 + "]", _exceptionable) || _report(_exceptionable, {
                                path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key) + "[" + _index630 + "]",
                                expected: "Array<RuleSetCondition>.o1",
                                value: elem
                            })) || "object" == typeof elem && null !== elem && false === Array.isArray(elem) && _vo225(elem, _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key) + "[" + _index630 + "]", _exceptionable) || _report(_exceptionable, {
                                path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key) + "[" + _index630 + "]",
                                expected: "(Array<RuleSetCondition>.o1 | RegExp | RuleSetLogicalConditions.o1 | string)",
                                value: elem
                            }) || _report(_exceptionable, {
                                path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key) + "[" + _index630 + "]",
                                expected: "(Array<RuleSetCondition>.o1 | RegExp | RuleSetLogicalConditions.o1 | string)",
                                value: elem
                            }))).every((flag)=>flag) || "object" == typeof value && null !== value && false === Array.isArray(value) && _vo225(value, _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key), _exceptionable) || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(Array<RuleSetCondition>.o2 | RegExp | RuleSetLogicalConditions.o1 | string)",
                            value: value
                        }) || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(Array<RuleSetCondition>.o2 | RegExp | RuleSetLogicalConditions.o1 | string)",
                            value: value
                        }));
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo285 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.asset || ("object" == typeof input.asset && null !== input.asset && false === Array.isArray(input.asset) || _report(_exceptionable, {
                        path: _path + ".asset",
                        expected: "(AssetGeneratorOptions.o1 | undefined)",
                        value: input.asset
                    })) && _vo286(input.asset, _path + ".asset", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".asset",
                        expected: "(AssetGeneratorOptions.o1 | undefined)",
                        value: input.asset
                    }),
                    void 0 === input["asset/inline"] || ("object" == typeof input["asset/inline"] && null !== input["asset/inline"] && false === Array.isArray(input["asset/inline"]) || _report(_exceptionable, {
                        path: _path + "[\"asset/inline\"]",
                        expected: "(AssetInlineGeneratorOptions.o1 | undefined)",
                        value: input["asset/inline"]
                    })) && _vo288(input["asset/inline"], _path + "[\"asset/inline\"]", _exceptionable) || _report(_exceptionable, {
                        path: _path + "[\"asset/inline\"]",
                        expected: "(AssetInlineGeneratorOptions.o1 | undefined)",
                        value: input["asset/inline"]
                    }),
                    void 0 === input["asset/resource"] || ("object" == typeof input["asset/resource"] && null !== input["asset/resource"] && false === Array.isArray(input["asset/resource"]) || _report(_exceptionable, {
                        path: _path + "[\"asset/resource\"]",
                        expected: "(AssetResourceGeneratorOptions.o1 | undefined)",
                        value: input["asset/resource"]
                    })) && _vo289(input["asset/resource"], _path + "[\"asset/resource\"]", _exceptionable) || _report(_exceptionable, {
                        path: _path + "[\"asset/resource\"]",
                        expected: "(AssetResourceGeneratorOptions.o1 | undefined)",
                        value: input["asset/resource"]
                    }),
                    void 0 === input.css || ("object" == typeof input.css && null !== input.css && false === Array.isArray(input.css) || _report(_exceptionable, {
                        path: _path + ".css",
                        expected: "(CssGeneratorOptions.o1 | undefined)",
                        value: input.css
                    })) && _vo290(input.css, _path + ".css", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".css",
                        expected: "(CssGeneratorOptions.o1 | undefined)",
                        value: input.css
                    }),
                    void 0 === input["css/auto"] || ("object" == typeof input["css/auto"] && null !== input["css/auto"] && false === Array.isArray(input["css/auto"]) || _report(_exceptionable, {
                        path: _path + "[\"css/auto\"]",
                        expected: "(CssAutoGeneratorOptions.o1 | undefined)",
                        value: input["css/auto"]
                    })) && _vo291(input["css/auto"], _path + "[\"css/auto\"]", _exceptionable) || _report(_exceptionable, {
                        path: _path + "[\"css/auto\"]",
                        expected: "(CssAutoGeneratorOptions.o1 | undefined)",
                        value: input["css/auto"]
                    }),
                    void 0 === input["css/global"] || ("object" == typeof input["css/global"] && null !== input["css/global"] && false === Array.isArray(input["css/global"]) || _report(_exceptionable, {
                        path: _path + "[\"css/global\"]",
                        expected: "(CssGlobalGeneratorOptions | undefined)",
                        value: input["css/global"]
                    })) && _vo292(input["css/global"], _path + "[\"css/global\"]", _exceptionable) || _report(_exceptionable, {
                        path: _path + "[\"css/global\"]",
                        expected: "(CssGlobalGeneratorOptions | undefined)",
                        value: input["css/global"]
                    }),
                    void 0 === input["css/module"] || ("object" == typeof input["css/module"] && null !== input["css/module"] && false === Array.isArray(input["css/module"]) || _report(_exceptionable, {
                        path: _path + "[\"css/module\"]",
                        expected: "(CssModuleGeneratorOptions | undefined)",
                        value: input["css/module"]
                    })) && _vo293(input["css/module"], _path + "[\"css/module\"]", _exceptionable) || _report(_exceptionable, {
                        path: _path + "[\"css/module\"]",
                        expected: "(CssModuleGeneratorOptions | undefined)",
                        value: input["css/module"]
                    }),
                    void 0 === input.javascript || ("object" == typeof input.javascript && null !== input.javascript && false === Array.isArray(input.javascript) || _report(_exceptionable, {
                        path: _path + ".javascript",
                        expected: "(EmptyGeneratorOptions | undefined)",
                        value: input.javascript
                    })) && _vo294(input.javascript, _path + ".javascript", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".javascript",
                        expected: "(EmptyGeneratorOptions | undefined)",
                        value: input.javascript
                    }),
                    void 0 === input["javascript/auto"] || ("object" == typeof input["javascript/auto"] && null !== input["javascript/auto"] && false === Array.isArray(input["javascript/auto"]) || _report(_exceptionable, {
                        path: _path + '["javascript/auto"]',
                        expected: "(EmptyGeneratorOptions | undefined)",
                        value: input["javascript/auto"]
                    })) && _vo294(input["javascript/auto"], _path + '["javascript/auto"]', _exceptionable) || _report(_exceptionable, {
                        path: _path + '["javascript/auto"]',
                        expected: "(EmptyGeneratorOptions | undefined)",
                        value: input["javascript/auto"]
                    }),
                    void 0 === input["javascript/dynamic"] || ("object" == typeof input["javascript/dynamic"] && null !== input["javascript/dynamic"] && false === Array.isArray(input["javascript/dynamic"]) || _report(_exceptionable, {
                        path: _path + '["javascript/dynamic"]',
                        expected: "(EmptyGeneratorOptions | undefined)",
                        value: input["javascript/dynamic"]
                    })) && _vo294(input["javascript/dynamic"], _path + '["javascript/dynamic"]', _exceptionable) || _report(_exceptionable, {
                        path: _path + '["javascript/dynamic"]',
                        expected: "(EmptyGeneratorOptions | undefined)",
                        value: input["javascript/dynamic"]
                    }),
                    void 0 === input["javascript/esm"] || ("object" == typeof input["javascript/esm"] && null !== input["javascript/esm"] && false === Array.isArray(input["javascript/esm"]) || _report(_exceptionable, {
                        path: _path + '["javascript/esm"]',
                        expected: "(EmptyGeneratorOptions | undefined)",
                        value: input["javascript/esm"]
                    })) && _vo294(input["javascript/esm"], _path + '["javascript/esm"]', _exceptionable) || _report(_exceptionable, {
                        path: _path + '["javascript/esm"]',
                        expected: "(EmptyGeneratorOptions | undefined)",
                        value: input["javascript/esm"]
                    }),
                    void 0 === input.json || ("object" == typeof input.json && null !== input.json && false === Array.isArray(input.json) || _report(_exceptionable, {
                        path: _path + ".json",
                        expected: "(JsonGeneratorOptions.o1 | undefined)",
                        value: input.json
                    })) && _vo295(input.json, _path + ".json", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".json",
                        expected: "(JsonGeneratorOptions.o1 | undefined)",
                        value: input.json
                    }),
                    false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "asset",
                            "asset/inline",
                            "asset/resource",
                            "css",
                            "css/auto",
                            "css/global",
                            "css/module",
                            "javascript",
                            "javascript/auto",
                            "javascript/dynamic",
                            "javascript/esm",
                            "json"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return ("object" == typeof value && null !== value && false === Array.isArray(value) || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "__type.o74",
                            value: value
                        })) && _vo296(value, _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key), _exceptionable) || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "__type.o74",
                            value: value
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo286 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.binary || "boolean" == typeof input.binary || _report(_exceptionable, {
                        path: _path + ".binary",
                        expected: "(boolean | undefined)",
                        value: input.binary
                    }),
                    (null !== input.dataUrl || _report(_exceptionable, {
                        path: _path + ".dataUrl",
                        expected: "(AssetGeneratorDataUrlOptions.o1 | undefined)",
                        value: input.dataUrl
                    })) && (void 0 === input.dataUrl || "function" == typeof input.dataUrl || ("object" == typeof input.dataUrl && null !== input.dataUrl && false === Array.isArray(input.dataUrl) || _report(_exceptionable, {
                        path: _path + ".dataUrl",
                        expected: "(AssetGeneratorDataUrlOptions.o1 | undefined)",
                        value: input.dataUrl
                    })) && _vo287(input.dataUrl, _path + ".dataUrl", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".dataUrl",
                        expected: "(AssetGeneratorDataUrlOptions.o1 | undefined)",
                        value: input.dataUrl
                    })),
                    void 0 === input.emit || "boolean" == typeof input.emit || _report(_exceptionable, {
                        path: _path + ".emit",
                        expected: "(boolean | undefined)",
                        value: input.emit
                    }),
                    (null !== input.filename || _report(_exceptionable, {
                        path: _path + ".filename",
                        expected: "(string | undefined)",
                        value: input.filename
                    })) && (void 0 === input.filename || "function" == typeof input.filename || "string" == typeof input.filename || _report(_exceptionable, {
                        path: _path + ".filename",
                        expected: "(string | undefined)",
                        value: input.filename
                    })),
                    (null !== input.outputPath || _report(_exceptionable, {
                        path: _path + ".outputPath",
                        expected: "(string | undefined)",
                        value: input.outputPath
                    })) && (void 0 === input.outputPath || "function" == typeof input.outputPath || "string" == typeof input.outputPath || _report(_exceptionable, {
                        path: _path + ".outputPath",
                        expected: "(string | undefined)",
                        value: input.outputPath
                    })),
                    (null !== input.publicPath || _report(_exceptionable, {
                        path: _path + ".publicPath",
                        expected: "(string | undefined)",
                        value: input.publicPath
                    })) && (void 0 === input.publicPath || "function" == typeof input.publicPath || "string" == typeof input.publicPath || _report(_exceptionable, {
                        path: _path + ".publicPath",
                        expected: "(string | undefined)",
                        value: input.publicPath
                    })),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "binary",
                            "dataUrl",
                            "emit",
                            "filename",
                            "outputPath",
                            "publicPath"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo287 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.encoding || false === input.encoding || "base64" === input.encoding || _report(_exceptionable, {
                        path: _path + ".encoding",
                        expected: "(\"base64\" | false | undefined)",
                        value: input.encoding
                    }),
                    void 0 === input.mimetype || "string" == typeof input.mimetype || _report(_exceptionable, {
                        path: _path + ".mimetype",
                        expected: "(string | undefined)",
                        value: input.mimetype
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "encoding",
                            "mimetype"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo288 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.binary || "boolean" == typeof input.binary || _report(_exceptionable, {
                        path: _path + ".binary",
                        expected: "(boolean | undefined)",
                        value: input.binary
                    }),
                    (null !== input.dataUrl || _report(_exceptionable, {
                        path: _path + ".dataUrl",
                        expected: "(AssetGeneratorDataUrlOptions.o1 | undefined)",
                        value: input.dataUrl
                    })) && (void 0 === input.dataUrl || "function" == typeof input.dataUrl || ("object" == typeof input.dataUrl && null !== input.dataUrl && false === Array.isArray(input.dataUrl) || _report(_exceptionable, {
                        path: _path + ".dataUrl",
                        expected: "(AssetGeneratorDataUrlOptions.o1 | undefined)",
                        value: input.dataUrl
                    })) && _vo287(input.dataUrl, _path + ".dataUrl", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".dataUrl",
                        expected: "(AssetGeneratorDataUrlOptions.o1 | undefined)",
                        value: input.dataUrl
                    })),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "binary",
                            "dataUrl"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo289 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.binary || "boolean" == typeof input.binary || _report(_exceptionable, {
                        path: _path + ".binary",
                        expected: "(boolean | undefined)",
                        value: input.binary
                    }),
                    void 0 === input.emit || "boolean" == typeof input.emit || _report(_exceptionable, {
                        path: _path + ".emit",
                        expected: "(boolean | undefined)",
                        value: input.emit
                    }),
                    (null !== input.filename || _report(_exceptionable, {
                        path: _path + ".filename",
                        expected: "(string | undefined)",
                        value: input.filename
                    })) && (void 0 === input.filename || "function" == typeof input.filename || "string" == typeof input.filename || _report(_exceptionable, {
                        path: _path + ".filename",
                        expected: "(string | undefined)",
                        value: input.filename
                    })),
                    (null !== input.outputPath || _report(_exceptionable, {
                        path: _path + ".outputPath",
                        expected: "(string | undefined)",
                        value: input.outputPath
                    })) && (void 0 === input.outputPath || "function" == typeof input.outputPath || "string" == typeof input.outputPath || _report(_exceptionable, {
                        path: _path + ".outputPath",
                        expected: "(string | undefined)",
                        value: input.outputPath
                    })),
                    (null !== input.publicPath || _report(_exceptionable, {
                        path: _path + ".publicPath",
                        expected: "(string | undefined)",
                        value: input.publicPath
                    })) && (void 0 === input.publicPath || "function" == typeof input.publicPath || "string" == typeof input.publicPath || _report(_exceptionable, {
                        path: _path + ".publicPath",
                        expected: "(string | undefined)",
                        value: input.publicPath
                    })),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "binary",
                            "emit",
                            "filename",
                            "outputPath",
                            "publicPath"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo290 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.esModule || "boolean" == typeof input.esModule || _report(_exceptionable, {
                        path: _path + ".esModule",
                        expected: "(boolean | undefined)",
                        value: input.esModule
                    }),
                    void 0 === input.exportsOnly || "boolean" == typeof input.exportsOnly || _report(_exceptionable, {
                        path: _path + ".exportsOnly",
                        expected: "(boolean | undefined)",
                        value: input.exportsOnly
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "esModule",
                            "exportsOnly"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo291 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.esModule || "boolean" == typeof input.esModule || _report(_exceptionable, {
                        path: _path + ".esModule",
                        expected: "(boolean | undefined)",
                        value: input.esModule
                    }),
                    (null !== input.exportsConvention || _report(_exceptionable, {
                        path: _path + ".exportsConvention",
                        expected: "(\"as-is\" | \"camel-case\" | \"camel-case-only\" | \"dashes\" | \"dashes-only\" | undefined)",
                        value: input.exportsConvention
                    })) && (void 0 === input.exportsConvention || "function" == typeof input.exportsConvention || "as-is" === input.exportsConvention || "camel-case" === input.exportsConvention || "camel-case-only" === input.exportsConvention || "dashes" === input.exportsConvention || "dashes-only" === input.exportsConvention || _report(_exceptionable, {
                        path: _path + ".exportsConvention",
                        expected: "(\"as-is\" | \"camel-case\" | \"camel-case-only\" | \"dashes\" | \"dashes-only\" | undefined)",
                        value: input.exportsConvention
                    })),
                    void 0 === input.exportsOnly || "boolean" == typeof input.exportsOnly || _report(_exceptionable, {
                        path: _path + ".exportsOnly",
                        expected: "(boolean | undefined)",
                        value: input.exportsOnly
                    }),
                    void 0 === input.localIdentName || "string" == typeof input.localIdentName || _report(_exceptionable, {
                        path: _path + ".localIdentName",
                        expected: "(string | undefined)",
                        value: input.localIdentName
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "esModule",
                            "exportsConvention",
                            "exportsOnly",
                            "localIdentName"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo292 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.esModule || "boolean" == typeof input.esModule || _report(_exceptionable, {
                        path: _path + ".esModule",
                        expected: "(boolean | undefined)",
                        value: input.esModule
                    }),
                    (null !== input.exportsConvention || _report(_exceptionable, {
                        path: _path + ".exportsConvention",
                        expected: "(\"as-is\" | \"camel-case\" | \"camel-case-only\" | \"dashes\" | \"dashes-only\" | undefined)",
                        value: input.exportsConvention
                    })) && (void 0 === input.exportsConvention || "function" == typeof input.exportsConvention || "as-is" === input.exportsConvention || "camel-case" === input.exportsConvention || "camel-case-only" === input.exportsConvention || "dashes" === input.exportsConvention || "dashes-only" === input.exportsConvention || _report(_exceptionable, {
                        path: _path + ".exportsConvention",
                        expected: "(\"as-is\" | \"camel-case\" | \"camel-case-only\" | \"dashes\" | \"dashes-only\" | undefined)",
                        value: input.exportsConvention
                    })),
                    void 0 === input.exportsOnly || "boolean" == typeof input.exportsOnly || _report(_exceptionable, {
                        path: _path + ".exportsOnly",
                        expected: "(boolean | undefined)",
                        value: input.exportsOnly
                    }),
                    void 0 === input.localIdentName || "string" == typeof input.localIdentName || _report(_exceptionable, {
                        path: _path + ".localIdentName",
                        expected: "(string | undefined)",
                        value: input.localIdentName
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "esModule",
                            "exportsConvention",
                            "exportsOnly",
                            "localIdentName"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo293 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.esModule || "boolean" == typeof input.esModule || _report(_exceptionable, {
                        path: _path + ".esModule",
                        expected: "(boolean | undefined)",
                        value: input.esModule
                    }),
                    (null !== input.exportsConvention || _report(_exceptionable, {
                        path: _path + ".exportsConvention",
                        expected: "(\"as-is\" | \"camel-case\" | \"camel-case-only\" | \"dashes\" | \"dashes-only\" | undefined)",
                        value: input.exportsConvention
                    })) && (void 0 === input.exportsConvention || "function" == typeof input.exportsConvention || "as-is" === input.exportsConvention || "camel-case" === input.exportsConvention || "camel-case-only" === input.exportsConvention || "dashes" === input.exportsConvention || "dashes-only" === input.exportsConvention || _report(_exceptionable, {
                        path: _path + ".exportsConvention",
                        expected: "(\"as-is\" | \"camel-case\" | \"camel-case-only\" | \"dashes\" | \"dashes-only\" | undefined)",
                        value: input.exportsConvention
                    })),
                    void 0 === input.exportsOnly || "boolean" == typeof input.exportsOnly || _report(_exceptionable, {
                        path: _path + ".exportsOnly",
                        expected: "(boolean | undefined)",
                        value: input.exportsOnly
                    }),
                    void 0 === input.localIdentName || "string" == typeof input.localIdentName || _report(_exceptionable, {
                        path: _path + ".localIdentName",
                        expected: "(string | undefined)",
                        value: input.localIdentName
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "esModule",
                            "exportsConvention",
                            "exportsOnly",
                            "localIdentName"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo294 = (input, _path, _exceptionable = true)=>[
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo295 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.JSONParse || "boolean" == typeof input.JSONParse || _report(_exceptionable, {
                        path: _path + ".JSONParse",
                        expected: "(boolean | undefined)",
                        value: input.JSONParse
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "JSONParse"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo296 = (input, _path, _exceptionable = true)=>[
                    false === _exceptionable || Object.keys(input).map((key)=>{
                        input[key];
                        return true;
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo297 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.asset || ("object" == typeof input.asset && null !== input.asset && false === Array.isArray(input.asset) || _report(_exceptionable, {
                        path: _path + ".asset",
                        expected: "(AssetParserOptions.o1 | undefined)",
                        value: input.asset
                    })) && _vo298(input.asset, _path + ".asset", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".asset",
                        expected: "(AssetParserOptions.o1 | undefined)",
                        value: input.asset
                    }),
                    void 0 === input["asset/inline"] || ("object" == typeof input["asset/inline"] && null !== input["asset/inline"] && false === Array.isArray(input["asset/inline"]) || _report(_exceptionable, {
                        path: _path + "[\"asset/inline\"]",
                        expected: "(EmptyParserOptions | undefined)",
                        value: input["asset/inline"]
                    })) && _vo300(input["asset/inline"], _path + "[\"asset/inline\"]", _exceptionable) || _report(_exceptionable, {
                        path: _path + "[\"asset/inline\"]",
                        expected: "(EmptyParserOptions | undefined)",
                        value: input["asset/inline"]
                    }),
                    void 0 === input["asset/resource"] || ("object" == typeof input["asset/resource"] && null !== input["asset/resource"] && false === Array.isArray(input["asset/resource"]) || _report(_exceptionable, {
                        path: _path + "[\"asset/resource\"]",
                        expected: "(EmptyParserOptions | undefined)",
                        value: input["asset/resource"]
                    })) && _vo300(input["asset/resource"], _path + "[\"asset/resource\"]", _exceptionable) || _report(_exceptionable, {
                        path: _path + "[\"asset/resource\"]",
                        expected: "(EmptyParserOptions | undefined)",
                        value: input["asset/resource"]
                    }),
                    void 0 === input["asset/source"] || ("object" == typeof input["asset/source"] && null !== input["asset/source"] && false === Array.isArray(input["asset/source"]) || _report(_exceptionable, {
                        path: _path + "[\"asset/source\"]",
                        expected: "(EmptyParserOptions | undefined)",
                        value: input["asset/source"]
                    })) && _vo300(input["asset/source"], _path + "[\"asset/source\"]", _exceptionable) || _report(_exceptionable, {
                        path: _path + "[\"asset/source\"]",
                        expected: "(EmptyParserOptions | undefined)",
                        value: input["asset/source"]
                    }),
                    void 0 === input.css || ("object" == typeof input.css && null !== input.css && false === Array.isArray(input.css) || _report(_exceptionable, {
                        path: _path + ".css",
                        expected: "(CssParserOptions.o1 | undefined)",
                        value: input.css
                    })) && _vo301(input.css, _path + ".css", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".css",
                        expected: "(CssParserOptions.o1 | undefined)",
                        value: input.css
                    }),
                    void 0 === input["css/auto"] || ("object" == typeof input["css/auto"] && null !== input["css/auto"] && false === Array.isArray(input["css/auto"]) || _report(_exceptionable, {
                        path: _path + "[\"css/auto\"]",
                        expected: "(CssAutoParserOptions.o1 | undefined)",
                        value: input["css/auto"]
                    })) && _vo302(input["css/auto"], _path + "[\"css/auto\"]", _exceptionable) || _report(_exceptionable, {
                        path: _path + "[\"css/auto\"]",
                        expected: "(CssAutoParserOptions.o1 | undefined)",
                        value: input["css/auto"]
                    }),
                    void 0 === input["css/global"] || ("object" == typeof input["css/global"] && null !== input["css/global"] && false === Array.isArray(input["css/global"]) || _report(_exceptionable, {
                        path: _path + "[\"css/global\"]",
                        expected: "(CssGlobalParserOptions | undefined)",
                        value: input["css/global"]
                    })) && _vo303(input["css/global"], _path + "[\"css/global\"]", _exceptionable) || _report(_exceptionable, {
                        path: _path + "[\"css/global\"]",
                        expected: "(CssGlobalParserOptions | undefined)",
                        value: input["css/global"]
                    }),
                    void 0 === input["css/module"] || ("object" == typeof input["css/module"] && null !== input["css/module"] && false === Array.isArray(input["css/module"]) || _report(_exceptionable, {
                        path: _path + "[\"css/module\"]",
                        expected: "(CssModuleParserOptions.o1 | undefined)",
                        value: input["css/module"]
                    })) && _vo304(input["css/module"], _path + "[\"css/module\"]", _exceptionable) || _report(_exceptionable, {
                        path: _path + "[\"css/module\"]",
                        expected: "(CssModuleParserOptions.o1 | undefined)",
                        value: input["css/module"]
                    }),
                    void 0 === input.javascript || ("object" == typeof input.javascript && null !== input.javascript && false === Array.isArray(input.javascript) || _report(_exceptionable, {
                        path: _path + ".javascript",
                        expected: "(JavascriptParserOptions.o1 | undefined)",
                        value: input.javascript
                    })) && _vo305(input.javascript, _path + ".javascript", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".javascript",
                        expected: "(JavascriptParserOptions.o1 | undefined)",
                        value: input.javascript
                    }),
                    void 0 === input["javascript/auto"] || ("object" == typeof input["javascript/auto"] && null !== input["javascript/auto"] && false === Array.isArray(input["javascript/auto"]) || _report(_exceptionable, {
                        path: _path + '["javascript/auto"]',
                        expected: "(JavascriptParserOptions.o1 | undefined)",
                        value: input["javascript/auto"]
                    })) && _vo305(input["javascript/auto"], _path + '["javascript/auto"]', _exceptionable) || _report(_exceptionable, {
                        path: _path + '["javascript/auto"]',
                        expected: "(JavascriptParserOptions.o1 | undefined)",
                        value: input["javascript/auto"]
                    }),
                    void 0 === input["javascript/dynamic"] || ("object" == typeof input["javascript/dynamic"] && null !== input["javascript/dynamic"] && false === Array.isArray(input["javascript/dynamic"]) || _report(_exceptionable, {
                        path: _path + '["javascript/dynamic"]',
                        expected: "(JavascriptParserOptions.o1 | undefined)",
                        value: input["javascript/dynamic"]
                    })) && _vo305(input["javascript/dynamic"], _path + '["javascript/dynamic"]', _exceptionable) || _report(_exceptionable, {
                        path: _path + '["javascript/dynamic"]',
                        expected: "(JavascriptParserOptions.o1 | undefined)",
                        value: input["javascript/dynamic"]
                    }),
                    void 0 === input["javascript/esm"] || ("object" == typeof input["javascript/esm"] && null !== input["javascript/esm"] && false === Array.isArray(input["javascript/esm"]) || _report(_exceptionable, {
                        path: _path + '["javascript/esm"]',
                        expected: "(JavascriptParserOptions.o1 | undefined)",
                        value: input["javascript/esm"]
                    })) && _vo305(input["javascript/esm"], _path + '["javascript/esm"]', _exceptionable) || _report(_exceptionable, {
                        path: _path + '["javascript/esm"]',
                        expected: "(JavascriptParserOptions.o1 | undefined)",
                        value: input["javascript/esm"]
                    }),
                    void 0 === input.json || ("object" == typeof input.json && null !== input.json && false === Array.isArray(input.json) || _report(_exceptionable, {
                        path: _path + ".json",
                        expected: "(JsonParserOptions.o1 | undefined)",
                        value: input.json
                    })) && _vo308(input.json, _path + ".json", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".json",
                        expected: "(JsonParserOptions.o1 | undefined)",
                        value: input.json
                    }),
                    false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "asset",
                            "asset/inline",
                            "asset/resource",
                            "asset/source",
                            "css",
                            "css/auto",
                            "css/global",
                            "css/module",
                            "javascript",
                            "javascript/auto",
                            "javascript/dynamic",
                            "javascript/esm",
                            "json"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return ("object" == typeof value && null !== value && false === Array.isArray(value) || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "__type.o76",
                            value: value
                        })) && _vo309(value, _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key), _exceptionable) || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "__type.o76",
                            value: value
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo298 = (input, _path, _exceptionable = true)=>[
                    (null !== input.dataUrlCondition || _report(_exceptionable, {
                        path: _path + ".dataUrlCondition",
                        expected: "(AssetParserDataUrlOptions.o1 | undefined)",
                        value: input.dataUrlCondition
                    })) && (void 0 === input.dataUrlCondition || "function" == typeof input.dataUrlCondition || ("object" == typeof input.dataUrlCondition && null !== input.dataUrlCondition && false === Array.isArray(input.dataUrlCondition) || _report(_exceptionable, {
                        path: _path + ".dataUrlCondition",
                        expected: "(AssetParserDataUrlOptions.o1 | undefined)",
                        value: input.dataUrlCondition
                    })) && _vo299(input.dataUrlCondition, _path + ".dataUrlCondition", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".dataUrlCondition",
                        expected: "(AssetParserDataUrlOptions.o1 | undefined)",
                        value: input.dataUrlCondition
                    })),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "dataUrlCondition"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo299 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.maxSize || "number" == typeof input.maxSize || _report(_exceptionable, {
                        path: _path + ".maxSize",
                        expected: "(number | undefined)",
                        value: input.maxSize
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "maxSize"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo300 = (input, _path, _exceptionable = true)=>[
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo301 = (input, _path, _exceptionable = true)=>[
                    void 0 === input["import"] || "boolean" == typeof input["import"] || _report(_exceptionable, {
                        path: _path + "[\"import\"]",
                        expected: "(boolean | undefined)",
                        value: input["import"]
                    }),
                    void 0 === input.namedExports || "boolean" == typeof input.namedExports || _report(_exceptionable, {
                        path: _path + ".namedExports",
                        expected: "(boolean | undefined)",
                        value: input.namedExports
                    }),
                    void 0 === input.url || "boolean" == typeof input.url || _report(_exceptionable, {
                        path: _path + ".url",
                        expected: "(boolean | undefined)",
                        value: input.url
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "import",
                            "namedExports",
                            "url"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo302 = (input, _path, _exceptionable = true)=>[
                    void 0 === input["import"] || "boolean" == typeof input["import"] || _report(_exceptionable, {
                        path: _path + "[\"import\"]",
                        expected: "(boolean | undefined)",
                        value: input["import"]
                    }),
                    void 0 === input.namedExports || "boolean" == typeof input.namedExports || _report(_exceptionable, {
                        path: _path + ".namedExports",
                        expected: "(boolean | undefined)",
                        value: input.namedExports
                    }),
                    void 0 === input.url || "boolean" == typeof input.url || _report(_exceptionable, {
                        path: _path + ".url",
                        expected: "(boolean | undefined)",
                        value: input.url
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "import",
                            "namedExports",
                            "url"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo303 = (input, _path, _exceptionable = true)=>[
                    void 0 === input["import"] || "boolean" == typeof input["import"] || _report(_exceptionable, {
                        path: _path + "[\"import\"]",
                        expected: "(boolean | undefined)",
                        value: input["import"]
                    }),
                    void 0 === input.namedExports || "boolean" == typeof input.namedExports || _report(_exceptionable, {
                        path: _path + ".namedExports",
                        expected: "(boolean | undefined)",
                        value: input.namedExports
                    }),
                    void 0 === input.url || "boolean" == typeof input.url || _report(_exceptionable, {
                        path: _path + ".url",
                        expected: "(boolean | undefined)",
                        value: input.url
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "import",
                            "namedExports",
                            "url"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo304 = (input, _path, _exceptionable = true)=>[
                    void 0 === input["import"] || "boolean" == typeof input["import"] || _report(_exceptionable, {
                        path: _path + "[\"import\"]",
                        expected: "(boolean | undefined)",
                        value: input["import"]
                    }),
                    void 0 === input.namedExports || "boolean" == typeof input.namedExports || _report(_exceptionable, {
                        path: _path + ".namedExports",
                        expected: "(boolean | undefined)",
                        value: input.namedExports
                    }),
                    void 0 === input.url || "boolean" == typeof input.url || _report(_exceptionable, {
                        path: _path + ".url",
                        expected: "(boolean | undefined)",
                        value: input.url
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "import",
                            "namedExports",
                            "url"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo305 = (input, _path, _exceptionable = true)=>[
                    (null !== input.amd || _report(_exceptionable, {
                        path: _path + ".amd",
                        expected: "(__type.o75 | false | undefined)",
                        value: input.amd
                    })) && (void 0 === input.amd || false === input.amd || ("object" == typeof input.amd && null !== input.amd && false === Array.isArray(input.amd) || _report(_exceptionable, {
                        path: _path + ".amd",
                        expected: "(__type.o75 | false | undefined)",
                        value: input.amd
                    })) && _vo306(input.amd, _path + ".amd", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".amd",
                        expected: "(__type.o75 | false | undefined)",
                        value: input.amd
                    })),
                    void 0 === input.browserify || "boolean" == typeof input.browserify || _report(_exceptionable, {
                        path: _path + ".browserify",
                        expected: "(boolean | undefined)",
                        value: input.browserify
                    }),
                    void 0 === input.commonjs || "boolean" == typeof input.commonjs || _report(_exceptionable, {
                        path: _path + ".commonjs",
                        expected: "(boolean | undefined)",
                        value: input.commonjs
                    }),
                    void 0 === input.commonjsMagicComments || "boolean" == typeof input.commonjsMagicComments || _report(_exceptionable, {
                        path: _path + ".commonjsMagicComments",
                        expected: "(boolean | undefined)",
                        value: input.commonjsMagicComments
                    }),
                    void 0 === input.createRequire || "string" == typeof input.createRequire || "boolean" == typeof input.createRequire || _report(_exceptionable, {
                        path: _path + ".createRequire",
                        expected: "(boolean | string | undefined)",
                        value: input.createRequire
                    }),
                    void 0 === input.deferImport || "boolean" == typeof input.deferImport || _report(_exceptionable, {
                        path: _path + ".deferImport",
                        expected: "(boolean | undefined)",
                        value: input.deferImport
                    }),
                    void 0 === input.dynamicImportFetchPriority || false === input.dynamicImportFetchPriority || "auto" === input.dynamicImportFetchPriority || "low" === input.dynamicImportFetchPriority || "high" === input.dynamicImportFetchPriority || _report(_exceptionable, {
                        path: _path + ".dynamicImportFetchPriority",
                        expected: "(\"auto\" | \"high\" | \"low\" | false | undefined)",
                        value: input.dynamicImportFetchPriority
                    }),
                    void 0 === input.dynamicImportMode || "weak" === input.dynamicImportMode || "eager" === input.dynamicImportMode || "lazy" === input.dynamicImportMode || "lazy-once" === input.dynamicImportMode || _report(_exceptionable, {
                        path: _path + ".dynamicImportMode",
                        expected: "(\"eager\" | \"lazy\" | \"lazy-once\" | \"weak\" | undefined)",
                        value: input.dynamicImportMode
                    }),
                    void 0 === input.dynamicImportPrefetch || "number" == typeof input.dynamicImportPrefetch || "boolean" == typeof input.dynamicImportPrefetch || _report(_exceptionable, {
                        path: _path + ".dynamicImportPrefetch",
                        expected: "(boolean | number | undefined)",
                        value: input.dynamicImportPrefetch
                    }),
                    void 0 === input.dynamicImportPreload || "number" == typeof input.dynamicImportPreload || "boolean" == typeof input.dynamicImportPreload || _report(_exceptionable, {
                        path: _path + ".dynamicImportPreload",
                        expected: "(boolean | number | undefined)",
                        value: input.dynamicImportPreload
                    }),
                    void 0 === input.dynamicUrl || "boolean" == typeof input.dynamicUrl || _report(_exceptionable, {
                        path: _path + ".dynamicUrl",
                        expected: "(boolean | undefined)",
                        value: input.dynamicUrl
                    }),
                    void 0 === input.exportsPresence || false === input.exportsPresence || "auto" === input.exportsPresence || "error" === input.exportsPresence || "warn" === input.exportsPresence || _report(_exceptionable, {
                        path: _path + ".exportsPresence",
                        expected: "(\"auto\" | \"error\" | \"warn\" | false | undefined)",
                        value: input.exportsPresence
                    }),
                    void 0 === input.exprContextCritical || "boolean" == typeof input.exprContextCritical || _report(_exceptionable, {
                        path: _path + ".exprContextCritical",
                        expected: "(boolean | undefined)",
                        value: input.exprContextCritical
                    }),
                    void 0 === input.exprContextRecursive || "boolean" == typeof input.exprContextRecursive || _report(_exceptionable, {
                        path: _path + ".exprContextRecursive",
                        expected: "(boolean | undefined)",
                        value: input.exprContextRecursive
                    }),
                    (null !== input.exprContextRegExp || _report(_exceptionable, {
                        path: _path + ".exprContextRegExp",
                        expected: "(RegExp | boolean | undefined)",
                        value: input.exprContextRegExp
                    })) && (void 0 === input.exprContextRegExp || "boolean" == typeof input.exprContextRegExp || input.exprContextRegExp instanceof RegExp || _report(_exceptionable, {
                        path: _path + ".exprContextRegExp",
                        expected: "(RegExp | boolean | undefined)",
                        value: input.exprContextRegExp
                    })),
                    void 0 === input.exprContextRequest || "string" == typeof input.exprContextRequest || _report(_exceptionable, {
                        path: _path + ".exprContextRequest",
                        expected: "(string | undefined)",
                        value: input.exprContextRequest
                    }),
                    void 0 === input.harmony || "boolean" == typeof input.harmony || _report(_exceptionable, {
                        path: _path + ".harmony",
                        expected: "(boolean | undefined)",
                        value: input.harmony
                    }),
                    void 0 === input["import"] || "boolean" == typeof input["import"] || _report(_exceptionable, {
                        path: _path + "[\"import\"]",
                        expected: "(boolean | undefined)",
                        value: input["import"]
                    }),
                    void 0 === input.importExportsPresence || false === input.importExportsPresence || "auto" === input.importExportsPresence || "error" === input.importExportsPresence || "warn" === input.importExportsPresence || _report(_exceptionable, {
                        path: _path + ".importExportsPresence",
                        expected: "(\"auto\" | \"error\" | \"warn\" | false | undefined)",
                        value: input.importExportsPresence
                    }),
                    void 0 === input.importMeta || "boolean" == typeof input.importMeta || _report(_exceptionable, {
                        path: _path + ".importMeta",
                        expected: "(boolean | undefined)",
                        value: input.importMeta
                    }),
                    void 0 === input.importMetaContext || "boolean" == typeof input.importMetaContext || _report(_exceptionable, {
                        path: _path + ".importMetaContext",
                        expected: "(boolean | undefined)",
                        value: input.importMetaContext
                    }),
                    (null !== input.node || _report(_exceptionable, {
                        path: _path + ".node",
                        expected: "(NodeOptions.o1 | false | undefined)",
                        value: input.node
                    })) && (void 0 === input.node || false === input.node || ("object" == typeof input.node && null !== input.node && false === Array.isArray(input.node) || _report(_exceptionable, {
                        path: _path + ".node",
                        expected: "(NodeOptions.o1 | false | undefined)",
                        value: input.node
                    })) && _vo307(input.node, _path + ".node", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".node",
                        expected: "(NodeOptions.o1 | false | undefined)",
                        value: input.node
                    })),
                    void 0 === input.overrideStrict || "strict" === input.overrideStrict || "non-strict" === input.overrideStrict || _report(_exceptionable, {
                        path: _path + ".overrideStrict",
                        expected: "(\"non-strict\" | \"strict\" | undefined)",
                        value: input.overrideStrict
                    }),
                    void 0 === input.reexportExportsPresence || false === input.reexportExportsPresence || "auto" === input.reexportExportsPresence || "error" === input.reexportExportsPresence || "warn" === input.reexportExportsPresence || _report(_exceptionable, {
                        path: _path + ".reexportExportsPresence",
                        expected: "(\"auto\" | \"error\" | \"warn\" | false | undefined)",
                        value: input.reexportExportsPresence
                    }),
                    void 0 === input.requireContext || "boolean" == typeof input.requireContext || _report(_exceptionable, {
                        path: _path + ".requireContext",
                        expected: "(boolean | undefined)",
                        value: input.requireContext
                    }),
                    void 0 === input.requireEnsure || "boolean" == typeof input.requireEnsure || _report(_exceptionable, {
                        path: _path + ".requireEnsure",
                        expected: "(boolean | undefined)",
                        value: input.requireEnsure
                    }),
                    void 0 === input.requireInclude || "boolean" == typeof input.requireInclude || _report(_exceptionable, {
                        path: _path + ".requireInclude",
                        expected: "(boolean | undefined)",
                        value: input.requireInclude
                    }),
                    void 0 === input.requireJs || "boolean" == typeof input.requireJs || _report(_exceptionable, {
                        path: _path + ".requireJs",
                        expected: "(boolean | undefined)",
                        value: input.requireJs
                    }),
                    void 0 === input.strictExportPresence || "boolean" == typeof input.strictExportPresence || _report(_exceptionable, {
                        path: _path + ".strictExportPresence",
                        expected: "(boolean | undefined)",
                        value: input.strictExportPresence
                    }),
                    void 0 === input.strictThisContextOnImports || "boolean" == typeof input.strictThisContextOnImports || _report(_exceptionable, {
                        path: _path + ".strictThisContextOnImports",
                        expected: "(boolean | undefined)",
                        value: input.strictThisContextOnImports
                    }),
                    void 0 === input.system || "boolean" == typeof input.system || _report(_exceptionable, {
                        path: _path + ".system",
                        expected: "(boolean | undefined)",
                        value: input.system
                    }),
                    void 0 === input.unknownContextCritical || "boolean" == typeof input.unknownContextCritical || _report(_exceptionable, {
                        path: _path + ".unknownContextCritical",
                        expected: "(boolean | undefined)",
                        value: input.unknownContextCritical
                    }),
                    void 0 === input.unknownContextRecursive || "boolean" == typeof input.unknownContextRecursive || _report(_exceptionable, {
                        path: _path + ".unknownContextRecursive",
                        expected: "(boolean | undefined)",
                        value: input.unknownContextRecursive
                    }),
                    (null !== input.unknownContextRegExp || _report(_exceptionable, {
                        path: _path + ".unknownContextRegExp",
                        expected: "(RegExp | boolean | undefined)",
                        value: input.unknownContextRegExp
                    })) && (void 0 === input.unknownContextRegExp || "boolean" == typeof input.unknownContextRegExp || input.unknownContextRegExp instanceof RegExp || _report(_exceptionable, {
                        path: _path + ".unknownContextRegExp",
                        expected: "(RegExp | boolean | undefined)",
                        value: input.unknownContextRegExp
                    })),
                    void 0 === input.unknownContextRequest || "string" == typeof input.unknownContextRequest || _report(_exceptionable, {
                        path: _path + ".unknownContextRequest",
                        expected: "(string | undefined)",
                        value: input.unknownContextRequest
                    }),
                    void 0 === input.url || "relative" === input.url || "boolean" == typeof input.url || _report(_exceptionable, {
                        path: _path + ".url",
                        expected: "(\"relative\" | boolean | undefined)",
                        value: input.url
                    }),
                    (null !== input.worker || _report(_exceptionable, {
                        path: _path + ".worker",
                        expected: "(Array<string> | boolean | undefined)",
                        value: input.worker
                    })) && (void 0 === input.worker || "boolean" == typeof input.worker || (Array.isArray(input.worker) || _report(_exceptionable, {
                        path: _path + ".worker",
                        expected: "(Array<string> | boolean | undefined)",
                        value: input.worker
                    })) && input.worker.map((elem, _index631)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".worker[" + _index631 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".worker",
                        expected: "(Array<string> | boolean | undefined)",
                        value: input.worker
                    })),
                    void 0 === input.wrappedContextCritical || "boolean" == typeof input.wrappedContextCritical || _report(_exceptionable, {
                        path: _path + ".wrappedContextCritical",
                        expected: "(boolean | undefined)",
                        value: input.wrappedContextCritical
                    }),
                    void 0 === input.wrappedContextRecursive || "boolean" == typeof input.wrappedContextRecursive || _report(_exceptionable, {
                        path: _path + ".wrappedContextRecursive",
                        expected: "(boolean | undefined)",
                        value: input.wrappedContextRecursive
                    }),
                    void 0 === input.wrappedContextRegExp || input.wrappedContextRegExp instanceof RegExp || _report(_exceptionable, {
                        path: _path + ".wrappedContextRegExp",
                        expected: "(RegExp | undefined)",
                        value: input.wrappedContextRegExp
                    }),
                    false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "amd",
                            "browserify",
                            "commonjs",
                            "commonjsMagicComments",
                            "createRequire",
                            "deferImport",
                            "dynamicImportFetchPriority",
                            "dynamicImportMode",
                            "dynamicImportPrefetch",
                            "dynamicImportPreload",
                            "dynamicUrl",
                            "exportsPresence",
                            "exprContextCritical",
                            "exprContextRecursive",
                            "exprContextRegExp",
                            "exprContextRequest",
                            "harmony",
                            "import",
                            "importExportsPresence",
                            "importMeta",
                            "importMetaContext",
                            "node",
                            "overrideStrict",
                            "reexportExportsPresence",
                            "requireContext",
                            "requireEnsure",
                            "requireInclude",
                            "requireJs",
                            "strictExportPresence",
                            "strictThisContextOnImports",
                            "system",
                            "unknownContextCritical",
                            "unknownContextRecursive",
                            "unknownContextRegExp",
                            "unknownContextRequest",
                            "url",
                            "worker",
                            "wrappedContextCritical",
                            "wrappedContextRecursive",
                            "wrappedContextRegExp"
                        ].some((prop)=>key === prop)) return true;
                        input[key];
                        return true;
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo306 = (input, _path, _exceptionable = true)=>[
                    false === _exceptionable || Object.keys(input).map((key)=>{
                        input[key];
                        return true;
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo307 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.__dirname || "warn-mock" === input.__dirname || "mock" === input.__dirname || "eval-only" === input.__dirname || "node-module" === input.__dirname || "boolean" == typeof input.__dirname || _report(_exceptionable, {
                        path: _path + ".__dirname",
                        expected: "(\"eval-only\" | \"mock\" | \"node-module\" | \"warn-mock\" | boolean | undefined)",
                        value: input.__dirname
                    }),
                    void 0 === input.__filename || "warn-mock" === input.__filename || "mock" === input.__filename || "eval-only" === input.__filename || "node-module" === input.__filename || "boolean" == typeof input.__filename || _report(_exceptionable, {
                        path: _path + ".__filename",
                        expected: "(\"eval-only\" | \"mock\" | \"node-module\" | \"warn-mock\" | boolean | undefined)",
                        value: input.__filename
                    }),
                    void 0 === input.global || "warn" === input.global || "boolean" == typeof input.global || _report(_exceptionable, {
                        path: _path + ".global",
                        expected: "(\"warn\" | boolean | undefined)",
                        value: input.global
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "__dirname",
                            "__filename",
                            "global"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo308 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.exportsDepth || "number" == typeof input.exportsDepth || _report(_exceptionable, {
                        path: _path + ".exportsDepth",
                        expected: "(number | undefined)",
                        value: input.exportsDepth
                    }),
                    void 0 === input.parse || true,
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "exportsDepth",
                            "parse"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo309 = (input, _path, _exceptionable = true)=>[
                    false === _exceptionable || Object.keys(input).map((key)=>{
                        input[key];
                        return true;
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo310 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.avoidEntryIife || "boolean" == typeof input.avoidEntryIife || _report(_exceptionable, {
                        path: _path + ".avoidEntryIife",
                        expected: "(boolean | undefined)",
                        value: input.avoidEntryIife
                    }),
                    void 0 === input.checkWasmTypes || "boolean" == typeof input.checkWasmTypes || _report(_exceptionable, {
                        path: _path + ".checkWasmTypes",
                        expected: "(boolean | undefined)",
                        value: input.checkWasmTypes
                    }),
                    void 0 === input.chunkIds || false === input.chunkIds || "named" === input.chunkIds || "natural" === input.chunkIds || "deterministic" === input.chunkIds || "size" === input.chunkIds || "total-size" === input.chunkIds || _report(_exceptionable, {
                        path: _path + ".chunkIds",
                        expected: "(\"deterministic\" | \"named\" | \"natural\" | \"size\" | \"total-size\" | false | undefined)",
                        value: input.chunkIds
                    }),
                    void 0 === input.concatenateModules || "boolean" == typeof input.concatenateModules || _report(_exceptionable, {
                        path: _path + ".concatenateModules",
                        expected: "(boolean | undefined)",
                        value: input.concatenateModules
                    }),
                    void 0 === input.emitOnErrors || "boolean" == typeof input.emitOnErrors || _report(_exceptionable, {
                        path: _path + ".emitOnErrors",
                        expected: "(boolean | undefined)",
                        value: input.emitOnErrors
                    }),
                    void 0 === input.flagIncludedChunks || "boolean" == typeof input.flagIncludedChunks || _report(_exceptionable, {
                        path: _path + ".flagIncludedChunks",
                        expected: "(boolean | undefined)",
                        value: input.flagIncludedChunks
                    }),
                    void 0 === input.innerGraph || "boolean" == typeof input.innerGraph || _report(_exceptionable, {
                        path: _path + ".innerGraph",
                        expected: "(boolean | undefined)",
                        value: input.innerGraph
                    }),
                    void 0 === input.mangleExports || "deterministic" === input.mangleExports || "size" === input.mangleExports || "boolean" == typeof input.mangleExports || _report(_exceptionable, {
                        path: _path + ".mangleExports",
                        expected: "(\"deterministic\" | \"size\" | boolean | undefined)",
                        value: input.mangleExports
                    }),
                    void 0 === input.mangleWasmImports || "boolean" == typeof input.mangleWasmImports || _report(_exceptionable, {
                        path: _path + ".mangleWasmImports",
                        expected: "(boolean | undefined)",
                        value: input.mangleWasmImports
                    }),
                    void 0 === input.mergeDuplicateChunks || "boolean" == typeof input.mergeDuplicateChunks || _report(_exceptionable, {
                        path: _path + ".mergeDuplicateChunks",
                        expected: "(boolean | undefined)",
                        value: input.mergeDuplicateChunks
                    }),
                    void 0 === input.minimize || "boolean" == typeof input.minimize || _report(_exceptionable, {
                        path: _path + ".minimize",
                        expected: "(boolean | undefined)",
                        value: input.minimize
                    }),
                    void 0 === input.minimizer || (Array.isArray(input.minimizer) || _report(_exceptionable, {
                        path: _path + ".minimizer",
                        expected: "(Array<false | \"\" | 0 | \"...\" | ((this: Compiler, compiler: Compiler) => void) | WebpackPluginInstance | null | undefined> | undefined)",
                        value: input.minimizer
                    })) && input.minimizer.map((elem, _index632)=>null == elem || "function" == typeof elem || false === elem || "" === elem || "..." === elem || 0 === elem || ("object" == typeof elem && null !== elem || _report(_exceptionable, {
                            path: _path + ".minimizer[" + _index632 + "]",
                            expected: "(\"\" | \"...\" | 0 | WebpackPluginInstance.o1 | false | null | undefined)",
                            value: elem
                        })) && _vo311(elem, _path + ".minimizer[" + _index632 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".minimizer[" + _index632 + "]",
                            expected: "(\"\" | \"...\" | 0 | WebpackPluginInstance.o1 | false | null | undefined)",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".minimizer",
                        expected: "(Array<false | \"\" | 0 | \"...\" | ((this: Compiler, compiler: Compiler) => void) | WebpackPluginInstance | null | undefined> | undefined)",
                        value: input.minimizer
                    }),
                    void 0 === input.moduleIds || false === input.moduleIds || "named" === input.moduleIds || "natural" === input.moduleIds || "deterministic" === input.moduleIds || "size" === input.moduleIds || "hashed" === input.moduleIds || _report(_exceptionable, {
                        path: _path + ".moduleIds",
                        expected: "(\"deterministic\" | \"hashed\" | \"named\" | \"natural\" | \"size\" | false | undefined)",
                        value: input.moduleIds
                    }),
                    void 0 === input.noEmitOnErrors || "boolean" == typeof input.noEmitOnErrors || _report(_exceptionable, {
                        path: _path + ".noEmitOnErrors",
                        expected: "(boolean | undefined)",
                        value: input.noEmitOnErrors
                    }),
                    void 0 === input.nodeEnv || false === input.nodeEnv || "string" == typeof input.nodeEnv || _report(_exceptionable, {
                        path: _path + ".nodeEnv",
                        expected: "(false | string | undefined)",
                        value: input.nodeEnv
                    }),
                    void 0 === input.portableRecords || "boolean" == typeof input.portableRecords || _report(_exceptionable, {
                        path: _path + ".portableRecords",
                        expected: "(boolean | undefined)",
                        value: input.portableRecords
                    }),
                    void 0 === input.providedExports || "boolean" == typeof input.providedExports || _report(_exceptionable, {
                        path: _path + ".providedExports",
                        expected: "(boolean | undefined)",
                        value: input.providedExports
                    }),
                    void 0 === input.realContentHash || "boolean" == typeof input.realContentHash || _report(_exceptionable, {
                        path: _path + ".realContentHash",
                        expected: "(boolean | undefined)",
                        value: input.realContentHash
                    }),
                    void 0 === input.removeAvailableModules || "boolean" == typeof input.removeAvailableModules || _report(_exceptionable, {
                        path: _path + ".removeAvailableModules",
                        expected: "(boolean | undefined)",
                        value: input.removeAvailableModules
                    }),
                    void 0 === input.removeEmptyChunks || "boolean" == typeof input.removeEmptyChunks || _report(_exceptionable, {
                        path: _path + ".removeEmptyChunks",
                        expected: "(boolean | undefined)",
                        value: input.removeEmptyChunks
                    }),
                    (null !== input.runtimeChunk || _report(_exceptionable, {
                        path: _path + ".runtimeChunk",
                        expected: "(\"multiple\" | \"single\" | __type.o77 | boolean | undefined)",
                        value: input.runtimeChunk
                    })) && (void 0 === input.runtimeChunk || "single" === input.runtimeChunk || "multiple" === input.runtimeChunk || "boolean" == typeof input.runtimeChunk || ("object" == typeof input.runtimeChunk && null !== input.runtimeChunk && false === Array.isArray(input.runtimeChunk) || _report(_exceptionable, {
                        path: _path + ".runtimeChunk",
                        expected: "(\"multiple\" | \"single\" | __type.o77 | boolean | undefined)",
                        value: input.runtimeChunk
                    })) && _vo312(input.runtimeChunk, _path + ".runtimeChunk", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".runtimeChunk",
                        expected: "(\"multiple\" | \"single\" | __type.o77 | boolean | undefined)",
                        value: input.runtimeChunk
                    })),
                    void 0 === input.sideEffects || "flag" === input.sideEffects || "boolean" == typeof input.sideEffects || _report(_exceptionable, {
                        path: _path + ".sideEffects",
                        expected: "(\"flag\" | boolean | undefined)",
                        value: input.sideEffects
                    }),
                    (null !== input.splitChunks || _report(_exceptionable, {
                        path: _path + ".splitChunks",
                        expected: "(OptimizationSplitChunksOptions.o1 | false | undefined)",
                        value: input.splitChunks
                    })) && (void 0 === input.splitChunks || false === input.splitChunks || ("object" == typeof input.splitChunks && null !== input.splitChunks && false === Array.isArray(input.splitChunks) || _report(_exceptionable, {
                        path: _path + ".splitChunks",
                        expected: "(OptimizationSplitChunksOptions.o1 | false | undefined)",
                        value: input.splitChunks
                    })) && _vo313(input.splitChunks, _path + ".splitChunks", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".splitChunks",
                        expected: "(OptimizationSplitChunksOptions.o1 | false | undefined)",
                        value: input.splitChunks
                    })),
                    void 0 === input.usedExports || "global" === input.usedExports || "boolean" == typeof input.usedExports || _report(_exceptionable, {
                        path: _path + ".usedExports",
                        expected: "(\"global\" | boolean | undefined)",
                        value: input.usedExports
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "avoidEntryIife",
                            "checkWasmTypes",
                            "chunkIds",
                            "concatenateModules",
                            "emitOnErrors",
                            "flagIncludedChunks",
                            "innerGraph",
                            "mangleExports",
                            "mangleWasmImports",
                            "mergeDuplicateChunks",
                            "minimize",
                            "minimizer",
                            "moduleIds",
                            "noEmitOnErrors",
                            "nodeEnv",
                            "portableRecords",
                            "providedExports",
                            "realContentHash",
                            "removeAvailableModules",
                            "removeEmptyChunks",
                            "runtimeChunk",
                            "sideEffects",
                            "splitChunks",
                            "usedExports"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo311 = (input, _path, _exceptionable = true)=>[
                    true,
                    false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "apply"
                        ].some((prop)=>key === prop)) return true;
                        input[key];
                        return true;
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo312 = (input, _path, _exceptionable = true)=>[
                    (null !== input.name || _report(_exceptionable, {
                        path: _path + ".name",
                        expected: "(string | undefined)",
                        value: input.name
                    })) && (void 0 === input.name || "function" == typeof input.name || "string" == typeof input.name || _report(_exceptionable, {
                        path: _path + ".name",
                        expected: "(string | undefined)",
                        value: input.name
                    })),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "name"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo313 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.automaticNameDelimiter || "string" == typeof input.automaticNameDelimiter || _report(_exceptionable, {
                        path: _path + ".automaticNameDelimiter",
                        expected: "(string | undefined)",
                        value: input.automaticNameDelimiter
                    }),
                    void 0 === input.cacheGroups || ("object" == typeof input.cacheGroups && null !== input.cacheGroups && false === Array.isArray(input.cacheGroups) || _report(_exceptionable, {
                        path: _path + ".cacheGroups",
                        expected: "(__type.o78 | undefined)",
                        value: input.cacheGroups
                    })) && _vo314(input.cacheGroups, _path + ".cacheGroups", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".cacheGroups",
                        expected: "(__type.o78 | undefined)",
                        value: input.cacheGroups
                    }),
                    (null !== input.chunks || _report(_exceptionable, {
                        path: _path + ".chunks",
                        expected: "(\"all\" | \"async\" | \"initial\" | RegExp | undefined)",
                        value: input.chunks
                    })) && (void 0 === input.chunks || "function" == typeof input.chunks || "all" === input.chunks || "initial" === input.chunks || "async" === input.chunks || input.chunks instanceof RegExp || _report(_exceptionable, {
                        path: _path + ".chunks",
                        expected: "(\"all\" | \"async\" | \"initial\" | RegExp | undefined)",
                        value: input.chunks
                    })),
                    void 0 === input.defaultSizeTypes || (Array.isArray(input.defaultSizeTypes) || _report(_exceptionable, {
                        path: _path + ".defaultSizeTypes",
                        expected: "(Array<string> | undefined)",
                        value: input.defaultSizeTypes
                    })) && input.defaultSizeTypes.map((elem, _index633)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".defaultSizeTypes[" + _index633 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".defaultSizeTypes",
                        expected: "(Array<string> | undefined)",
                        value: input.defaultSizeTypes
                    }),
                    (null !== input.enforceSizeThreshold || _report(_exceptionable, {
                        path: _path + ".enforceSizeThreshold",
                        expected: "(__type.o86 | number | undefined)",
                        value: input.enforceSizeThreshold
                    })) && (void 0 === input.enforceSizeThreshold || "number" == typeof input.enforceSizeThreshold || ("object" == typeof input.enforceSizeThreshold && null !== input.enforceSizeThreshold && false === Array.isArray(input.enforceSizeThreshold) || _report(_exceptionable, {
                        path: _path + ".enforceSizeThreshold",
                        expected: "(__type.o86 | number | undefined)",
                        value: input.enforceSizeThreshold
                    })) && _vo323(input.enforceSizeThreshold, _path + ".enforceSizeThreshold", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".enforceSizeThreshold",
                        expected: "(__type.o86 | number | undefined)",
                        value: input.enforceSizeThreshold
                    })),
                    void 0 === input.fallbackCacheGroup || ("object" == typeof input.fallbackCacheGroup && null !== input.fallbackCacheGroup && false === Array.isArray(input.fallbackCacheGroup) || _report(_exceptionable, {
                        path: _path + ".fallbackCacheGroup",
                        expected: "(__type.o87 | undefined)",
                        value: input.fallbackCacheGroup
                    })) && _vo324(input.fallbackCacheGroup, _path + ".fallbackCacheGroup", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".fallbackCacheGroup",
                        expected: "(__type.o87 | undefined)",
                        value: input.fallbackCacheGroup
                    }),
                    (null !== input.filename || _report(_exceptionable, {
                        path: _path + ".filename",
                        expected: "(string | undefined)",
                        value: input.filename
                    })) && (void 0 === input.filename || "function" == typeof input.filename || "string" == typeof input.filename || _report(_exceptionable, {
                        path: _path + ".filename",
                        expected: "(string | undefined)",
                        value: input.filename
                    })),
                    void 0 === input.hidePathInfo || "boolean" == typeof input.hidePathInfo || _report(_exceptionable, {
                        path: _path + ".hidePathInfo",
                        expected: "(boolean | undefined)",
                        value: input.hidePathInfo
                    }),
                    void 0 === input.maxAsyncRequests || "number" == typeof input.maxAsyncRequests || _report(_exceptionable, {
                        path: _path + ".maxAsyncRequests",
                        expected: "(number | undefined)",
                        value: input.maxAsyncRequests
                    }),
                    (null !== input.maxAsyncSize || _report(_exceptionable, {
                        path: _path + ".maxAsyncSize",
                        expected: "(__type.o93 | number | undefined)",
                        value: input.maxAsyncSize
                    })) && (void 0 === input.maxAsyncSize || "number" == typeof input.maxAsyncSize || ("object" == typeof input.maxAsyncSize && null !== input.maxAsyncSize && false === Array.isArray(input.maxAsyncSize) || _report(_exceptionable, {
                        path: _path + ".maxAsyncSize",
                        expected: "(__type.o93 | number | undefined)",
                        value: input.maxAsyncSize
                    })) && _vo330(input.maxAsyncSize, _path + ".maxAsyncSize", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".maxAsyncSize",
                        expected: "(__type.o93 | number | undefined)",
                        value: input.maxAsyncSize
                    })),
                    void 0 === input.maxInitialRequests || "number" == typeof input.maxInitialRequests || _report(_exceptionable, {
                        path: _path + ".maxInitialRequests",
                        expected: "(number | undefined)",
                        value: input.maxInitialRequests
                    }),
                    (null !== input.maxInitialSize || _report(_exceptionable, {
                        path: _path + ".maxInitialSize",
                        expected: "(__type.o94 | number | undefined)",
                        value: input.maxInitialSize
                    })) && (void 0 === input.maxInitialSize || "number" == typeof input.maxInitialSize || ("object" == typeof input.maxInitialSize && null !== input.maxInitialSize && false === Array.isArray(input.maxInitialSize) || _report(_exceptionable, {
                        path: _path + ".maxInitialSize",
                        expected: "(__type.o94 | number | undefined)",
                        value: input.maxInitialSize
                    })) && _vo331(input.maxInitialSize, _path + ".maxInitialSize", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".maxInitialSize",
                        expected: "(__type.o94 | number | undefined)",
                        value: input.maxInitialSize
                    })),
                    (null !== input.maxSize || _report(_exceptionable, {
                        path: _path + ".maxSize",
                        expected: "(__type.o95 | number | undefined)",
                        value: input.maxSize
                    })) && (void 0 === input.maxSize || "number" == typeof input.maxSize || ("object" == typeof input.maxSize && null !== input.maxSize && false === Array.isArray(input.maxSize) || _report(_exceptionable, {
                        path: _path + ".maxSize",
                        expected: "(__type.o95 | number | undefined)",
                        value: input.maxSize
                    })) && _vo332(input.maxSize, _path + ".maxSize", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".maxSize",
                        expected: "(__type.o95 | number | undefined)",
                        value: input.maxSize
                    })),
                    void 0 === input.minChunks || "number" == typeof input.minChunks || _report(_exceptionable, {
                        path: _path + ".minChunks",
                        expected: "(number | undefined)",
                        value: input.minChunks
                    }),
                    (null !== input.minRemainingSize || _report(_exceptionable, {
                        path: _path + ".minRemainingSize",
                        expected: "(__type.o96 | number | undefined)",
                        value: input.minRemainingSize
                    })) && (void 0 === input.minRemainingSize || "number" == typeof input.minRemainingSize || ("object" == typeof input.minRemainingSize && null !== input.minRemainingSize && false === Array.isArray(input.minRemainingSize) || _report(_exceptionable, {
                        path: _path + ".minRemainingSize",
                        expected: "(__type.o96 | number | undefined)",
                        value: input.minRemainingSize
                    })) && _vo333(input.minRemainingSize, _path + ".minRemainingSize", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".minRemainingSize",
                        expected: "(__type.o96 | number | undefined)",
                        value: input.minRemainingSize
                    })),
                    (null !== input.minSize || _report(_exceptionable, {
                        path: _path + ".minSize",
                        expected: "(__type.o97 | number | undefined)",
                        value: input.minSize
                    })) && (void 0 === input.minSize || "number" == typeof input.minSize || ("object" == typeof input.minSize && null !== input.minSize && false === Array.isArray(input.minSize) || _report(_exceptionable, {
                        path: _path + ".minSize",
                        expected: "(__type.o97 | number | undefined)",
                        value: input.minSize
                    })) && _vo334(input.minSize, _path + ".minSize", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".minSize",
                        expected: "(__type.o97 | number | undefined)",
                        value: input.minSize
                    })),
                    (null !== input.minSizeReduction || _report(_exceptionable, {
                        path: _path + ".minSizeReduction",
                        expected: "(__type.o98 | number | undefined)",
                        value: input.minSizeReduction
                    })) && (void 0 === input.minSizeReduction || "number" == typeof input.minSizeReduction || ("object" == typeof input.minSizeReduction && null !== input.minSizeReduction && false === Array.isArray(input.minSizeReduction) || _report(_exceptionable, {
                        path: _path + ".minSizeReduction",
                        expected: "(__type.o98 | number | undefined)",
                        value: input.minSizeReduction
                    })) && _vo335(input.minSizeReduction, _path + ".minSizeReduction", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".minSizeReduction",
                        expected: "(__type.o98 | number | undefined)",
                        value: input.minSizeReduction
                    })),
                    (null !== input.name || _report(_exceptionable, {
                        path: _path + ".name",
                        expected: "(false | string | undefined)",
                        value: input.name
                    })) && (void 0 === input.name || "function" == typeof input.name || false === input.name || "string" == typeof input.name || _report(_exceptionable, {
                        path: _path + ".name",
                        expected: "(false | string | undefined)",
                        value: input.name
                    })),
                    void 0 === input.usedExports || "boolean" == typeof input.usedExports || _report(_exceptionable, {
                        path: _path + ".usedExports",
                        expected: "(boolean | undefined)",
                        value: input.usedExports
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "automaticNameDelimiter",
                            "cacheGroups",
                            "chunks",
                            "defaultSizeTypes",
                            "enforceSizeThreshold",
                            "fallbackCacheGroup",
                            "filename",
                            "hidePathInfo",
                            "maxAsyncRequests",
                            "maxAsyncSize",
                            "maxInitialRequests",
                            "maxInitialSize",
                            "maxSize",
                            "minChunks",
                            "minRemainingSize",
                            "minSize",
                            "minSizeReduction",
                            "name",
                            "usedExports"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo314 = (input, _path, _exceptionable = true)=>[
                    false === _exceptionable || Object.keys(input).map((key)=>{
                        const value = input[key];
                        if (void 0 === value) return true;
                        return (null !== value || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(OptimizationSplitChunksCacheGroup.o1 | RegExp | false | string)",
                            value: value
                        })) && (void 0 !== value || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(OptimizationSplitChunksCacheGroup.o1 | RegExp | false | string)",
                            value: value
                        })) && ("function" == typeof value || false === value || "string" == typeof value || value instanceof RegExp || ("object" == typeof value && null !== value && false === Array.isArray(value) || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(OptimizationSplitChunksCacheGroup.o1 | RegExp | false | string)",
                            value: value
                        })) && _vo315(value, _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key), _exceptionable) || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(OptimizationSplitChunksCacheGroup.o1 | RegExp | false | string)",
                            value: value
                        }));
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo315 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.automaticNameDelimiter || "string" == typeof input.automaticNameDelimiter || _report(_exceptionable, {
                        path: _path + ".automaticNameDelimiter",
                        expected: "(string | undefined)",
                        value: input.automaticNameDelimiter
                    }),
                    (null !== input.chunks || _report(_exceptionable, {
                        path: _path + ".chunks",
                        expected: "(\"all\" | \"async\" | \"initial\" | RegExp | undefined)",
                        value: input.chunks
                    })) && (void 0 === input.chunks || "function" == typeof input.chunks || "all" === input.chunks || "initial" === input.chunks || "async" === input.chunks || input.chunks instanceof RegExp || _report(_exceptionable, {
                        path: _path + ".chunks",
                        expected: "(\"all\" | \"async\" | \"initial\" | RegExp | undefined)",
                        value: input.chunks
                    })),
                    void 0 === input.enforce || "boolean" == typeof input.enforce || _report(_exceptionable, {
                        path: _path + ".enforce",
                        expected: "(boolean | undefined)",
                        value: input.enforce
                    }),
                    (null !== input.enforceSizeThreshold || _report(_exceptionable, {
                        path: _path + ".enforceSizeThreshold",
                        expected: "(__type.o79 | number | undefined)",
                        value: input.enforceSizeThreshold
                    })) && (void 0 === input.enforceSizeThreshold || "number" == typeof input.enforceSizeThreshold || ("object" == typeof input.enforceSizeThreshold && null !== input.enforceSizeThreshold && false === Array.isArray(input.enforceSizeThreshold) || _report(_exceptionable, {
                        path: _path + ".enforceSizeThreshold",
                        expected: "(__type.o79 | number | undefined)",
                        value: input.enforceSizeThreshold
                    })) && _vo316(input.enforceSizeThreshold, _path + ".enforceSizeThreshold", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".enforceSizeThreshold",
                        expected: "(__type.o79 | number | undefined)",
                        value: input.enforceSizeThreshold
                    })),
                    (null !== input.filename || _report(_exceptionable, {
                        path: _path + ".filename",
                        expected: "(string | undefined)",
                        value: input.filename
                    })) && (void 0 === input.filename || "function" == typeof input.filename || "string" == typeof input.filename || _report(_exceptionable, {
                        path: _path + ".filename",
                        expected: "(string | undefined)",
                        value: input.filename
                    })),
                    void 0 === input.idHint || "string" == typeof input.idHint || _report(_exceptionable, {
                        path: _path + ".idHint",
                        expected: "(string | undefined)",
                        value: input.idHint
                    }),
                    (null !== input.layer || _report(_exceptionable, {
                        path: _path + ".layer",
                        expected: "(RegExp | string | undefined)",
                        value: input.layer
                    })) && (void 0 === input.layer || "function" == typeof input.layer || "string" == typeof input.layer || input.layer instanceof RegExp || _report(_exceptionable, {
                        path: _path + ".layer",
                        expected: "(RegExp | string | undefined)",
                        value: input.layer
                    })),
                    void 0 === input.maxAsyncRequests || "number" == typeof input.maxAsyncRequests || _report(_exceptionable, {
                        path: _path + ".maxAsyncRequests",
                        expected: "(number | undefined)",
                        value: input.maxAsyncRequests
                    }),
                    (null !== input.maxAsyncSize || _report(_exceptionable, {
                        path: _path + ".maxAsyncSize",
                        expected: "(__type.o80 | number | undefined)",
                        value: input.maxAsyncSize
                    })) && (void 0 === input.maxAsyncSize || "number" == typeof input.maxAsyncSize || ("object" == typeof input.maxAsyncSize && null !== input.maxAsyncSize && false === Array.isArray(input.maxAsyncSize) || _report(_exceptionable, {
                        path: _path + ".maxAsyncSize",
                        expected: "(__type.o80 | number | undefined)",
                        value: input.maxAsyncSize
                    })) && _vo317(input.maxAsyncSize, _path + ".maxAsyncSize", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".maxAsyncSize",
                        expected: "(__type.o80 | number | undefined)",
                        value: input.maxAsyncSize
                    })),
                    void 0 === input.maxInitialRequests || "number" == typeof input.maxInitialRequests || _report(_exceptionable, {
                        path: _path + ".maxInitialRequests",
                        expected: "(number | undefined)",
                        value: input.maxInitialRequests
                    }),
                    (null !== input.maxInitialSize || _report(_exceptionable, {
                        path: _path + ".maxInitialSize",
                        expected: "(__type.o81 | number | undefined)",
                        value: input.maxInitialSize
                    })) && (void 0 === input.maxInitialSize || "number" == typeof input.maxInitialSize || ("object" == typeof input.maxInitialSize && null !== input.maxInitialSize && false === Array.isArray(input.maxInitialSize) || _report(_exceptionable, {
                        path: _path + ".maxInitialSize",
                        expected: "(__type.o81 | number | undefined)",
                        value: input.maxInitialSize
                    })) && _vo318(input.maxInitialSize, _path + ".maxInitialSize", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".maxInitialSize",
                        expected: "(__type.o81 | number | undefined)",
                        value: input.maxInitialSize
                    })),
                    (null !== input.maxSize || _report(_exceptionable, {
                        path: _path + ".maxSize",
                        expected: "(__type.o82 | number | undefined)",
                        value: input.maxSize
                    })) && (void 0 === input.maxSize || "number" == typeof input.maxSize || ("object" == typeof input.maxSize && null !== input.maxSize && false === Array.isArray(input.maxSize) || _report(_exceptionable, {
                        path: _path + ".maxSize",
                        expected: "(__type.o82 | number | undefined)",
                        value: input.maxSize
                    })) && _vo319(input.maxSize, _path + ".maxSize", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".maxSize",
                        expected: "(__type.o82 | number | undefined)",
                        value: input.maxSize
                    })),
                    void 0 === input.minChunks || "number" == typeof input.minChunks || _report(_exceptionable, {
                        path: _path + ".minChunks",
                        expected: "(number | undefined)",
                        value: input.minChunks
                    }),
                    (null !== input.minRemainingSize || _report(_exceptionable, {
                        path: _path + ".minRemainingSize",
                        expected: "(__type.o83 | number | undefined)",
                        value: input.minRemainingSize
                    })) && (void 0 === input.minRemainingSize || "number" == typeof input.minRemainingSize || ("object" == typeof input.minRemainingSize && null !== input.minRemainingSize && false === Array.isArray(input.minRemainingSize) || _report(_exceptionable, {
                        path: _path + ".minRemainingSize",
                        expected: "(__type.o83 | number | undefined)",
                        value: input.minRemainingSize
                    })) && _vo320(input.minRemainingSize, _path + ".minRemainingSize", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".minRemainingSize",
                        expected: "(__type.o83 | number | undefined)",
                        value: input.minRemainingSize
                    })),
                    (null !== input.minSize || _report(_exceptionable, {
                        path: _path + ".minSize",
                        expected: "(__type.o84 | number | undefined)",
                        value: input.minSize
                    })) && (void 0 === input.minSize || "number" == typeof input.minSize || ("object" == typeof input.minSize && null !== input.minSize && false === Array.isArray(input.minSize) || _report(_exceptionable, {
                        path: _path + ".minSize",
                        expected: "(__type.o84 | number | undefined)",
                        value: input.minSize
                    })) && _vo321(input.minSize, _path + ".minSize", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".minSize",
                        expected: "(__type.o84 | number | undefined)",
                        value: input.minSize
                    })),
                    (null !== input.minSizeReduction || _report(_exceptionable, {
                        path: _path + ".minSizeReduction",
                        expected: "(__type.o85 | number | undefined)",
                        value: input.minSizeReduction
                    })) && (void 0 === input.minSizeReduction || "number" == typeof input.minSizeReduction || ("object" == typeof input.minSizeReduction && null !== input.minSizeReduction && false === Array.isArray(input.minSizeReduction) || _report(_exceptionable, {
                        path: _path + ".minSizeReduction",
                        expected: "(__type.o85 | number | undefined)",
                        value: input.minSizeReduction
                    })) && _vo322(input.minSizeReduction, _path + ".minSizeReduction", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".minSizeReduction",
                        expected: "(__type.o85 | number | undefined)",
                        value: input.minSizeReduction
                    })),
                    (null !== input.name || _report(_exceptionable, {
                        path: _path + ".name",
                        expected: "(false | string | undefined)",
                        value: input.name
                    })) && (void 0 === input.name || "function" == typeof input.name || false === input.name || "string" == typeof input.name || _report(_exceptionable, {
                        path: _path + ".name",
                        expected: "(false | string | undefined)",
                        value: input.name
                    })),
                    void 0 === input.priority || "number" == typeof input.priority || _report(_exceptionable, {
                        path: _path + ".priority",
                        expected: "(number | undefined)",
                        value: input.priority
                    }),
                    void 0 === input.reuseExistingChunk || "boolean" == typeof input.reuseExistingChunk || _report(_exceptionable, {
                        path: _path + ".reuseExistingChunk",
                        expected: "(boolean | undefined)",
                        value: input.reuseExistingChunk
                    }),
                    (null !== input.test || _report(_exceptionable, {
                        path: _path + ".test",
                        expected: "(RegExp | string | undefined)",
                        value: input.test
                    })) && (void 0 === input.test || "function" == typeof input.test || "string" == typeof input.test || input.test instanceof RegExp || _report(_exceptionable, {
                        path: _path + ".test",
                        expected: "(RegExp | string | undefined)",
                        value: input.test
                    })),
                    (null !== input.type || _report(_exceptionable, {
                        path: _path + ".type",
                        expected: "(RegExp | string | undefined)",
                        value: input.type
                    })) && (void 0 === input.type || "function" == typeof input.type || "string" == typeof input.type || input.type instanceof RegExp || _report(_exceptionable, {
                        path: _path + ".type",
                        expected: "(RegExp | string | undefined)",
                        value: input.type
                    })),
                    void 0 === input.usedExports || "boolean" == typeof input.usedExports || _report(_exceptionable, {
                        path: _path + ".usedExports",
                        expected: "(boolean | undefined)",
                        value: input.usedExports
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "automaticNameDelimiter",
                            "chunks",
                            "enforce",
                            "enforceSizeThreshold",
                            "filename",
                            "idHint",
                            "layer",
                            "maxAsyncRequests",
                            "maxAsyncSize",
                            "maxInitialRequests",
                            "maxInitialSize",
                            "maxSize",
                            "minChunks",
                            "minRemainingSize",
                            "minSize",
                            "minSizeReduction",
                            "name",
                            "priority",
                            "reuseExistingChunk",
                            "test",
                            "type",
                            "usedExports"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo316 = (input, _path, _exceptionable = true)=>[
                    false === _exceptionable || Object.keys(input).map((key)=>{
                        const value = input[key];
                        if (void 0 === value) return true;
                        return "number" == typeof value || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "number",
                            value: value
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo317 = (input, _path, _exceptionable = true)=>[
                    false === _exceptionable || Object.keys(input).map((key)=>{
                        const value = input[key];
                        if (void 0 === value) return true;
                        return "number" == typeof value || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "number",
                            value: value
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo318 = (input, _path, _exceptionable = true)=>[
                    false === _exceptionable || Object.keys(input).map((key)=>{
                        const value = input[key];
                        if (void 0 === value) return true;
                        return "number" == typeof value || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "number",
                            value: value
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo319 = (input, _path, _exceptionable = true)=>[
                    false === _exceptionable || Object.keys(input).map((key)=>{
                        const value = input[key];
                        if (void 0 === value) return true;
                        return "number" == typeof value || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "number",
                            value: value
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo320 = (input, _path, _exceptionable = true)=>[
                    false === _exceptionable || Object.keys(input).map((key)=>{
                        const value = input[key];
                        if (void 0 === value) return true;
                        return "number" == typeof value || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "number",
                            value: value
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo321 = (input, _path, _exceptionable = true)=>[
                    false === _exceptionable || Object.keys(input).map((key)=>{
                        const value = input[key];
                        if (void 0 === value) return true;
                        return "number" == typeof value || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "number",
                            value: value
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo322 = (input, _path, _exceptionable = true)=>[
                    false === _exceptionable || Object.keys(input).map((key)=>{
                        const value = input[key];
                        if (void 0 === value) return true;
                        return "number" == typeof value || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "number",
                            value: value
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo323 = (input, _path, _exceptionable = true)=>[
                    false === _exceptionable || Object.keys(input).map((key)=>{
                        const value = input[key];
                        if (void 0 === value) return true;
                        return "number" == typeof value || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "number",
                            value: value
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo324 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.automaticNameDelimiter || "string" == typeof input.automaticNameDelimiter || _report(_exceptionable, {
                        path: _path + ".automaticNameDelimiter",
                        expected: "(string | undefined)",
                        value: input.automaticNameDelimiter
                    }),
                    (null !== input.chunks || _report(_exceptionable, {
                        path: _path + ".chunks",
                        expected: "(\"all\" | \"async\" | \"initial\" | RegExp | undefined)",
                        value: input.chunks
                    })) && (void 0 === input.chunks || "function" == typeof input.chunks || "all" === input.chunks || "initial" === input.chunks || "async" === input.chunks || input.chunks instanceof RegExp || _report(_exceptionable, {
                        path: _path + ".chunks",
                        expected: "(\"all\" | \"async\" | \"initial\" | RegExp | undefined)",
                        value: input.chunks
                    })),
                    (null !== input.maxAsyncSize || _report(_exceptionable, {
                        path: _path + ".maxAsyncSize",
                        expected: "(__type.o88 | number | undefined)",
                        value: input.maxAsyncSize
                    })) && (void 0 === input.maxAsyncSize || "number" == typeof input.maxAsyncSize || ("object" == typeof input.maxAsyncSize && null !== input.maxAsyncSize && false === Array.isArray(input.maxAsyncSize) || _report(_exceptionable, {
                        path: _path + ".maxAsyncSize",
                        expected: "(__type.o88 | number | undefined)",
                        value: input.maxAsyncSize
                    })) && _vo325(input.maxAsyncSize, _path + ".maxAsyncSize", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".maxAsyncSize",
                        expected: "(__type.o88 | number | undefined)",
                        value: input.maxAsyncSize
                    })),
                    (null !== input.maxInitialSize || _report(_exceptionable, {
                        path: _path + ".maxInitialSize",
                        expected: "(__type.o89 | number | undefined)",
                        value: input.maxInitialSize
                    })) && (void 0 === input.maxInitialSize || "number" == typeof input.maxInitialSize || ("object" == typeof input.maxInitialSize && null !== input.maxInitialSize && false === Array.isArray(input.maxInitialSize) || _report(_exceptionable, {
                        path: _path + ".maxInitialSize",
                        expected: "(__type.o89 | number | undefined)",
                        value: input.maxInitialSize
                    })) && _vo326(input.maxInitialSize, _path + ".maxInitialSize", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".maxInitialSize",
                        expected: "(__type.o89 | number | undefined)",
                        value: input.maxInitialSize
                    })),
                    (null !== input.maxSize || _report(_exceptionable, {
                        path: _path + ".maxSize",
                        expected: "(__type.o90 | number | undefined)",
                        value: input.maxSize
                    })) && (void 0 === input.maxSize || "number" == typeof input.maxSize || ("object" == typeof input.maxSize && null !== input.maxSize && false === Array.isArray(input.maxSize) || _report(_exceptionable, {
                        path: _path + ".maxSize",
                        expected: "(__type.o90 | number | undefined)",
                        value: input.maxSize
                    })) && _vo327(input.maxSize, _path + ".maxSize", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".maxSize",
                        expected: "(__type.o90 | number | undefined)",
                        value: input.maxSize
                    })),
                    (null !== input.minSize || _report(_exceptionable, {
                        path: _path + ".minSize",
                        expected: "(__type.o91 | number | undefined)",
                        value: input.minSize
                    })) && (void 0 === input.minSize || "number" == typeof input.minSize || ("object" == typeof input.minSize && null !== input.minSize && false === Array.isArray(input.minSize) || _report(_exceptionable, {
                        path: _path + ".minSize",
                        expected: "(__type.o91 | number | undefined)",
                        value: input.minSize
                    })) && _vo328(input.minSize, _path + ".minSize", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".minSize",
                        expected: "(__type.o91 | number | undefined)",
                        value: input.minSize
                    })),
                    (null !== input.minSizeReduction || _report(_exceptionable, {
                        path: _path + ".minSizeReduction",
                        expected: "(__type.o92 | number | undefined)",
                        value: input.minSizeReduction
                    })) && (void 0 === input.minSizeReduction || "number" == typeof input.minSizeReduction || ("object" == typeof input.minSizeReduction && null !== input.minSizeReduction && false === Array.isArray(input.minSizeReduction) || _report(_exceptionable, {
                        path: _path + ".minSizeReduction",
                        expected: "(__type.o92 | number | undefined)",
                        value: input.minSizeReduction
                    })) && _vo329(input.minSizeReduction, _path + ".minSizeReduction", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".minSizeReduction",
                        expected: "(__type.o92 | number | undefined)",
                        value: input.minSizeReduction
                    })),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "automaticNameDelimiter",
                            "chunks",
                            "maxAsyncSize",
                            "maxInitialSize",
                            "maxSize",
                            "minSize",
                            "minSizeReduction"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo325 = (input, _path, _exceptionable = true)=>[
                    false === _exceptionable || Object.keys(input).map((key)=>{
                        const value = input[key];
                        if (void 0 === value) return true;
                        return "number" == typeof value || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "number",
                            value: value
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo326 = (input, _path, _exceptionable = true)=>[
                    false === _exceptionable || Object.keys(input).map((key)=>{
                        const value = input[key];
                        if (void 0 === value) return true;
                        return "number" == typeof value || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "number",
                            value: value
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo327 = (input, _path, _exceptionable = true)=>[
                    false === _exceptionable || Object.keys(input).map((key)=>{
                        const value = input[key];
                        if (void 0 === value) return true;
                        return "number" == typeof value || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "number",
                            value: value
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo328 = (input, _path, _exceptionable = true)=>[
                    false === _exceptionable || Object.keys(input).map((key)=>{
                        const value = input[key];
                        if (void 0 === value) return true;
                        return "number" == typeof value || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "number",
                            value: value
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo329 = (input, _path, _exceptionable = true)=>[
                    false === _exceptionable || Object.keys(input).map((key)=>{
                        const value = input[key];
                        if (void 0 === value) return true;
                        return "number" == typeof value || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "number",
                            value: value
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo330 = (input, _path, _exceptionable = true)=>[
                    false === _exceptionable || Object.keys(input).map((key)=>{
                        const value = input[key];
                        if (void 0 === value) return true;
                        return "number" == typeof value || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "number",
                            value: value
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo331 = (input, _path, _exceptionable = true)=>[
                    false === _exceptionable || Object.keys(input).map((key)=>{
                        const value = input[key];
                        if (void 0 === value) return true;
                        return "number" == typeof value || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "number",
                            value: value
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo332 = (input, _path, _exceptionable = true)=>[
                    false === _exceptionable || Object.keys(input).map((key)=>{
                        const value = input[key];
                        if (void 0 === value) return true;
                        return "number" == typeof value || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "number",
                            value: value
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo333 = (input, _path, _exceptionable = true)=>[
                    false === _exceptionable || Object.keys(input).map((key)=>{
                        const value = input[key];
                        if (void 0 === value) return true;
                        return "number" == typeof value || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "number",
                            value: value
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo334 = (input, _path, _exceptionable = true)=>[
                    false === _exceptionable || Object.keys(input).map((key)=>{
                        const value = input[key];
                        if (void 0 === value) return true;
                        return "number" == typeof value || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "number",
                            value: value
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo335 = (input, _path, _exceptionable = true)=>[
                    false === _exceptionable || Object.keys(input).map((key)=>{
                        const value = input[key];
                        if (void 0 === value) return true;
                        return "number" == typeof value || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "number",
                            value: value
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo336 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.amdContainer || "string" == typeof input.amdContainer || _report(_exceptionable, {
                        path: _path + ".amdContainer",
                        expected: "(string | undefined)",
                        value: input.amdContainer
                    }),
                    (null !== input.assetModuleFilename || _report(_exceptionable, {
                        path: _path + ".assetModuleFilename",
                        expected: "(string | undefined)",
                        value: input.assetModuleFilename
                    })) && (void 0 === input.assetModuleFilename || "function" == typeof input.assetModuleFilename || "string" == typeof input.assetModuleFilename || _report(_exceptionable, {
                        path: _path + ".assetModuleFilename",
                        expected: "(string | undefined)",
                        value: input.assetModuleFilename
                    })),
                    void 0 === input.asyncChunks || "boolean" == typeof input.asyncChunks || _report(_exceptionable, {
                        path: _path + ".asyncChunks",
                        expected: "(boolean | undefined)",
                        value: input.asyncChunks
                    }),
                    (null !== input.auxiliaryComment || _report(_exceptionable, {
                        path: _path + ".auxiliaryComment",
                        expected: "(LibraryCustomUmdCommentObject.o1 | string | undefined)",
                        value: input.auxiliaryComment
                    })) && (void 0 === input.auxiliaryComment || "string" == typeof input.auxiliaryComment || ("object" == typeof input.auxiliaryComment && null !== input.auxiliaryComment && false === Array.isArray(input.auxiliaryComment) || _report(_exceptionable, {
                        path: _path + ".auxiliaryComment",
                        expected: "(LibraryCustomUmdCommentObject.o1 | string | undefined)",
                        value: input.auxiliaryComment
                    })) && _vo204(input.auxiliaryComment, _path + ".auxiliaryComment", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".auxiliaryComment",
                        expected: "(LibraryCustomUmdCommentObject.o1 | string | undefined)",
                        value: input.auxiliaryComment
                    })),
                    void 0 === input.charset || "boolean" == typeof input.charset || _report(_exceptionable, {
                        path: _path + ".charset",
                        expected: "(boolean | undefined)",
                        value: input.charset
                    }),
                    (null !== input.chunkFilename || _report(_exceptionable, {
                        path: _path + ".chunkFilename",
                        expected: "(string | undefined)",
                        value: input.chunkFilename
                    })) && (void 0 === input.chunkFilename || "function" == typeof input.chunkFilename || "string" == typeof input.chunkFilename || _report(_exceptionable, {
                        path: _path + ".chunkFilename",
                        expected: "(string | undefined)",
                        value: input.chunkFilename
                    })),
                    void 0 === input.chunkFormat || false === input.chunkFormat || "string" == typeof input.chunkFormat || _report(_exceptionable, {
                        path: _path + ".chunkFormat",
                        expected: "(false | string | undefined)",
                        value: input.chunkFormat
                    }),
                    void 0 === input.chunkLoadTimeout || "number" == typeof input.chunkLoadTimeout || _report(_exceptionable, {
                        path: _path + ".chunkLoadTimeout",
                        expected: "(number | undefined)",
                        value: input.chunkLoadTimeout
                    }),
                    void 0 === input.chunkLoading || false === input.chunkLoading || "string" == typeof input.chunkLoading || _report(_exceptionable, {
                        path: _path + ".chunkLoading",
                        expected: "(false | string | undefined)",
                        value: input.chunkLoading
                    }),
                    void 0 === input.chunkLoadingGlobal || "string" == typeof input.chunkLoadingGlobal || _report(_exceptionable, {
                        path: _path + ".chunkLoadingGlobal",
                        expected: "(string | undefined)",
                        value: input.chunkLoadingGlobal
                    }),
                    (null !== input.clean || _report(_exceptionable, {
                        path: _path + ".clean",
                        expected: "(CleanOptions | boolean | undefined)",
                        value: input.clean
                    })) && (void 0 === input.clean || "boolean" == typeof input.clean || ("object" == typeof input.clean && null !== input.clean && false === Array.isArray(input.clean) || _report(_exceptionable, {
                        path: _path + ".clean",
                        expected: "(CleanOptions | boolean | undefined)",
                        value: input.clean
                    })) && _vo337(input.clean, _path + ".clean", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".clean",
                        expected: "(CleanOptions | boolean | undefined)",
                        value: input.clean
                    })),
                    void 0 === input.compareBeforeEmit || "boolean" == typeof input.compareBeforeEmit || _report(_exceptionable, {
                        path: _path + ".compareBeforeEmit",
                        expected: "(boolean | undefined)",
                        value: input.compareBeforeEmit
                    }),
                    void 0 === input.crossOriginLoading || false === input.crossOriginLoading || "anonymous" === input.crossOriginLoading || "use-credentials" === input.crossOriginLoading || _report(_exceptionable, {
                        path: _path + ".crossOriginLoading",
                        expected: "(\"anonymous\" | \"use-credentials\" | false | undefined)",
                        value: input.crossOriginLoading
                    }),
                    (null !== input.cssChunkFilename || _report(_exceptionable, {
                        path: _path + ".cssChunkFilename",
                        expected: "(string | undefined)",
                        value: input.cssChunkFilename
                    })) && (void 0 === input.cssChunkFilename || "function" == typeof input.cssChunkFilename || "string" == typeof input.cssChunkFilename || _report(_exceptionable, {
                        path: _path + ".cssChunkFilename",
                        expected: "(string | undefined)",
                        value: input.cssChunkFilename
                    })),
                    (null !== input.cssFilename || _report(_exceptionable, {
                        path: _path + ".cssFilename",
                        expected: "(string | undefined)",
                        value: input.cssFilename
                    })) && (void 0 === input.cssFilename || "function" == typeof input.cssFilename || "string" == typeof input.cssFilename || _report(_exceptionable, {
                        path: _path + ".cssFilename",
                        expected: "(string | undefined)",
                        value: input.cssFilename
                    })),
                    (null !== input.devtoolFallbackModuleFilenameTemplate || _report(_exceptionable, {
                        path: _path + ".devtoolFallbackModuleFilenameTemplate",
                        expected: "(string | undefined)",
                        value: input.devtoolFallbackModuleFilenameTemplate
                    })) && (void 0 === input.devtoolFallbackModuleFilenameTemplate || "function" == typeof input.devtoolFallbackModuleFilenameTemplate || "string" == typeof input.devtoolFallbackModuleFilenameTemplate || _report(_exceptionable, {
                        path: _path + ".devtoolFallbackModuleFilenameTemplate",
                        expected: "(string | undefined)",
                        value: input.devtoolFallbackModuleFilenameTemplate
                    })),
                    (null !== input.devtoolModuleFilenameTemplate || _report(_exceptionable, {
                        path: _path + ".devtoolModuleFilenameTemplate",
                        expected: "(string | undefined)",
                        value: input.devtoolModuleFilenameTemplate
                    })) && (void 0 === input.devtoolModuleFilenameTemplate || "function" == typeof input.devtoolModuleFilenameTemplate || "string" == typeof input.devtoolModuleFilenameTemplate || _report(_exceptionable, {
                        path: _path + ".devtoolModuleFilenameTemplate",
                        expected: "(string | undefined)",
                        value: input.devtoolModuleFilenameTemplate
                    })),
                    void 0 === input.devtoolNamespace || "string" == typeof input.devtoolNamespace || _report(_exceptionable, {
                        path: _path + ".devtoolNamespace",
                        expected: "(string | undefined)",
                        value: input.devtoolNamespace
                    }),
                    void 0 === input.enabledChunkLoadingTypes || (Array.isArray(input.enabledChunkLoadingTypes) || _report(_exceptionable, {
                        path: _path + ".enabledChunkLoadingTypes",
                        expected: "(Array<string> | undefined)",
                        value: input.enabledChunkLoadingTypes
                    })) && input.enabledChunkLoadingTypes.map((elem, _index634)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".enabledChunkLoadingTypes[" + _index634 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".enabledChunkLoadingTypes",
                        expected: "(Array<string> | undefined)",
                        value: input.enabledChunkLoadingTypes
                    }),
                    void 0 === input.enabledLibraryTypes || (Array.isArray(input.enabledLibraryTypes) || _report(_exceptionable, {
                        path: _path + ".enabledLibraryTypes",
                        expected: "(Array<string> | undefined)",
                        value: input.enabledLibraryTypes
                    })) && input.enabledLibraryTypes.map((elem, _index635)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".enabledLibraryTypes[" + _index635 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".enabledLibraryTypes",
                        expected: "(Array<string> | undefined)",
                        value: input.enabledLibraryTypes
                    }),
                    void 0 === input.enabledWasmLoadingTypes || (Array.isArray(input.enabledWasmLoadingTypes) || _report(_exceptionable, {
                        path: _path + ".enabledWasmLoadingTypes",
                        expected: "(Array<string> | undefined)",
                        value: input.enabledWasmLoadingTypes
                    })) && input.enabledWasmLoadingTypes.map((elem, _index636)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".enabledWasmLoadingTypes[" + _index636 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".enabledWasmLoadingTypes",
                        expected: "(Array<string> | undefined)",
                        value: input.enabledWasmLoadingTypes
                    }),
                    void 0 === input.environment || ("object" == typeof input.environment && null !== input.environment && false === Array.isArray(input.environment) || _report(_exceptionable, {
                        path: _path + ".environment",
                        expected: "(Environment.o1 | undefined)",
                        value: input.environment
                    })) && _vo338(input.environment, _path + ".environment", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".environment",
                        expected: "(Environment.o1 | undefined)",
                        value: input.environment
                    }),
                    (null !== input.filename || _report(_exceptionable, {
                        path: _path + ".filename",
                        expected: "(string | undefined)",
                        value: input.filename
                    })) && (void 0 === input.filename || "function" == typeof input.filename || "string" == typeof input.filename || _report(_exceptionable, {
                        path: _path + ".filename",
                        expected: "(string | undefined)",
                        value: input.filename
                    })),
                    void 0 === input.globalObject || "string" == typeof input.globalObject || _report(_exceptionable, {
                        path: _path + ".globalObject",
                        expected: "(string | undefined)",
                        value: input.globalObject
                    }),
                    void 0 === input.hashDigest || "string" == typeof input.hashDigest || _report(_exceptionable, {
                        path: _path + ".hashDigest",
                        expected: "(string | undefined)",
                        value: input.hashDigest
                    }),
                    void 0 === input.hashDigestLength || "number" == typeof input.hashDigestLength || _report(_exceptionable, {
                        path: _path + ".hashDigestLength",
                        expected: "(number | undefined)",
                        value: input.hashDigestLength
                    }),
                    (null !== input.hashFunction || _report(_exceptionable, {
                        path: _path + ".hashFunction",
                        expected: "(Hash | string | undefined)",
                        value: input.hashFunction
                    })) && (void 0 === input.hashFunction || "string" == typeof input.hashFunction || ("object" == typeof input.hashFunction && null !== input.hashFunction || _report(_exceptionable, {
                        path: _path + ".hashFunction",
                        expected: "(Hash | string | undefined)",
                        value: input.hashFunction
                    })) && _vo339(input.hashFunction, _path + ".hashFunction", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".hashFunction",
                        expected: "(Hash | string | undefined)",
                        value: input.hashFunction
                    })),
                    void 0 === input.hashSalt || "string" == typeof input.hashSalt || _report(_exceptionable, {
                        path: _path + ".hashSalt",
                        expected: "(string | undefined)",
                        value: input.hashSalt
                    }),
                    void 0 === input.hotUpdateChunkFilename || "string" == typeof input.hotUpdateChunkFilename || _report(_exceptionable, {
                        path: _path + ".hotUpdateChunkFilename",
                        expected: "(string | undefined)",
                        value: input.hotUpdateChunkFilename
                    }),
                    void 0 === input.hotUpdateGlobal || "string" == typeof input.hotUpdateGlobal || _report(_exceptionable, {
                        path: _path + ".hotUpdateGlobal",
                        expected: "(string | undefined)",
                        value: input.hotUpdateGlobal
                    }),
                    void 0 === input.hotUpdateMainFilename || "string" == typeof input.hotUpdateMainFilename || _report(_exceptionable, {
                        path: _path + ".hotUpdateMainFilename",
                        expected: "(string | undefined)",
                        value: input.hotUpdateMainFilename
                    }),
                    void 0 === input.ignoreBrowserWarnings || "boolean" == typeof input.ignoreBrowserWarnings || _report(_exceptionable, {
                        path: _path + ".ignoreBrowserWarnings",
                        expected: "(boolean | undefined)",
                        value: input.ignoreBrowserWarnings
                    }),
                    void 0 === input.iife || "boolean" == typeof input.iife || _report(_exceptionable, {
                        path: _path + ".iife",
                        expected: "(boolean | undefined)",
                        value: input.iife
                    }),
                    void 0 === input.importFunctionName || "string" == typeof input.importFunctionName || _report(_exceptionable, {
                        path: _path + ".importFunctionName",
                        expected: "(string | undefined)",
                        value: input.importFunctionName
                    }),
                    void 0 === input.importMetaName || "string" == typeof input.importMetaName || _report(_exceptionable, {
                        path: _path + ".importMetaName",
                        expected: "(string | undefined)",
                        value: input.importMetaName
                    }),
                    (null !== input.library || _report(_exceptionable, {
                        path: _path + ".library",
                        expected: "(Array<string> | LibraryCustomUmdObject.o1 | LibraryOptions.o1 | string | undefined)",
                        value: input.library
                    })) && (void 0 === input.library || "string" == typeof input.library || Array.isArray(input.library) && input.library.map((elem, _index637)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".library[" + _index637 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || "object" == typeof input.library && null !== input.library && false === Array.isArray(input.library) && _vu15(input.library, _path + ".library", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".library",
                        expected: "(Array<string> | LibraryCustomUmdObject.o1 | LibraryOptions.o1 | string | undefined)",
                        value: input.library
                    }) || _report(_exceptionable, {
                        path: _path + ".library",
                        expected: "(Array<string> | LibraryCustomUmdObject.o1 | LibraryOptions.o1 | string | undefined)",
                        value: input.library
                    })),
                    (null !== input.libraryExport || _report(_exceptionable, {
                        path: _path + ".libraryExport",
                        expected: "(Array<string> | string | undefined)",
                        value: input.libraryExport
                    })) && (void 0 === input.libraryExport || "string" == typeof input.libraryExport || (Array.isArray(input.libraryExport) || _report(_exceptionable, {
                        path: _path + ".libraryExport",
                        expected: "(Array<string> | string | undefined)",
                        value: input.libraryExport
                    })) && input.libraryExport.map((elem, _index638)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".libraryExport[" + _index638 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".libraryExport",
                        expected: "(Array<string> | string | undefined)",
                        value: input.libraryExport
                    })),
                    void 0 === input.libraryTarget || "string" == typeof input.libraryTarget || _report(_exceptionable, {
                        path: _path + ".libraryTarget",
                        expected: "(string | undefined)",
                        value: input.libraryTarget
                    }),
                    void 0 === input["module"] || "boolean" == typeof input["module"] || _report(_exceptionable, {
                        path: _path + "[\"module\"]",
                        expected: "(boolean | undefined)",
                        value: input["module"]
                    }),
                    void 0 === input.path || "string" == typeof input.path || _report(_exceptionable, {
                        path: _path + ".path",
                        expected: "(string | undefined)",
                        value: input.path
                    }),
                    void 0 === input.pathinfo || "verbose" === input.pathinfo || "boolean" == typeof input.pathinfo || _report(_exceptionable, {
                        path: _path + ".pathinfo",
                        expected: "(\"verbose\" | boolean | undefined)",
                        value: input.pathinfo
                    }),
                    (null !== input.publicPath || _report(_exceptionable, {
                        path: _path + ".publicPath",
                        expected: "(string | undefined)",
                        value: input.publicPath
                    })) && (void 0 === input.publicPath || "function" == typeof input.publicPath || "string" == typeof input.publicPath || _report(_exceptionable, {
                        path: _path + ".publicPath",
                        expected: "(string | undefined)",
                        value: input.publicPath
                    })),
                    void 0 === input.scriptType || false === input.scriptType || "module" === input.scriptType || "text/javascript" === input.scriptType || _report(_exceptionable, {
                        path: _path + ".scriptType",
                        expected: '("module" | "text/javascript" | false | undefined)',
                        value: input.scriptType
                    }),
                    void 0 === input.sourceMapFilename || "string" == typeof input.sourceMapFilename || _report(_exceptionable, {
                        path: _path + ".sourceMapFilename",
                        expected: "(string | undefined)",
                        value: input.sourceMapFilename
                    }),
                    void 0 === input.sourcePrefix || "string" == typeof input.sourcePrefix || _report(_exceptionable, {
                        path: _path + ".sourcePrefix",
                        expected: "(string | undefined)",
                        value: input.sourcePrefix
                    }),
                    void 0 === input.strictModuleErrorHandling || "boolean" == typeof input.strictModuleErrorHandling || _report(_exceptionable, {
                        path: _path + ".strictModuleErrorHandling",
                        expected: "(boolean | undefined)",
                        value: input.strictModuleErrorHandling
                    }),
                    void 0 === input.strictModuleExceptionHandling || "boolean" == typeof input.strictModuleExceptionHandling || _report(_exceptionable, {
                        path: _path + ".strictModuleExceptionHandling",
                        expected: "(boolean | undefined)",
                        value: input.strictModuleExceptionHandling
                    }),
                    (null !== input.trustedTypes || _report(_exceptionable, {
                        path: _path + ".trustedTypes",
                        expected: "(TrustedTypes.o1 | string | true | undefined)",
                        value: input.trustedTypes
                    })) && (void 0 === input.trustedTypes || true === input.trustedTypes || "string" == typeof input.trustedTypes || ("object" == typeof input.trustedTypes && null !== input.trustedTypes && false === Array.isArray(input.trustedTypes) || _report(_exceptionable, {
                        path: _path + ".trustedTypes",
                        expected: "(TrustedTypes.o1 | string | true | undefined)",
                        value: input.trustedTypes
                    })) && _vo341(input.trustedTypes, _path + ".trustedTypes", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".trustedTypes",
                        expected: "(TrustedTypes.o1 | string | true | undefined)",
                        value: input.trustedTypes
                    })),
                    void 0 === input.umdNamedDefine || "boolean" == typeof input.umdNamedDefine || _report(_exceptionable, {
                        path: _path + ".umdNamedDefine",
                        expected: "(boolean | undefined)",
                        value: input.umdNamedDefine
                    }),
                    void 0 === input.uniqueName || "string" == typeof input.uniqueName || _report(_exceptionable, {
                        path: _path + ".uniqueName",
                        expected: "(string | undefined)",
                        value: input.uniqueName
                    }),
                    void 0 === input.wasmLoading || false === input.wasmLoading || "string" == typeof input.wasmLoading || _report(_exceptionable, {
                        path: _path + ".wasmLoading",
                        expected: "(false | string | undefined)",
                        value: input.wasmLoading
                    }),
                    void 0 === input.webassemblyModuleFilename || "string" == typeof input.webassemblyModuleFilename || _report(_exceptionable, {
                        path: _path + ".webassemblyModuleFilename",
                        expected: "(string | undefined)",
                        value: input.webassemblyModuleFilename
                    }),
                    void 0 === input.workerChunkLoading || false === input.workerChunkLoading || "string" == typeof input.workerChunkLoading || _report(_exceptionable, {
                        path: _path + ".workerChunkLoading",
                        expected: "(false | string | undefined)",
                        value: input.workerChunkLoading
                    }),
                    void 0 === input.workerPublicPath || "string" == typeof input.workerPublicPath || _report(_exceptionable, {
                        path: _path + ".workerPublicPath",
                        expected: "(string | undefined)",
                        value: input.workerPublicPath
                    }),
                    void 0 === input.workerWasmLoading || false === input.workerWasmLoading || "string" == typeof input.workerWasmLoading || _report(_exceptionable, {
                        path: _path + ".workerWasmLoading",
                        expected: "(false | string | undefined)",
                        value: input.workerWasmLoading
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "amdContainer",
                            "assetModuleFilename",
                            "asyncChunks",
                            "auxiliaryComment",
                            "charset",
                            "chunkFilename",
                            "chunkFormat",
                            "chunkLoadTimeout",
                            "chunkLoading",
                            "chunkLoadingGlobal",
                            "clean",
                            "compareBeforeEmit",
                            "crossOriginLoading",
                            "cssChunkFilename",
                            "cssFilename",
                            "devtoolFallbackModuleFilenameTemplate",
                            "devtoolModuleFilenameTemplate",
                            "devtoolNamespace",
                            "enabledChunkLoadingTypes",
                            "enabledLibraryTypes",
                            "enabledWasmLoadingTypes",
                            "environment",
                            "filename",
                            "globalObject",
                            "hashDigest",
                            "hashDigestLength",
                            "hashFunction",
                            "hashSalt",
                            "hotUpdateChunkFilename",
                            "hotUpdateGlobal",
                            "hotUpdateMainFilename",
                            "ignoreBrowserWarnings",
                            "iife",
                            "importFunctionName",
                            "importMetaName",
                            "library",
                            "libraryExport",
                            "libraryTarget",
                            "module",
                            "path",
                            "pathinfo",
                            "publicPath",
                            "scriptType",
                            "sourceMapFilename",
                            "sourcePrefix",
                            "strictModuleErrorHandling",
                            "strictModuleExceptionHandling",
                            "trustedTypes",
                            "umdNamedDefine",
                            "uniqueName",
                            "wasmLoading",
                            "webassemblyModuleFilename",
                            "workerChunkLoading",
                            "workerPublicPath",
                            "workerWasmLoading"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo337 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.dry || "boolean" == typeof input.dry || _report(_exceptionable, {
                        path: _path + ".dry",
                        expected: "(boolean | undefined)",
                        value: input.dry
                    }),
                    (null !== input.keep || _report(_exceptionable, {
                        path: _path + ".keep",
                        expected: "(RegExp | string | undefined)",
                        value: input.keep
                    })) && (void 0 === input.keep || "function" == typeof input.keep || "string" == typeof input.keep || input.keep instanceof RegExp || _report(_exceptionable, {
                        path: _path + ".keep",
                        expected: "(RegExp | string | undefined)",
                        value: input.keep
                    })),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "dry",
                            "keep"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo338 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.arrowFunction || "boolean" == typeof input.arrowFunction || _report(_exceptionable, {
                        path: _path + ".arrowFunction",
                        expected: "(boolean | undefined)",
                        value: input.arrowFunction
                    }),
                    void 0 === input.asyncFunction || "boolean" == typeof input.asyncFunction || _report(_exceptionable, {
                        path: _path + ".asyncFunction",
                        expected: "(boolean | undefined)",
                        value: input.asyncFunction
                    }),
                    void 0 === input.bigIntLiteral || "boolean" == typeof input.bigIntLiteral || _report(_exceptionable, {
                        path: _path + ".bigIntLiteral",
                        expected: "(boolean | undefined)",
                        value: input.bigIntLiteral
                    }),
                    void 0 === input["const"] || "boolean" == typeof input["const"] || _report(_exceptionable, {
                        path: _path + "[\"const\"]",
                        expected: "(boolean | undefined)",
                        value: input["const"]
                    }),
                    void 0 === input.destructuring || "boolean" == typeof input.destructuring || _report(_exceptionable, {
                        path: _path + ".destructuring",
                        expected: "(boolean | undefined)",
                        value: input.destructuring
                    }),
                    void 0 === input.document || "boolean" == typeof input.document || _report(_exceptionable, {
                        path: _path + ".document",
                        expected: "(boolean | undefined)",
                        value: input.document
                    }),
                    void 0 === input.dynamicImport || "boolean" == typeof input.dynamicImport || _report(_exceptionable, {
                        path: _path + ".dynamicImport",
                        expected: "(boolean | undefined)",
                        value: input.dynamicImport
                    }),
                    void 0 === input.dynamicImportInWorker || "boolean" == typeof input.dynamicImportInWorker || _report(_exceptionable, {
                        path: _path + ".dynamicImportInWorker",
                        expected: "(boolean | undefined)",
                        value: input.dynamicImportInWorker
                    }),
                    void 0 === input.forOf || "boolean" == typeof input.forOf || _report(_exceptionable, {
                        path: _path + ".forOf",
                        expected: "(boolean | undefined)",
                        value: input.forOf
                    }),
                    void 0 === input.globalThis || "boolean" == typeof input.globalThis || _report(_exceptionable, {
                        path: _path + ".globalThis",
                        expected: "(boolean | undefined)",
                        value: input.globalThis
                    }),
                    void 0 === input["module"] || "boolean" == typeof input["module"] || _report(_exceptionable, {
                        path: _path + "[\"module\"]",
                        expected: "(boolean | undefined)",
                        value: input["module"]
                    }),
                    void 0 === input.nodePrefixForCoreModules || "boolean" == typeof input.nodePrefixForCoreModules || _report(_exceptionable, {
                        path: _path + ".nodePrefixForCoreModules",
                        expected: "(boolean | undefined)",
                        value: input.nodePrefixForCoreModules
                    }),
                    void 0 === input.optionalChaining || "boolean" == typeof input.optionalChaining || _report(_exceptionable, {
                        path: _path + ".optionalChaining",
                        expected: "(boolean | undefined)",
                        value: input.optionalChaining
                    }),
                    void 0 === input.templateLiteral || "boolean" == typeof input.templateLiteral || _report(_exceptionable, {
                        path: _path + ".templateLiteral",
                        expected: "(boolean | undefined)",
                        value: input.templateLiteral
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "arrowFunction",
                            "asyncFunction",
                            "bigIntLiteral",
                            "const",
                            "destructuring",
                            "document",
                            "dynamicImport",
                            "dynamicImportInWorker",
                            "forOf",
                            "globalThis",
                            "module",
                            "nodePrefixForCoreModules",
                            "optionalChaining",
                            "templateLiteral"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo339 = (input, _path, _exceptionable = true)=>[
                    ("object" == typeof input.prototype && null !== input.prototype && false === Array.isArray(input.prototype) || _report(_exceptionable, {
                        path: _path + ".prototype",
                        expected: "Hash.o1",
                        value: input.prototype
                    })) && _vo340(input.prototype, _path + ".prototype", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".prototype",
                        expected: "Hash.o1",
                        value: input.prototype
                    }),
                    "number" == typeof input.length || _report(_exceptionable, {
                        path: _path + ".length",
                        expected: "number",
                        value: input.length
                    }),
                    true,
                    ("object" == typeof input.caller && null !== input.caller || _report(_exceptionable, {
                        path: _path + ".caller",
                        expected: "Function",
                        value: input.caller
                    })) && _vo33(input.caller, _path + ".caller", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".caller",
                        expected: "Function",
                        value: input.caller
                    }),
                    "string" == typeof input.name || _report(_exceptionable, {
                        path: _path + ".name",
                        expected: "string",
                        value: input.name
                    }),
                    5 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "prototype",
                            "length",
                            "arguments",
                            "caller",
                            "name"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo340 = (input, _path, _exceptionable = true)=>[
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo341 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.onPolicyCreationFailure || "continue" === input.onPolicyCreationFailure || "stop" === input.onPolicyCreationFailure || _report(_exceptionable, {
                        path: _path + ".onPolicyCreationFailure",
                        expected: "(\"continue\" | \"stop\" | undefined)",
                        value: input.onPolicyCreationFailure
                    }),
                    void 0 === input.policyName || "string" == typeof input.policyName || _report(_exceptionable, {
                        path: _path + ".policyName",
                        expected: "(string | undefined)",
                        value: input.policyName
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "onPolicyCreationFailure",
                            "policyName"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo342 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.assetFilter || true,
                    void 0 === input.hints || false === input.hints || "error" === input.hints || "warning" === input.hints || _report(_exceptionable, {
                        path: _path + ".hints",
                        expected: "(\"error\" | \"warning\" | false | undefined)",
                        value: input.hints
                    }),
                    void 0 === input.maxAssetSize || "number" == typeof input.maxAssetSize || _report(_exceptionable, {
                        path: _path + ".maxAssetSize",
                        expected: "(number | undefined)",
                        value: input.maxAssetSize
                    }),
                    void 0 === input.maxEntrypointSize || "number" == typeof input.maxEntrypointSize || _report(_exceptionable, {
                        path: _path + ".maxEntrypointSize",
                        expected: "(number | undefined)",
                        value: input.maxEntrypointSize
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "assetFilter",
                            "hints",
                            "maxAssetSize",
                            "maxEntrypointSize"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo343 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.buildDependencies || ("object" == typeof input.buildDependencies && null !== input.buildDependencies && false === Array.isArray(input.buildDependencies) || _report(_exceptionable, {
                        path: _path + ".buildDependencies",
                        expected: "(__type.o99 | undefined)",
                        value: input.buildDependencies
                    })) && _vo344(input.buildDependencies, _path + ".buildDependencies", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".buildDependencies",
                        expected: "(__type.o99 | undefined)",
                        value: input.buildDependencies
                    }),
                    void 0 === input.immutablePaths || (Array.isArray(input.immutablePaths) || _report(_exceptionable, {
                        path: _path + ".immutablePaths",
                        expected: "(Array<string | RegExp> | undefined)",
                        value: input.immutablePaths
                    })) && input.immutablePaths.map((elem, _index639)=>(null !== elem || _report(_exceptionable, {
                            path: _path + ".immutablePaths[" + _index639 + "]",
                            expected: "(RegExp | string)",
                            value: elem
                        })) && (void 0 !== elem || _report(_exceptionable, {
                            path: _path + ".immutablePaths[" + _index639 + "]",
                            expected: "(RegExp | string)",
                            value: elem
                        })) && ("string" == typeof elem || elem instanceof RegExp || _report(_exceptionable, {
                            path: _path + ".immutablePaths[" + _index639 + "]",
                            expected: "(RegExp | string)",
                            value: elem
                        }))).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".immutablePaths",
                        expected: "(Array<string | RegExp> | undefined)",
                        value: input.immutablePaths
                    }),
                    void 0 === input.managedPaths || (Array.isArray(input.managedPaths) || _report(_exceptionable, {
                        path: _path + ".managedPaths",
                        expected: "(Array<string | RegExp> | undefined)",
                        value: input.managedPaths
                    })) && input.managedPaths.map((elem, _index640)=>(null !== elem || _report(_exceptionable, {
                            path: _path + ".managedPaths[" + _index640 + "]",
                            expected: "(RegExp | string)",
                            value: elem
                        })) && (void 0 !== elem || _report(_exceptionable, {
                            path: _path + ".managedPaths[" + _index640 + "]",
                            expected: "(RegExp | string)",
                            value: elem
                        })) && ("string" == typeof elem || elem instanceof RegExp || _report(_exceptionable, {
                            path: _path + ".managedPaths[" + _index640 + "]",
                            expected: "(RegExp | string)",
                            value: elem
                        }))).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".managedPaths",
                        expected: "(Array<string | RegExp> | undefined)",
                        value: input.managedPaths
                    }),
                    void 0 === input["module"] || ("object" == typeof input["module"] && null !== input["module"] && false === Array.isArray(input["module"]) || _report(_exceptionable, {
                        path: _path + "[\"module\"]",
                        expected: "(__type.o100 | undefined)",
                        value: input["module"]
                    })) && _vo345(input["module"], _path + "[\"module\"]", _exceptionable) || _report(_exceptionable, {
                        path: _path + "[\"module\"]",
                        expected: "(__type.o100 | undefined)",
                        value: input["module"]
                    }),
                    void 0 === input.resolve || ("object" == typeof input.resolve && null !== input.resolve && false === Array.isArray(input.resolve) || _report(_exceptionable, {
                        path: _path + ".resolve",
                        expected: "(__type.o101 | undefined)",
                        value: input.resolve
                    })) && _vo346(input.resolve, _path + ".resolve", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".resolve",
                        expected: "(__type.o101 | undefined)",
                        value: input.resolve
                    }),
                    void 0 === input.resolveBuildDependencies || ("object" == typeof input.resolveBuildDependencies && null !== input.resolveBuildDependencies && false === Array.isArray(input.resolveBuildDependencies) || _report(_exceptionable, {
                        path: _path + ".resolveBuildDependencies",
                        expected: "(__type.o102 | undefined)",
                        value: input.resolveBuildDependencies
                    })) && _vo347(input.resolveBuildDependencies, _path + ".resolveBuildDependencies", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".resolveBuildDependencies",
                        expected: "(__type.o102 | undefined)",
                        value: input.resolveBuildDependencies
                    }),
                    void 0 === input.unmanagedPaths || (Array.isArray(input.unmanagedPaths) || _report(_exceptionable, {
                        path: _path + ".unmanagedPaths",
                        expected: "(Array<string | RegExp> | undefined)",
                        value: input.unmanagedPaths
                    })) && input.unmanagedPaths.map((elem, _index641)=>(null !== elem || _report(_exceptionable, {
                            path: _path + ".unmanagedPaths[" + _index641 + "]",
                            expected: "(RegExp | string)",
                            value: elem
                        })) && (void 0 !== elem || _report(_exceptionable, {
                            path: _path + ".unmanagedPaths[" + _index641 + "]",
                            expected: "(RegExp | string)",
                            value: elem
                        })) && ("string" == typeof elem || elem instanceof RegExp || _report(_exceptionable, {
                            path: _path + ".unmanagedPaths[" + _index641 + "]",
                            expected: "(RegExp | string)",
                            value: elem
                        }))).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".unmanagedPaths",
                        expected: "(Array<string | RegExp> | undefined)",
                        value: input.unmanagedPaths
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "buildDependencies",
                            "immutablePaths",
                            "managedPaths",
                            "module",
                            "resolve",
                            "resolveBuildDependencies",
                            "unmanagedPaths"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo344 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.hash || "boolean" == typeof input.hash || _report(_exceptionable, {
                        path: _path + ".hash",
                        expected: "(boolean | undefined)",
                        value: input.hash
                    }),
                    void 0 === input.timestamp || "boolean" == typeof input.timestamp || _report(_exceptionable, {
                        path: _path + ".timestamp",
                        expected: "(boolean | undefined)",
                        value: input.timestamp
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "hash",
                            "timestamp"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo345 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.hash || "boolean" == typeof input.hash || _report(_exceptionable, {
                        path: _path + ".hash",
                        expected: "(boolean | undefined)",
                        value: input.hash
                    }),
                    void 0 === input.timestamp || "boolean" == typeof input.timestamp || _report(_exceptionable, {
                        path: _path + ".timestamp",
                        expected: "(boolean | undefined)",
                        value: input.timestamp
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "hash",
                            "timestamp"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo346 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.hash || "boolean" == typeof input.hash || _report(_exceptionable, {
                        path: _path + ".hash",
                        expected: "(boolean | undefined)",
                        value: input.hash
                    }),
                    void 0 === input.timestamp || "boolean" == typeof input.timestamp || _report(_exceptionable, {
                        path: _path + ".timestamp",
                        expected: "(boolean | undefined)",
                        value: input.timestamp
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "hash",
                            "timestamp"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo347 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.hash || "boolean" == typeof input.hash || _report(_exceptionable, {
                        path: _path + ".hash",
                        expected: "(boolean | undefined)",
                        value: input.hash
                    }),
                    void 0 === input.timestamp || "boolean" == typeof input.timestamp || _report(_exceptionable, {
                        path: _path + ".timestamp",
                        expected: "(boolean | undefined)",
                        value: input.timestamp
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "hash",
                            "timestamp"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo348 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.all || "boolean" == typeof input.all || _report(_exceptionable, {
                        path: _path + ".all",
                        expected: "(boolean | undefined)",
                        value: input.all
                    }),
                    void 0 === input.assets || "boolean" == typeof input.assets || _report(_exceptionable, {
                        path: _path + ".assets",
                        expected: "(boolean | undefined)",
                        value: input.assets
                    }),
                    void 0 === input.assetsSort || false === input.assetsSort || "string" == typeof input.assetsSort || _report(_exceptionable, {
                        path: _path + ".assetsSort",
                        expected: "(false | string | undefined)",
                        value: input.assetsSort
                    }),
                    void 0 === input.assetsSpace || "number" == typeof input.assetsSpace || _report(_exceptionable, {
                        path: _path + ".assetsSpace",
                        expected: "(number | undefined)",
                        value: input.assetsSpace
                    }),
                    void 0 === input.builtAt || "boolean" == typeof input.builtAt || _report(_exceptionable, {
                        path: _path + ".builtAt",
                        expected: "(boolean | undefined)",
                        value: input.builtAt
                    }),
                    void 0 === input.cached || "boolean" == typeof input.cached || _report(_exceptionable, {
                        path: _path + ".cached",
                        expected: "(boolean | undefined)",
                        value: input.cached
                    }),
                    void 0 === input.cachedAssets || "boolean" == typeof input.cachedAssets || _report(_exceptionable, {
                        path: _path + ".cachedAssets",
                        expected: "(boolean | undefined)",
                        value: input.cachedAssets
                    }),
                    void 0 === input.cachedModules || "boolean" == typeof input.cachedModules || _report(_exceptionable, {
                        path: _path + ".cachedModules",
                        expected: "(boolean | undefined)",
                        value: input.cachedModules
                    }),
                    void 0 === input.children || "boolean" == typeof input.children || _report(_exceptionable, {
                        path: _path + ".children",
                        expected: "(boolean | undefined)",
                        value: input.children
                    }),
                    void 0 === input.chunkGroupAuxiliary || "boolean" == typeof input.chunkGroupAuxiliary || _report(_exceptionable, {
                        path: _path + ".chunkGroupAuxiliary",
                        expected: "(boolean | undefined)",
                        value: input.chunkGroupAuxiliary
                    }),
                    void 0 === input.chunkGroupChildren || "boolean" == typeof input.chunkGroupChildren || _report(_exceptionable, {
                        path: _path + ".chunkGroupChildren",
                        expected: "(boolean | undefined)",
                        value: input.chunkGroupChildren
                    }),
                    void 0 === input.chunkGroupMaxAssets || "number" == typeof input.chunkGroupMaxAssets || _report(_exceptionable, {
                        path: _path + ".chunkGroupMaxAssets",
                        expected: "(number | undefined)",
                        value: input.chunkGroupMaxAssets
                    }),
                    void 0 === input.chunkGroups || "boolean" == typeof input.chunkGroups || _report(_exceptionable, {
                        path: _path + ".chunkGroups",
                        expected: "(boolean | undefined)",
                        value: input.chunkGroups
                    }),
                    void 0 === input.chunkModules || "boolean" == typeof input.chunkModules || _report(_exceptionable, {
                        path: _path + ".chunkModules",
                        expected: "(boolean | undefined)",
                        value: input.chunkModules
                    }),
                    void 0 === input.chunkModulesSpace || "number" == typeof input.chunkModulesSpace || _report(_exceptionable, {
                        path: _path + ".chunkModulesSpace",
                        expected: "(number | undefined)",
                        value: input.chunkModulesSpace
                    }),
                    void 0 === input.chunkOrigins || "boolean" == typeof input.chunkOrigins || _report(_exceptionable, {
                        path: _path + ".chunkOrigins",
                        expected: "(boolean | undefined)",
                        value: input.chunkOrigins
                    }),
                    void 0 === input.chunkRelations || "boolean" == typeof input.chunkRelations || _report(_exceptionable, {
                        path: _path + ".chunkRelations",
                        expected: "(boolean | undefined)",
                        value: input.chunkRelations
                    }),
                    void 0 === input.chunks || "boolean" == typeof input.chunks || _report(_exceptionable, {
                        path: _path + ".chunks",
                        expected: "(boolean | undefined)",
                        value: input.chunks
                    }),
                    void 0 === input.chunksSort || false === input.chunksSort || "string" == typeof input.chunksSort || _report(_exceptionable, {
                        path: _path + ".chunksSort",
                        expected: "(false | string | undefined)",
                        value: input.chunksSort
                    }),
                    (null !== input.colors || _report(_exceptionable, {
                        path: _path + ".colors",
                        expected: "(__type.o103 | boolean | undefined)",
                        value: input.colors
                    })) && (void 0 === input.colors || "boolean" == typeof input.colors || ("object" == typeof input.colors && null !== input.colors && false === Array.isArray(input.colors) || _report(_exceptionable, {
                        path: _path + ".colors",
                        expected: "(__type.o103 | boolean | undefined)",
                        value: input.colors
                    })) && _vo349(input.colors, _path + ".colors", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".colors",
                        expected: "(__type.o103 | boolean | undefined)",
                        value: input.colors
                    })),
                    void 0 === input.context || "string" == typeof input.context || _report(_exceptionable, {
                        path: _path + ".context",
                        expected: "(string | undefined)",
                        value: input.context
                    }),
                    void 0 === input.dependentModules || "boolean" == typeof input.dependentModules || _report(_exceptionable, {
                        path: _path + ".dependentModules",
                        expected: "(boolean | undefined)",
                        value: input.dependentModules
                    }),
                    void 0 === input.depth || "boolean" == typeof input.depth || _report(_exceptionable, {
                        path: _path + ".depth",
                        expected: "(boolean | undefined)",
                        value: input.depth
                    }),
                    void 0 === input.entrypoints || "auto" === input.entrypoints || "boolean" == typeof input.entrypoints || _report(_exceptionable, {
                        path: _path + ".entrypoints",
                        expected: "(\"auto\" | boolean | undefined)",
                        value: input.entrypoints
                    }),
                    void 0 === input.env || "boolean" == typeof input.env || _report(_exceptionable, {
                        path: _path + ".env",
                        expected: "(boolean | undefined)",
                        value: input.env
                    }),
                    void 0 === input.errorCause || "auto" === input.errorCause || "boolean" == typeof input.errorCause || _report(_exceptionable, {
                        path: _path + ".errorCause",
                        expected: "(\"auto\" | boolean | undefined)",
                        value: input.errorCause
                    }),
                    void 0 === input.errorDetails || "auto" === input.errorDetails || "boolean" == typeof input.errorDetails || _report(_exceptionable, {
                        path: _path + ".errorDetails",
                        expected: "(\"auto\" | boolean | undefined)",
                        value: input.errorDetails
                    }),
                    void 0 === input.errorErrors || "auto" === input.errorErrors || "boolean" == typeof input.errorErrors || _report(_exceptionable, {
                        path: _path + ".errorErrors",
                        expected: "(\"auto\" | boolean | undefined)",
                        value: input.errorErrors
                    }),
                    void 0 === input.errorStack || "boolean" == typeof input.errorStack || _report(_exceptionable, {
                        path: _path + ".errorStack",
                        expected: "(boolean | undefined)",
                        value: input.errorStack
                    }),
                    void 0 === input.errors || "boolean" == typeof input.errors || _report(_exceptionable, {
                        path: _path + ".errors",
                        expected: "(boolean | undefined)",
                        value: input.errors
                    }),
                    void 0 === input.errorsCount || "boolean" == typeof input.errorsCount || _report(_exceptionable, {
                        path: _path + ".errorsCount",
                        expected: "(boolean | undefined)",
                        value: input.errorsCount
                    }),
                    void 0 === input.errorsSpace || "number" == typeof input.errorsSpace || _report(_exceptionable, {
                        path: _path + ".errorsSpace",
                        expected: "(number | undefined)",
                        value: input.errorsSpace
                    }),
                    (null !== input.exclude || _report(_exceptionable, {
                        path: _path + ".exclude",
                        expected: "(Array<ModuleFilterItemTypes>.o1 | RegExp | boolean | string | undefined)",
                        value: input.exclude
                    })) && (void 0 === input.exclude || "function" == typeof input.exclude || "string" == typeof input.exclude || "boolean" == typeof input.exclude || input.exclude instanceof RegExp || (Array.isArray(input.exclude) || _report(_exceptionable, {
                        path: _path + ".exclude",
                        expected: "(Array<ModuleFilterItemTypes>.o1 | RegExp | boolean | string | undefined)",
                        value: input.exclude
                    })) && input.exclude.map((elem, _index642)=>(null !== elem || _report(_exceptionable, {
                            path: _path + ".exclude[" + _index642 + "]",
                            expected: "(RegExp | string)",
                            value: elem
                        })) && (void 0 !== elem || _report(_exceptionable, {
                            path: _path + ".exclude[" + _index642 + "]",
                            expected: "(RegExp | string)",
                            value: elem
                        })) && ("function" == typeof elem || "string" == typeof elem || elem instanceof RegExp || _report(_exceptionable, {
                            path: _path + ".exclude[" + _index642 + "]",
                            expected: "(RegExp | string)",
                            value: elem
                        }))).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".exclude",
                        expected: "(Array<ModuleFilterItemTypes>.o1 | RegExp | boolean | string | undefined)",
                        value: input.exclude
                    })),
                    (null !== input.excludeAssets || _report(_exceptionable, {
                        path: _path + ".excludeAssets",
                        expected: "(Array<AssetFilterItemTypes> | RegExp | string | undefined)",
                        value: input.excludeAssets
                    })) && (void 0 === input.excludeAssets || "function" == typeof input.excludeAssets || "string" == typeof input.excludeAssets || input.excludeAssets instanceof RegExp || (Array.isArray(input.excludeAssets) || _report(_exceptionable, {
                        path: _path + ".excludeAssets",
                        expected: "(Array<AssetFilterItemTypes> | RegExp | string | undefined)",
                        value: input.excludeAssets
                    })) && input.excludeAssets.map((elem, _index643)=>(null !== elem || _report(_exceptionable, {
                            path: _path + ".excludeAssets[" + _index643 + "]",
                            expected: "(RegExp | string)",
                            value: elem
                        })) && (void 0 !== elem || _report(_exceptionable, {
                            path: _path + ".excludeAssets[" + _index643 + "]",
                            expected: "(RegExp | string)",
                            value: elem
                        })) && ("function" == typeof elem || "string" == typeof elem || elem instanceof RegExp || _report(_exceptionable, {
                            path: _path + ".excludeAssets[" + _index643 + "]",
                            expected: "(RegExp | string)",
                            value: elem
                        }))).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".excludeAssets",
                        expected: "(Array<AssetFilterItemTypes> | RegExp | string | undefined)",
                        value: input.excludeAssets
                    })),
                    (null !== input.excludeModules || _report(_exceptionable, {
                        path: _path + ".excludeModules",
                        expected: "(Array<ModuleFilterItemTypes>.o1 | RegExp | boolean | string | undefined)",
                        value: input.excludeModules
                    })) && (void 0 === input.excludeModules || "function" == typeof input.excludeModules || "string" == typeof input.excludeModules || "boolean" == typeof input.excludeModules || input.excludeModules instanceof RegExp || (Array.isArray(input.excludeModules) || _report(_exceptionable, {
                        path: _path + ".excludeModules",
                        expected: "(Array<ModuleFilterItemTypes>.o1 | RegExp | boolean | string | undefined)",
                        value: input.excludeModules
                    })) && input.excludeModules.map((elem, _index644)=>(null !== elem || _report(_exceptionable, {
                            path: _path + ".excludeModules[" + _index644 + "]",
                            expected: "(RegExp | string)",
                            value: elem
                        })) && (void 0 !== elem || _report(_exceptionable, {
                            path: _path + ".excludeModules[" + _index644 + "]",
                            expected: "(RegExp | string)",
                            value: elem
                        })) && ("function" == typeof elem || "string" == typeof elem || elem instanceof RegExp || _report(_exceptionable, {
                            path: _path + ".excludeModules[" + _index644 + "]",
                            expected: "(RegExp | string)",
                            value: elem
                        }))).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".excludeModules",
                        expected: "(Array<ModuleFilterItemTypes>.o1 | RegExp | boolean | string | undefined)",
                        value: input.excludeModules
                    })),
                    void 0 === input.groupAssetsByChunk || "boolean" == typeof input.groupAssetsByChunk || _report(_exceptionable, {
                        path: _path + ".groupAssetsByChunk",
                        expected: "(boolean | undefined)",
                        value: input.groupAssetsByChunk
                    }),
                    void 0 === input.groupAssetsByEmitStatus || "boolean" == typeof input.groupAssetsByEmitStatus || _report(_exceptionable, {
                        path: _path + ".groupAssetsByEmitStatus",
                        expected: "(boolean | undefined)",
                        value: input.groupAssetsByEmitStatus
                    }),
                    void 0 === input.groupAssetsByExtension || "boolean" == typeof input.groupAssetsByExtension || _report(_exceptionable, {
                        path: _path + ".groupAssetsByExtension",
                        expected: "(boolean | undefined)",
                        value: input.groupAssetsByExtension
                    }),
                    void 0 === input.groupAssetsByInfo || "boolean" == typeof input.groupAssetsByInfo || _report(_exceptionable, {
                        path: _path + ".groupAssetsByInfo",
                        expected: "(boolean | undefined)",
                        value: input.groupAssetsByInfo
                    }),
                    void 0 === input.groupAssetsByPath || "boolean" == typeof input.groupAssetsByPath || _report(_exceptionable, {
                        path: _path + ".groupAssetsByPath",
                        expected: "(boolean | undefined)",
                        value: input.groupAssetsByPath
                    }),
                    void 0 === input.groupModulesByAttributes || "boolean" == typeof input.groupModulesByAttributes || _report(_exceptionable, {
                        path: _path + ".groupModulesByAttributes",
                        expected: "(boolean | undefined)",
                        value: input.groupModulesByAttributes
                    }),
                    void 0 === input.groupModulesByCacheStatus || "boolean" == typeof input.groupModulesByCacheStatus || _report(_exceptionable, {
                        path: _path + ".groupModulesByCacheStatus",
                        expected: "(boolean | undefined)",
                        value: input.groupModulesByCacheStatus
                    }),
                    void 0 === input.groupModulesByExtension || "boolean" == typeof input.groupModulesByExtension || _report(_exceptionable, {
                        path: _path + ".groupModulesByExtension",
                        expected: "(boolean | undefined)",
                        value: input.groupModulesByExtension
                    }),
                    void 0 === input.groupModulesByLayer || "boolean" == typeof input.groupModulesByLayer || _report(_exceptionable, {
                        path: _path + ".groupModulesByLayer",
                        expected: "(boolean | undefined)",
                        value: input.groupModulesByLayer
                    }),
                    void 0 === input.groupModulesByPath || "boolean" == typeof input.groupModulesByPath || _report(_exceptionable, {
                        path: _path + ".groupModulesByPath",
                        expected: "(boolean | undefined)",
                        value: input.groupModulesByPath
                    }),
                    void 0 === input.groupModulesByType || "boolean" == typeof input.groupModulesByType || _report(_exceptionable, {
                        path: _path + ".groupModulesByType",
                        expected: "(boolean | undefined)",
                        value: input.groupModulesByType
                    }),
                    void 0 === input.groupReasonsByOrigin || "boolean" == typeof input.groupReasonsByOrigin || _report(_exceptionable, {
                        path: _path + ".groupReasonsByOrigin",
                        expected: "(boolean | undefined)",
                        value: input.groupReasonsByOrigin
                    }),
                    void 0 === input.hash || "boolean" == typeof input.hash || _report(_exceptionable, {
                        path: _path + ".hash",
                        expected: "(boolean | undefined)",
                        value: input.hash
                    }),
                    void 0 === input.ids || "boolean" == typeof input.ids || _report(_exceptionable, {
                        path: _path + ".ids",
                        expected: "(boolean | undefined)",
                        value: input.ids
                    }),
                    void 0 === input.logging || "none" === input.logging || "verbose" === input.logging || "error" === input.logging || "warn" === input.logging || "info" === input.logging || "log" === input.logging || "boolean" == typeof input.logging || _report(_exceptionable, {
                        path: _path + ".logging",
                        expected: "(\"error\" | \"info\" | \"log\" | \"none\" | \"verbose\" | \"warn\" | boolean | undefined)",
                        value: input.logging
                    }),
                    (null !== input.loggingDebug || _report(_exceptionable, {
                        path: _path + ".loggingDebug",
                        expected: "(Array<FilterItemTypes>.o1 | RegExp | boolean | string | undefined)",
                        value: input.loggingDebug
                    })) && (void 0 === input.loggingDebug || "function" == typeof input.loggingDebug || "string" == typeof input.loggingDebug || "boolean" == typeof input.loggingDebug || input.loggingDebug instanceof RegExp || (Array.isArray(input.loggingDebug) || _report(_exceptionable, {
                        path: _path + ".loggingDebug",
                        expected: "(Array<FilterItemTypes>.o1 | RegExp | boolean | string | undefined)",
                        value: input.loggingDebug
                    })) && input.loggingDebug.map((elem, _index645)=>(null !== elem || _report(_exceptionable, {
                            path: _path + ".loggingDebug[" + _index645 + "]",
                            expected: "(RegExp | string)",
                            value: elem
                        })) && (void 0 !== elem || _report(_exceptionable, {
                            path: _path + ".loggingDebug[" + _index645 + "]",
                            expected: "(RegExp | string)",
                            value: elem
                        })) && ("function" == typeof elem || "string" == typeof elem || elem instanceof RegExp || _report(_exceptionable, {
                            path: _path + ".loggingDebug[" + _index645 + "]",
                            expected: "(RegExp | string)",
                            value: elem
                        }))).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".loggingDebug",
                        expected: "(Array<FilterItemTypes>.o1 | RegExp | boolean | string | undefined)",
                        value: input.loggingDebug
                    })),
                    void 0 === input.loggingTrace || "boolean" == typeof input.loggingTrace || _report(_exceptionable, {
                        path: _path + ".loggingTrace",
                        expected: "(boolean | undefined)",
                        value: input.loggingTrace
                    }),
                    void 0 === input.moduleAssets || "boolean" == typeof input.moduleAssets || _report(_exceptionable, {
                        path: _path + ".moduleAssets",
                        expected: "(boolean | undefined)",
                        value: input.moduleAssets
                    }),
                    void 0 === input.moduleTrace || "boolean" == typeof input.moduleTrace || _report(_exceptionable, {
                        path: _path + ".moduleTrace",
                        expected: "(boolean | undefined)",
                        value: input.moduleTrace
                    }),
                    void 0 === input.modules || "boolean" == typeof input.modules || _report(_exceptionable, {
                        path: _path + ".modules",
                        expected: "(boolean | undefined)",
                        value: input.modules
                    }),
                    void 0 === input.modulesSort || false === input.modulesSort || "string" == typeof input.modulesSort || _report(_exceptionable, {
                        path: _path + ".modulesSort",
                        expected: "(false | string | undefined)",
                        value: input.modulesSort
                    }),
                    void 0 === input.modulesSpace || "number" == typeof input.modulesSpace || _report(_exceptionable, {
                        path: _path + ".modulesSpace",
                        expected: "(number | undefined)",
                        value: input.modulesSpace
                    }),
                    void 0 === input.nestedModules || "boolean" == typeof input.nestedModules || _report(_exceptionable, {
                        path: _path + ".nestedModules",
                        expected: "(boolean | undefined)",
                        value: input.nestedModules
                    }),
                    void 0 === input.nestedModulesSpace || "number" == typeof input.nestedModulesSpace || _report(_exceptionable, {
                        path: _path + ".nestedModulesSpace",
                        expected: "(number | undefined)",
                        value: input.nestedModulesSpace
                    }),
                    void 0 === input.optimizationBailout || "boolean" == typeof input.optimizationBailout || _report(_exceptionable, {
                        path: _path + ".optimizationBailout",
                        expected: "(boolean | undefined)",
                        value: input.optimizationBailout
                    }),
                    void 0 === input.orphanModules || "boolean" == typeof input.orphanModules || _report(_exceptionable, {
                        path: _path + ".orphanModules",
                        expected: "(boolean | undefined)",
                        value: input.orphanModules
                    }),
                    void 0 === input.outputPath || "boolean" == typeof input.outputPath || _report(_exceptionable, {
                        path: _path + ".outputPath",
                        expected: "(boolean | undefined)",
                        value: input.outputPath
                    }),
                    void 0 === input.performance || "boolean" == typeof input.performance || _report(_exceptionable, {
                        path: _path + ".performance",
                        expected: "(boolean | undefined)",
                        value: input.performance
                    }),
                    void 0 === input.preset || "string" == typeof input.preset || "boolean" == typeof input.preset || _report(_exceptionable, {
                        path: _path + ".preset",
                        expected: "(boolean | string | undefined)",
                        value: input.preset
                    }),
                    void 0 === input.providedExports || "boolean" == typeof input.providedExports || _report(_exceptionable, {
                        path: _path + ".providedExports",
                        expected: "(boolean | undefined)",
                        value: input.providedExports
                    }),
                    void 0 === input.publicPath || "boolean" == typeof input.publicPath || _report(_exceptionable, {
                        path: _path + ".publicPath",
                        expected: "(boolean | undefined)",
                        value: input.publicPath
                    }),
                    void 0 === input.reasons || "boolean" == typeof input.reasons || _report(_exceptionable, {
                        path: _path + ".reasons",
                        expected: "(boolean | undefined)",
                        value: input.reasons
                    }),
                    void 0 === input.reasonsSpace || "number" == typeof input.reasonsSpace || _report(_exceptionable, {
                        path: _path + ".reasonsSpace",
                        expected: "(number | undefined)",
                        value: input.reasonsSpace
                    }),
                    void 0 === input.relatedAssets || "boolean" == typeof input.relatedAssets || _report(_exceptionable, {
                        path: _path + ".relatedAssets",
                        expected: "(boolean | undefined)",
                        value: input.relatedAssets
                    }),
                    void 0 === input.runtime || "boolean" == typeof input.runtime || _report(_exceptionable, {
                        path: _path + ".runtime",
                        expected: "(boolean | undefined)",
                        value: input.runtime
                    }),
                    void 0 === input.runtimeModules || "boolean" == typeof input.runtimeModules || _report(_exceptionable, {
                        path: _path + ".runtimeModules",
                        expected: "(boolean | undefined)",
                        value: input.runtimeModules
                    }),
                    void 0 === input.source || "boolean" == typeof input.source || _report(_exceptionable, {
                        path: _path + ".source",
                        expected: "(boolean | undefined)",
                        value: input.source
                    }),
                    void 0 === input.timings || "boolean" == typeof input.timings || _report(_exceptionable, {
                        path: _path + ".timings",
                        expected: "(boolean | undefined)",
                        value: input.timings
                    }),
                    void 0 === input.usedExports || "boolean" == typeof input.usedExports || _report(_exceptionable, {
                        path: _path + ".usedExports",
                        expected: "(boolean | undefined)",
                        value: input.usedExports
                    }),
                    void 0 === input.version || "boolean" == typeof input.version || _report(_exceptionable, {
                        path: _path + ".version",
                        expected: "(boolean | undefined)",
                        value: input.version
                    }),
                    void 0 === input.warnings || "boolean" == typeof input.warnings || _report(_exceptionable, {
                        path: _path + ".warnings",
                        expected: "(boolean | undefined)",
                        value: input.warnings
                    }),
                    void 0 === input.warningsCount || "boolean" == typeof input.warningsCount || _report(_exceptionable, {
                        path: _path + ".warningsCount",
                        expected: "(boolean | undefined)",
                        value: input.warningsCount
                    }),
                    (null !== input.warningsFilter || _report(_exceptionable, {
                        path: _path + ".warningsFilter",
                        expected: "(Array<WarningFilterItemTypes> | RegExp | string | undefined)",
                        value: input.warningsFilter
                    })) && (void 0 === input.warningsFilter || "function" == typeof input.warningsFilter || "string" == typeof input.warningsFilter || input.warningsFilter instanceof RegExp || (Array.isArray(input.warningsFilter) || _report(_exceptionable, {
                        path: _path + ".warningsFilter",
                        expected: "(Array<WarningFilterItemTypes> | RegExp | string | undefined)",
                        value: input.warningsFilter
                    })) && input.warningsFilter.map((elem, _index646)=>(null !== elem || _report(_exceptionable, {
                            path: _path + ".warningsFilter[" + _index646 + "]",
                            expected: "(RegExp | string)",
                            value: elem
                        })) && (void 0 !== elem || _report(_exceptionable, {
                            path: _path + ".warningsFilter[" + _index646 + "]",
                            expected: "(RegExp | string)",
                            value: elem
                        })) && ("function" == typeof elem || "string" == typeof elem || elem instanceof RegExp || _report(_exceptionable, {
                            path: _path + ".warningsFilter[" + _index646 + "]",
                            expected: "(RegExp | string)",
                            value: elem
                        }))).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".warningsFilter",
                        expected: "(Array<WarningFilterItemTypes> | RegExp | string | undefined)",
                        value: input.warningsFilter
                    })),
                    void 0 === input.warningsSpace || "number" == typeof input.warningsSpace || _report(_exceptionable, {
                        path: _path + ".warningsSpace",
                        expected: "(number | undefined)",
                        value: input.warningsSpace
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "all",
                            "assets",
                            "assetsSort",
                            "assetsSpace",
                            "builtAt",
                            "cached",
                            "cachedAssets",
                            "cachedModules",
                            "children",
                            "chunkGroupAuxiliary",
                            "chunkGroupChildren",
                            "chunkGroupMaxAssets",
                            "chunkGroups",
                            "chunkModules",
                            "chunkModulesSpace",
                            "chunkOrigins",
                            "chunkRelations",
                            "chunks",
                            "chunksSort",
                            "colors",
                            "context",
                            "dependentModules",
                            "depth",
                            "entrypoints",
                            "env",
                            "errorCause",
                            "errorDetails",
                            "errorErrors",
                            "errorStack",
                            "errors",
                            "errorsCount",
                            "errorsSpace",
                            "exclude",
                            "excludeAssets",
                            "excludeModules",
                            "groupAssetsByChunk",
                            "groupAssetsByEmitStatus",
                            "groupAssetsByExtension",
                            "groupAssetsByInfo",
                            "groupAssetsByPath",
                            "groupModulesByAttributes",
                            "groupModulesByCacheStatus",
                            "groupModulesByExtension",
                            "groupModulesByLayer",
                            "groupModulesByPath",
                            "groupModulesByType",
                            "groupReasonsByOrigin",
                            "hash",
                            "ids",
                            "logging",
                            "loggingDebug",
                            "loggingTrace",
                            "moduleAssets",
                            "moduleTrace",
                            "modules",
                            "modulesSort",
                            "modulesSpace",
                            "nestedModules",
                            "nestedModulesSpace",
                            "optimizationBailout",
                            "orphanModules",
                            "outputPath",
                            "performance",
                            "preset",
                            "providedExports",
                            "publicPath",
                            "reasons",
                            "reasonsSpace",
                            "relatedAssets",
                            "runtime",
                            "runtimeModules",
                            "source",
                            "timings",
                            "usedExports",
                            "version",
                            "warnings",
                            "warningsCount",
                            "warningsFilter",
                            "warningsSpace"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo349 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.bold || "string" == typeof input.bold || _report(_exceptionable, {
                        path: _path + ".bold",
                        expected: "(string | undefined)",
                        value: input.bold
                    }),
                    void 0 === input.cyan || "string" == typeof input.cyan || _report(_exceptionable, {
                        path: _path + ".cyan",
                        expected: "(string | undefined)",
                        value: input.cyan
                    }),
                    void 0 === input.green || "string" == typeof input.green || _report(_exceptionable, {
                        path: _path + ".green",
                        expected: "(string | undefined)",
                        value: input.green
                    }),
                    void 0 === input.magenta || "string" == typeof input.magenta || _report(_exceptionable, {
                        path: _path + ".magenta",
                        expected: "(string | undefined)",
                        value: input.magenta
                    }),
                    void 0 === input.red || "string" == typeof input.red || _report(_exceptionable, {
                        path: _path + ".red",
                        expected: "(string | undefined)",
                        value: input.red
                    }),
                    void 0 === input.yellow || "string" == typeof input.yellow || _report(_exceptionable, {
                        path: _path + ".yellow",
                        expected: "(string | undefined)",
                        value: input.yellow
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "bold",
                            "cyan",
                            "green",
                            "magenta",
                            "red",
                            "yellow"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo350 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.aggregateTimeout || "number" == typeof input.aggregateTimeout || _report(_exceptionable, {
                        path: _path + ".aggregateTimeout",
                        expected: "(number | undefined)",
                        value: input.aggregateTimeout
                    }),
                    void 0 === input.followSymlinks || "boolean" == typeof input.followSymlinks || _report(_exceptionable, {
                        path: _path + ".followSymlinks",
                        expected: "(boolean | undefined)",
                        value: input.followSymlinks
                    }),
                    (null !== input.ignored || _report(_exceptionable, {
                        path: _path + ".ignored",
                        expected: "(Array<string> | RegExp | string | undefined)",
                        value: input.ignored
                    })) && (void 0 === input.ignored || "string" == typeof input.ignored || input.ignored instanceof RegExp || (Array.isArray(input.ignored) || _report(_exceptionable, {
                        path: _path + ".ignored",
                        expected: "(Array<string> | RegExp | string | undefined)",
                        value: input.ignored
                    })) && input.ignored.map((elem, _index647)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".ignored[" + _index647 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".ignored",
                        expected: "(Array<string> | RegExp | string | undefined)",
                        value: input.ignored
                    })),
                    void 0 === input.poll || "number" == typeof input.poll || "boolean" == typeof input.poll || _report(_exceptionable, {
                        path: _path + ".poll",
                        expected: "(boolean | number | undefined)",
                        value: input.poll
                    }),
                    void 0 === input.stdin || "boolean" == typeof input.stdin || _report(_exceptionable, {
                        path: _path + ".stdin",
                        expected: "(boolean | undefined)",
                        value: input.stdin
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "aggregateTimeout",
                            "followSymlinks",
                            "ignored",
                            "poll",
                            "stdin"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo351 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.dedupe || (Array.isArray(input.dedupe) || _report(_exceptionable, {
                        path: _path + ".dedupe",
                        expected: "(Array<string> | undefined)",
                        value: input.dedupe
                    })) && input.dedupe.map((elem, _index648)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".dedupe[" + _index648 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".dedupe",
                        expected: "(Array<string> | undefined)",
                        value: input.dedupe
                    }),
                    (null !== input.alias || _report(_exceptionable, {
                        path: _path + ".alias",
                        expected: "(Alias | Array<Alias | ((config: Alias) => void | Alias)> | undefined)",
                        value: input.alias
                    })) && (void 0 === input.alias || "function" == typeof input.alias || Array.isArray(input.alias) && input.alias.map((elem, _index649)=>(null !== elem || _report(_exceptionable, {
                            path: _path + ".alias[" + _index649 + "]",
                            expected: "Alias",
                            value: elem
                        })) && (void 0 !== elem || _report(_exceptionable, {
                            path: _path + ".alias[" + _index649 + "]",
                            expected: "Alias",
                            value: elem
                        })) && ("function" == typeof elem || ("object" == typeof elem && null !== elem && false === Array.isArray(elem) || _report(_exceptionable, {
                            path: _path + ".alias[" + _index649 + "]",
                            expected: "Alias",
                            value: elem
                        })) && _vo352(elem, _path + ".alias[" + _index649 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".alias[" + _index649 + "]",
                            expected: "Alias",
                            value: elem
                        }))).every((flag)=>flag) || "object" == typeof input.alias && null !== input.alias && false === Array.isArray(input.alias) && _vo352(input.alias, _path + ".alias", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".alias",
                        expected: "(Alias | Array<Alias | ((config: Alias) => void | Alias)> | undefined)",
                        value: input.alias
                    }) || _report(_exceptionable, {
                        path: _path + ".alias",
                        expected: "(Alias | Array<Alias | ((config: Alias) => void | Alias)> | undefined)",
                        value: input.alias
                    })),
                    void 0 === input.aliasStrategy || "prefer-tsconfig" === input.aliasStrategy || "prefer-alias" === input.aliasStrategy || _report(_exceptionable, {
                        path: _path + ".aliasStrategy",
                        expected: "(\"prefer-alias\" | \"prefer-tsconfig\" | undefined)",
                        value: input.aliasStrategy
                    }),
                    void 0 === input.extensions || (Array.isArray(input.extensions) || _report(_exceptionable, {
                        path: _path + ".extensions",
                        expected: "(Array<string> | undefined)",
                        value: input.extensions
                    })) && input.extensions.map((elem, _index650)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".extensions[" + _index650 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".extensions",
                        expected: "(Array<string> | undefined)",
                        value: input.extensions
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "dedupe",
                            "alias",
                            "aliasStrategy",
                            "extensions"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo352 = (input, _path, _exceptionable = true)=>[
                    false === _exceptionable || Object.keys(input).map((key)=>{
                        const value = input[key];
                        if (void 0 === value) return true;
                        return (null !== value || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(Array<string | false> | false | string)",
                            value: value
                        })) && (void 0 !== value || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(Array<string | false> | false | string)",
                            value: value
                        })) && (false === value || "string" == typeof value || (Array.isArray(value) || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(Array<string | false> | false | string)",
                            value: value
                        })) && value.map((elem, _index651)=>false === elem || "string" == typeof elem || _report(_exceptionable, {
                                path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key) + "[" + _index651 + "]",
                                expected: "(false | string)",
                                value: elem
                            })).every((flag)=>flag) || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(Array<string | false> | false | string)",
                            value: value
                        }));
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo353 = (input, _path, _exceptionable = true)=>[
                    (null !== input.alias || _report(_exceptionable, {
                        path: _path + ".alias",
                        expected: "(Alias | Array<Alias | ((config: Alias) => void | Alias)> | undefined)",
                        value: input.alias
                    })) && (void 0 === input.alias || "function" == typeof input.alias || Array.isArray(input.alias) && input.alias.map((elem, _index652)=>(null !== elem || _report(_exceptionable, {
                            path: _path + ".alias[" + _index652 + "]",
                            expected: "Alias",
                            value: elem
                        })) && (void 0 !== elem || _report(_exceptionable, {
                            path: _path + ".alias[" + _index652 + "]",
                            expected: "Alias",
                            value: elem
                        })) && ("function" == typeof elem || ("object" == typeof elem && null !== elem && false === Array.isArray(elem) || _report(_exceptionable, {
                            path: _path + ".alias[" + _index652 + "]",
                            expected: "Alias",
                            value: elem
                        })) && _vo352(elem, _path + ".alias[" + _index652 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".alias[" + _index652 + "]",
                            expected: "Alias",
                            value: elem
                        }))).every((flag)=>flag) || "object" == typeof input.alias && null !== input.alias && false === Array.isArray(input.alias) && _vo352(input.alias, _path + ".alias", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".alias",
                        expected: "(Alias | Array<Alias | ((config: Alias) => void | Alias)> | undefined)",
                        value: input.alias
                    }) || _report(_exceptionable, {
                        path: _path + ".alias",
                        expected: "(Alias | Array<Alias | ((config: Alias) => void | Alias)> | undefined)",
                        value: input.alias
                    })),
                    void 0 === input.aliasStrategy || "prefer-tsconfig" === input.aliasStrategy || "prefer-alias" === input.aliasStrategy || _report(_exceptionable, {
                        path: _path + ".aliasStrategy",
                        expected: "(\"prefer-alias\" | \"prefer-tsconfig\" | undefined)",
                        value: input.aliasStrategy
                    }),
                    (null !== input.assetsInclude || _report(_exceptionable, {
                        path: _path + ".assetsInclude",
                        expected: "(RegExp | RuleSetConditions | RuleSetLogicalConditions | string | undefined)",
                        value: input.assetsInclude
                    })) && (void 0 === input.assetsInclude || "function" == typeof input.assetsInclude || "string" == typeof input.assetsInclude || input.assetsInclude instanceof RegExp || Array.isArray(input.assetsInclude) && (_va0(input.assetsInclude, _path + ".assetsInclude", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".assetsInclude",
                        expected: "RuleSetConditions",
                        value: input.assetsInclude
                    })) || "object" == typeof input.assetsInclude && null !== input.assetsInclude && false === Array.isArray(input.assetsInclude) && _vo174(input.assetsInclude, _path + ".assetsInclude", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".assetsInclude",
                        expected: "(RegExp | RuleSetConditions | RuleSetLogicalConditions | string | undefined)",
                        value: input.assetsInclude
                    }) || _report(_exceptionable, {
                        path: _path + ".assetsInclude",
                        expected: "(RegExp | RuleSetConditions | RuleSetLogicalConditions | string | undefined)",
                        value: input.assetsInclude
                    })),
                    void 0 === input.include || (Array.isArray(input.include) || _report(_exceptionable, {
                        path: _path + ".include",
                        expected: "(Array<RuleSetCondition>.o3 | undefined)",
                        value: input.include
                    })) && input.include.map((elem, _index653)=>(null !== elem || _report(_exceptionable, {
                            path: _path + ".include[" + _index653 + "]",
                            expected: "(RegExp | RuleSetConditions | RuleSetLogicalConditions | string)",
                            value: elem
                        })) && (void 0 !== elem || _report(_exceptionable, {
                            path: _path + ".include[" + _index653 + "]",
                            expected: "(RegExp | RuleSetConditions | RuleSetLogicalConditions | string)",
                            value: elem
                        })) && ("function" == typeof elem || "string" == typeof elem || elem instanceof RegExp || Array.isArray(elem) && (_va0(elem, _path + ".include[" + _index653 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".include[" + _index653 + "]",
                            expected: "RuleSetConditions",
                            value: elem
                        })) || "object" == typeof elem && null !== elem && false === Array.isArray(elem) && _vo174(elem, _path + ".include[" + _index653 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".include[" + _index653 + "]",
                            expected: "(RegExp | RuleSetConditions | RuleSetLogicalConditions | string)",
                            value: elem
                        }) || _report(_exceptionable, {
                            path: _path + ".include[" + _index653 + "]",
                            expected: "(RegExp | RuleSetConditions | RuleSetLogicalConditions | string)",
                            value: elem
                        }))).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".include",
                        expected: "(Array<RuleSetCondition>.o3 | undefined)",
                        value: input.include
                    }),
                    void 0 === input.entry || ("object" == typeof input.entry && null !== input.entry && false === Array.isArray(input.entry) || _report(_exceptionable, {
                        path: _path + ".entry",
                        expected: "(RsbuildEntry | undefined)",
                        value: input.entry
                    })) && _vo354(input.entry, _path + ".entry", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".entry",
                        expected: "(RsbuildEntry | undefined)",
                        value: input.entry
                    }),
                    void 0 === input.exclude || (Array.isArray(input.exclude) || _report(_exceptionable, {
                        path: _path + ".exclude",
                        expected: "(Array<RuleSetCondition>.o3 | undefined)",
                        value: input.exclude
                    })) && input.exclude.map((elem, _index654)=>(null !== elem || _report(_exceptionable, {
                            path: _path + ".exclude[" + _index654 + "]",
                            expected: "(RegExp | RuleSetConditions | RuleSetLogicalConditions | string)",
                            value: elem
                        })) && (void 0 !== elem || _report(_exceptionable, {
                            path: _path + ".exclude[" + _index654 + "]",
                            expected: "(RegExp | RuleSetConditions | RuleSetLogicalConditions | string)",
                            value: elem
                        })) && ("function" == typeof elem || "string" == typeof elem || elem instanceof RegExp || Array.isArray(elem) && (_va0(elem, _path + ".exclude[" + _index654 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".exclude[" + _index654 + "]",
                            expected: "RuleSetConditions",
                            value: elem
                        })) || "object" == typeof elem && null !== elem && false === Array.isArray(elem) && _vo174(elem, _path + ".exclude[" + _index654 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".exclude[" + _index654 + "]",
                            expected: "(RegExp | RuleSetConditions | RuleSetLogicalConditions | string)",
                            value: elem
                        }) || _report(_exceptionable, {
                            path: _path + ".exclude[" + _index654 + "]",
                            expected: "(RegExp | RuleSetConditions | RuleSetLogicalConditions | string)",
                            value: elem
                        }))).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".exclude",
                        expected: "(Array<RuleSetCondition>.o3 | undefined)",
                        value: input.exclude
                    }),
                    (null !== input.preEntry || _report(_exceptionable, {
                        path: _path + ".preEntry",
                        expected: "(Array<string> | string | undefined)",
                        value: input.preEntry
                    })) && (void 0 === input.preEntry || "string" == typeof input.preEntry || (Array.isArray(input.preEntry) || _report(_exceptionable, {
                        path: _path + ".preEntry",
                        expected: "(Array<string> | string | undefined)",
                        value: input.preEntry
                    })) && input.preEntry.map((elem, _index655)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".preEntry[" + _index655 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".preEntry",
                        expected: "(Array<string> | string | undefined)",
                        value: input.preEntry
                    })),
                    void 0 === input.define || ("object" == typeof input.define && null !== input.define && false === Array.isArray(input.define) || _report(_exceptionable, {
                        path: _path + ".define",
                        expected: "(Define | undefined)",
                        value: input.define
                    })) && _vo356(input.define, _path + ".define", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".define",
                        expected: "(Define | undefined)",
                        value: input.define
                    }),
                    void 0 === input.decorators || ("object" == typeof input.decorators && null !== input.decorators && false === Array.isArray(input.decorators) || _report(_exceptionable, {
                        path: _path + ".decorators",
                        expected: "(Decorators | undefined)",
                        value: input.decorators
                    })) && _vo357(input.decorators, _path + ".decorators", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".decorators",
                        expected: "(Decorators | undefined)",
                        value: input.decorators
                    }),
                    (null !== input.transformImport || _report(_exceptionable, {
                        path: _path + ".transformImport",
                        expected: "(Array<TransformImportFn | TransformImport> | undefined)",
                        value: input.transformImport
                    })) && (void 0 === input.transformImport || "function" == typeof input.transformImport || (Array.isArray(input.transformImport) || _report(_exceptionable, {
                        path: _path + ".transformImport",
                        expected: "(Array<TransformImportFn | TransformImport> | undefined)",
                        value: input.transformImport
                    })) && input.transformImport.map((elem, _index656)=>(null !== elem || _report(_exceptionable, {
                            path: _path + ".transformImport[" + _index656 + "]",
                            expected: "TransformImport",
                            value: elem
                        })) && (void 0 !== elem || _report(_exceptionable, {
                            path: _path + ".transformImport[" + _index656 + "]",
                            expected: "TransformImport",
                            value: elem
                        })) && ("function" == typeof elem || ("object" == typeof elem && null !== elem || _report(_exceptionable, {
                            path: _path + ".transformImport[" + _index656 + "]",
                            expected: "TransformImport",
                            value: elem
                        })) && _vo358(elem, _path + ".transformImport[" + _index656 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".transformImport[" + _index656 + "]",
                            expected: "TransformImport",
                            value: elem
                        }))).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".transformImport",
                        expected: "(Array<TransformImportFn | TransformImport> | undefined)",
                        value: input.transformImport
                    })),
                    void 0 === input.tsconfigPath || "string" == typeof input.tsconfigPath || _report(_exceptionable, {
                        path: _path + ".tsconfigPath",
                        expected: "(string | undefined)",
                        value: input.tsconfigPath
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "alias",
                            "aliasStrategy",
                            "assetsInclude",
                            "include",
                            "entry",
                            "exclude",
                            "preEntry",
                            "define",
                            "decorators",
                            "transformImport",
                            "tsconfigPath"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo354 = (input, _path, _exceptionable = true)=>[
                    false === _exceptionable || Object.keys(input).map((key)=>{
                        const value = input[key];
                        if (void 0 === value) return true;
                        return (null !== value || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(Array<string> | RsbuildEntryDescription | string)",
                            value: value
                        })) && (void 0 !== value || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(Array<string> | RsbuildEntryDescription | string)",
                            value: value
                        })) && ("string" == typeof value || Array.isArray(value) && value.map((elem, _index657)=>"string" == typeof elem || _report(_exceptionable, {
                                path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key) + "[" + _index657 + "]",
                                expected: "string",
                                value: elem
                            })).every((flag)=>flag) || "object" == typeof value && null !== value && _vo355(value, _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key), _exceptionable) || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(Array<string> | RsbuildEntryDescription | string)",
                            value: value
                        }) || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(Array<string> | RsbuildEntryDescription | string)",
                            value: value
                        }));
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo355 = (input, _path, _exceptionable = true)=>[
                    (null !== input["import"] || _report(_exceptionable, {
                        path: _path + "[\"import\"]",
                        expected: "(Array<string> | string)",
                        value: input["import"]
                    })) && (void 0 !== input["import"] || _report(_exceptionable, {
                        path: _path + "[\"import\"]",
                        expected: "(Array<string> | string)",
                        value: input["import"]
                    })) && ("string" == typeof input["import"] || (Array.isArray(input["import"]) || _report(_exceptionable, {
                        path: _path + "[\"import\"]",
                        expected: "(Array<string> | string)",
                        value: input["import"]
                    })) && input["import"].map((elem, _index658)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + "[\"import\"][" + _index658 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + "[\"import\"]",
                        expected: "(Array<string> | string)",
                        value: input["import"]
                    })),
                    void 0 === input.runtime || false === input.runtime || "string" == typeof input.runtime || _report(_exceptionable, {
                        path: _path + ".runtime",
                        expected: "(false | string | undefined)",
                        value: input.runtime
                    }),
                    (null !== input.publicPath || _report(_exceptionable, {
                        path: _path + ".publicPath",
                        expected: "(string | undefined)",
                        value: input.publicPath
                    })) && (void 0 === input.publicPath || "function" == typeof input.publicPath || "string" == typeof input.publicPath || _report(_exceptionable, {
                        path: _path + ".publicPath",
                        expected: "(string | undefined)",
                        value: input.publicPath
                    })),
                    void 0 === input.baseUri || "string" == typeof input.baseUri || _report(_exceptionable, {
                        path: _path + ".baseUri",
                        expected: "(string | undefined)",
                        value: input.baseUri
                    }),
                    void 0 === input.chunkLoading || false === input.chunkLoading || "string" == typeof input.chunkLoading || _report(_exceptionable, {
                        path: _path + ".chunkLoading",
                        expected: "(false | string | undefined)",
                        value: input.chunkLoading
                    }),
                    void 0 === input.asyncChunks || "boolean" == typeof input.asyncChunks || _report(_exceptionable, {
                        path: _path + ".asyncChunks",
                        expected: "(boolean | undefined)",
                        value: input.asyncChunks
                    }),
                    void 0 === input.wasmLoading || false === input.wasmLoading || "string" == typeof input.wasmLoading || _report(_exceptionable, {
                        path: _path + ".wasmLoading",
                        expected: "(false | string | undefined)",
                        value: input.wasmLoading
                    }),
                    (null !== input.filename || _report(_exceptionable, {
                        path: _path + ".filename",
                        expected: "(string | undefined)",
                        value: input.filename
                    })) && (void 0 === input.filename || "function" == typeof input.filename || "string" == typeof input.filename || _report(_exceptionable, {
                        path: _path + ".filename",
                        expected: "(string | undefined)",
                        value: input.filename
                    })),
                    void 0 === input.library || ("object" == typeof input.library && null !== input.library || _report(_exceptionable, {
                        path: _path + ".library",
                        expected: "(LibraryOptions | undefined)",
                        value: input.library
                    })) && _vo89(input.library, _path + ".library", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".library",
                        expected: "(LibraryOptions | undefined)",
                        value: input.library
                    }),
                    (null !== input.dependOn || _report(_exceptionable, {
                        path: _path + ".dependOn",
                        expected: "(Array<string> | string | undefined)",
                        value: input.dependOn
                    })) && (void 0 === input.dependOn || "string" == typeof input.dependOn || (Array.isArray(input.dependOn) || _report(_exceptionable, {
                        path: _path + ".dependOn",
                        expected: "(Array<string> | string | undefined)",
                        value: input.dependOn
                    })) && input.dependOn.map((elem, _index659)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".dependOn[" + _index659 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".dependOn",
                        expected: "(Array<string> | string | undefined)",
                        value: input.dependOn
                    })),
                    null === input.layer || void 0 === input.layer || "string" == typeof input.layer || _report(_exceptionable, {
                        path: _path + ".layer",
                        expected: "(null | string | undefined)",
                        value: input.layer
                    }),
                    void 0 === input.html || "boolean" == typeof input.html || _report(_exceptionable, {
                        path: _path + ".html",
                        expected: "(boolean | undefined)",
                        value: input.html
                    }),
                    1 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "import",
                            "runtime",
                            "publicPath",
                            "baseUri",
                            "chunkLoading",
                            "asyncChunks",
                            "wasmLoading",
                            "filename",
                            "library",
                            "dependOn",
                            "layer",
                            "html"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo356 = (input, _path, _exceptionable = true)=>[
                    false === _exceptionable || Object.keys(input).map((key)=>{
                        input[key];
                        return true;
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo357 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.version || "2022-03" === input.version || "legacy" === input.version || _report(_exceptionable, {
                        path: _path + ".version",
                        expected: "(\"2022-03\" | \"legacy\" | undefined)",
                        value: input.version
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "version"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo358 = (input, _path, _exceptionable = true)=>[
                    "string" == typeof input.libraryName || _report(_exceptionable, {
                        path: _path + ".libraryName",
                        expected: "string",
                        value: input.libraryName
                    }),
                    void 0 === input.libraryDirectory || "string" == typeof input.libraryDirectory || _report(_exceptionable, {
                        path: _path + ".libraryDirectory",
                        expected: "(string | undefined)",
                        value: input.libraryDirectory
                    }),
                    void 0 === input.style || "string" == typeof input.style || "boolean" == typeof input.style || _report(_exceptionable, {
                        path: _path + ".style",
                        expected: "(boolean | string | undefined)",
                        value: input.style
                    }),
                    void 0 === input.styleLibraryDirectory || "string" == typeof input.styleLibraryDirectory || _report(_exceptionable, {
                        path: _path + ".styleLibraryDirectory",
                        expected: "(string | undefined)",
                        value: input.styleLibraryDirectory
                    }),
                    void 0 === input.camelToDashComponentName || "boolean" == typeof input.camelToDashComponentName || _report(_exceptionable, {
                        path: _path + ".camelToDashComponentName",
                        expected: "(boolean | undefined)",
                        value: input.camelToDashComponentName
                    }),
                    void 0 === input.transformToDefaultImport || "boolean" == typeof input.transformToDefaultImport || _report(_exceptionable, {
                        path: _path + ".transformToDefaultImport",
                        expected: "(boolean | undefined)",
                        value: input.transformToDefaultImport
                    }),
                    true,
                    true,
                    1 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "libraryName",
                            "libraryDirectory",
                            "style",
                            "styleLibraryDirectory",
                            "camelToDashComponentName",
                            "transformToDefaultImport",
                            "customName",
                            "customStyleName"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo359 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.target || "node" === input.target || "web" === input.target || "web-worker" === input.target || _report(_exceptionable, {
                        path: _path + ".target",
                        expected: "(\"node\" | \"web\" | \"web-worker\" | undefined)",
                        value: input.target
                    }),
                    (null !== input.externals || _report(_exceptionable, {
                        path: _path + ".externals",
                        expected: "(Array<ExternalItem> | ExternalItemObjectUnknown | RegExp | string | undefined)",
                        value: input.externals
                    })) && (void 0 === input.externals || "function" == typeof input.externals || "string" == typeof input.externals || input.externals instanceof RegExp || Array.isArray(input.externals) && input.externals.map((elem, _index660)=>(null !== elem || _report(_exceptionable, {
                            path: _path + ".externals[" + _index660 + "]",
                            expected: "(ExternalItemObjectUnknown | RegExp | string)",
                            value: elem
                        })) && (void 0 !== elem || _report(_exceptionable, {
                            path: _path + ".externals[" + _index660 + "]",
                            expected: "(ExternalItemObjectUnknown | RegExp | string)",
                            value: elem
                        })) && ("function" == typeof elem || "string" == typeof elem || elem instanceof RegExp || ("object" == typeof elem && null !== elem && false === Array.isArray(elem) || _report(_exceptionable, {
                            path: _path + ".externals[" + _index660 + "]",
                            expected: "(ExternalItemObjectUnknown | RegExp | string)",
                            value: elem
                        })) && _vo105(elem, _path + ".externals[" + _index660 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".externals[" + _index660 + "]",
                            expected: "(ExternalItemObjectUnknown | RegExp | string)",
                            value: elem
                        }))).every((flag)=>flag) || "object" == typeof input.externals && null !== input.externals && false === Array.isArray(input.externals) && _vo105(input.externals, _path + ".externals", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".externals",
                        expected: "(Array<ExternalItem> | ExternalItemObjectUnknown | RegExp | string | undefined)",
                        value: input.externals
                    }) || _report(_exceptionable, {
                        path: _path + ".externals",
                        expected: "(Array<ExternalItem> | ExternalItemObjectUnknown | RegExp | string | undefined)",
                        value: input.externals
                    })),
                    void 0 === input.distPath || ("object" == typeof input.distPath && null !== input.distPath && false === Array.isArray(input.distPath) || _report(_exceptionable, {
                        path: _path + ".distPath",
                        expected: "(DistPathConfig | undefined)",
                        value: input.distPath
                    })) && _vo360(input.distPath, _path + ".distPath", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".distPath",
                        expected: "(DistPathConfig | undefined)",
                        value: input.distPath
                    }),
                    void 0 === input.filename || ("object" == typeof input.filename && null !== input.filename && false === Array.isArray(input.filename) || _report(_exceptionable, {
                        path: _path + ".filename",
                        expected: "(FilenameConfig | undefined)",
                        value: input.filename
                    })) && _vo361(input.filename, _path + ".filename", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".filename",
                        expected: "(FilenameConfig | undefined)",
                        value: input.filename
                    }),
                    void 0 === input.charset || "utf8" === input.charset || "ascii" === input.charset || _report(_exceptionable, {
                        path: _path + ".charset",
                        expected: "(\"ascii\" | \"utf8\" | undefined)",
                        value: input.charset
                    }),
                    void 0 === input.polyfill || "usage" === input.polyfill || "entry" === input.polyfill || "off" === input.polyfill || _report(_exceptionable, {
                        path: _path + ".polyfill",
                        expected: "(\"entry\" | \"off\" | \"usage\" | undefined)",
                        value: input.polyfill
                    }),
                    void 0 === input.assetPrefix || "string" == typeof input.assetPrefix || _report(_exceptionable, {
                        path: _path + ".assetPrefix",
                        expected: "(string | undefined)",
                        value: input.assetPrefix
                    }),
                    (null !== input.dataUriLimit || _report(_exceptionable, {
                        path: _path + ".dataUriLimit",
                        expected: "(DataUriLimit | number | undefined)",
                        value: input.dataUriLimit
                    })) && (void 0 === input.dataUriLimit || "number" == typeof input.dataUriLimit || ("object" == typeof input.dataUriLimit && null !== input.dataUriLimit && false === Array.isArray(input.dataUriLimit) || _report(_exceptionable, {
                        path: _path + ".dataUriLimit",
                        expected: "(DataUriLimit | number | undefined)",
                        value: input.dataUriLimit
                    })) && _vo362(input.dataUriLimit, _path + ".dataUriLimit", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".dataUriLimit",
                        expected: "(DataUriLimit | number | undefined)",
                        value: input.dataUriLimit
                    })),
                    void 0 === input.legalComments || "none" === input.legalComments || "inline" === input.legalComments || "linked" === input.legalComments || _report(_exceptionable, {
                        path: _path + ".legalComments",
                        expected: "(\"inline\" | \"linked\" | \"none\" | undefined)",
                        value: input.legalComments
                    }),
                    (null !== input.cleanDistPath || _report(_exceptionable, {
                        path: _path + ".cleanDistPath",
                        expected: "(\"auto\" | CleanDistPathObject | boolean | undefined)",
                        value: input.cleanDistPath
                    })) && (void 0 === input.cleanDistPath || "auto" === input.cleanDistPath || "boolean" == typeof input.cleanDistPath || ("object" == typeof input.cleanDistPath && null !== input.cleanDistPath && false === Array.isArray(input.cleanDistPath) || _report(_exceptionable, {
                        path: _path + ".cleanDistPath",
                        expected: "(\"auto\" | CleanDistPathObject | boolean | undefined)",
                        value: input.cleanDistPath
                    })) && _vo363(input.cleanDistPath, _path + ".cleanDistPath", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".cleanDistPath",
                        expected: "(\"auto\" | CleanDistPathObject | boolean | undefined)",
                        value: input.cleanDistPath
                    })),
                    void 0 === input.cssModules || ("object" == typeof input.cssModules && null !== input.cssModules && false === Array.isArray(input.cssModules) || _report(_exceptionable, {
                        path: _path + ".cssModules",
                        expected: "(CSSModules | undefined)",
                        value: input.cssModules
                    })) && _vo364(input.cssModules, _path + ".cssModules", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".cssModules",
                        expected: "(CSSModules | undefined)",
                        value: input.cssModules
                    }),
                    (null !== input.minify || _report(_exceptionable, {
                        path: _path + ".minify",
                        expected: "(__type.o105 | boolean | undefined)",
                        value: input.minify
                    })) && (void 0 === input.minify || "boolean" == typeof input.minify || ("object" == typeof input.minify && null !== input.minify && false === Array.isArray(input.minify) || _report(_exceptionable, {
                        path: _path + ".minify",
                        expected: "(__type.o105 | boolean | undefined)",
                        value: input.minify
                    })) && _vo365(input.minify, _path + ".minify", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".minify",
                        expected: "(__type.o105 | boolean | undefined)",
                        value: input.minify
                    })),
                    (null !== input.manifest || _report(_exceptionable, {
                        path: _path + ".manifest",
                        expected: "(ManifestObjectConfig | boolean | string | undefined)",
                        value: input.manifest
                    })) && (void 0 === input.manifest || "string" == typeof input.manifest || "boolean" == typeof input.manifest || ("object" == typeof input.manifest && null !== input.manifest && false === Array.isArray(input.manifest) || _report(_exceptionable, {
                        path: _path + ".manifest",
                        expected: "(ManifestObjectConfig | boolean | string | undefined)",
                        value: input.manifest
                    })) && _vo375(input.manifest, _path + ".manifest", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".manifest",
                        expected: "(ManifestObjectConfig | boolean | string | undefined)",
                        value: input.manifest
                    })),
                    void 0 === input["module"] || "boolean" == typeof input["module"] || _report(_exceptionable, {
                        path: _path + "[\"module\"]",
                        expected: "(boolean | undefined)",
                        value: input["module"]
                    }),
                    (null !== input.sourceMap || _report(_exceptionable, {
                        path: _path + ".sourceMap",
                        expected: "(SourceMap | boolean | undefined)",
                        value: input.sourceMap
                    })) && (void 0 === input.sourceMap || "boolean" == typeof input.sourceMap || ("object" == typeof input.sourceMap && null !== input.sourceMap && false === Array.isArray(input.sourceMap) || _report(_exceptionable, {
                        path: _path + ".sourceMap",
                        expected: "(SourceMap | boolean | undefined)",
                        value: input.sourceMap
                    })) && _vo376(input.sourceMap, _path + ".sourceMap", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".sourceMap",
                        expected: "(SourceMap | boolean | undefined)",
                        value: input.sourceMap
                    })),
                    void 0 === input.filenameHash || "string" == typeof input.filenameHash || "boolean" == typeof input.filenameHash || _report(_exceptionable, {
                        path: _path + ".filenameHash",
                        expected: "(boolean | string | undefined)",
                        value: input.filenameHash
                    }),
                    (null !== input.inlineScripts || _report(_exceptionable, {
                        path: _path + ".inlineScripts",
                        expected: "(RegExp | __type.o108 | boolean | undefined)",
                        value: input.inlineScripts
                    })) && (void 0 === input.inlineScripts || "function" == typeof input.inlineScripts || "boolean" == typeof input.inlineScripts || input.inlineScripts instanceof RegExp || ("object" == typeof input.inlineScripts && null !== input.inlineScripts || _report(_exceptionable, {
                        path: _path + ".inlineScripts",
                        expected: "(RegExp | __type.o108 | boolean | undefined)",
                        value: input.inlineScripts
                    })) && _vo377(input.inlineScripts, _path + ".inlineScripts", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".inlineScripts",
                        expected: "(RegExp | __type.o108 | boolean | undefined)",
                        value: input.inlineScripts
                    })),
                    (null !== input.inlineStyles || _report(_exceptionable, {
                        path: _path + ".inlineStyles",
                        expected: "(RegExp | __type.o108 | boolean | undefined)",
                        value: input.inlineStyles
                    })) && (void 0 === input.inlineStyles || "function" == typeof input.inlineStyles || "boolean" == typeof input.inlineStyles || input.inlineStyles instanceof RegExp || ("object" == typeof input.inlineStyles && null !== input.inlineStyles || _report(_exceptionable, {
                        path: _path + ".inlineStyles",
                        expected: "(RegExp | __type.o108 | boolean | undefined)",
                        value: input.inlineStyles
                    })) && _vo377(input.inlineStyles, _path + ".inlineStyles", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".inlineStyles",
                        expected: "(RegExp | __type.o108 | boolean | undefined)",
                        value: input.inlineStyles
                    })),
                    void 0 === input.injectStyles || "boolean" == typeof input.injectStyles || _report(_exceptionable, {
                        path: _path + ".injectStyles",
                        expected: "(boolean | undefined)",
                        value: input.injectStyles
                    }),
                    void 0 === input.overrideBrowserslist || (Array.isArray(input.overrideBrowserslist) || _report(_exceptionable, {
                        path: _path + ".overrideBrowserslist",
                        expected: "(Array<string> | undefined)",
                        value: input.overrideBrowserslist
                    })) && input.overrideBrowserslist.map((elem, _index661)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".overrideBrowserslist[" + _index661 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".overrideBrowserslist",
                        expected: "(Array<string> | undefined)",
                        value: input.overrideBrowserslist
                    }),
                    (null !== input.copy || _report(_exceptionable, {
                        path: _path + ".copy",
                        expected: "(Array<string | (Pick<RawCopyPattern, \"from\"> & Partial<Omit<RawCopyPattern, \"from\">>)> | CopyRspackPluginOptions | undefined)",
                        value: input.copy
                    })) && (void 0 === input.copy || Array.isArray(input.copy) && input.copy.map((elem, _index662)=>(null !== elem || _report(_exceptionable, {
                            path: _path + ".copy[" + _index662 + "]",
                            expected: "(Pick<RawCopyPattern, \"from\"> & Partial<Omit<RawCopyPattern, \"from\">> | string)",
                            value: elem
                        })) && (void 0 !== elem || _report(_exceptionable, {
                            path: _path + ".copy[" + _index662 + "]",
                            expected: "(Pick<RawCopyPattern, \"from\"> & Partial<Omit<RawCopyPattern, \"from\">> | string)",
                            value: elem
                        })) && ("string" == typeof elem || ("object" == typeof elem && null !== elem || _report(_exceptionable, {
                            path: _path + ".copy[" + _index662 + "]",
                            expected: "(Pick<RawCopyPattern, \"from\"> & Partial<Omit<RawCopyPattern, \"from\">> | string)",
                            value: elem
                        })) && _vo379(elem, _path + ".copy[" + _index662 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".copy[" + _index662 + "]",
                            expected: "(Pick<RawCopyPattern, \"from\"> & Partial<Omit<RawCopyPattern, \"from\">> | string)",
                            value: elem
                        }))).every((flag)=>flag) || "object" == typeof input.copy && null !== input.copy && _vo378(input.copy, _path + ".copy", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".copy",
                        expected: "(Array<string | (Pick<RawCopyPattern, \"from\"> & Partial<Omit<RawCopyPattern, \"from\">>)> | CopyRspackPluginOptions | undefined)",
                        value: input.copy
                    }) || _report(_exceptionable, {
                        path: _path + ".copy",
                        expected: "(Array<string | (Pick<RawCopyPattern, \"from\"> & Partial<Omit<RawCopyPattern, \"from\">>)> | CopyRspackPluginOptions | undefined)",
                        value: input.copy
                    })),
                    void 0 === input.emitAssets || "boolean" == typeof input.emitAssets || _report(_exceptionable, {
                        path: _path + ".emitAssets",
                        expected: "(boolean | undefined)",
                        value: input.emitAssets
                    }),
                    void 0 === input.emitCss || "boolean" == typeof input.emitCss || _report(_exceptionable, {
                        path: _path + ".emitCss",
                        expected: "(boolean | undefined)",
                        value: input.emitCss
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "target",
                            "externals",
                            "distPath",
                            "filename",
                            "charset",
                            "polyfill",
                            "assetPrefix",
                            "dataUriLimit",
                            "legalComments",
                            "cleanDistPath",
                            "cssModules",
                            "minify",
                            "manifest",
                            "module",
                            "sourceMap",
                            "filenameHash",
                            "inlineScripts",
                            "inlineStyles",
                            "injectStyles",
                            "overrideBrowserslist",
                            "copy",
                            "emitAssets",
                            "emitCss"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo360 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.root || "string" == typeof input.root || _report(_exceptionable, {
                        path: _path + ".root",
                        expected: "(string | undefined)",
                        value: input.root
                    }),
                    void 0 === input.js || "string" == typeof input.js || _report(_exceptionable, {
                        path: _path + ".js",
                        expected: "(string | undefined)",
                        value: input.js
                    }),
                    void 0 === input.jsAsync || "string" == typeof input.jsAsync || _report(_exceptionable, {
                        path: _path + ".jsAsync",
                        expected: "(string | undefined)",
                        value: input.jsAsync
                    }),
                    void 0 === input.css || "string" == typeof input.css || _report(_exceptionable, {
                        path: _path + ".css",
                        expected: "(string | undefined)",
                        value: input.css
                    }),
                    void 0 === input.cssAsync || "string" == typeof input.cssAsync || _report(_exceptionable, {
                        path: _path + ".cssAsync",
                        expected: "(string | undefined)",
                        value: input.cssAsync
                    }),
                    void 0 === input.svg || "string" == typeof input.svg || _report(_exceptionable, {
                        path: _path + ".svg",
                        expected: "(string | undefined)",
                        value: input.svg
                    }),
                    void 0 === input.font || "string" == typeof input.font || _report(_exceptionable, {
                        path: _path + ".font",
                        expected: "(string | undefined)",
                        value: input.font
                    }),
                    void 0 === input.html || "string" == typeof input.html || _report(_exceptionable, {
                        path: _path + ".html",
                        expected: "(string | undefined)",
                        value: input.html
                    }),
                    void 0 === input.wasm || "string" == typeof input.wasm || _report(_exceptionable, {
                        path: _path + ".wasm",
                        expected: "(string | undefined)",
                        value: input.wasm
                    }),
                    void 0 === input.image || "string" == typeof input.image || _report(_exceptionable, {
                        path: _path + ".image",
                        expected: "(string | undefined)",
                        value: input.image
                    }),
                    void 0 === input.media || "string" == typeof input.media || _report(_exceptionable, {
                        path: _path + ".media",
                        expected: "(string | undefined)",
                        value: input.media
                    }),
                    void 0 === input.assets || "string" == typeof input.assets || _report(_exceptionable, {
                        path: _path + ".assets",
                        expected: "(string | undefined)",
                        value: input.assets
                    }),
                    void 0 === input.favicon || "string" == typeof input.favicon || _report(_exceptionable, {
                        path: _path + ".favicon",
                        expected: "(string | undefined)",
                        value: input.favicon
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "root",
                            "js",
                            "jsAsync",
                            "css",
                            "cssAsync",
                            "svg",
                            "font",
                            "html",
                            "wasm",
                            "image",
                            "media",
                            "assets",
                            "favicon"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo361 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.html || "string" == typeof input.html || _report(_exceptionable, {
                        path: _path + ".html",
                        expected: "(string | undefined)",
                        value: input.html
                    }),
                    (null !== input.js || _report(_exceptionable, {
                        path: _path + ".js",
                        expected: "(string | undefined)",
                        value: input.js
                    })) && (void 0 === input.js || "function" == typeof input.js || "string" == typeof input.js || _report(_exceptionable, {
                        path: _path + ".js",
                        expected: "(string | undefined)",
                        value: input.js
                    })),
                    (null !== input.css || _report(_exceptionable, {
                        path: _path + ".css",
                        expected: "(string | undefined)",
                        value: input.css
                    })) && (void 0 === input.css || "function" == typeof input.css || "string" == typeof input.css || _report(_exceptionable, {
                        path: _path + ".css",
                        expected: "(string | undefined)",
                        value: input.css
                    })),
                    (null !== input.svg || _report(_exceptionable, {
                        path: _path + ".svg",
                        expected: "(string | undefined)",
                        value: input.svg
                    })) && (void 0 === input.svg || "function" == typeof input.svg || "string" == typeof input.svg || _report(_exceptionable, {
                        path: _path + ".svg",
                        expected: "(string | undefined)",
                        value: input.svg
                    })),
                    (null !== input.font || _report(_exceptionable, {
                        path: _path + ".font",
                        expected: "(string | undefined)",
                        value: input.font
                    })) && (void 0 === input.font || "function" == typeof input.font || "string" == typeof input.font || _report(_exceptionable, {
                        path: _path + ".font",
                        expected: "(string | undefined)",
                        value: input.font
                    })),
                    (null !== input.image || _report(_exceptionable, {
                        path: _path + ".image",
                        expected: "(string | undefined)",
                        value: input.image
                    })) && (void 0 === input.image || "function" == typeof input.image || "string" == typeof input.image || _report(_exceptionable, {
                        path: _path + ".image",
                        expected: "(string | undefined)",
                        value: input.image
                    })),
                    (null !== input.media || _report(_exceptionable, {
                        path: _path + ".media",
                        expected: "(string | undefined)",
                        value: input.media
                    })) && (void 0 === input.media || "function" == typeof input.media || "string" == typeof input.media || _report(_exceptionable, {
                        path: _path + ".media",
                        expected: "(string | undefined)",
                        value: input.media
                    })),
                    void 0 === input.wasm || "string" == typeof input.wasm || _report(_exceptionable, {
                        path: _path + ".wasm",
                        expected: "(string | undefined)",
                        value: input.wasm
                    }),
                    (null !== input.assets || _report(_exceptionable, {
                        path: _path + ".assets",
                        expected: "(string | undefined)",
                        value: input.assets
                    })) && (void 0 === input.assets || "function" == typeof input.assets || "string" == typeof input.assets || _report(_exceptionable, {
                        path: _path + ".assets",
                        expected: "(string | undefined)",
                        value: input.assets
                    })),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "html",
                            "js",
                            "css",
                            "svg",
                            "font",
                            "image",
                            "media",
                            "wasm",
                            "assets"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo362 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.svg || "number" == typeof input.svg || _report(_exceptionable, {
                        path: _path + ".svg",
                        expected: "(number | undefined)",
                        value: input.svg
                    }),
                    void 0 === input.font || "number" == typeof input.font || _report(_exceptionable, {
                        path: _path + ".font",
                        expected: "(number | undefined)",
                        value: input.font
                    }),
                    void 0 === input.image || "number" == typeof input.image || _report(_exceptionable, {
                        path: _path + ".image",
                        expected: "(number | undefined)",
                        value: input.image
                    }),
                    void 0 === input.media || "number" == typeof input.media || _report(_exceptionable, {
                        path: _path + ".media",
                        expected: "(number | undefined)",
                        value: input.media
                    }),
                    void 0 === input.assets || "number" == typeof input.assets || _report(_exceptionable, {
                        path: _path + ".assets",
                        expected: "(number | undefined)",
                        value: input.assets
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "svg",
                            "font",
                            "image",
                            "media",
                            "assets"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo363 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.enable || "auto" === input.enable || "boolean" == typeof input.enable || _report(_exceptionable, {
                        path: _path + ".enable",
                        expected: "(\"auto\" | boolean | undefined)",
                        value: input.enable
                    }),
                    void 0 === input.keep || (Array.isArray(input.keep) || _report(_exceptionable, {
                        path: _path + ".keep",
                        expected: "(Array<RegExp> | undefined)",
                        value: input.keep
                    })) && input.keep.map((elem, _index663)=>elem instanceof RegExp || _report(_exceptionable, {
                            path: _path + ".keep[" + _index663 + "]",
                            expected: "RegExp",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".keep",
                        expected: "(Array<RegExp> | undefined)",
                        value: input.keep
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "enable",
                            "keep"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo364 = (input, _path, _exceptionable = true)=>[
                    (null !== input.auto || _report(_exceptionable, {
                        path: _path + ".auto",
                        expected: "(RegExp | boolean | undefined)",
                        value: input.auto
                    })) && (void 0 === input.auto || "function" == typeof input.auto || "boolean" == typeof input.auto || input.auto instanceof RegExp || _report(_exceptionable, {
                        path: _path + ".auto",
                        expected: "(RegExp | boolean | undefined)",
                        value: input.auto
                    })),
                    void 0 === input.exportGlobals || "boolean" == typeof input.exportGlobals || _report(_exceptionable, {
                        path: _path + ".exportGlobals",
                        expected: "(boolean | undefined)",
                        value: input.exportGlobals
                    }),
                    void 0 === input.exportLocalsConvention || "asIs" === input.exportLocalsConvention || "camelCase" === input.exportLocalsConvention || "camelCaseOnly" === input.exportLocalsConvention || "dashes" === input.exportLocalsConvention || "dashesOnly" === input.exportLocalsConvention || _report(_exceptionable, {
                        path: _path + ".exportLocalsConvention",
                        expected: "(\"asIs\" | \"camelCase\" | \"camelCaseOnly\" | \"dashes\" | \"dashesOnly\" | undefined)",
                        value: input.exportLocalsConvention
                    }),
                    void 0 === input.localIdentName || "string" == typeof input.localIdentName || _report(_exceptionable, {
                        path: _path + ".localIdentName",
                        expected: "(string | undefined)",
                        value: input.localIdentName
                    }),
                    (null !== input.mode || _report(_exceptionable, {
                        path: _path + ".mode",
                        expected: "(\"global\" | \"icss\" | \"local\" | \"pure\" | undefined)",
                        value: input.mode
                    })) && (void 0 === input.mode || "function" == typeof input.mode || "local" === input.mode || "global" === input.mode || "pure" === input.mode || "icss" === input.mode || _report(_exceptionable, {
                        path: _path + ".mode",
                        expected: "(\"global\" | \"icss\" | \"local\" | \"pure\" | undefined)",
                        value: input.mode
                    })),
                    void 0 === input.namedExport || "boolean" == typeof input.namedExport || _report(_exceptionable, {
                        path: _path + ".namedExport",
                        expected: "(boolean | undefined)",
                        value: input.namedExport
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "auto",
                            "exportGlobals",
                            "exportLocalsConvention",
                            "localIdentName",
                            "mode",
                            "namedExport"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo365 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.js || "always" === input.js || "boolean" == typeof input.js || _report(_exceptionable, {
                        path: _path + ".js",
                        expected: "(\"always\" | boolean | undefined)",
                        value: input.js
                    }),
                    void 0 === input.jsOptions || ("object" == typeof input.jsOptions && null !== input.jsOptions && false === Array.isArray(input.jsOptions) || _report(_exceptionable, {
                        path: _path + ".jsOptions",
                        expected: "(SwcJsMinimizerRspackPluginOptions | undefined)",
                        value: input.jsOptions
                    })) && _vo366(input.jsOptions, _path + ".jsOptions", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".jsOptions",
                        expected: "(SwcJsMinimizerRspackPluginOptions | undefined)",
                        value: input.jsOptions
                    }),
                    void 0 === input.css || "always" === input.css || "boolean" == typeof input.css || _report(_exceptionable, {
                        path: _path + ".css",
                        expected: "(\"always\" | boolean | undefined)",
                        value: input.css
                    }),
                    void 0 === input.cssOptions || ("object" == typeof input.cssOptions && null !== input.cssOptions && false === Array.isArray(input.cssOptions) || _report(_exceptionable, {
                        path: _path + ".cssOptions",
                        expected: "(LightningCssMinimizerRspackPluginOptions | undefined)",
                        value: input.cssOptions
                    })) && _vo373(input.cssOptions, _path + ".cssOptions", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".cssOptions",
                        expected: "(LightningCssMinimizerRspackPluginOptions | undefined)",
                        value: input.cssOptions
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "js",
                            "jsOptions",
                            "css",
                            "cssOptions"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo366 = (input, _path, _exceptionable = true)=>[
                    (null !== input.test || _report(_exceptionable, {
                        path: _path + ".test",
                        expected: "(Array<AssetCondition> | RegExp | string | undefined)",
                        value: input.test
                    })) && (void 0 === input.test || "string" == typeof input.test || input.test instanceof RegExp || (Array.isArray(input.test) || _report(_exceptionable, {
                        path: _path + ".test",
                        expected: "(Array<AssetCondition> | RegExp | string | undefined)",
                        value: input.test
                    })) && input.test.map((elem, _index664)=>(null !== elem || _report(_exceptionable, {
                            path: _path + ".test[" + _index664 + "]",
                            expected: "(RegExp | string)",
                            value: elem
                        })) && (void 0 !== elem || _report(_exceptionable, {
                            path: _path + ".test[" + _index664 + "]",
                            expected: "(RegExp | string)",
                            value: elem
                        })) && ("string" == typeof elem || elem instanceof RegExp || _report(_exceptionable, {
                            path: _path + ".test[" + _index664 + "]",
                            expected: "(RegExp | string)",
                            value: elem
                        }))).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".test",
                        expected: "(Array<AssetCondition> | RegExp | string | undefined)",
                        value: input.test
                    })),
                    (null !== input.exclude || _report(_exceptionable, {
                        path: _path + ".exclude",
                        expected: "(Array<AssetCondition> | RegExp | string | undefined)",
                        value: input.exclude
                    })) && (void 0 === input.exclude || "string" == typeof input.exclude || input.exclude instanceof RegExp || (Array.isArray(input.exclude) || _report(_exceptionable, {
                        path: _path + ".exclude",
                        expected: "(Array<AssetCondition> | RegExp | string | undefined)",
                        value: input.exclude
                    })) && input.exclude.map((elem, _index665)=>(null !== elem || _report(_exceptionable, {
                            path: _path + ".exclude[" + _index665 + "]",
                            expected: "(RegExp | string)",
                            value: elem
                        })) && (void 0 !== elem || _report(_exceptionable, {
                            path: _path + ".exclude[" + _index665 + "]",
                            expected: "(RegExp | string)",
                            value: elem
                        })) && ("string" == typeof elem || elem instanceof RegExp || _report(_exceptionable, {
                            path: _path + ".exclude[" + _index665 + "]",
                            expected: "(RegExp | string)",
                            value: elem
                        }))).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".exclude",
                        expected: "(Array<AssetCondition> | RegExp | string | undefined)",
                        value: input.exclude
                    })),
                    (null !== input.include || _report(_exceptionable, {
                        path: _path + ".include",
                        expected: "(Array<AssetCondition> | RegExp | string | undefined)",
                        value: input.include
                    })) && (void 0 === input.include || "string" == typeof input.include || input.include instanceof RegExp || (Array.isArray(input.include) || _report(_exceptionable, {
                        path: _path + ".include",
                        expected: "(Array<AssetCondition> | RegExp | string | undefined)",
                        value: input.include
                    })) && input.include.map((elem, _index666)=>(null !== elem || _report(_exceptionable, {
                            path: _path + ".include[" + _index666 + "]",
                            expected: "(RegExp | string)",
                            value: elem
                        })) && (void 0 !== elem || _report(_exceptionable, {
                            path: _path + ".include[" + _index666 + "]",
                            expected: "(RegExp | string)",
                            value: elem
                        })) && ("string" == typeof elem || elem instanceof RegExp || _report(_exceptionable, {
                            path: _path + ".include[" + _index666 + "]",
                            expected: "(RegExp | string)",
                            value: elem
                        }))).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".include",
                        expected: "(Array<AssetCondition> | RegExp | string | undefined)",
                        value: input.include
                    })),
                    (null !== input.extractComments || _report(_exceptionable, {
                        path: _path + ".extractComments",
                        expected: "(ExtractCommentsObject | RegExp | boolean | undefined)",
                        value: input.extractComments
                    })) && (void 0 === input.extractComments || "boolean" == typeof input.extractComments || input.extractComments instanceof RegExp || ("object" == typeof input.extractComments && null !== input.extractComments && false === Array.isArray(input.extractComments) || _report(_exceptionable, {
                        path: _path + ".extractComments",
                        expected: "(ExtractCommentsObject | RegExp | boolean | undefined)",
                        value: input.extractComments
                    })) && _vo367(input.extractComments, _path + ".extractComments", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".extractComments",
                        expected: "(ExtractCommentsObject | RegExp | boolean | undefined)",
                        value: input.extractComments
                    })),
                    void 0 === input.minimizerOptions || ("object" == typeof input.minimizerOptions && null !== input.minimizerOptions && false === Array.isArray(input.minimizerOptions) || _report(_exceptionable, {
                        path: _path + ".minimizerOptions",
                        expected: "(__type.o106 | undefined)",
                        value: input.minimizerOptions
                    })) && _vo368(input.minimizerOptions, _path + ".minimizerOptions", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".minimizerOptions",
                        expected: "(__type.o106 | undefined)",
                        value: input.minimizerOptions
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "test",
                            "exclude",
                            "include",
                            "extractComments",
                            "minimizerOptions"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo367 = (input, _path, _exceptionable = true)=>[
                    (null !== input.condition || _report(_exceptionable, {
                        path: _path + ".condition",
                        expected: "(RegExp | boolean | undefined)",
                        value: input.condition
                    })) && (void 0 === input.condition || "boolean" == typeof input.condition || input.condition instanceof RegExp || _report(_exceptionable, {
                        path: _path + ".condition",
                        expected: "(RegExp | boolean | undefined)",
                        value: input.condition
                    })),
                    void 0 === input.banner || "string" == typeof input.banner || "boolean" == typeof input.banner || _report(_exceptionable, {
                        path: _path + ".banner",
                        expected: "(boolean | string | undefined)",
                        value: input.banner
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "condition",
                            "banner"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo368 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.minify || "boolean" == typeof input.minify || _report(_exceptionable, {
                        path: _path + ".minify",
                        expected: "(boolean | undefined)",
                        value: input.minify
                    }),
                    void 0 === input.ecma || "string" == typeof input.ecma || "number" == typeof input.ecma || _report(_exceptionable, {
                        path: _path + ".ecma",
                        expected: "(number | string | undefined)",
                        value: input.ecma
                    }),
                    (null !== input.compress || _report(_exceptionable, {
                        path: _path + ".compress",
                        expected: "(TerserCompressOptions.o1 | boolean | undefined)",
                        value: input.compress
                    })) && (void 0 === input.compress || "boolean" == typeof input.compress || ("object" == typeof input.compress && null !== input.compress && false === Array.isArray(input.compress) || _report(_exceptionable, {
                        path: _path + ".compress",
                        expected: "(TerserCompressOptions.o1 | boolean | undefined)",
                        value: input.compress
                    })) && _vo369(input.compress, _path + ".compress", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".compress",
                        expected: "(TerserCompressOptions.o1 | boolean | undefined)",
                        value: input.compress
                    })),
                    (null !== input.mangle || _report(_exceptionable, {
                        path: _path + ".mangle",
                        expected: "(TerserMangleOptions.o1 | boolean | undefined)",
                        value: input.mangle
                    })) && (void 0 === input.mangle || "boolean" == typeof input.mangle || ("object" == typeof input.mangle && null !== input.mangle && false === Array.isArray(input.mangle) || _report(_exceptionable, {
                        path: _path + ".mangle",
                        expected: "(TerserMangleOptions.o1 | boolean | undefined)",
                        value: input.mangle
                    })) && _vo370(input.mangle, _path + ".mangle", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".mangle",
                        expected: "(TerserMangleOptions.o1 | boolean | undefined)",
                        value: input.mangle
                    })),
                    void 0 === input.format || ("object" == typeof input.format && null !== input.format && false === Array.isArray(input.format) || _report(_exceptionable, {
                        path: _path + ".format",
                        expected: "(JsFormatOptions & ToSnakeCaseProperties<JsFormatOptions>.o1 | undefined)",
                        value: input.format
                    })) && _vo372(input.format, _path + ".format", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".format",
                        expected: "(JsFormatOptions & ToSnakeCaseProperties<JsFormatOptions>.o1 | undefined)",
                        value: input.format
                    }),
                    void 0 === input["module"] || "boolean" == typeof input["module"] || _report(_exceptionable, {
                        path: _path + "[\"module\"]",
                        expected: "(boolean | undefined)",
                        value: input["module"]
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "minify",
                            "ecma",
                            "compress",
                            "mangle",
                            "format",
                            "module"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo369 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.arguments || "boolean" == typeof input.arguments || _report(_exceptionable, {
                        path: _path + ".arguments",
                        expected: "(boolean | undefined)",
                        value: input.arguments
                    }),
                    void 0 === input.arrows || "boolean" == typeof input.arrows || _report(_exceptionable, {
                        path: _path + ".arrows",
                        expected: "(boolean | undefined)",
                        value: input.arrows
                    }),
                    void 0 === input.booleans || "boolean" == typeof input.booleans || _report(_exceptionable, {
                        path: _path + ".booleans",
                        expected: "(boolean | undefined)",
                        value: input.booleans
                    }),
                    void 0 === input.booleans_as_integers || "boolean" == typeof input.booleans_as_integers || _report(_exceptionable, {
                        path: _path + ".booleans_as_integers",
                        expected: "(boolean | undefined)",
                        value: input.booleans_as_integers
                    }),
                    void 0 === input.collapse_vars || "boolean" == typeof input.collapse_vars || _report(_exceptionable, {
                        path: _path + ".collapse_vars",
                        expected: "(boolean | undefined)",
                        value: input.collapse_vars
                    }),
                    void 0 === input.comparisons || "boolean" == typeof input.comparisons || _report(_exceptionable, {
                        path: _path + ".comparisons",
                        expected: "(boolean | undefined)",
                        value: input.comparisons
                    }),
                    void 0 === input.computed_props || "boolean" == typeof input.computed_props || _report(_exceptionable, {
                        path: _path + ".computed_props",
                        expected: "(boolean | undefined)",
                        value: input.computed_props
                    }),
                    void 0 === input.conditionals || "boolean" == typeof input.conditionals || _report(_exceptionable, {
                        path: _path + ".conditionals",
                        expected: "(boolean | undefined)",
                        value: input.conditionals
                    }),
                    void 0 === input.dead_code || "boolean" == typeof input.dead_code || _report(_exceptionable, {
                        path: _path + ".dead_code",
                        expected: "(boolean | undefined)",
                        value: input.dead_code
                    }),
                    void 0 === input.defaults || "boolean" == typeof input.defaults || _report(_exceptionable, {
                        path: _path + ".defaults",
                        expected: "(boolean | undefined)",
                        value: input.defaults
                    }),
                    void 0 === input.directives || "boolean" == typeof input.directives || _report(_exceptionable, {
                        path: _path + ".directives",
                        expected: "(boolean | undefined)",
                        value: input.directives
                    }),
                    void 0 === input.drop_console || "boolean" == typeof input.drop_console || _report(_exceptionable, {
                        path: _path + ".drop_console",
                        expected: "(boolean | undefined)",
                        value: input.drop_console
                    }),
                    void 0 === input.drop_debugger || "boolean" == typeof input.drop_debugger || _report(_exceptionable, {
                        path: _path + ".drop_debugger",
                        expected: "(boolean | undefined)",
                        value: input.drop_debugger
                    }),
                    void 0 === input.ecma || "string" == typeof input.ecma || "number" == typeof input.ecma || _report(_exceptionable, {
                        path: _path + ".ecma",
                        expected: "(number | string | undefined)",
                        value: input.ecma
                    }),
                    void 0 === input.evaluate || "boolean" == typeof input.evaluate || _report(_exceptionable, {
                        path: _path + ".evaluate",
                        expected: "(boolean | undefined)",
                        value: input.evaluate
                    }),
                    void 0 === input.expression || "boolean" == typeof input.expression || _report(_exceptionable, {
                        path: _path + ".expression",
                        expected: "(boolean | undefined)",
                        value: input.expression
                    }),
                    true,
                    void 0 === input.hoist_funs || "boolean" == typeof input.hoist_funs || _report(_exceptionable, {
                        path: _path + ".hoist_funs",
                        expected: "(boolean | undefined)",
                        value: input.hoist_funs
                    }),
                    void 0 === input.hoist_props || "boolean" == typeof input.hoist_props || _report(_exceptionable, {
                        path: _path + ".hoist_props",
                        expected: "(boolean | undefined)",
                        value: input.hoist_props
                    }),
                    void 0 === input.hoist_vars || "boolean" == typeof input.hoist_vars || _report(_exceptionable, {
                        path: _path + ".hoist_vars",
                        expected: "(boolean | undefined)",
                        value: input.hoist_vars
                    }),
                    void 0 === input.ie8 || "boolean" == typeof input.ie8 || _report(_exceptionable, {
                        path: _path + ".ie8",
                        expected: "(boolean | undefined)",
                        value: input.ie8
                    }),
                    void 0 === input.if_return || "boolean" == typeof input.if_return || _report(_exceptionable, {
                        path: _path + ".if_return",
                        expected: "(boolean | undefined)",
                        value: input.if_return
                    }),
                    void 0 === input.inline || 0 === input.inline || 1 === input.inline || 2 === input.inline || 3 === input.inline || _report(_exceptionable, {
                        path: _path + ".inline",
                        expected: "(0 | 1 | 2 | 3 | undefined)",
                        value: input.inline
                    }),
                    void 0 === input.join_vars || "boolean" == typeof input.join_vars || _report(_exceptionable, {
                        path: _path + ".join_vars",
                        expected: "(boolean | undefined)",
                        value: input.join_vars
                    }),
                    void 0 === input.keep_classnames || "boolean" == typeof input.keep_classnames || _report(_exceptionable, {
                        path: _path + ".keep_classnames",
                        expected: "(boolean | undefined)",
                        value: input.keep_classnames
                    }),
                    void 0 === input.keep_fargs || "boolean" == typeof input.keep_fargs || _report(_exceptionable, {
                        path: _path + ".keep_fargs",
                        expected: "(boolean | undefined)",
                        value: input.keep_fargs
                    }),
                    void 0 === input.keep_fnames || "boolean" == typeof input.keep_fnames || _report(_exceptionable, {
                        path: _path + ".keep_fnames",
                        expected: "(boolean | undefined)",
                        value: input.keep_fnames
                    }),
                    void 0 === input.keep_infinity || "boolean" == typeof input.keep_infinity || _report(_exceptionable, {
                        path: _path + ".keep_infinity",
                        expected: "(boolean | undefined)",
                        value: input.keep_infinity
                    }),
                    void 0 === input.loops || "boolean" == typeof input.loops || _report(_exceptionable, {
                        path: _path + ".loops",
                        expected: "(boolean | undefined)",
                        value: input.loops
                    }),
                    void 0 === input.negate_iife || "boolean" == typeof input.negate_iife || _report(_exceptionable, {
                        path: _path + ".negate_iife",
                        expected: "(boolean | undefined)",
                        value: input.negate_iife
                    }),
                    void 0 === input.passes || "number" == typeof input.passes || _report(_exceptionable, {
                        path: _path + ".passes",
                        expected: "(number | undefined)",
                        value: input.passes
                    }),
                    void 0 === input.properties || "boolean" == typeof input.properties || _report(_exceptionable, {
                        path: _path + ".properties",
                        expected: "(boolean | undefined)",
                        value: input.properties
                    }),
                    true,
                    void 0 === input.pure_funcs || (Array.isArray(input.pure_funcs) || _report(_exceptionable, {
                        path: _path + ".pure_funcs",
                        expected: "(Array<string> | undefined)",
                        value: input.pure_funcs
                    })) && input.pure_funcs.map((elem, _index667)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".pure_funcs[" + _index667 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".pure_funcs",
                        expected: "(Array<string> | undefined)",
                        value: input.pure_funcs
                    }),
                    void 0 === input.reduce_funcs || "boolean" == typeof input.reduce_funcs || _report(_exceptionable, {
                        path: _path + ".reduce_funcs",
                        expected: "(boolean | undefined)",
                        value: input.reduce_funcs
                    }),
                    void 0 === input.reduce_vars || "boolean" == typeof input.reduce_vars || _report(_exceptionable, {
                        path: _path + ".reduce_vars",
                        expected: "(boolean | undefined)",
                        value: input.reduce_vars
                    }),
                    true,
                    void 0 === input.side_effects || "boolean" == typeof input.side_effects || _report(_exceptionable, {
                        path: _path + ".side_effects",
                        expected: "(boolean | undefined)",
                        value: input.side_effects
                    }),
                    void 0 === input.switches || "boolean" == typeof input.switches || _report(_exceptionable, {
                        path: _path + ".switches",
                        expected: "(boolean | undefined)",
                        value: input.switches
                    }),
                    true,
                    true,
                    void 0 === input.typeofs || "boolean" == typeof input.typeofs || _report(_exceptionable, {
                        path: _path + ".typeofs",
                        expected: "(boolean | undefined)",
                        value: input.typeofs
                    }),
                    void 0 === input.unsafe || "boolean" == typeof input.unsafe || _report(_exceptionable, {
                        path: _path + ".unsafe",
                        expected: "(boolean | undefined)",
                        value: input.unsafe
                    }),
                    void 0 === input.unsafe_passes || "boolean" == typeof input.unsafe_passes || _report(_exceptionable, {
                        path: _path + ".unsafe_passes",
                        expected: "(boolean | undefined)",
                        value: input.unsafe_passes
                    }),
                    void 0 === input.unsafe_arrows || "boolean" == typeof input.unsafe_arrows || _report(_exceptionable, {
                        path: _path + ".unsafe_arrows",
                        expected: "(boolean | undefined)",
                        value: input.unsafe_arrows
                    }),
                    void 0 === input.unsafe_comps || "boolean" == typeof input.unsafe_comps || _report(_exceptionable, {
                        path: _path + ".unsafe_comps",
                        expected: "(boolean | undefined)",
                        value: input.unsafe_comps
                    }),
                    void 0 === input.unsafe_function || "boolean" == typeof input.unsafe_function || _report(_exceptionable, {
                        path: _path + ".unsafe_function",
                        expected: "(boolean | undefined)",
                        value: input.unsafe_function
                    }),
                    void 0 === input.unsafe_math || "boolean" == typeof input.unsafe_math || _report(_exceptionable, {
                        path: _path + ".unsafe_math",
                        expected: "(boolean | undefined)",
                        value: input.unsafe_math
                    }),
                    void 0 === input.unsafe_symbols || "boolean" == typeof input.unsafe_symbols || _report(_exceptionable, {
                        path: _path + ".unsafe_symbols",
                        expected: "(boolean | undefined)",
                        value: input.unsafe_symbols
                    }),
                    void 0 === input.unsafe_methods || "boolean" == typeof input.unsafe_methods || _report(_exceptionable, {
                        path: _path + ".unsafe_methods",
                        expected: "(boolean | undefined)",
                        value: input.unsafe_methods
                    }),
                    void 0 === input.unsafe_proto || "boolean" == typeof input.unsafe_proto || _report(_exceptionable, {
                        path: _path + ".unsafe_proto",
                        expected: "(boolean | undefined)",
                        value: input.unsafe_proto
                    }),
                    void 0 === input.unsafe_regexp || "boolean" == typeof input.unsafe_regexp || _report(_exceptionable, {
                        path: _path + ".unsafe_regexp",
                        expected: "(boolean | undefined)",
                        value: input.unsafe_regexp
                    }),
                    void 0 === input.unsafe_undefined || "boolean" == typeof input.unsafe_undefined || _report(_exceptionable, {
                        path: _path + ".unsafe_undefined",
                        expected: "(boolean | undefined)",
                        value: input.unsafe_undefined
                    }),
                    void 0 === input.unused || "boolean" == typeof input.unused || _report(_exceptionable, {
                        path: _path + ".unused",
                        expected: "(boolean | undefined)",
                        value: input.unused
                    }),
                    void 0 === input.const_to_let || "boolean" == typeof input.const_to_let || _report(_exceptionable, {
                        path: _path + ".const_to_let",
                        expected: "(boolean | undefined)",
                        value: input.const_to_let
                    }),
                    void 0 === input["module"] || "boolean" == typeof input["module"] || _report(_exceptionable, {
                        path: _path + "[\"module\"]",
                        expected: "(boolean | undefined)",
                        value: input["module"]
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "arguments",
                            "arrows",
                            "booleans",
                            "booleans_as_integers",
                            "collapse_vars",
                            "comparisons",
                            "computed_props",
                            "conditionals",
                            "dead_code",
                            "defaults",
                            "directives",
                            "drop_console",
                            "drop_debugger",
                            "ecma",
                            "evaluate",
                            "expression",
                            "global_defs",
                            "hoist_funs",
                            "hoist_props",
                            "hoist_vars",
                            "ie8",
                            "if_return",
                            "inline",
                            "join_vars",
                            "keep_classnames",
                            "keep_fargs",
                            "keep_fnames",
                            "keep_infinity",
                            "loops",
                            "negate_iife",
                            "passes",
                            "properties",
                            "pure_getters",
                            "pure_funcs",
                            "reduce_funcs",
                            "reduce_vars",
                            "sequences",
                            "side_effects",
                            "switches",
                            "top_retain",
                            "toplevel",
                            "typeofs",
                            "unsafe",
                            "unsafe_passes",
                            "unsafe_arrows",
                            "unsafe_comps",
                            "unsafe_function",
                            "unsafe_math",
                            "unsafe_symbols",
                            "unsafe_methods",
                            "unsafe_proto",
                            "unsafe_regexp",
                            "unsafe_undefined",
                            "unused",
                            "const_to_let",
                            "module"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo370 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.props || ("object" == typeof input.props && null !== input.props && false === Array.isArray(input.props) || _report(_exceptionable, {
                        path: _path + ".props",
                        expected: "(TerserManglePropertiesOptions.o1 | undefined)",
                        value: input.props
                    })) && _vo371(input.props, _path + ".props", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".props",
                        expected: "(TerserManglePropertiesOptions.o1 | undefined)",
                        value: input.props
                    }),
                    void 0 === input.toplevel || "boolean" == typeof input.toplevel || _report(_exceptionable, {
                        path: _path + ".toplevel",
                        expected: "(boolean | undefined)",
                        value: input.toplevel
                    }),
                    void 0 === input.keep_classnames || "boolean" == typeof input.keep_classnames || _report(_exceptionable, {
                        path: _path + ".keep_classnames",
                        expected: "(boolean | undefined)",
                        value: input.keep_classnames
                    }),
                    void 0 === input.keep_fnames || "boolean" == typeof input.keep_fnames || _report(_exceptionable, {
                        path: _path + ".keep_fnames",
                        expected: "(boolean | undefined)",
                        value: input.keep_fnames
                    }),
                    void 0 === input.keep_private_props || "boolean" == typeof input.keep_private_props || _report(_exceptionable, {
                        path: _path + ".keep_private_props",
                        expected: "(boolean | undefined)",
                        value: input.keep_private_props
                    }),
                    void 0 === input.ie8 || "boolean" == typeof input.ie8 || _report(_exceptionable, {
                        path: _path + ".ie8",
                        expected: "(boolean | undefined)",
                        value: input.ie8
                    }),
                    void 0 === input.safari10 || "boolean" == typeof input.safari10 || _report(_exceptionable, {
                        path: _path + ".safari10",
                        expected: "(boolean | undefined)",
                        value: input.safari10
                    }),
                    void 0 === input.reserved || (Array.isArray(input.reserved) || _report(_exceptionable, {
                        path: _path + ".reserved",
                        expected: "(Array<string> | undefined)",
                        value: input.reserved
                    })) && input.reserved.map((elem, _index668)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".reserved[" + _index668 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".reserved",
                        expected: "(Array<string> | undefined)",
                        value: input.reserved
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "props",
                            "toplevel",
                            "keep_classnames",
                            "keep_fnames",
                            "keep_private_props",
                            "ie8",
                            "safari10",
                            "reserved"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo371 = (input, _path, _exceptionable = true)=>[
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo372 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.asciiOnly || "boolean" == typeof input.asciiOnly || _report(_exceptionable, {
                        path: _path + ".asciiOnly",
                        expected: "(boolean | undefined)",
                        value: input.asciiOnly
                    }),
                    void 0 === input.beautify || "boolean" == typeof input.beautify || _report(_exceptionable, {
                        path: _path + ".beautify",
                        expected: "(boolean | undefined)",
                        value: input.beautify
                    }),
                    void 0 === input.braces || "boolean" == typeof input.braces || _report(_exceptionable, {
                        path: _path + ".braces",
                        expected: "(boolean | undefined)",
                        value: input.braces
                    }),
                    void 0 === input.comments || false === input.comments || "all" === input.comments || "some" === input.comments || _report(_exceptionable, {
                        path: _path + ".comments",
                        expected: "(\"all\" | \"some\" | false | undefined)",
                        value: input.comments
                    }),
                    void 0 === input.ecma || "string" == typeof input.ecma || "number" == typeof input.ecma || _report(_exceptionable, {
                        path: _path + ".ecma",
                        expected: "(number | string | undefined)",
                        value: input.ecma
                    }),
                    void 0 === input.indentLevel || "number" == typeof input.indentLevel || _report(_exceptionable, {
                        path: _path + ".indentLevel",
                        expected: "(number | undefined)",
                        value: input.indentLevel
                    }),
                    void 0 === input.indentStart || "number" == typeof input.indentStart || _report(_exceptionable, {
                        path: _path + ".indentStart",
                        expected: "(number | undefined)",
                        value: input.indentStart
                    }),
                    void 0 === input.inlineScript || "number" == typeof input.inlineScript || _report(_exceptionable, {
                        path: _path + ".inlineScript",
                        expected: "(number | undefined)",
                        value: input.inlineScript
                    }),
                    void 0 === input.keepNumbers || "number" == typeof input.keepNumbers || _report(_exceptionable, {
                        path: _path + ".keepNumbers",
                        expected: "(number | undefined)",
                        value: input.keepNumbers
                    }),
                    void 0 === input.keepQuotedProps || "boolean" == typeof input.keepQuotedProps || _report(_exceptionable, {
                        path: _path + ".keepQuotedProps",
                        expected: "(boolean | undefined)",
                        value: input.keepQuotedProps
                    }),
                    void 0 === input.maxLineLen || false === input.maxLineLen || "number" == typeof input.maxLineLen || _report(_exceptionable, {
                        path: _path + ".maxLineLen",
                        expected: "(false | number | undefined)",
                        value: input.maxLineLen
                    }),
                    void 0 === input.preamble || "string" == typeof input.preamble || _report(_exceptionable, {
                        path: _path + ".preamble",
                        expected: "(string | undefined)",
                        value: input.preamble
                    }),
                    void 0 === input.quoteKeys || "boolean" == typeof input.quoteKeys || _report(_exceptionable, {
                        path: _path + ".quoteKeys",
                        expected: "(boolean | undefined)",
                        value: input.quoteKeys
                    }),
                    void 0 === input.quoteStyle || "boolean" == typeof input.quoteStyle || _report(_exceptionable, {
                        path: _path + ".quoteStyle",
                        expected: "(boolean | undefined)",
                        value: input.quoteStyle
                    }),
                    void 0 === input.preserveAnnotations || "boolean" == typeof input.preserveAnnotations || _report(_exceptionable, {
                        path: _path + ".preserveAnnotations",
                        expected: "(boolean | undefined)",
                        value: input.preserveAnnotations
                    }),
                    void 0 === input.safari10 || "boolean" == typeof input.safari10 || _report(_exceptionable, {
                        path: _path + ".safari10",
                        expected: "(boolean | undefined)",
                        value: input.safari10
                    }),
                    void 0 === input.semicolons || "boolean" == typeof input.semicolons || _report(_exceptionable, {
                        path: _path + ".semicolons",
                        expected: "(boolean | undefined)",
                        value: input.semicolons
                    }),
                    void 0 === input.shebang || "boolean" == typeof input.shebang || _report(_exceptionable, {
                        path: _path + ".shebang",
                        expected: "(boolean | undefined)",
                        value: input.shebang
                    }),
                    void 0 === input.webkit || "boolean" == typeof input.webkit || _report(_exceptionable, {
                        path: _path + ".webkit",
                        expected: "(boolean | undefined)",
                        value: input.webkit
                    }),
                    void 0 === input.wrapIife || "boolean" == typeof input.wrapIife || _report(_exceptionable, {
                        path: _path + ".wrapIife",
                        expected: "(boolean | undefined)",
                        value: input.wrapIife
                    }),
                    void 0 === input.wrapFuncArgs || "boolean" == typeof input.wrapFuncArgs || _report(_exceptionable, {
                        path: _path + ".wrapFuncArgs",
                        expected: "(boolean | undefined)",
                        value: input.wrapFuncArgs
                    }),
                    void 0 === input.ascii_only || "boolean" == typeof input.ascii_only || _report(_exceptionable, {
                        path: _path + ".ascii_only",
                        expected: "(boolean | undefined)",
                        value: input.ascii_only
                    }),
                    void 0 === input.indent_level || "number" == typeof input.indent_level || _report(_exceptionable, {
                        path: _path + ".indent_level",
                        expected: "(number | undefined)",
                        value: input.indent_level
                    }),
                    void 0 === input.indent_start || "number" == typeof input.indent_start || _report(_exceptionable, {
                        path: _path + ".indent_start",
                        expected: "(number | undefined)",
                        value: input.indent_start
                    }),
                    void 0 === input.inline_script || "number" == typeof input.inline_script || _report(_exceptionable, {
                        path: _path + ".inline_script",
                        expected: "(number | undefined)",
                        value: input.inline_script
                    }),
                    void 0 === input.keep_numbers || "number" == typeof input.keep_numbers || _report(_exceptionable, {
                        path: _path + ".keep_numbers",
                        expected: "(number | undefined)",
                        value: input.keep_numbers
                    }),
                    void 0 === input.keep_quoted_props || "boolean" == typeof input.keep_quoted_props || _report(_exceptionable, {
                        path: _path + ".keep_quoted_props",
                        expected: "(boolean | undefined)",
                        value: input.keep_quoted_props
                    }),
                    void 0 === input.max_line_len || false === input.max_line_len || "number" == typeof input.max_line_len || _report(_exceptionable, {
                        path: _path + ".max_line_len",
                        expected: "(false | number | undefined)",
                        value: input.max_line_len
                    }),
                    void 0 === input.quote_keys || "boolean" == typeof input.quote_keys || _report(_exceptionable, {
                        path: _path + ".quote_keys",
                        expected: "(boolean | undefined)",
                        value: input.quote_keys
                    }),
                    void 0 === input.quote_style || "boolean" == typeof input.quote_style || _report(_exceptionable, {
                        path: _path + ".quote_style",
                        expected: "(boolean | undefined)",
                        value: input.quote_style
                    }),
                    void 0 === input.preserve_annotations || "boolean" == typeof input.preserve_annotations || _report(_exceptionable, {
                        path: _path + ".preserve_annotations",
                        expected: "(boolean | undefined)",
                        value: input.preserve_annotations
                    }),
                    void 0 === input.wrap_iife || "boolean" == typeof input.wrap_iife || _report(_exceptionable, {
                        path: _path + ".wrap_iife",
                        expected: "(boolean | undefined)",
                        value: input.wrap_iife
                    }),
                    void 0 === input.wrap_func_args || "boolean" == typeof input.wrap_func_args || _report(_exceptionable, {
                        path: _path + ".wrap_func_args",
                        expected: "(boolean | undefined)",
                        value: input.wrap_func_args
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "asciiOnly",
                            "beautify",
                            "braces",
                            "comments",
                            "ecma",
                            "indentLevel",
                            "indentStart",
                            "inlineScript",
                            "keepNumbers",
                            "keepQuotedProps",
                            "maxLineLen",
                            "preamble",
                            "quoteKeys",
                            "quoteStyle",
                            "preserveAnnotations",
                            "safari10",
                            "semicolons",
                            "shebang",
                            "webkit",
                            "wrapIife",
                            "wrapFuncArgs",
                            "ascii_only",
                            "indent_level",
                            "indent_start",
                            "inline_script",
                            "keep_numbers",
                            "keep_quoted_props",
                            "max_line_len",
                            "quote_keys",
                            "quote_style",
                            "preserve_annotations",
                            "wrap_iife",
                            "wrap_func_args"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo373 = (input, _path, _exceptionable = true)=>[
                    (null !== input.test || _report(_exceptionable, {
                        path: _path + ".test",
                        expected: "(Array<AssetCondition> | RegExp | string | undefined)",
                        value: input.test
                    })) && (void 0 === input.test || "string" == typeof input.test || input.test instanceof RegExp || (Array.isArray(input.test) || _report(_exceptionable, {
                        path: _path + ".test",
                        expected: "(Array<AssetCondition> | RegExp | string | undefined)",
                        value: input.test
                    })) && input.test.map((elem, _index669)=>(null !== elem || _report(_exceptionable, {
                            path: _path + ".test[" + _index669 + "]",
                            expected: "(RegExp | string)",
                            value: elem
                        })) && (void 0 !== elem || _report(_exceptionable, {
                            path: _path + ".test[" + _index669 + "]",
                            expected: "(RegExp | string)",
                            value: elem
                        })) && ("string" == typeof elem || elem instanceof RegExp || _report(_exceptionable, {
                            path: _path + ".test[" + _index669 + "]",
                            expected: "(RegExp | string)",
                            value: elem
                        }))).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".test",
                        expected: "(Array<AssetCondition> | RegExp | string | undefined)",
                        value: input.test
                    })),
                    (null !== input.include || _report(_exceptionable, {
                        path: _path + ".include",
                        expected: "(Array<AssetCondition> | RegExp | string | undefined)",
                        value: input.include
                    })) && (void 0 === input.include || "string" == typeof input.include || input.include instanceof RegExp || (Array.isArray(input.include) || _report(_exceptionable, {
                        path: _path + ".include",
                        expected: "(Array<AssetCondition> | RegExp | string | undefined)",
                        value: input.include
                    })) && input.include.map((elem, _index670)=>(null !== elem || _report(_exceptionable, {
                            path: _path + ".include[" + _index670 + "]",
                            expected: "(RegExp | string)",
                            value: elem
                        })) && (void 0 !== elem || _report(_exceptionable, {
                            path: _path + ".include[" + _index670 + "]",
                            expected: "(RegExp | string)",
                            value: elem
                        })) && ("string" == typeof elem || elem instanceof RegExp || _report(_exceptionable, {
                            path: _path + ".include[" + _index670 + "]",
                            expected: "(RegExp | string)",
                            value: elem
                        }))).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".include",
                        expected: "(Array<AssetCondition> | RegExp | string | undefined)",
                        value: input.include
                    })),
                    (null !== input.exclude || _report(_exceptionable, {
                        path: _path + ".exclude",
                        expected: "(Array<AssetCondition> | RegExp | string | undefined)",
                        value: input.exclude
                    })) && (void 0 === input.exclude || "string" == typeof input.exclude || input.exclude instanceof RegExp || (Array.isArray(input.exclude) || _report(_exceptionable, {
                        path: _path + ".exclude",
                        expected: "(Array<AssetCondition> | RegExp | string | undefined)",
                        value: input.exclude
                    })) && input.exclude.map((elem, _index671)=>(null !== elem || _report(_exceptionable, {
                            path: _path + ".exclude[" + _index671 + "]",
                            expected: "(RegExp | string)",
                            value: elem
                        })) && (void 0 !== elem || _report(_exceptionable, {
                            path: _path + ".exclude[" + _index671 + "]",
                            expected: "(RegExp | string)",
                            value: elem
                        })) && ("string" == typeof elem || elem instanceof RegExp || _report(_exceptionable, {
                            path: _path + ".exclude[" + _index671 + "]",
                            expected: "(RegExp | string)",
                            value: elem
                        }))).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".exclude",
                        expected: "(Array<AssetCondition> | RegExp | string | undefined)",
                        value: input.exclude
                    })),
                    void 0 === input.removeUnusedLocalIdents || "boolean" == typeof input.removeUnusedLocalIdents || _report(_exceptionable, {
                        path: _path + ".removeUnusedLocalIdents",
                        expected: "(boolean | undefined)",
                        value: input.removeUnusedLocalIdents
                    }),
                    void 0 === input.minimizerOptions || ("object" == typeof input.minimizerOptions && null !== input.minimizerOptions && false === Array.isArray(input.minimizerOptions) || _report(_exceptionable, {
                        path: _path + ".minimizerOptions",
                        expected: "(__type.o107 | undefined)",
                        value: input.minimizerOptions
                    })) && _vo374(input.minimizerOptions, _path + ".minimizerOptions", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".minimizerOptions",
                        expected: "(__type.o107 | undefined)",
                        value: input.minimizerOptions
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "test",
                            "include",
                            "exclude",
                            "removeUnusedLocalIdents",
                            "minimizerOptions"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo374 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.errorRecovery || "boolean" == typeof input.errorRecovery || _report(_exceptionable, {
                        path: _path + ".errorRecovery",
                        expected: "(boolean | undefined)",
                        value: input.errorRecovery
                    }),
                    (null !== input.targets || _report(_exceptionable, {
                        path: _path + ".targets",
                        expected: "(Array<string> | string | undefined)",
                        value: input.targets
                    })) && (void 0 === input.targets || "string" == typeof input.targets || (Array.isArray(input.targets) || _report(_exceptionable, {
                        path: _path + ".targets",
                        expected: "(Array<string> | string | undefined)",
                        value: input.targets
                    })) && input.targets.map((elem, _index672)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".targets[" + _index672 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".targets",
                        expected: "(Array<string> | string | undefined)",
                        value: input.targets
                    })),
                    void 0 === input.include || ("object" == typeof input.include && null !== input.include && false === Array.isArray(input.include) || _report(_exceptionable, {
                        path: _path + ".include",
                        expected: "(FeatureOptions | undefined)",
                        value: input.include
                    })) && _vo79(input.include, _path + ".include", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".include",
                        expected: "(FeatureOptions | undefined)",
                        value: input.include
                    }),
                    void 0 === input.exclude || ("object" == typeof input.exclude && null !== input.exclude && false === Array.isArray(input.exclude) || _report(_exceptionable, {
                        path: _path + ".exclude",
                        expected: "(FeatureOptions | undefined)",
                        value: input.exclude
                    })) && _vo79(input.exclude, _path + ".exclude", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".exclude",
                        expected: "(FeatureOptions | undefined)",
                        value: input.exclude
                    }),
                    void 0 === input.draft || ("object" == typeof input.draft && null !== input.draft && false === Array.isArray(input.draft) || _report(_exceptionable, {
                        path: _path + ".draft",
                        expected: "(Drafts | undefined)",
                        value: input.draft
                    })) && _vo80(input.draft, _path + ".draft", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".draft",
                        expected: "(Drafts | undefined)",
                        value: input.draft
                    }),
                    void 0 === input.drafts || ("object" == typeof input.drafts && null !== input.drafts && false === Array.isArray(input.drafts) || _report(_exceptionable, {
                        path: _path + ".drafts",
                        expected: "(Drafts | undefined)",
                        value: input.drafts
                    })) && _vo80(input.drafts, _path + ".drafts", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".drafts",
                        expected: "(Drafts | undefined)",
                        value: input.drafts
                    }),
                    void 0 === input.nonStandard || ("object" == typeof input.nonStandard && null !== input.nonStandard && false === Array.isArray(input.nonStandard) || _report(_exceptionable, {
                        path: _path + ".nonStandard",
                        expected: "(NonStandard | undefined)",
                        value: input.nonStandard
                    })) && _vo81(input.nonStandard, _path + ".nonStandard", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".nonStandard",
                        expected: "(NonStandard | undefined)",
                        value: input.nonStandard
                    }),
                    void 0 === input.pseudoClasses || ("object" == typeof input.pseudoClasses && null !== input.pseudoClasses && false === Array.isArray(input.pseudoClasses) || _report(_exceptionable, {
                        path: _path + ".pseudoClasses",
                        expected: "(PseudoClasses | undefined)",
                        value: input.pseudoClasses
                    })) && _vo82(input.pseudoClasses, _path + ".pseudoClasses", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".pseudoClasses",
                        expected: "(PseudoClasses | undefined)",
                        value: input.pseudoClasses
                    }),
                    void 0 === input.unusedSymbols || (Array.isArray(input.unusedSymbols) || _report(_exceptionable, {
                        path: _path + ".unusedSymbols",
                        expected: "(Array<string> | undefined)",
                        value: input.unusedSymbols
                    })) && input.unusedSymbols.map((elem, _index673)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".unusedSymbols[" + _index673 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".unusedSymbols",
                        expected: "(Array<string> | undefined)",
                        value: input.unusedSymbols
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "errorRecovery",
                            "targets",
                            "include",
                            "exclude",
                            "draft",
                            "drafts",
                            "nonStandard",
                            "pseudoClasses",
                            "unusedSymbols"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo375 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.filename || "string" == typeof input.filename || _report(_exceptionable, {
                        path: _path + ".filename",
                        expected: "(string | undefined)",
                        value: input.filename
                    }),
                    void 0 === input.generate || true,
                    void 0 === input.filter || true,
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "filename",
                            "generate",
                            "filter"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo376 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.js || true === _vv674.has(input.js) || _report(_exceptionable, {
                        path: _path + ".js",
                        expected: "(\"cheap-module-source-map\" | \"cheap-module-source-map-debugids\" | \"cheap-source-map\" | \"cheap-source-map-debugids\" | \"eval\" | \"eval-cheap-module-source-map\" | \"eval-cheap-module-source-map-debugids\" | \"eval-cheap-source-map\" | \"eval-cheap-source-map-debugids\" | \"eval-nosources-cheap-module-source-map\" | \"eval-nosources-cheap-module-source-map-debugids\" | \"eval-nosources-cheap-source-map\" | \"eval-nosources-cheap-source-map-debugids\" | \"eval-nosources-source-map\" | \"eval-nosources-source-map-debugids\" | \"eval-source-map\" | \"eval-source-map-debugids\" | \"hidden-cheap-module-source-map\" | \"hidden-cheap-module-source-map-debugids\" | \"hidden-cheap-source-map\" | \"hidden-cheap-source-map-debugids\" | \"hidden-nosources-cheap-module-source-map\" | \"hidden-nosources-cheap-module-source-map-debugids\" | \"hidden-nosources-cheap-source-map\" | \"hidden-nosources-cheap-source-map-debugids\" | \"hidden-nosources-source-map\" | \"hidden-nosources-source-map-debugids\" | \"hidden-source-map\" | \"hidden-source-map-debugids\" | \"inline-cheap-module-source-map\" | \"inline-cheap-module-source-map-debugids\" | \"inline-cheap-source-map\" | \"inline-cheap-source-map-debugids\" | \"inline-nosources-cheap-module-source-map\" | \"inline-nosources-cheap-module-source-map-debugids\" | \"inline-nosources-cheap-source-map\" | \"inline-nosources-cheap-source-map-debugids\" | \"inline-nosources-source-map\" | \"inline-nosources-source-map-debugids\" | \"inline-source-map\" | \"inline-source-map-debugids\" | \"nosources-cheap-module-source-map\" | \"nosources-cheap-module-source-map-debugids\" | \"nosources-cheap-source-map\" | \"nosources-cheap-source-map-debugids\" | \"nosources-source-map\" | \"nosources-source-map-debugids\" | \"source-map\" | \"source-map-debugids\" | false | undefined)",
                        value: input.js
                    }),
                    void 0 === input.css || "boolean" == typeof input.css || _report(_exceptionable, {
                        path: _path + ".css",
                        expected: "(boolean | undefined)",
                        value: input.css
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "js",
                            "css"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo377 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.enable || "auto" === input.enable || "boolean" == typeof input.enable || _report(_exceptionable, {
                        path: _path + ".enable",
                        expected: "(\"auto\" | boolean | undefined)",
                        value: input.enable
                    }),
                    (null !== input.test || _report(_exceptionable, {
                        path: _path + ".test",
                        expected: "RegExp",
                        value: input.test
                    })) && (void 0 !== input.test || _report(_exceptionable, {
                        path: _path + ".test",
                        expected: "RegExp",
                        value: input.test
                    })) && ("function" == typeof input.test || input.test instanceof RegExp || _report(_exceptionable, {
                        path: _path + ".test",
                        expected: "RegExp",
                        value: input.test
                    })),
                    1 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "enable",
                            "test"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo378 = (input, _path, _exceptionable = true)=>[
                    (Array.isArray(input.patterns) || _report(_exceptionable, {
                        path: _path + ".patterns",
                        expected: "Array<string | (Pick<RawCopyPattern, \"from\"> & Partial<Omit<RawCopyPattern, \"from\">>)>",
                        value: input.patterns
                    })) && input.patterns.map((elem, _index675)=>(null !== elem || _report(_exceptionable, {
                            path: _path + ".patterns[" + _index675 + "]",
                            expected: "(Pick<RawCopyPattern, \"from\"> & Partial<Omit<RawCopyPattern, \"from\">> | string)",
                            value: elem
                        })) && (void 0 !== elem || _report(_exceptionable, {
                            path: _path + ".patterns[" + _index675 + "]",
                            expected: "(Pick<RawCopyPattern, \"from\"> & Partial<Omit<RawCopyPattern, \"from\">> | string)",
                            value: elem
                        })) && ("string" == typeof elem || ("object" == typeof elem && null !== elem || _report(_exceptionable, {
                            path: _path + ".patterns[" + _index675 + "]",
                            expected: "(Pick<RawCopyPattern, \"from\"> & Partial<Omit<RawCopyPattern, \"from\">> | string)",
                            value: elem
                        })) && _vo379(elem, _path + ".patterns[" + _index675 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".patterns[" + _index675 + "]",
                            expected: "(Pick<RawCopyPattern, \"from\"> & Partial<Omit<RawCopyPattern, \"from\">> | string)",
                            value: elem
                        }))).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".patterns",
                        expected: "Array<string | (Pick<RawCopyPattern, \"from\"> & Partial<Omit<RawCopyPattern, \"from\">>)>",
                        value: input.patterns
                    }),
                    1 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "patterns"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo379 = (input, _path, _exceptionable = true)=>[
                    "string" == typeof input.from || _report(_exceptionable, {
                        path: _path + ".from",
                        expected: "string",
                        value: input.from
                    }),
                    void 0 === input.info || ("object" == typeof input.info && null !== input.info && false === Array.isArray(input.info) || _report(_exceptionable, {
                        path: _path + ".info",
                        expected: "(RawInfo | undefined)",
                        value: input.info
                    })) && _vo380(input.info, _path + ".info", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".info",
                        expected: "(RawInfo | undefined)",
                        value: input.info
                    }),
                    void 0 === input.context || "string" == typeof input.context || _report(_exceptionable, {
                        path: _path + ".context",
                        expected: "(string | undefined)",
                        value: input.context
                    }),
                    (null !== input.to || _report(_exceptionable, {
                        path: _path + ".to",
                        expected: "(string | undefined)",
                        value: input.to
                    })) && (void 0 === input.to || "function" == typeof input.to || "string" == typeof input.to || _report(_exceptionable, {
                        path: _path + ".to",
                        expected: "(string | undefined)",
                        value: input.to
                    })),
                    void 0 === input.toType || "string" == typeof input.toType || _report(_exceptionable, {
                        path: _path + ".toType",
                        expected: "(string | undefined)",
                        value: input.toType
                    }),
                    void 0 === input.noErrorOnMissing || "boolean" == typeof input.noErrorOnMissing || _report(_exceptionable, {
                        path: _path + ".noErrorOnMissing",
                        expected: "(boolean | undefined)",
                        value: input.noErrorOnMissing
                    }),
                    void 0 === input.force || "boolean" == typeof input.force || _report(_exceptionable, {
                        path: _path + ".force",
                        expected: "(boolean | undefined)",
                        value: input.force
                    }),
                    void 0 === input.priority || "number" == typeof input.priority || _report(_exceptionable, {
                        path: _path + ".priority",
                        expected: "(number | undefined)",
                        value: input.priority
                    }),
                    void 0 === input.globOptions || ("object" == typeof input.globOptions && null !== input.globOptions && false === Array.isArray(input.globOptions) || _report(_exceptionable, {
                        path: _path + ".globOptions",
                        expected: "(RawCopyGlobOptions | undefined)",
                        value: input.globOptions
                    })) && _vo382(input.globOptions, _path + ".globOptions", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".globOptions",
                        expected: "(RawCopyGlobOptions | undefined)",
                        value: input.globOptions
                    }),
                    void 0 === input.copyPermissions || "boolean" == typeof input.copyPermissions || _report(_exceptionable, {
                        path: _path + ".copyPermissions",
                        expected: "(boolean | undefined)",
                        value: input.copyPermissions
                    }),
                    (null !== input.transform || _report(_exceptionable, {
                        path: _path + ".transform",
                        expected: "(__type.o109 | undefined)",
                        value: input.transform
                    })) && (void 0 === input.transform || "function" == typeof input.transform || ("object" == typeof input.transform && null !== input.transform || _report(_exceptionable, {
                        path: _path + ".transform",
                        expected: "(__type.o109 | undefined)",
                        value: input.transform
                    })) && _vo383(input.transform, _path + ".transform", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".transform",
                        expected: "(__type.o109 | undefined)",
                        value: input.transform
                    })),
                    1 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "from",
                            "info",
                            "context",
                            "to",
                            "toType",
                            "noErrorOnMissing",
                            "force",
                            "priority",
                            "globOptions",
                            "copyPermissions",
                            "transform"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo380 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.immutable || "boolean" == typeof input.immutable || _report(_exceptionable, {
                        path: _path + ".immutable",
                        expected: "(boolean | undefined)",
                        value: input.immutable
                    }),
                    void 0 === input.minimized || "boolean" == typeof input.minimized || _report(_exceptionable, {
                        path: _path + ".minimized",
                        expected: "(boolean | undefined)",
                        value: input.minimized
                    }),
                    void 0 === input.chunkHash || (Array.isArray(input.chunkHash) || _report(_exceptionable, {
                        path: _path + ".chunkHash",
                        expected: "(Array<string> | undefined)",
                        value: input.chunkHash
                    })) && input.chunkHash.map((elem, _index676)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".chunkHash[" + _index676 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".chunkHash",
                        expected: "(Array<string> | undefined)",
                        value: input.chunkHash
                    }),
                    void 0 === input.contentHash || (Array.isArray(input.contentHash) || _report(_exceptionable, {
                        path: _path + ".contentHash",
                        expected: "(Array<string> | undefined)",
                        value: input.contentHash
                    })) && input.contentHash.map((elem, _index677)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".contentHash[" + _index677 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".contentHash",
                        expected: "(Array<string> | undefined)",
                        value: input.contentHash
                    }),
                    void 0 === input.development || "boolean" == typeof input.development || _report(_exceptionable, {
                        path: _path + ".development",
                        expected: "(boolean | undefined)",
                        value: input.development
                    }),
                    void 0 === input.hotModuleReplacement || "boolean" == typeof input.hotModuleReplacement || _report(_exceptionable, {
                        path: _path + ".hotModuleReplacement",
                        expected: "(boolean | undefined)",
                        value: input.hotModuleReplacement
                    }),
                    void 0 === input.related || ("object" == typeof input.related && null !== input.related && false === Array.isArray(input.related) || _report(_exceptionable, {
                        path: _path + ".related",
                        expected: "(RawRelated | undefined)",
                        value: input.related
                    })) && _vo381(input.related, _path + ".related", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".related",
                        expected: "(RawRelated | undefined)",
                        value: input.related
                    }),
                    void 0 === input.version || "string" == typeof input.version || _report(_exceptionable, {
                        path: _path + ".version",
                        expected: "(string | undefined)",
                        value: input.version
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "immutable",
                            "minimized",
                            "chunkHash",
                            "contentHash",
                            "development",
                            "hotModuleReplacement",
                            "related",
                            "version"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo381 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.sourceMap || "string" == typeof input.sourceMap || _report(_exceptionable, {
                        path: _path + ".sourceMap",
                        expected: "(string | undefined)",
                        value: input.sourceMap
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "sourceMap"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo382 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.caseSensitiveMatch || "boolean" == typeof input.caseSensitiveMatch || _report(_exceptionable, {
                        path: _path + ".caseSensitiveMatch",
                        expected: "(boolean | undefined)",
                        value: input.caseSensitiveMatch
                    }),
                    void 0 === input.dot || "boolean" == typeof input.dot || _report(_exceptionable, {
                        path: _path + ".dot",
                        expected: "(boolean | undefined)",
                        value: input.dot
                    }),
                    void 0 === input.ignore || (Array.isArray(input.ignore) || _report(_exceptionable, {
                        path: _path + ".ignore",
                        expected: "(Array<string> | undefined)",
                        value: input.ignore
                    })) && input.ignore.map((elem, _index678)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".ignore[" + _index678 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".ignore",
                        expected: "(Array<string> | undefined)",
                        value: input.ignore
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "caseSensitiveMatch",
                            "dot",
                            "ignore"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo383 = (input, _path, _exceptionable = true)=>[
                    true,
                    1 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "transformer"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo384 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.nonce || "string" == typeof input.nonce || _report(_exceptionable, {
                        path: _path + ".nonce",
                        expected: "(string | undefined)",
                        value: input.nonce
                    }),
                    void 0 === input.sri || ("object" == typeof input.sri && null !== input.sri && false === Array.isArray(input.sri) || _report(_exceptionable, {
                        path: _path + ".sri",
                        expected: "(SriOptions | undefined)",
                        value: input.sri
                    })) && _vo385(input.sri, _path + ".sri", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".sri",
                        expected: "(SriOptions | undefined)",
                        value: input.sri
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "nonce",
                            "sri"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo385 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.algorithm || "sha256" === input.algorithm || "sha384" === input.algorithm || "sha512" === input.algorithm || _report(_exceptionable, {
                        path: _path + ".algorithm",
                        expected: "(\"sha256\" | \"sha384\" | \"sha512\" | undefined)",
                        value: input.algorithm
                    }),
                    void 0 === input.enable || "auto" === input.enable || "boolean" == typeof input.enable || _report(_exceptionable, {
                        path: _path + ".enable",
                        expected: "(\"auto\" | boolean | undefined)",
                        value: input.enable
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "algorithm",
                            "enable"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo386 = (input, _path, _exceptionable = true)=>[
                    (null !== input.removeConsole || _report(_exceptionable, {
                        path: _path + ".removeConsole",
                        expected: "(Array<ConsoleType> | boolean | undefined)",
                        value: input.removeConsole
                    })) && (void 0 === input.removeConsole || "boolean" == typeof input.removeConsole || (Array.isArray(input.removeConsole) || _report(_exceptionable, {
                        path: _path + ".removeConsole",
                        expected: "(Array<ConsoleType> | boolean | undefined)",
                        value: input.removeConsole
                    })) && input.removeConsole.map((elem, _index679)=>"error" === elem || "warn" === elem || "info" === elem || "log" === elem || "table" === elem || "group" === elem || _report(_exceptionable, {
                            path: _path + ".removeConsole[" + _index679 + "]",
                            expected: "(\"error\" | \"group\" | \"info\" | \"log\" | \"table\" | \"warn\")",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".removeConsole",
                        expected: "(Array<ConsoleType> | boolean | undefined)",
                        value: input.removeConsole
                    })),
                    void 0 === input.removeMomentLocale || "boolean" == typeof input.removeMomentLocale || _report(_exceptionable, {
                        path: _path + ".removeMomentLocale",
                        expected: "(boolean | undefined)",
                        value: input.removeMomentLocale
                    }),
                    (null !== input.buildCache || _report(_exceptionable, {
                        path: _path + ".buildCache",
                        expected: "(BuildCacheOptions | boolean | undefined)",
                        value: input.buildCache
                    })) && (void 0 === input.buildCache || "boolean" == typeof input.buildCache || ("object" == typeof input.buildCache && null !== input.buildCache && false === Array.isArray(input.buildCache) || _report(_exceptionable, {
                        path: _path + ".buildCache",
                        expected: "(BuildCacheOptions | boolean | undefined)",
                        value: input.buildCache
                    })) && _vo387(input.buildCache, _path + ".buildCache", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".buildCache",
                        expected: "(BuildCacheOptions | boolean | undefined)",
                        value: input.buildCache
                    })),
                    (null !== input.printFileSize || _report(_exceptionable, {
                        path: _path + ".printFileSize",
                        expected: "(PrintFileSizeOptions | boolean | undefined)",
                        value: input.printFileSize
                    })) && (void 0 === input.printFileSize || "boolean" == typeof input.printFileSize || ("object" == typeof input.printFileSize && null !== input.printFileSize && false === Array.isArray(input.printFileSize) || _report(_exceptionable, {
                        path: _path + ".printFileSize",
                        expected: "(PrintFileSizeOptions | boolean | undefined)",
                        value: input.printFileSize
                    })) && _vo388(input.printFileSize, _path + ".printFileSize", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".printFileSize",
                        expected: "(PrintFileSizeOptions | boolean | undefined)",
                        value: input.printFileSize
                    })),
                    void 0 === input.chunkSplit || ("object" == typeof input.chunkSplit && null !== input.chunkSplit && false === Array.isArray(input.chunkSplit) || _report(_exceptionable, {
                        path: _path + ".chunkSplit",
                        expected: "(BaseChunkSplit | SplitBySize | SplitCustom | undefined)",
                        value: input.chunkSplit
                    })) && _vu16(input.chunkSplit, _path + ".chunkSplit", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".chunkSplit",
                        expected: "(BaseChunkSplit | SplitBySize | SplitCustom | undefined)",
                        value: input.chunkSplit
                    }),
                    void 0 === input.bundleAnalyze || ("object" == typeof input.bundleAnalyze && null !== input.bundleAnalyze && false === Array.isArray(input.bundleAnalyze) || _report(_exceptionable, {
                        path: _path + ".bundleAnalyze",
                        expected: "(BundleAnalyzerPlugin.Options | undefined)",
                        value: input.bundleAnalyze
                    })) && _vo393(input.bundleAnalyze, _path + ".bundleAnalyze", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".bundleAnalyze",
                        expected: "(BundleAnalyzerPlugin.Options | undefined)",
                        value: input.bundleAnalyze
                    }),
                    void 0 === input.preconnect || (Array.isArray(input.preconnect) || _report(_exceptionable, {
                        path: _path + ".preconnect",
                        expected: "(Preconnect | undefined)",
                        value: input.preconnect
                    })) && input.preconnect.map((elem, _index680)=>(null !== elem || _report(_exceptionable, {
                            path: _path + ".preconnect[" + _index680 + "]",
                            expected: "(PreconnectOption | string)",
                            value: elem
                        })) && (void 0 !== elem || _report(_exceptionable, {
                            path: _path + ".preconnect[" + _index680 + "]",
                            expected: "(PreconnectOption | string)",
                            value: elem
                        })) && ("string" == typeof elem || ("object" == typeof elem && null !== elem || _report(_exceptionable, {
                            path: _path + ".preconnect[" + _index680 + "]",
                            expected: "(PreconnectOption | string)",
                            value: elem
                        })) && _vo394(elem, _path + ".preconnect[" + _index680 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".preconnect[" + _index680 + "]",
                            expected: "(PreconnectOption | string)",
                            value: elem
                        }))).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".preconnect",
                        expected: "(Preconnect | undefined)",
                        value: input.preconnect
                    }),
                    void 0 === input.dnsPrefetch || (Array.isArray(input.dnsPrefetch) || _report(_exceptionable, {
                        path: _path + ".dnsPrefetch",
                        expected: "(DnsPrefetch | undefined)",
                        value: input.dnsPrefetch
                    })) && input.dnsPrefetch.map((elem, _index681)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".dnsPrefetch[" + _index681 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".dnsPrefetch",
                        expected: "(DnsPrefetch | undefined)",
                        value: input.dnsPrefetch
                    }),
                    (null !== input.preload || _report(_exceptionable, {
                        path: _path + ".preload",
                        expected: "(ResourceHintsOptions | true | undefined)",
                        value: input.preload
                    })) && (void 0 === input.preload || true === input.preload || ("object" == typeof input.preload && null !== input.preload && false === Array.isArray(input.preload) || _report(_exceptionable, {
                        path: _path + ".preload",
                        expected: "(ResourceHintsOptions | true | undefined)",
                        value: input.preload
                    })) && _vo395(input.preload, _path + ".preload", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".preload",
                        expected: "(ResourceHintsOptions | true | undefined)",
                        value: input.preload
                    })),
                    (null !== input.prefetch || _report(_exceptionable, {
                        path: _path + ".prefetch",
                        expected: "(PrefetchOptions | true | undefined)",
                        value: input.prefetch
                    })) && (void 0 === input.prefetch || true === input.prefetch || ("object" == typeof input.prefetch && null !== input.prefetch && false === Array.isArray(input.prefetch) || _report(_exceptionable, {
                        path: _path + ".prefetch",
                        expected: "(PrefetchOptions | true | undefined)",
                        value: input.prefetch
                    })) && _vo396(input.prefetch, _path + ".prefetch", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".prefetch",
                        expected: "(PrefetchOptions | true | undefined)",
                        value: input.prefetch
                    })),
                    void 0 === input.profile || "boolean" == typeof input.profile || _report(_exceptionable, {
                        path: _path + ".profile",
                        expected: "(boolean | undefined)",
                        value: input.profile
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "removeConsole",
                            "removeMomentLocale",
                            "buildCache",
                            "printFileSize",
                            "chunkSplit",
                            "bundleAnalyze",
                            "preconnect",
                            "dnsPrefetch",
                            "preload",
                            "prefetch",
                            "profile"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo387 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.cacheDirectory || "string" == typeof input.cacheDirectory || _report(_exceptionable, {
                        path: _path + ".cacheDirectory",
                        expected: "(string | undefined)",
                        value: input.cacheDirectory
                    }),
                    void 0 === input.cacheDigest || (Array.isArray(input.cacheDigest) || _report(_exceptionable, {
                        path: _path + ".cacheDigest",
                        expected: "(Array<string | undefined> | undefined)",
                        value: input.cacheDigest
                    })) && input.cacheDigest.map((elem, _index682)=>void 0 === elem || "string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".cacheDigest[" + _index682 + "]",
                            expected: "(string | undefined)",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".cacheDigest",
                        expected: "(Array<string | undefined> | undefined)",
                        value: input.cacheDigest
                    }),
                    void 0 === input.buildDependencies || (Array.isArray(input.buildDependencies) || _report(_exceptionable, {
                        path: _path + ".buildDependencies",
                        expected: "(Array<string> | undefined)",
                        value: input.buildDependencies
                    })) && input.buildDependencies.map((elem, _index683)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".buildDependencies[" + _index683 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".buildDependencies",
                        expected: "(Array<string> | undefined)",
                        value: input.buildDependencies
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "cacheDirectory",
                            "cacheDigest",
                            "buildDependencies"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo388 = (input, _path, _exceptionable = true)=>[
                    (null !== input.total || _report(_exceptionable, {
                        path: _path + ".total",
                        expected: "(boolean | undefined)",
                        value: input.total
                    })) && (void 0 === input.total || "function" == typeof input.total || "boolean" == typeof input.total || _report(_exceptionable, {
                        path: _path + ".total",
                        expected: "(boolean | undefined)",
                        value: input.total
                    })),
                    void 0 === input.detail || "boolean" == typeof input.detail || _report(_exceptionable, {
                        path: _path + ".detail",
                        expected: "(boolean | undefined)",
                        value: input.detail
                    }),
                    void 0 === input.compressed || "boolean" == typeof input.compressed || _report(_exceptionable, {
                        path: _path + ".compressed",
                        expected: "(boolean | undefined)",
                        value: input.compressed
                    }),
                    void 0 === input.include || true,
                    void 0 === input.exclude || true,
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "total",
                            "detail",
                            "compressed",
                            "include",
                            "exclude"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo389 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.strategy || "split-by-module" === input.strategy || "split-by-experience" === input.strategy || "all-in-one" === input.strategy || "single-vendor" === input.strategy || _report(_exceptionable, {
                        path: _path + ".strategy",
                        expected: "(\"all-in-one\" | \"single-vendor\" | \"split-by-experience\" | \"split-by-module\" | undefined)",
                        value: input.strategy
                    }),
                    (null !== input.forceSplitting || _report(_exceptionable, {
                        path: _path + ".forceSplitting",
                        expected: "(Array<RegExp> | Record<string, RegExp> | undefined)",
                        value: input.forceSplitting
                    })) && (void 0 === input.forceSplitting || Array.isArray(input.forceSplitting) && input.forceSplitting.map((elem, _index684)=>elem instanceof RegExp || _report(_exceptionable, {
                            path: _path + ".forceSplitting[" + _index684 + "]",
                            expected: "RegExp",
                            value: elem
                        })).every((flag)=>flag) || "object" == typeof input.forceSplitting && null !== input.forceSplitting && false === Array.isArray(input.forceSplitting) && _vo390(input.forceSplitting, _path + ".forceSplitting", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".forceSplitting",
                        expected: "(Array<RegExp> | Record<string, RegExp> | undefined)",
                        value: input.forceSplitting
                    }) || _report(_exceptionable, {
                        path: _path + ".forceSplitting",
                        expected: "(Array<RegExp> | Record<string, RegExp> | undefined)",
                        value: input.forceSplitting
                    })),
                    (null !== input.override || _report(_exceptionable, {
                        path: _path + ".override",
                        expected: "(OptimizationSplitChunksOptions | false | undefined)",
                        value: input.override
                    })) && (void 0 === input.override || false === input.override || ("object" == typeof input.override && null !== input.override && false === Array.isArray(input.override) || _report(_exceptionable, {
                        path: _path + ".override",
                        expected: "(OptimizationSplitChunksOptions | false | undefined)",
                        value: input.override
                    })) && _vo122(input.override, _path + ".override", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".override",
                        expected: "(OptimizationSplitChunksOptions | false | undefined)",
                        value: input.override
                    })),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "strategy",
                            "forceSplitting",
                            "override"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo390 = (input, _path, _exceptionable = true)=>[
                    false === _exceptionable || Object.keys(input).map((key)=>{
                        const value = input[key];
                        if (void 0 === value) return true;
                        return value instanceof RegExp || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "RegExp",
                            value: value
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo391 = (input, _path, _exceptionable = true)=>[
                    "split-by-size" === input.strategy || _report(_exceptionable, {
                        path: _path + ".strategy",
                        expected: "\"split-by-size\"",
                        value: input.strategy
                    }),
                    void 0 === input.minSize || "number" == typeof input.minSize || _report(_exceptionable, {
                        path: _path + ".minSize",
                        expected: "(number | undefined)",
                        value: input.minSize
                    }),
                    void 0 === input.maxSize || "number" == typeof input.maxSize || _report(_exceptionable, {
                        path: _path + ".maxSize",
                        expected: "(number | undefined)",
                        value: input.maxSize
                    }),
                    (null !== input.forceSplitting || _report(_exceptionable, {
                        path: _path + ".forceSplitting",
                        expected: "(Array<RegExp> | Record<string, RegExp> | undefined)",
                        value: input.forceSplitting
                    })) && (void 0 === input.forceSplitting || Array.isArray(input.forceSplitting) && input.forceSplitting.map((elem, _index685)=>elem instanceof RegExp || _report(_exceptionable, {
                            path: _path + ".forceSplitting[" + _index685 + "]",
                            expected: "RegExp",
                            value: elem
                        })).every((flag)=>flag) || "object" == typeof input.forceSplitting && null !== input.forceSplitting && false === Array.isArray(input.forceSplitting) && _vo390(input.forceSplitting, _path + ".forceSplitting", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".forceSplitting",
                        expected: "(Array<RegExp> | Record<string, RegExp> | undefined)",
                        value: input.forceSplitting
                    }) || _report(_exceptionable, {
                        path: _path + ".forceSplitting",
                        expected: "(Array<RegExp> | Record<string, RegExp> | undefined)",
                        value: input.forceSplitting
                    })),
                    (null !== input.override || _report(_exceptionable, {
                        path: _path + ".override",
                        expected: "(OptimizationSplitChunksOptions | false | undefined)",
                        value: input.override
                    })) && (void 0 === input.override || false === input.override || ("object" == typeof input.override && null !== input.override && false === Array.isArray(input.override) || _report(_exceptionable, {
                        path: _path + ".override",
                        expected: "(OptimizationSplitChunksOptions | false | undefined)",
                        value: input.override
                    })) && _vo122(input.override, _path + ".override", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".override",
                        expected: "(OptimizationSplitChunksOptions | false | undefined)",
                        value: input.override
                    })),
                    1 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "strategy",
                            "minSize",
                            "maxSize",
                            "forceSplitting",
                            "override"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo392 = (input, _path, _exceptionable = true)=>[
                    "custom" === input.strategy || _report(_exceptionable, {
                        path: _path + ".strategy",
                        expected: "\"custom\"",
                        value: input.strategy
                    }),
                    (null !== input.splitChunks || _report(_exceptionable, {
                        path: _path + ".splitChunks",
                        expected: "(OptimizationSplitChunksOptions | false | undefined)",
                        value: input.splitChunks
                    })) && (void 0 === input.splitChunks || false === input.splitChunks || ("object" == typeof input.splitChunks && null !== input.splitChunks && false === Array.isArray(input.splitChunks) || _report(_exceptionable, {
                        path: _path + ".splitChunks",
                        expected: "(OptimizationSplitChunksOptions | false | undefined)",
                        value: input.splitChunks
                    })) && _vo122(input.splitChunks, _path + ".splitChunks", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".splitChunks",
                        expected: "(OptimizationSplitChunksOptions | false | undefined)",
                        value: input.splitChunks
                    })),
                    (null !== input.forceSplitting || _report(_exceptionable, {
                        path: _path + ".forceSplitting",
                        expected: "(Array<RegExp> | Record<string, RegExp> | undefined)",
                        value: input.forceSplitting
                    })) && (void 0 === input.forceSplitting || Array.isArray(input.forceSplitting) && input.forceSplitting.map((elem, _index686)=>elem instanceof RegExp || _report(_exceptionable, {
                            path: _path + ".forceSplitting[" + _index686 + "]",
                            expected: "RegExp",
                            value: elem
                        })).every((flag)=>flag) || "object" == typeof input.forceSplitting && null !== input.forceSplitting && false === Array.isArray(input.forceSplitting) && _vo390(input.forceSplitting, _path + ".forceSplitting", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".forceSplitting",
                        expected: "(Array<RegExp> | Record<string, RegExp> | undefined)",
                        value: input.forceSplitting
                    }) || _report(_exceptionable, {
                        path: _path + ".forceSplitting",
                        expected: "(Array<RegExp> | Record<string, RegExp> | undefined)",
                        value: input.forceSplitting
                    })),
                    (null !== input.override || _report(_exceptionable, {
                        path: _path + ".override",
                        expected: "(OptimizationSplitChunksOptions | false | undefined)",
                        value: input.override
                    })) && (void 0 === input.override || false === input.override || ("object" == typeof input.override && null !== input.override && false === Array.isArray(input.override) || _report(_exceptionable, {
                        path: _path + ".override",
                        expected: "(OptimizationSplitChunksOptions | false | undefined)",
                        value: input.override
                    })) && _vo122(input.override, _path + ".override", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".override",
                        expected: "(OptimizationSplitChunksOptions | false | undefined)",
                        value: input.override
                    })),
                    1 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "strategy",
                            "splitChunks",
                            "forceSplitting",
                            "override"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo393 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.analyzerMode || "server" === input.analyzerMode || "static" === input.analyzerMode || "json" === input.analyzerMode || "disabled" === input.analyzerMode || _report(_exceptionable, {
                        path: _path + ".analyzerMode",
                        expected: "(\"disabled\" | \"json\" | \"server\" | \"static\" | undefined)",
                        value: input.analyzerMode
                    }),
                    void 0 === input.analyzerHost || "string" == typeof input.analyzerHost || _report(_exceptionable, {
                        path: _path + ".analyzerHost",
                        expected: "(string | undefined)",
                        value: input.analyzerHost
                    }),
                    void 0 === input.analyzerPort || "auto" === input.analyzerPort || "number" == typeof input.analyzerPort || _report(_exceptionable, {
                        path: _path + ".analyzerPort",
                        expected: "(\"auto\" | number | undefined)",
                        value: input.analyzerPort
                    }),
                    void 0 === input.analyzerUrl || true,
                    void 0 === input.reportFilename || "string" == typeof input.reportFilename || _report(_exceptionable, {
                        path: _path + ".reportFilename",
                        expected: "(string | undefined)",
                        value: input.reportFilename
                    }),
                    (null !== input.reportTitle || _report(_exceptionable, {
                        path: _path + ".reportTitle",
                        expected: "(string | undefined)",
                        value: input.reportTitle
                    })) && (void 0 === input.reportTitle || "function" == typeof input.reportTitle || "string" == typeof input.reportTitle || _report(_exceptionable, {
                        path: _path + ".reportTitle",
                        expected: "(string | undefined)",
                        value: input.reportTitle
                    })),
                    void 0 === input.defaultSizes || "gzip" === input.defaultSizes || "parsed" === input.defaultSizes || "stat" === input.defaultSizes || _report(_exceptionable, {
                        path: _path + ".defaultSizes",
                        expected: "(\"gzip\" | \"parsed\" | \"stat\" | undefined)",
                        value: input.defaultSizes
                    }),
                    void 0 === input.openAnalyzer || "boolean" == typeof input.openAnalyzer || _report(_exceptionable, {
                        path: _path + ".openAnalyzer",
                        expected: "(boolean | undefined)",
                        value: input.openAnalyzer
                    }),
                    void 0 === input.generateStatsFile || "boolean" == typeof input.generateStatsFile || _report(_exceptionable, {
                        path: _path + ".generateStatsFile",
                        expected: "(boolean | undefined)",
                        value: input.generateStatsFile
                    }),
                    void 0 === input.statsFilename || "string" == typeof input.statsFilename || _report(_exceptionable, {
                        path: _path + ".statsFilename",
                        expected: "(string | undefined)",
                        value: input.statsFilename
                    }),
                    null === input.statsOptions || void 0 === input.statsOptions || "none" === input.statsOptions || "verbose" === input.statsOptions || "normal" === input.statsOptions || "errors-only" === input.statsOptions || "errors-warnings" === input.statsOptions || "minimal" === input.statsOptions || "boolean" == typeof input.statsOptions || ("object" == typeof input.statsOptions && null !== input.statsOptions && false === Array.isArray(input.statsOptions) || _report(_exceptionable, {
                        path: _path + ".statsOptions",
                        expected: "(\"errors-only\" | \"errors-warnings\" | \"minimal\" | \"none\" | \"normal\" | \"verbose\" | StatsOptions | boolean | null | undefined)",
                        value: input.statsOptions
                    })) && _vo117(input.statsOptions, _path + ".statsOptions", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".statsOptions",
                        expected: "(\"errors-only\" | \"errors-warnings\" | \"minimal\" | \"none\" | \"normal\" | \"verbose\" | StatsOptions | boolean | null | undefined)",
                        value: input.statsOptions
                    }),
                    null === input.excludeAssets || void 0 === input.excludeAssets || "function" == typeof input.excludeAssets || "string" == typeof input.excludeAssets || input.excludeAssets instanceof RegExp || (Array.isArray(input.excludeAssets) || _report(_exceptionable, {
                        path: _path + ".excludeAssets",
                        expected: "(Array<BundleAnalyzerPlugin.ExcludeAssetsPattern> | RegExp | null | string | undefined)",
                        value: input.excludeAssets
                    })) && input.excludeAssets.map((elem, _index687)=>(null !== elem || _report(_exceptionable, {
                            path: _path + ".excludeAssets[" + _index687 + "]",
                            expected: "(RegExp | string)",
                            value: elem
                        })) && (void 0 !== elem || _report(_exceptionable, {
                            path: _path + ".excludeAssets[" + _index687 + "]",
                            expected: "(RegExp | string)",
                            value: elem
                        })) && ("function" == typeof elem || "string" == typeof elem || elem instanceof RegExp || _report(_exceptionable, {
                            path: _path + ".excludeAssets[" + _index687 + "]",
                            expected: "(RegExp | string)",
                            value: elem
                        }))).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".excludeAssets",
                        expected: "(Array<BundleAnalyzerPlugin.ExcludeAssetsPattern> | RegExp | null | string | undefined)",
                        value: input.excludeAssets
                    }),
                    void 0 === input.logLevel || "error" === input.logLevel || "warn" === input.logLevel || "info" === input.logLevel || "silent" === input.logLevel || _report(_exceptionable, {
                        path: _path + ".logLevel",
                        expected: "(\"error\" | \"info\" | \"silent\" | \"warn\" | undefined)",
                        value: input.logLevel
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "analyzerMode",
                            "analyzerHost",
                            "analyzerPort",
                            "analyzerUrl",
                            "reportFilename",
                            "reportTitle",
                            "defaultSizes",
                            "openAnalyzer",
                            "generateStatsFile",
                            "statsFilename",
                            "statsOptions",
                            "excludeAssets",
                            "logLevel"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo394 = (input, _path, _exceptionable = true)=>[
                    "string" == typeof input.href || _report(_exceptionable, {
                        path: _path + ".href",
                        expected: "string",
                        value: input.href
                    }),
                    void 0 === input.crossorigin || "boolean" == typeof input.crossorigin || _report(_exceptionable, {
                        path: _path + ".crossorigin",
                        expected: "(boolean | undefined)",
                        value: input.crossorigin
                    }),
                    1 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "href",
                            "crossorigin"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo395 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.type || "initial" === input.type || "async-chunks" === input.type || "all-assets" === input.type || "all-chunks" === input.type || _report(_exceptionable, {
                        path: _path + ".type",
                        expected: "(\"all-assets\" | \"all-chunks\" | \"async-chunks\" | \"initial\" | undefined)",
                        value: input.type
                    }),
                    (null !== input.include || _report(_exceptionable, {
                        path: _path + ".include",
                        expected: "(Array<string | RegExp | ResourceHintsFilterFn> | RegExp | string | undefined)",
                        value: input.include
                    })) && (void 0 === input.include || "function" == typeof input.include || "string" == typeof input.include || input.include instanceof RegExp || (Array.isArray(input.include) || _report(_exceptionable, {
                        path: _path + ".include",
                        expected: "(Array<string | RegExp | ResourceHintsFilterFn> | RegExp | string | undefined)",
                        value: input.include
                    })) && input.include.map((elem, _index688)=>(null !== elem || _report(_exceptionable, {
                            path: _path + ".include[" + _index688 + "]",
                            expected: "(RegExp | string)",
                            value: elem
                        })) && (void 0 !== elem || _report(_exceptionable, {
                            path: _path + ".include[" + _index688 + "]",
                            expected: "(RegExp | string)",
                            value: elem
                        })) && ("function" == typeof elem || "string" == typeof elem || elem instanceof RegExp || _report(_exceptionable, {
                            path: _path + ".include[" + _index688 + "]",
                            expected: "(RegExp | string)",
                            value: elem
                        }))).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".include",
                        expected: "(Array<string | RegExp | ResourceHintsFilterFn> | RegExp | string | undefined)",
                        value: input.include
                    })),
                    (null !== input.exclude || _report(_exceptionable, {
                        path: _path + ".exclude",
                        expected: "(Array<string | RegExp | ResourceHintsFilterFn> | RegExp | string | undefined)",
                        value: input.exclude
                    })) && (void 0 === input.exclude || "function" == typeof input.exclude || "string" == typeof input.exclude || input.exclude instanceof RegExp || (Array.isArray(input.exclude) || _report(_exceptionable, {
                        path: _path + ".exclude",
                        expected: "(Array<string | RegExp | ResourceHintsFilterFn> | RegExp | string | undefined)",
                        value: input.exclude
                    })) && input.exclude.map((elem, _index689)=>(null !== elem || _report(_exceptionable, {
                            path: _path + ".exclude[" + _index689 + "]",
                            expected: "(RegExp | string)",
                            value: elem
                        })) && (void 0 !== elem || _report(_exceptionable, {
                            path: _path + ".exclude[" + _index689 + "]",
                            expected: "(RegExp | string)",
                            value: elem
                        })) && ("function" == typeof elem || "string" == typeof elem || elem instanceof RegExp || _report(_exceptionable, {
                            path: _path + ".exclude[" + _index689 + "]",
                            expected: "(RegExp | string)",
                            value: elem
                        }))).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".exclude",
                        expected: "(Array<string | RegExp | ResourceHintsFilterFn> | RegExp | string | undefined)",
                        value: input.exclude
                    })),
                    void 0 === input.dedupe || "boolean" == typeof input.dedupe || _report(_exceptionable, {
                        path: _path + ".dedupe",
                        expected: "(boolean | undefined)",
                        value: input.dedupe
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "type",
                            "include",
                            "exclude",
                            "dedupe"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo396 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.type || "initial" === input.type || "async-chunks" === input.type || "all-assets" === input.type || "all-chunks" === input.type || _report(_exceptionable, {
                        path: _path + ".type",
                        expected: "(\"all-assets\" | \"all-chunks\" | \"async-chunks\" | \"initial\" | undefined)",
                        value: input.type
                    }),
                    (null !== input.include || _report(_exceptionable, {
                        path: _path + ".include",
                        expected: "(Array<string | RegExp | ResourceHintsFilterFn> | RegExp | string | undefined)",
                        value: input.include
                    })) && (void 0 === input.include || "function" == typeof input.include || "string" == typeof input.include || input.include instanceof RegExp || (Array.isArray(input.include) || _report(_exceptionable, {
                        path: _path + ".include",
                        expected: "(Array<string | RegExp | ResourceHintsFilterFn> | RegExp | string | undefined)",
                        value: input.include
                    })) && input.include.map((elem, _index690)=>(null !== elem || _report(_exceptionable, {
                            path: _path + ".include[" + _index690 + "]",
                            expected: "(RegExp | string)",
                            value: elem
                        })) && (void 0 !== elem || _report(_exceptionable, {
                            path: _path + ".include[" + _index690 + "]",
                            expected: "(RegExp | string)",
                            value: elem
                        })) && ("function" == typeof elem || "string" == typeof elem || elem instanceof RegExp || _report(_exceptionable, {
                            path: _path + ".include[" + _index690 + "]",
                            expected: "(RegExp | string)",
                            value: elem
                        }))).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".include",
                        expected: "(Array<string | RegExp | ResourceHintsFilterFn> | RegExp | string | undefined)",
                        value: input.include
                    })),
                    (null !== input.exclude || _report(_exceptionable, {
                        path: _path + ".exclude",
                        expected: "(Array<string | RegExp | ResourceHintsFilterFn> | RegExp | string | undefined)",
                        value: input.exclude
                    })) && (void 0 === input.exclude || "function" == typeof input.exclude || "string" == typeof input.exclude || input.exclude instanceof RegExp || (Array.isArray(input.exclude) || _report(_exceptionable, {
                        path: _path + ".exclude",
                        expected: "(Array<string | RegExp | ResourceHintsFilterFn> | RegExp | string | undefined)",
                        value: input.exclude
                    })) && input.exclude.map((elem, _index691)=>(null !== elem || _report(_exceptionable, {
                            path: _path + ".exclude[" + _index691 + "]",
                            expected: "(RegExp | string)",
                            value: elem
                        })) && (void 0 !== elem || _report(_exceptionable, {
                            path: _path + ".exclude[" + _index691 + "]",
                            expected: "(RegExp | string)",
                            value: elem
                        })) && ("function" == typeof elem || "string" == typeof elem || elem instanceof RegExp || _report(_exceptionable, {
                            path: _path + ".exclude[" + _index691 + "]",
                            expected: "(RegExp | string)",
                            value: elem
                        }))).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".exclude",
                        expected: "(Array<string | RegExp | ResourceHintsFilterFn> | RegExp | string | undefined)",
                        value: input.exclude
                    })),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "type",
                            "include",
                            "exclude"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo397 = (input, _path, _exceptionable = true)=>[
                    ("object" == typeof input.options && null !== input.options || _report(_exceptionable, {
                        path: _path + ".options",
                        expected: "ModuleFederationPluginOptions",
                        value: input.options
                    })) && _vo398(input.options, _path + ".options", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".options",
                        expected: "ModuleFederationPluginOptions",
                        value: input.options
                    }),
                    1 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "options"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo398 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.runtimePlugins || (Array.isArray(input.runtimePlugins) || _report(_exceptionable, {
                        path: _path + ".runtimePlugins",
                        expected: "(RuntimePlugins | undefined)",
                        value: input.runtimePlugins
                    })) && input.runtimePlugins.map((elem, _index692)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".runtimePlugins[" + _index692 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".runtimePlugins",
                        expected: "(RuntimePlugins | undefined)",
                        value: input.runtimePlugins
                    }),
                    void 0 === input.implementation || "string" == typeof input.implementation || _report(_exceptionable, {
                        path: _path + ".implementation",
                        expected: "(string | undefined)",
                        value: input.implementation
                    }),
                    void 0 === input.shareStrategy || "version-first" === input.shareStrategy || "loaded-first" === input.shareStrategy || _report(_exceptionable, {
                        path: _path + ".shareStrategy",
                        expected: "(\"loaded-first\" | \"version-first\" | undefined)",
                        value: input.shareStrategy
                    }),
                    void 0 === input.filename || "string" == typeof input.filename || _report(_exceptionable, {
                        path: _path + ".filename",
                        expected: "(string | undefined)",
                        value: input.filename
                    }),
                    "string" == typeof input.name || _report(_exceptionable, {
                        path: _path + ".name",
                        expected: "string",
                        value: input.name
                    }),
                    (null !== input.exposes || _report(_exceptionable, {
                        path: _path + ".exposes",
                        expected: "(Array<string | ExposesObject> | ExposesObject | undefined)",
                        value: input.exposes
                    })) && (void 0 === input.exposes || Array.isArray(input.exposes) && input.exposes.map((elem, _index693)=>(null !== elem || _report(_exceptionable, {
                            path: _path + ".exposes[" + _index693 + "]",
                            expected: "(ExposesObject | string)",
                            value: elem
                        })) && (void 0 !== elem || _report(_exceptionable, {
                            path: _path + ".exposes[" + _index693 + "]",
                            expected: "(ExposesObject | string)",
                            value: elem
                        })) && ("string" == typeof elem || ("object" == typeof elem && null !== elem && false === Array.isArray(elem) || _report(_exceptionable, {
                            path: _path + ".exposes[" + _index693 + "]",
                            expected: "(ExposesObject | string)",
                            value: elem
                        })) && _vo399(elem, _path + ".exposes[" + _index693 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".exposes[" + _index693 + "]",
                            expected: "(ExposesObject | string)",
                            value: elem
                        }))).every((flag)=>flag) || "object" == typeof input.exposes && null !== input.exposes && false === Array.isArray(input.exposes) && _vo399(input.exposes, _path + ".exposes", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".exposes",
                        expected: "(Array<string | ExposesObject> | ExposesObject | undefined)",
                        value: input.exposes
                    }) || _report(_exceptionable, {
                        path: _path + ".exposes",
                        expected: "(Array<string | ExposesObject> | ExposesObject | undefined)",
                        value: input.exposes
                    })),
                    void 0 === input.library || ("object" == typeof input.library && null !== input.library || _report(_exceptionable, {
                        path: _path + ".library",
                        expected: "(LibraryOptions | undefined)",
                        value: input.library
                    })) && _vo89(input.library, _path + ".library", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".library",
                        expected: "(LibraryOptions | undefined)",
                        value: input.library
                    }),
                    void 0 === input.remoteType || true === _vv694.has(input.remoteType) || _report(_exceptionable, {
                        path: _path + ".remoteType",
                        expected: '("amd" | "amd-require" | "assign" | "commonjs" | "commonjs-import" | "commonjs-module" | "commonjs-static" | "commonjs2" | "global" | "import" | "jsonp" | "module" | "module-import" | "node-commonjs" | "promise" | "script" | "self" | "system" | "this" | "umd" | "umd2" | "var" | "window" | undefined)',
                        value: input.remoteType
                    }),
                    (null !== input.remotes || _report(_exceptionable, {
                        path: _path + ".remotes",
                        expected: "(Array<string | RemotesObject> | RemotesObject | undefined)",
                        value: input.remotes
                    })) && (void 0 === input.remotes || Array.isArray(input.remotes) && input.remotes.map((elem, _index695)=>(null !== elem || _report(_exceptionable, {
                            path: _path + ".remotes[" + _index695 + "]",
                            expected: "(RemotesObject | string)",
                            value: elem
                        })) && (void 0 !== elem || _report(_exceptionable, {
                            path: _path + ".remotes[" + _index695 + "]",
                            expected: "(RemotesObject | string)",
                            value: elem
                        })) && ("string" == typeof elem || ("object" == typeof elem && null !== elem && false === Array.isArray(elem) || _report(_exceptionable, {
                            path: _path + ".remotes[" + _index695 + "]",
                            expected: "(RemotesObject | string)",
                            value: elem
                        })) && _vo401(elem, _path + ".remotes[" + _index695 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".remotes[" + _index695 + "]",
                            expected: "(RemotesObject | string)",
                            value: elem
                        }))).every((flag)=>flag) || "object" == typeof input.remotes && null !== input.remotes && false === Array.isArray(input.remotes) && _vo401(input.remotes, _path + ".remotes", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".remotes",
                        expected: "(Array<string | RemotesObject> | RemotesObject | undefined)",
                        value: input.remotes
                    }) || _report(_exceptionable, {
                        path: _path + ".remotes",
                        expected: "(Array<string | RemotesObject> | RemotesObject | undefined)",
                        value: input.remotes
                    })),
                    void 0 === input.runtime || false === input.runtime || "string" == typeof input.runtime || _report(_exceptionable, {
                        path: _path + ".runtime",
                        expected: "(false | string | undefined)",
                        value: input.runtime
                    }),
                    void 0 === input.shareScope || "string" == typeof input.shareScope || _report(_exceptionable, {
                        path: _path + ".shareScope",
                        expected: "(string | undefined)",
                        value: input.shareScope
                    }),
                    (null !== input.shared || _report(_exceptionable, {
                        path: _path + ".shared",
                        expected: "(Array<string | SharedObject> | SharedObject | undefined)",
                        value: input.shared
                    })) && (void 0 === input.shared || Array.isArray(input.shared) && input.shared.map((elem, _index696)=>(null !== elem || _report(_exceptionable, {
                            path: _path + ".shared[" + _index696 + "]",
                            expected: "(SharedObject | string)",
                            value: elem
                        })) && (void 0 !== elem || _report(_exceptionable, {
                            path: _path + ".shared[" + _index696 + "]",
                            expected: "(SharedObject | string)",
                            value: elem
                        })) && ("string" == typeof elem || ("object" == typeof elem && null !== elem && false === Array.isArray(elem) || _report(_exceptionable, {
                            path: _path + ".shared[" + _index696 + "]",
                            expected: "(SharedObject | string)",
                            value: elem
                        })) && _vo403(elem, _path + ".shared[" + _index696 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".shared[" + _index696 + "]",
                            expected: "(SharedObject | string)",
                            value: elem
                        }))).every((flag)=>flag) || "object" == typeof input.shared && null !== input.shared && false === Array.isArray(input.shared) && _vo403(input.shared, _path + ".shared", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".shared",
                        expected: "(Array<string | SharedObject> | SharedObject | undefined)",
                        value: input.shared
                    }) || _report(_exceptionable, {
                        path: _path + ".shared",
                        expected: "(Array<string | SharedObject> | SharedObject | undefined)",
                        value: input.shared
                    })),
                    1 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "runtimePlugins",
                            "implementation",
                            "shareStrategy",
                            "filename",
                            "name",
                            "exposes",
                            "library",
                            "remoteType",
                            "remotes",
                            "runtime",
                            "shareScope",
                            "shared"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo399 = (input, _path, _exceptionable = true)=>[
                    false === _exceptionable || Object.keys(input).map((key)=>{
                        const value = input[key];
                        if (void 0 === value) return true;
                        return (null !== value || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(ExposesConfig | ExposesItems | string)",
                            value: value
                        })) && (void 0 !== value || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(ExposesConfig | ExposesItems | string)",
                            value: value
                        })) && ("string" == typeof value || Array.isArray(value) && value.map((elem, _index697)=>"string" == typeof elem || _report(_exceptionable, {
                                path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key) + "[" + _index697 + "]",
                                expected: "string",
                                value: elem
                            })).every((flag)=>flag) || "object" == typeof value && null !== value && _vo400(value, _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key), _exceptionable) || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(ExposesConfig | ExposesItems | string)",
                            value: value
                        }) || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(ExposesConfig | ExposesItems | string)",
                            value: value
                        }));
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo400 = (input, _path, _exceptionable = true)=>[
                    (null !== input["import"] || _report(_exceptionable, {
                        path: _path + "[\"import\"]",
                        expected: "(ExposesItems | string)",
                        value: input["import"]
                    })) && (void 0 !== input["import"] || _report(_exceptionable, {
                        path: _path + "[\"import\"]",
                        expected: "(ExposesItems | string)",
                        value: input["import"]
                    })) && ("string" == typeof input["import"] || (Array.isArray(input["import"]) || _report(_exceptionable, {
                        path: _path + "[\"import\"]",
                        expected: "(ExposesItems | string)",
                        value: input["import"]
                    })) && input["import"].map((elem, _index698)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + "[\"import\"][" + _index698 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + "[\"import\"]",
                        expected: "(ExposesItems | string)",
                        value: input["import"]
                    })),
                    void 0 === input.name || "string" == typeof input.name || _report(_exceptionable, {
                        path: _path + ".name",
                        expected: "(string | undefined)",
                        value: input.name
                    }),
                    1 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "import",
                            "name"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo401 = (input, _path, _exceptionable = true)=>[
                    false === _exceptionable || Object.keys(input).map((key)=>{
                        const value = input[key];
                        if (void 0 === value) return true;
                        return (null !== value || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(RemotesConfig | RemotesItems | string)",
                            value: value
                        })) && (void 0 !== value || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(RemotesConfig | RemotesItems | string)",
                            value: value
                        })) && ("string" == typeof value || Array.isArray(value) && value.map((elem, _index699)=>"string" == typeof elem || _report(_exceptionable, {
                                path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key) + "[" + _index699 + "]",
                                expected: "string",
                                value: elem
                            })).every((flag)=>flag) || "object" == typeof value && null !== value && _vo402(value, _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key), _exceptionable) || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(RemotesConfig | RemotesItems | string)",
                            value: value
                        }) || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(RemotesConfig | RemotesItems | string)",
                            value: value
                        }));
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo402 = (input, _path, _exceptionable = true)=>[
                    (null !== input.external || _report(_exceptionable, {
                        path: _path + ".external",
                        expected: "(RemotesItems | string)",
                        value: input.external
                    })) && (void 0 !== input.external || _report(_exceptionable, {
                        path: _path + ".external",
                        expected: "(RemotesItems | string)",
                        value: input.external
                    })) && ("string" == typeof input.external || (Array.isArray(input.external) || _report(_exceptionable, {
                        path: _path + ".external",
                        expected: "(RemotesItems | string)",
                        value: input.external
                    })) && input.external.map((elem, _index700)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".external[" + _index700 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".external",
                        expected: "(RemotesItems | string)",
                        value: input.external
                    })),
                    void 0 === input.shareScope || "string" == typeof input.shareScope || _report(_exceptionable, {
                        path: _path + ".shareScope",
                        expected: "(string | undefined)",
                        value: input.shareScope
                    }),
                    1 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "external",
                            "shareScope"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo403 = (input, _path, _exceptionable = true)=>[
                    false === _exceptionable || Object.keys(input).map((key)=>{
                        const value = input[key];
                        if (void 0 === value) return true;
                        return (null !== value || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(SharedConfig | string)",
                            value: value
                        })) && (void 0 !== value || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(SharedConfig | string)",
                            value: value
                        })) && ("string" == typeof value || ("object" == typeof value && null !== value && false === Array.isArray(value) || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(SharedConfig | string)",
                            value: value
                        })) && _vo404(value, _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key), _exceptionable) || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(SharedConfig | string)",
                            value: value
                        }));
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo404 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.eager || "boolean" == typeof input.eager || _report(_exceptionable, {
                        path: _path + ".eager",
                        expected: "(boolean | undefined)",
                        value: input.eager
                    }),
                    void 0 === input["import"] || false === input["import"] || "string" == typeof input["import"] || _report(_exceptionable, {
                        path: _path + "[\"import\"]",
                        expected: "(false | string | undefined)",
                        value: input["import"]
                    }),
                    void 0 === input.packageName || "string" == typeof input.packageName || _report(_exceptionable, {
                        path: _path + ".packageName",
                        expected: "(string | undefined)",
                        value: input.packageName
                    }),
                    void 0 === input.requiredVersion || false === input.requiredVersion || "string" == typeof input.requiredVersion || _report(_exceptionable, {
                        path: _path + ".requiredVersion",
                        expected: "(false | string | undefined)",
                        value: input.requiredVersion
                    }),
                    void 0 === input.shareKey || "string" == typeof input.shareKey || _report(_exceptionable, {
                        path: _path + ".shareKey",
                        expected: "(string | undefined)",
                        value: input.shareKey
                    }),
                    void 0 === input.shareScope || "string" == typeof input.shareScope || _report(_exceptionable, {
                        path: _path + ".shareScope",
                        expected: "(string | undefined)",
                        value: input.shareScope
                    }),
                    void 0 === input.singleton || "boolean" == typeof input.singleton || _report(_exceptionable, {
                        path: _path + ".singleton",
                        expected: "(boolean | undefined)",
                        value: input.singleton
                    }),
                    void 0 === input.strictVersion || "boolean" == typeof input.strictVersion || _report(_exceptionable, {
                        path: _path + ".strictVersion",
                        expected: "(boolean | undefined)",
                        value: input.strictVersion
                    }),
                    void 0 === input.version || false === input.version || "string" == typeof input.version || _report(_exceptionable, {
                        path: _path + ".version",
                        expected: "(false | string | undefined)",
                        value: input.version
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "eager",
                            "import",
                            "packageName",
                            "requiredVersion",
                            "shareKey",
                            "shareScope",
                            "singleton",
                            "strictVersion",
                            "version"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo405 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.pre || (Array.isArray(input.pre) || _report(_exceptionable, {
                        path: _path + ".pre",
                        expected: "(Array<string> | undefined)",
                        value: input.pre
                    })) && input.pre.map((elem, _index701)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".pre[" + _index701 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".pre",
                        expected: "(Array<string> | undefined)",
                        value: input.pre
                    }),
                    void 0 === input.post || (Array.isArray(input.post) || _report(_exceptionable, {
                        path: _path + ".post",
                        expected: "(Array<string> | undefined)",
                        value: input.post
                    })) && input.post.map((elem, _index702)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".post[" + _index702 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".post",
                        expected: "(Array<string> | undefined)",
                        value: input.post
                    }),
                    "string" == typeof input.name || _report(_exceptionable, {
                        path: _path + ".name",
                        expected: "string",
                        value: input.name
                    }),
                    void 0 === input.enforce || "pre" === input.enforce || "post" === input.enforce || _report(_exceptionable, {
                        path: _path + ".enforce",
                        expected: "(\"post\" | \"pre\" | undefined)",
                        value: input.enforce
                    }),
                    void 0 === input.remove || (Array.isArray(input.remove) || _report(_exceptionable, {
                        path: _path + ".remove",
                        expected: "(Array<string> | undefined)",
                        value: input.remove
                    })) && input.remove.map((elem, _index703)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".remove[" + _index703 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".remove",
                        expected: "(Array<string> | undefined)",
                        value: input.remove
                    }),
                    true,
                    true,
                    2 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "pre",
                            "post",
                            "name",
                            "enforce",
                            "remove",
                            "apply",
                            "setup"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo406 = (input, _path, _exceptionable = true)=>[
                    "string" == typeof input["__@toStringTag@6659"] || _report(_exceptionable, {
                        path: _path + "[\"__@toStringTag@6659\"]",
                        expected: "string",
                        value: input["__@toStringTag@6659"]
                    }),
                    1 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "__@toStringTag@6659"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo407 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.assetPrefix || "string" == typeof input.assetPrefix || _report(_exceptionable, {
                        path: _path + ".assetPrefix",
                        expected: "(string | undefined)",
                        value: input.assetPrefix
                    }),
                    void 0 === input.cleanDistPath || "boolean" == typeof input.cleanDistPath || _report(_exceptionable, {
                        path: _path + ".cleanDistPath",
                        expected: "(boolean | undefined)",
                        value: input.cleanDistPath
                    }),
                    (null !== input.copy || _report(_exceptionable, {
                        path: _path + ".copy",
                        expected: "(Array<string | (Pick<RawCopyPattern, \"from\"> & Partial<Omit<RawCopyPattern, \"from\">>)> | CopyRspackPluginOptions | undefined)",
                        value: input.copy
                    })) && (void 0 === input.copy || Array.isArray(input.copy) && input.copy.map((elem, _index704)=>(null !== elem || _report(_exceptionable, {
                            path: _path + ".copy[" + _index704 + "]",
                            expected: "(Pick<RawCopyPattern, \"from\"> & Partial<Omit<RawCopyPattern, \"from\">> | string)",
                            value: elem
                        })) && (void 0 !== elem || _report(_exceptionable, {
                            path: _path + ".copy[" + _index704 + "]",
                            expected: "(Pick<RawCopyPattern, \"from\"> & Partial<Omit<RawCopyPattern, \"from\">> | string)",
                            value: elem
                        })) && ("string" == typeof elem || ("object" == typeof elem && null !== elem || _report(_exceptionable, {
                            path: _path + ".copy[" + _index704 + "]",
                            expected: "(Pick<RawCopyPattern, \"from\"> & Partial<Omit<RawCopyPattern, \"from\">> | string)",
                            value: elem
                        })) && _vo379(elem, _path + ".copy[" + _index704 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".copy[" + _index704 + "]",
                            expected: "(Pick<RawCopyPattern, \"from\"> & Partial<Omit<RawCopyPattern, \"from\">> | string)",
                            value: elem
                        }))).every((flag)=>flag) || "object" == typeof input.copy && null !== input.copy && _vo378(input.copy, _path + ".copy", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".copy",
                        expected: "(Array<string | (Pick<RawCopyPattern, \"from\"> & Partial<Omit<RawCopyPattern, \"from\">>)> | CopyRspackPluginOptions | undefined)",
                        value: input.copy
                    }) || _report(_exceptionable, {
                        path: _path + ".copy",
                        expected: "(Array<string | (Pick<RawCopyPattern, \"from\"> & Partial<Omit<RawCopyPattern, \"from\">>)> | CopyRspackPluginOptions | undefined)",
                        value: input.copy
                    })),
                    void 0 === input.cssModules || ("object" == typeof input.cssModules && null !== input.cssModules && false === Array.isArray(input.cssModules) || _report(_exceptionable, {
                        path: _path + ".cssModules",
                        expected: "(CssModules | undefined)",
                        value: input.cssModules
                    })) && _vo408(input.cssModules, _path + ".cssModules", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".cssModules",
                        expected: "(CssModules | undefined)",
                        value: input.cssModules
                    }),
                    void 0 === input.dataUriLimit || "number" == typeof input.dataUriLimit || _report(_exceptionable, {
                        path: _path + ".dataUriLimit",
                        expected: "(number | undefined)",
                        value: input.dataUriLimit
                    }),
                    void 0 === input.distPath || ("object" == typeof input.distPath && null !== input.distPath && false === Array.isArray(input.distPath) || _report(_exceptionable, {
                        path: _path + ".distPath",
                        expected: "(DistPath | undefined)",
                        value: input.distPath
                    })) && _vo409(input.distPath, _path + ".distPath", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".distPath",
                        expected: "(DistPath | undefined)",
                        value: input.distPath
                    }),
                    (null !== input.filename || _report(_exceptionable, {
                        path: _path + ".filename",
                        expected: "(Filename | string | undefined)",
                        value: input.filename
                    })) && (void 0 === input.filename || "string" == typeof input.filename || ("object" == typeof input.filename && null !== input.filename && false === Array.isArray(input.filename) || _report(_exceptionable, {
                        path: _path + ".filename",
                        expected: "(Filename | string | undefined)",
                        value: input.filename
                    })) && _vo410(input.filename, _path + ".filename", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".filename",
                        expected: "(Filename | string | undefined)",
                        value: input.filename
                    })),
                    void 0 === input.filenameHash || "string" == typeof input.filenameHash || "boolean" == typeof input.filenameHash || _report(_exceptionable, {
                        path: _path + ".filenameHash",
                        expected: "(boolean | string | undefined)",
                        value: input.filenameHash
                    }),
                    (null !== input.inlineScripts || _report(_exceptionable, {
                        path: _path + ".inlineScripts",
                        expected: "(RegExp | __type.o108 | boolean | undefined)",
                        value: input.inlineScripts
                    })) && (void 0 === input.inlineScripts || "function" == typeof input.inlineScripts || "boolean" == typeof input.inlineScripts || input.inlineScripts instanceof RegExp || ("object" == typeof input.inlineScripts && null !== input.inlineScripts || _report(_exceptionable, {
                        path: _path + ".inlineScripts",
                        expected: "(RegExp | __type.o108 | boolean | undefined)",
                        value: input.inlineScripts
                    })) && _vo377(input.inlineScripts, _path + ".inlineScripts", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".inlineScripts",
                        expected: "(RegExp | __type.o108 | boolean | undefined)",
                        value: input.inlineScripts
                    })),
                    void 0 === input.legalComments || "none" === input.legalComments || "inline" === input.legalComments || "linked" === input.legalComments || _report(_exceptionable, {
                        path: _path + ".legalComments",
                        expected: "(\"inline\" | \"linked\" | \"none\" | undefined)",
                        value: input.legalComments
                    }),
                    (null !== input.minify || _report(_exceptionable, {
                        path: _path + ".minify",
                        expected: "(Minify | boolean | undefined)",
                        value: input.minify
                    })) && (void 0 === input.minify || "boolean" == typeof input.minify || ("object" == typeof input.minify && null !== input.minify && false === Array.isArray(input.minify) || _report(_exceptionable, {
                        path: _path + ".minify",
                        expected: "(Minify | boolean | undefined)",
                        value: input.minify
                    })) && _vo411(input.minify, _path + ".minify", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".minify",
                        expected: "(Minify | boolean | undefined)",
                        value: input.minify
                    })),
                    (null !== input.sourceMap || _report(_exceptionable, {
                        path: _path + ".sourceMap",
                        expected: "(SourceMap.o1 | boolean | undefined)",
                        value: input.sourceMap
                    })) && (void 0 === input.sourceMap || "boolean" == typeof input.sourceMap || ("object" == typeof input.sourceMap && null !== input.sourceMap && false === Array.isArray(input.sourceMap) || _report(_exceptionable, {
                        path: _path + ".sourceMap",
                        expected: "(SourceMap.o1 | boolean | undefined)",
                        value: input.sourceMap
                    })) && _vo412(input.sourceMap, _path + ".sourceMap", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".sourceMap",
                        expected: "(SourceMap.o1 | boolean | undefined)",
                        value: input.sourceMap
                    })),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "assetPrefix",
                            "cleanDistPath",
                            "copy",
                            "cssModules",
                            "dataUriLimit",
                            "distPath",
                            "filename",
                            "filenameHash",
                            "inlineScripts",
                            "legalComments",
                            "minify",
                            "sourceMap"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo408 = (input, _path, _exceptionable = true)=>[
                    (null !== input.auto || _report(_exceptionable, {
                        path: _path + ".auto",
                        expected: "(RegExp | boolean | undefined)",
                        value: input.auto
                    })) && (void 0 === input.auto || "function" == typeof input.auto || "boolean" == typeof input.auto || input.auto instanceof RegExp || _report(_exceptionable, {
                        path: _path + ".auto",
                        expected: "(RegExp | boolean | undefined)",
                        value: input.auto
                    })),
                    void 0 === input.exportGlobals || "boolean" == typeof input.exportGlobals || _report(_exceptionable, {
                        path: _path + ".exportGlobals",
                        expected: "(boolean | undefined)",
                        value: input.exportGlobals
                    }),
                    void 0 === input.exportLocalsConvention || "asIs" === input.exportLocalsConvention || "camelCase" === input.exportLocalsConvention || "camelCaseOnly" === input.exportLocalsConvention || "dashes" === input.exportLocalsConvention || "dashesOnly" === input.exportLocalsConvention || _report(_exceptionable, {
                        path: _path + ".exportLocalsConvention",
                        expected: "(\"asIs\" | \"camelCase\" | \"camelCaseOnly\" | \"dashes\" | \"dashesOnly\" | undefined)",
                        value: input.exportLocalsConvention
                    }),
                    void 0 === input.localIdentName || "string" == typeof input.localIdentName || _report(_exceptionable, {
                        path: _path + ".localIdentName",
                        expected: "(string | undefined)",
                        value: input.localIdentName
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "auto",
                            "exportGlobals",
                            "exportLocalsConvention",
                            "localIdentName"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo409 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.intermediate || "string" == typeof input.intermediate || _report(_exceptionable, {
                        path: _path + ".intermediate",
                        expected: "(string | undefined)",
                        value: input.intermediate
                    }),
                    void 0 === input.root || "string" == typeof input.root || _report(_exceptionable, {
                        path: _path + ".root",
                        expected: "(string | undefined)",
                        value: input.root
                    }),
                    void 0 === input.js || "string" == typeof input.js || _report(_exceptionable, {
                        path: _path + ".js",
                        expected: "(string | undefined)",
                        value: input.js
                    }),
                    void 0 === input.jsAsync || "string" == typeof input.jsAsync || _report(_exceptionable, {
                        path: _path + ".jsAsync",
                        expected: "(string | undefined)",
                        value: input.jsAsync
                    }),
                    void 0 === input.css || "string" == typeof input.css || _report(_exceptionable, {
                        path: _path + ".css",
                        expected: "(string | undefined)",
                        value: input.css
                    }),
                    void 0 === input.cssAsync || "string" == typeof input.cssAsync || _report(_exceptionable, {
                        path: _path + ".cssAsync",
                        expected: "(string | undefined)",
                        value: input.cssAsync
                    }),
                    void 0 === input.svg || "string" == typeof input.svg || _report(_exceptionable, {
                        path: _path + ".svg",
                        expected: "(string | undefined)",
                        value: input.svg
                    }),
                    void 0 === input.font || "string" == typeof input.font || _report(_exceptionable, {
                        path: _path + ".font",
                        expected: "(string | undefined)",
                        value: input.font
                    }),
                    void 0 === input.html || "string" == typeof input.html || _report(_exceptionable, {
                        path: _path + ".html",
                        expected: "(string | undefined)",
                        value: input.html
                    }),
                    void 0 === input.wasm || "string" == typeof input.wasm || _report(_exceptionable, {
                        path: _path + ".wasm",
                        expected: "(string | undefined)",
                        value: input.wasm
                    }),
                    void 0 === input.image || "string" == typeof input.image || _report(_exceptionable, {
                        path: _path + ".image",
                        expected: "(string | undefined)",
                        value: input.image
                    }),
                    void 0 === input.media || "string" == typeof input.media || _report(_exceptionable, {
                        path: _path + ".media",
                        expected: "(string | undefined)",
                        value: input.media
                    }),
                    void 0 === input.assets || "string" == typeof input.assets || _report(_exceptionable, {
                        path: _path + ".assets",
                        expected: "(string | undefined)",
                        value: input.assets
                    }),
                    void 0 === input.favicon || "string" == typeof input.favicon || _report(_exceptionable, {
                        path: _path + ".favicon",
                        expected: "(string | undefined)",
                        value: input.favicon
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "intermediate",
                            "root",
                            "js",
                            "jsAsync",
                            "css",
                            "cssAsync",
                            "svg",
                            "font",
                            "html",
                            "wasm",
                            "image",
                            "media",
                            "assets",
                            "favicon"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo410 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.bundle || "string" == typeof input.bundle || _report(_exceptionable, {
                        path: _path + ".bundle",
                        expected: "(string | undefined)",
                        value: input.bundle
                    }),
                    void 0 === input.template || "string" == typeof input.template || _report(_exceptionable, {
                        path: _path + ".template",
                        expected: "(string | undefined)",
                        value: input.template
                    }),
                    (null !== input.js || _report(_exceptionable, {
                        path: _path + ".js",
                        expected: "(string | undefined)",
                        value: input.js
                    })) && (void 0 === input.js || "function" == typeof input.js || "string" == typeof input.js || _report(_exceptionable, {
                        path: _path + ".js",
                        expected: "(string | undefined)",
                        value: input.js
                    })),
                    (null !== input.css || _report(_exceptionable, {
                        path: _path + ".css",
                        expected: "(string | undefined)",
                        value: input.css
                    })) && (void 0 === input.css || "function" == typeof input.css || "string" == typeof input.css || _report(_exceptionable, {
                        path: _path + ".css",
                        expected: "(string | undefined)",
                        value: input.css
                    })),
                    (null !== input.svg || _report(_exceptionable, {
                        path: _path + ".svg",
                        expected: "(string | undefined)",
                        value: input.svg
                    })) && (void 0 === input.svg || "function" == typeof input.svg || "string" == typeof input.svg || _report(_exceptionable, {
                        path: _path + ".svg",
                        expected: "(string | undefined)",
                        value: input.svg
                    })),
                    (null !== input.font || _report(_exceptionable, {
                        path: _path + ".font",
                        expected: "(string | undefined)",
                        value: input.font
                    })) && (void 0 === input.font || "function" == typeof input.font || "string" == typeof input.font || _report(_exceptionable, {
                        path: _path + ".font",
                        expected: "(string | undefined)",
                        value: input.font
                    })),
                    (null !== input.image || _report(_exceptionable, {
                        path: _path + ".image",
                        expected: "(string | undefined)",
                        value: input.image
                    })) && (void 0 === input.image || "function" == typeof input.image || "string" == typeof input.image || _report(_exceptionable, {
                        path: _path + ".image",
                        expected: "(string | undefined)",
                        value: input.image
                    })),
                    (null !== input.media || _report(_exceptionable, {
                        path: _path + ".media",
                        expected: "(string | undefined)",
                        value: input.media
                    })) && (void 0 === input.media || "function" == typeof input.media || "string" == typeof input.media || _report(_exceptionable, {
                        path: _path + ".media",
                        expected: "(string | undefined)",
                        value: input.media
                    })),
                    void 0 === input.wasm || "string" == typeof input.wasm || _report(_exceptionable, {
                        path: _path + ".wasm",
                        expected: "(string | undefined)",
                        value: input.wasm
                    }),
                    (null !== input.assets || _report(_exceptionable, {
                        path: _path + ".assets",
                        expected: "(string | undefined)",
                        value: input.assets
                    })) && (void 0 === input.assets || "function" == typeof input.assets || "string" == typeof input.assets || _report(_exceptionable, {
                        path: _path + ".assets",
                        expected: "(string | undefined)",
                        value: input.assets
                    })),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "bundle",
                            "template",
                            "js",
                            "css",
                            "svg",
                            "font",
                            "image",
                            "media",
                            "wasm",
                            "assets"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo411 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.css || "boolean" == typeof input.css || _report(_exceptionable, {
                        path: _path + ".css",
                        expected: "(boolean | undefined)",
                        value: input.css
                    }),
                    void 0 === input.js || "boolean" == typeof input.js || _report(_exceptionable, {
                        path: _path + ".js",
                        expected: "(boolean | undefined)",
                        value: input.js
                    }),
                    void 0 === input.jsOptions || ("object" == typeof input.jsOptions && null !== input.jsOptions && false === Array.isArray(input.jsOptions) || _report(_exceptionable, {
                        path: _path + ".jsOptions",
                        expected: "(SwcJsMinimizerRspackPluginOptions | undefined)",
                        value: input.jsOptions
                    })) && _vo366(input.jsOptions, _path + ".jsOptions", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".jsOptions",
                        expected: "(SwcJsMinimizerRspackPluginOptions | undefined)",
                        value: input.jsOptions
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "css",
                            "js",
                            "jsOptions"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo412 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.js || true === _vv705.has(input.js) || _report(_exceptionable, {
                        path: _path + ".js",
                        expected: "(\"cheap-module-source-map\" | \"cheap-module-source-map-debugids\" | \"cheap-module-source-map-debugids-debugids\" | \"cheap-source-map\" | \"cheap-source-map-debugids\" | \"cheap-source-map-debugids-debugids\" | \"eval\" | \"eval-cheap-module-source-map\" | \"eval-cheap-module-source-map-debugids\" | \"eval-cheap-module-source-map-debugids-debugids\" | \"eval-cheap-source-map\" | \"eval-cheap-source-map-debugids\" | \"eval-cheap-source-map-debugids-debugids\" | \"eval-nosources-cheap-module-source-map\" | \"eval-nosources-cheap-module-source-map-debugids\" | \"eval-nosources-cheap-module-source-map-debugids-debugids\" | \"eval-nosources-cheap-source-map\" | \"eval-nosources-cheap-source-map-debugids\" | \"eval-nosources-cheap-source-map-debugids-debugids\" | \"eval-nosources-source-map\" | \"eval-nosources-source-map-debugids\" | \"eval-nosources-source-map-debugids-debugids\" | \"eval-source-map\" | \"eval-source-map-debugids\" | \"eval-source-map-debugids-debugids\" | \"hidden-cheap-module-source-map\" | \"hidden-cheap-module-source-map-debugids\" | \"hidden-cheap-module-source-map-debugids-debugids\" | \"hidden-cheap-source-map\" | \"hidden-cheap-source-map-debugids\" | \"hidden-cheap-source-map-debugids-debugids\" | \"hidden-nosources-cheap-module-source-map\" | \"hidden-nosources-cheap-module-source-map-debugids\" | \"hidden-nosources-cheap-module-source-map-debugids-debugids\" | \"hidden-nosources-cheap-source-map\" | \"hidden-nosources-cheap-source-map-debugids\" | \"hidden-nosources-cheap-source-map-debugids-debugids\" | \"hidden-nosources-source-map\" | \"hidden-nosources-source-map-debugids\" | \"hidden-nosources-source-map-debugids-debugids\" | \"hidden-source-map\" | \"hidden-source-map-debugids\" | \"hidden-source-map-debugids-debugids\" | \"inline-cheap-module-source-map\" | \"inline-cheap-module-source-map-debugids\" | \"inline-cheap-module-source-map-debugids-debugids\" | \"inline-cheap-source-map\" | \"inline-cheap-source-map-debugids\" | \"inline-cheap-source-map-debugids-debugids\" | \"inline-nosources-cheap-module-source-map\" | \"inline-nosources-cheap-module-source-map-debugids\" | \"inline-nosources-cheap-module-source-map-debugids-debugids\" | \"inline-nosources-cheap-source-map\" | \"inline-nosources-cheap-source-map-debugids\" | \"inline-nosources-cheap-source-map-debugids-debugids\" | \"inline-nosources-source-map\" | \"inline-nosources-source-map-debugids\" | \"inline-nosources-source-map-debugids-debugids\" | \"inline-source-map\" | \"inline-source-map-debugids\" | \"inline-source-map-debugids-debugids\" | \"nosources-cheap-module-source-map\" | \"nosources-cheap-module-source-map-debugids\" | \"nosources-cheap-module-source-map-debugids-debugids\" | \"nosources-cheap-source-map\" | \"nosources-cheap-source-map-debugids\" | \"nosources-cheap-source-map-debugids-debugids\" | \"nosources-source-map\" | \"nosources-source-map-debugids\" | \"nosources-source-map-debugids-debugids\" | \"source-map\" | \"source-map-debugids\" | \"source-map-debugids-debugids\" | false | undefined)",
                        value: input.js
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "js"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo413 = (input, _path, _exceptionable = true)=>[
                    (null !== input.buildCache || _report(_exceptionable, {
                        path: _path + ".buildCache",
                        expected: "(BuildCache | boolean | undefined)",
                        value: input.buildCache
                    })) && (void 0 === input.buildCache || "boolean" == typeof input.buildCache || ("object" == typeof input.buildCache && null !== input.buildCache && false === Array.isArray(input.buildCache) || _report(_exceptionable, {
                        path: _path + ".buildCache",
                        expected: "(BuildCache | boolean | undefined)",
                        value: input.buildCache
                    })) && _vo414(input.buildCache, _path + ".buildCache", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".buildCache",
                        expected: "(BuildCache | boolean | undefined)",
                        value: input.buildCache
                    })),
                    void 0 === input.chunkSplit || ("object" == typeof input.chunkSplit && null !== input.chunkSplit && false === Array.isArray(input.chunkSplit) || _report(_exceptionable, {
                        path: _path + ".chunkSplit",
                        expected: "(ChunkSplit | ChunkSplitBySize | ChunkSplitCustom | undefined)",
                        value: input.chunkSplit
                    })) && _vu17(input.chunkSplit, _path + ".chunkSplit", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".chunkSplit",
                        expected: "(ChunkSplit | ChunkSplitBySize | ChunkSplitCustom | undefined)",
                        value: input.chunkSplit
                    }),
                    void 0 === input.profile || "boolean" == typeof input.profile || _report(_exceptionable, {
                        path: _path + ".profile",
                        expected: "(boolean | undefined)",
                        value: input.profile
                    }),
                    (null !== input.removeConsole || _report(_exceptionable, {
                        path: _path + ".removeConsole",
                        expected: "(Array<ConsoleType>.o1 | boolean | undefined)",
                        value: input.removeConsole
                    })) && (void 0 === input.removeConsole || "boolean" == typeof input.removeConsole || (Array.isArray(input.removeConsole) || _report(_exceptionable, {
                        path: _path + ".removeConsole",
                        expected: "(Array<ConsoleType>.o1 | boolean | undefined)",
                        value: input.removeConsole
                    })) && input.removeConsole.map((elem, _index706)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".removeConsole[" + _index706 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".removeConsole",
                        expected: "(Array<ConsoleType>.o1 | boolean | undefined)",
                        value: input.removeConsole
                    })),
                    (null !== input.printFileSize || _report(_exceptionable, {
                        path: _path + ".printFileSize",
                        expected: "(PrintFileSizeOptions | boolean | undefined)",
                        value: input.printFileSize
                    })) && (void 0 === input.printFileSize || "boolean" == typeof input.printFileSize || ("object" == typeof input.printFileSize && null !== input.printFileSize && false === Array.isArray(input.printFileSize) || _report(_exceptionable, {
                        path: _path + ".printFileSize",
                        expected: "(PrintFileSizeOptions | boolean | undefined)",
                        value: input.printFileSize
                    })) && _vo388(input.printFileSize, _path + ".printFileSize", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".printFileSize",
                        expected: "(PrintFileSizeOptions | boolean | undefined)",
                        value: input.printFileSize
                    })),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "buildCache",
                            "chunkSplit",
                            "profile",
                            "removeConsole",
                            "printFileSize"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo414 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.cacheDigest || (Array.isArray(input.cacheDigest) || _report(_exceptionable, {
                        path: _path + ".cacheDigest",
                        expected: "(Array<string | undefined> | undefined)",
                        value: input.cacheDigest
                    })) && input.cacheDigest.map((elem, _index707)=>void 0 === elem || "string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".cacheDigest[" + _index707 + "]",
                            expected: "(string | undefined)",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".cacheDigest",
                        expected: "(Array<string | undefined> | undefined)",
                        value: input.cacheDigest
                    }),
                    void 0 === input.cacheDirectory || "string" == typeof input.cacheDirectory || _report(_exceptionable, {
                        path: _path + ".cacheDirectory",
                        expected: "(string | undefined)",
                        value: input.cacheDirectory
                    }),
                    void 0 === input.buildDependencies || (Array.isArray(input.buildDependencies) || _report(_exceptionable, {
                        path: _path + ".buildDependencies",
                        expected: "(Array<string> | undefined)",
                        value: input.buildDependencies
                    })) && input.buildDependencies.map((elem, _index708)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".buildDependencies[" + _index708 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".buildDependencies",
                        expected: "(Array<string> | undefined)",
                        value: input.buildDependencies
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "cacheDigest",
                            "cacheDirectory",
                            "buildDependencies"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo415 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.strategy || "split-by-module" === input.strategy || "split-by-experience" === input.strategy || "all-in-one" === input.strategy || "single-vendor" === input.strategy || _report(_exceptionable, {
                        path: _path + ".strategy",
                        expected: "(\"all-in-one\" | \"single-vendor\" | \"split-by-experience\" | \"split-by-module\" | undefined)",
                        value: input.strategy
                    }),
                    (null !== input.override || _report(_exceptionable, {
                        path: _path + ".override",
                        expected: "(OptimizationSplitChunksOptions | false | undefined)",
                        value: input.override
                    })) && (void 0 === input.override || false === input.override || ("object" == typeof input.override && null !== input.override && false === Array.isArray(input.override) || _report(_exceptionable, {
                        path: _path + ".override",
                        expected: "(OptimizationSplitChunksOptions | false | undefined)",
                        value: input.override
                    })) && _vo122(input.override, _path + ".override", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".override",
                        expected: "(OptimizationSplitChunksOptions | false | undefined)",
                        value: input.override
                    })),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "strategy",
                            "override"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo416 = (input, _path, _exceptionable = true)=>[
                    "split-by-size" === input.strategy || _report(_exceptionable, {
                        path: _path + ".strategy",
                        expected: "\"split-by-size\"",
                        value: input.strategy
                    }),
                    void 0 === input.minSize || "number" == typeof input.minSize || _report(_exceptionable, {
                        path: _path + ".minSize",
                        expected: "(number | undefined)",
                        value: input.minSize
                    }),
                    void 0 === input.maxSize || "number" == typeof input.maxSize || _report(_exceptionable, {
                        path: _path + ".maxSize",
                        expected: "(number | undefined)",
                        value: input.maxSize
                    }),
                    (null !== input.override || _report(_exceptionable, {
                        path: _path + ".override",
                        expected: "(OptimizationSplitChunksOptions | false | undefined)",
                        value: input.override
                    })) && (void 0 === input.override || false === input.override || ("object" == typeof input.override && null !== input.override && false === Array.isArray(input.override) || _report(_exceptionable, {
                        path: _path + ".override",
                        expected: "(OptimizationSplitChunksOptions | false | undefined)",
                        value: input.override
                    })) && _vo122(input.override, _path + ".override", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".override",
                        expected: "(OptimizationSplitChunksOptions | false | undefined)",
                        value: input.override
                    })),
                    1 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "strategy",
                            "minSize",
                            "maxSize",
                            "override"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo417 = (input, _path, _exceptionable = true)=>[
                    "custom" === input.strategy || _report(_exceptionable, {
                        path: _path + ".strategy",
                        expected: "\"custom\"",
                        value: input.strategy
                    }),
                    (null !== input.splitChunks || _report(_exceptionable, {
                        path: _path + ".splitChunks",
                        expected: "(OptimizationSplitChunksOptions | false | undefined)",
                        value: input.splitChunks
                    })) && (void 0 === input.splitChunks || false === input.splitChunks || ("object" == typeof input.splitChunks && null !== input.splitChunks && false === Array.isArray(input.splitChunks) || _report(_exceptionable, {
                        path: _path + ".splitChunks",
                        expected: "(OptimizationSplitChunksOptions | false | undefined)",
                        value: input.splitChunks
                    })) && _vo122(input.splitChunks, _path + ".splitChunks", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".splitChunks",
                        expected: "(OptimizationSplitChunksOptions | false | undefined)",
                        value: input.splitChunks
                    })),
                    1 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "strategy",
                            "splitChunks"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo418 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.alias || ("object" == typeof input.alias && null !== input.alias && false === Array.isArray(input.alias) || _report(_exceptionable, {
                        path: _path + ".alias",
                        expected: "(Record<string, string | false | string[]> | undefined)",
                        value: input.alias
                    })) && _vo419(input.alias, _path + ".alias", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".alias",
                        expected: "(Record<string, string | false | string[]> | undefined)",
                        value: input.alias
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "alias"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo419 = (input, _path, _exceptionable = true)=>[
                    false === _exceptionable || Object.keys(input).map((key)=>{
                        const value = input[key];
                        if (void 0 === value) return true;
                        return (null !== value || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(Array<string> | false | string)",
                            value: value
                        })) && (void 0 !== value || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(Array<string> | false | string)",
                            value: value
                        })) && (false === value || "string" == typeof value || (Array.isArray(value) || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(Array<string> | false | string)",
                            value: value
                        })) && value.map((elem, _index709)=>"string" == typeof elem || _report(_exceptionable, {
                                path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key) + "[" + _index709 + "]",
                                expected: "string",
                                value: elem
                            })).every((flag)=>flag) || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(Array<string> | false | string)",
                            value: value
                        }));
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo420 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.base || "string" == typeof input.base || _report(_exceptionable, {
                        path: _path + ".base",
                        expected: "(string | undefined)",
                        value: input.base
                    }),
                    void 0 === input.headers || ("object" == typeof input.headers && null !== input.headers && false === Array.isArray(input.headers) || _report(_exceptionable, {
                        path: _path + ".headers",
                        expected: "(Record<string, string | string[]> | undefined)",
                        value: input.headers
                    })) && _vo131(input.headers, _path + ".headers", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".headers",
                        expected: "(Record<string, string | string[]> | undefined)",
                        value: input.headers
                    }),
                    void 0 === input.host || "string" == typeof input.host || _report(_exceptionable, {
                        path: _path + ".host",
                        expected: "(string | undefined)",
                        value: input.host
                    }),
                    void 0 === input.port || "number" == typeof input.port || _report(_exceptionable, {
                        path: _path + ".port",
                        expected: "(number | undefined)",
                        value: input.port
                    }),
                    void 0 === input.strictPort || "boolean" == typeof input.strictPort || _report(_exceptionable, {
                        path: _path + ".strictPort",
                        expected: "(boolean | undefined)",
                        value: input.strictPort
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "base",
                            "headers",
                            "host",
                            "port",
                            "strictPort"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo421 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.alias || ("object" == typeof input.alias && null !== input.alias && false === Array.isArray(input.alias) || _report(_exceptionable, {
                        path: _path + ".alias",
                        expected: "(Record<string, string | false | string[]> | undefined)",
                        value: input.alias
                    })) && _vo419(input.alias, _path + ".alias", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".alias",
                        expected: "(Record<string, string | false | string[]> | undefined)",
                        value: input.alias
                    }),
                    (null !== input.assetsInclude || _report(_exceptionable, {
                        path: _path + ".assetsInclude",
                        expected: "(RegExp | RuleSetConditions | RuleSetLogicalConditions | string | undefined)",
                        value: input.assetsInclude
                    })) && (void 0 === input.assetsInclude || "function" == typeof input.assetsInclude || "string" == typeof input.assetsInclude || input.assetsInclude instanceof RegExp || Array.isArray(input.assetsInclude) && (_va0(input.assetsInclude, _path + ".assetsInclude", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".assetsInclude",
                        expected: "RuleSetConditions",
                        value: input.assetsInclude
                    })) || "object" == typeof input.assetsInclude && null !== input.assetsInclude && false === Array.isArray(input.assetsInclude) && _vo174(input.assetsInclude, _path + ".assetsInclude", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".assetsInclude",
                        expected: "(RegExp | RuleSetConditions | RuleSetLogicalConditions | string | undefined)",
                        value: input.assetsInclude
                    }) || _report(_exceptionable, {
                        path: _path + ".assetsInclude",
                        expected: "(RegExp | RuleSetConditions | RuleSetLogicalConditions | string | undefined)",
                        value: input.assetsInclude
                    })),
                    void 0 === input.decorators || ("object" == typeof input.decorators && null !== input.decorators && false === Array.isArray(input.decorators) || _report(_exceptionable, {
                        path: _path + ".decorators",
                        expected: "(Decorators.o1 | undefined)",
                        value: input.decorators
                    })) && _vo422(input.decorators, _path + ".decorators", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".decorators",
                        expected: "(Decorators.o1 | undefined)",
                        value: input.decorators
                    }),
                    void 0 === input.define || ("object" == typeof input.define && null !== input.define && false === Array.isArray(input.define) || _report(_exceptionable, {
                        path: _path + ".define",
                        expected: "(Record<string, string | number | boolean | Record<string, unknown> | undefined> | undefined)",
                        value: input.define
                    })) && _vo423(input.define, _path + ".define", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".define",
                        expected: "(Record<string, string | number | boolean | Record<string, unknown> | undefined> | undefined)",
                        value: input.define
                    }),
                    (null !== input.entry || _report(_exceptionable, {
                        path: _path + ".entry",
                        expected: "(Array<string> | Record<string, string | string[] | EntryDescription> | string | undefined)",
                        value: input.entry
                    })) && (void 0 === input.entry || "string" == typeof input.entry || Array.isArray(input.entry) && input.entry.map((elem, _index710)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".entry[" + _index710 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || "object" == typeof input.entry && null !== input.entry && false === Array.isArray(input.entry) && _vo424(input.entry, _path + ".entry", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".entry",
                        expected: "(Array<string> | Record<string, string | string[] | EntryDescription> | string | undefined)",
                        value: input.entry
                    }) || _report(_exceptionable, {
                        path: _path + ".entry",
                        expected: "(Array<string> | Record<string, string | string[] | EntryDescription> | string | undefined)",
                        value: input.entry
                    })),
                    void 0 === input.exclude || (Array.isArray(input.exclude) || _report(_exceptionable, {
                        path: _path + ".exclude",
                        expected: "(Array<RuleSetCondition>.o3 | undefined)",
                        value: input.exclude
                    })) && input.exclude.map((elem, _index711)=>(null !== elem || _report(_exceptionable, {
                            path: _path + ".exclude[" + _index711 + "]",
                            expected: "(RegExp | RuleSetConditions | RuleSetLogicalConditions | string)",
                            value: elem
                        })) && (void 0 !== elem || _report(_exceptionable, {
                            path: _path + ".exclude[" + _index711 + "]",
                            expected: "(RegExp | RuleSetConditions | RuleSetLogicalConditions | string)",
                            value: elem
                        })) && ("function" == typeof elem || "string" == typeof elem || elem instanceof RegExp || Array.isArray(elem) && (_va0(elem, _path + ".exclude[" + _index711 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".exclude[" + _index711 + "]",
                            expected: "RuleSetConditions",
                            value: elem
                        })) || "object" == typeof elem && null !== elem && false === Array.isArray(elem) && _vo174(elem, _path + ".exclude[" + _index711 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".exclude[" + _index711 + "]",
                            expected: "(RegExp | RuleSetConditions | RuleSetLogicalConditions | string)",
                            value: elem
                        }) || _report(_exceptionable, {
                            path: _path + ".exclude[" + _index711 + "]",
                            expected: "(RegExp | RuleSetConditions | RuleSetLogicalConditions | string)",
                            value: elem
                        }))).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".exclude",
                        expected: "(Array<RuleSetCondition>.o3 | undefined)",
                        value: input.exclude
                    }),
                    void 0 === input.include || (Array.isArray(input.include) || _report(_exceptionable, {
                        path: _path + ".include",
                        expected: "(Array<RuleSetCondition>.o3 | undefined)",
                        value: input.include
                    })) && input.include.map((elem, _index712)=>(null !== elem || _report(_exceptionable, {
                            path: _path + ".include[" + _index712 + "]",
                            expected: "(RegExp | RuleSetConditions | RuleSetLogicalConditions | string)",
                            value: elem
                        })) && (void 0 !== elem || _report(_exceptionable, {
                            path: _path + ".include[" + _index712 + "]",
                            expected: "(RegExp | RuleSetConditions | RuleSetLogicalConditions | string)",
                            value: elem
                        })) && ("function" == typeof elem || "string" == typeof elem || elem instanceof RegExp || Array.isArray(elem) && (_va0(elem, _path + ".include[" + _index712 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".include[" + _index712 + "]",
                            expected: "RuleSetConditions",
                            value: elem
                        })) || "object" == typeof elem && null !== elem && false === Array.isArray(elem) && _vo174(elem, _path + ".include[" + _index712 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".include[" + _index712 + "]",
                            expected: "(RegExp | RuleSetConditions | RuleSetLogicalConditions | string)",
                            value: elem
                        }) || _report(_exceptionable, {
                            path: _path + ".include[" + _index712 + "]",
                            expected: "(RegExp | RuleSetConditions | RuleSetLogicalConditions | string)",
                            value: elem
                        }))).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".include",
                        expected: "(Array<RuleSetCondition>.o3 | undefined)",
                        value: input.include
                    }),
                    (null !== input.preEntry || _report(_exceptionable, {
                        path: _path + ".preEntry",
                        expected: "(Array<string> | string | undefined)",
                        value: input.preEntry
                    })) && (void 0 === input.preEntry || "string" == typeof input.preEntry || (Array.isArray(input.preEntry) || _report(_exceptionable, {
                        path: _path + ".preEntry",
                        expected: "(Array<string> | string | undefined)",
                        value: input.preEntry
                    })) && input.preEntry.map((elem, _index713)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".preEntry[" + _index713 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".preEntry",
                        expected: "(Array<string> | string | undefined)",
                        value: input.preEntry
                    })),
                    void 0 === input.transformImport || (Array.isArray(input.transformImport) || _report(_exceptionable, {
                        path: _path + ".transformImport",
                        expected: "(Array<TransformImport> | undefined)",
                        value: input.transformImport
                    })) && input.transformImport.map((elem, _index714)=>("object" == typeof elem && null !== elem || _report(_exceptionable, {
                            path: _path + ".transformImport[" + _index714 + "]",
                            expected: "TransformImport.o1",
                            value: elem
                        })) && _vo426(elem, _path + ".transformImport[" + _index714 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".transformImport[" + _index714 + "]",
                            expected: "TransformImport.o1",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".transformImport",
                        expected: "(Array<TransformImport> | undefined)",
                        value: input.transformImport
                    }),
                    void 0 === input.tsconfigPath || "string" == typeof input.tsconfigPath || _report(_exceptionable, {
                        path: _path + ".tsconfigPath",
                        expected: "(string | undefined)",
                        value: input.tsconfigPath
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "alias",
                            "assetsInclude",
                            "decorators",
                            "define",
                            "entry",
                            "exclude",
                            "include",
                            "preEntry",
                            "transformImport",
                            "tsconfigPath"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo422 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.version || "2022-03" === input.version || "legacy" === input.version || _report(_exceptionable, {
                        path: _path + ".version",
                        expected: "(\"2022-03\" | \"legacy\" | undefined)",
                        value: input.version
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "version"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo423 = (input, _path, _exceptionable = true)=>[
                    false === _exceptionable || Object.keys(input).map((key)=>{
                        const value = input[key];
                        if (void 0 === value) return true;
                        return (null !== value || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(Record<string, unknown> | boolean | number | string | undefined)",
                            value: value
                        })) && (void 0 === value || "string" == typeof value || "number" == typeof value || "boolean" == typeof value || ("object" == typeof value && null !== value && false === Array.isArray(value) || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(Record<string, unknown> | boolean | number | string | undefined)",
                            value: value
                        })) && _vo22(value, _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key), _exceptionable) || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(Record<string, unknown> | boolean | number | string | undefined)",
                            value: value
                        }));
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo424 = (input, _path, _exceptionable = true)=>[
                    false === _exceptionable || Object.keys(input).map((key)=>{
                        const value = input[key];
                        if (void 0 === value) return true;
                        return (null !== value || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(Array<string> | EntryDescription.o2 | string)",
                            value: value
                        })) && (void 0 !== value || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(Array<string> | EntryDescription.o2 | string)",
                            value: value
                        })) && ("string" == typeof value || Array.isArray(value) && value.map((elem, _index715)=>"string" == typeof elem || _report(_exceptionable, {
                                path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key) + "[" + _index715 + "]",
                                expected: "string",
                                value: elem
                            })).every((flag)=>flag) || "object" == typeof value && null !== value && false === Array.isArray(value) && _vo425(value, _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key), _exceptionable) || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(Array<string> | EntryDescription.o2 | string)",
                            value: value
                        }) || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(Array<string> | EntryDescription.o2 | string)",
                            value: value
                        }));
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo425 = (input, _path, _exceptionable = true)=>[
                    (null !== input["import"] || _report(_exceptionable, {
                        path: _path + "[\"import\"]",
                        expected: "(Array<string> | string | undefined)",
                        value: input["import"]
                    })) && (void 0 === input["import"] || "string" == typeof input["import"] || (Array.isArray(input["import"]) || _report(_exceptionable, {
                        path: _path + "[\"import\"]",
                        expected: "(Array<string> | string | undefined)",
                        value: input["import"]
                    })) && input["import"].map((elem, _index716)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + "[\"import\"][" + _index716 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + "[\"import\"]",
                        expected: "(Array<string> | string | undefined)",
                        value: input["import"]
                    })),
                    void 0 === input.publicPath || "string" == typeof input.publicPath || _report(_exceptionable, {
                        path: _path + ".publicPath",
                        expected: "(string | undefined)",
                        value: input.publicPath
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "import",
                            "publicPath"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo426 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.camelToDashComponentName || "boolean" == typeof input.camelToDashComponentName || _report(_exceptionable, {
                        path: _path + ".camelToDashComponentName",
                        expected: "(boolean | undefined)",
                        value: input.camelToDashComponentName
                    }),
                    void 0 === input.customName || "string" == typeof input.customName || _report(_exceptionable, {
                        path: _path + ".customName",
                        expected: "(string | undefined)",
                        value: input.customName
                    }),
                    "string" == typeof input.libraryName || _report(_exceptionable, {
                        path: _path + ".libraryName",
                        expected: "string",
                        value: input.libraryName
                    }),
                    void 0 === input.libraryDirectory || "string" == typeof input.libraryDirectory || _report(_exceptionable, {
                        path: _path + ".libraryDirectory",
                        expected: "(string | undefined)",
                        value: input.libraryDirectory
                    }),
                    void 0 === input.transformToDefaultImport || "boolean" == typeof input.transformToDefaultImport || _report(_exceptionable, {
                        path: _path + ".transformToDefaultImport",
                        expected: "(boolean | undefined)",
                        value: input.transformToDefaultImport
                    }),
                    1 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "camelToDashComponentName",
                            "customName",
                            "libraryName",
                            "libraryDirectory",
                            "transformToDefaultImport"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo427 = (input, _path, _exceptionable = true)=>[
                    (null !== input.bundlerChain || _report(_exceptionable, {
                        path: _path + ".bundlerChain",
                        expected: "(Array<__type> | undefined)",
                        value: input.bundlerChain
                    })) && (void 0 === input.bundlerChain || "function" == typeof input.bundlerChain || (Array.isArray(input.bundlerChain) || _report(_exceptionable, {
                        path: _path + ".bundlerChain",
                        expected: "(Array<__type> | undefined)",
                        value: input.bundlerChain
                    })) && input.bundlerChain.map((elem, _index717)=>true).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".bundlerChain",
                        expected: "(Array<__type> | undefined)",
                        value: input.bundlerChain
                    })),
                    void 0 === input.cssLoader || ("object" == typeof input.cssLoader && null !== input.cssLoader && false === Array.isArray(input.cssLoader) || _report(_exceptionable, {
                        path: _path + ".cssLoader",
                        expected: "(CssLoader | undefined)",
                        value: input.cssLoader
                    })) && _vo428(input.cssLoader, _path + ".cssLoader", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".cssLoader",
                        expected: "(CssLoader | undefined)",
                        value: input.cssLoader
                    }),
                    void 0 === input.cssExtract || ("object" == typeof input.cssExtract && null !== input.cssExtract && false === Array.isArray(input.cssExtract) || _report(_exceptionable, {
                        path: _path + ".cssExtract",
                        expected: "(CssExtract | undefined)",
                        value: input.cssExtract
                    })) && _vo430(input.cssExtract, _path + ".cssExtract", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".cssExtract",
                        expected: "(CssExtract | undefined)",
                        value: input.cssExtract
                    }),
                    void 0 === input.rsdoctor || ("object" == typeof input.rsdoctor && null !== input.rsdoctor && false === Array.isArray(input.rsdoctor) || _report(_exceptionable, {
                        path: _path + ".rsdoctor",
                        expected: "(RsdoctorRspackPluginOptions<[]> | undefined)",
                        value: input.rsdoctor
                    })) && _vo433(input.rsdoctor, _path + ".rsdoctor", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".rsdoctor",
                        expected: "(RsdoctorRspackPluginOptions<[]> | undefined)",
                        value: input.rsdoctor
                    }),
                    (null !== input.rspack || _report(_exceptionable, {
                        path: _path + ".rspack",
                        expected: "(Array<RspackOptions | ((config: NarrowedRspackConfig, ctx: ModifyRspackConfigUtils) => MaybePromise<void | RspackOptions>)> | RspackOptions | undefined)",
                        value: input.rspack
                    })) && (void 0 === input.rspack || "function" == typeof input.rspack || Array.isArray(input.rspack) && input.rspack.map((elem, _index718)=>(null !== elem || _report(_exceptionable, {
                            path: _path + ".rspack[" + _index718 + "]",
                            expected: "RspackOptions",
                            value: elem
                        })) && (void 0 !== elem || _report(_exceptionable, {
                            path: _path + ".rspack[" + _index718 + "]",
                            expected: "RspackOptions",
                            value: elem
                        })) && ("function" == typeof elem || ("object" == typeof elem && null !== elem && false === Array.isArray(elem) || _report(_exceptionable, {
                            path: _path + ".rspack[" + _index718 + "]",
                            expected: "RspackOptions",
                            value: elem
                        })) && _vo86(elem, _path + ".rspack[" + _index718 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".rspack[" + _index718 + "]",
                            expected: "RspackOptions",
                            value: elem
                        }))).every((flag)=>flag) || "object" == typeof input.rspack && null !== input.rspack && false === Array.isArray(input.rspack) && _vo86(input.rspack, _path + ".rspack", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".rspack",
                        expected: "(Array<RspackOptions | ((config: NarrowedRspackConfig, ctx: ModifyRspackConfigUtils) => MaybePromise<void | RspackOptions>)> | RspackOptions | undefined)",
                        value: input.rspack
                    }) || _report(_exceptionable, {
                        path: _path + ".rspack",
                        expected: "(Array<RspackOptions | ((config: NarrowedRspackConfig, ctx: ModifyRspackConfigUtils) => MaybePromise<void | RspackOptions>)> | RspackOptions | undefined)",
                        value: input.rspack
                    })),
                    (null !== input.swc || _report(_exceptionable, {
                        path: _path + ".swc",
                        expected: "(Array<SwcLoaderOptions | ((config: SwcLoaderOptions) => void | SwcLoaderOptions)> | SwcLoaderOptions | undefined)",
                        value: input.swc
                    })) && (void 0 === input.swc || "function" == typeof input.swc || Array.isArray(input.swc) && input.swc.map((elem, _index719)=>(null !== elem || _report(_exceptionable, {
                            path: _path + ".swc[" + _index719 + "]",
                            expected: "SwcLoaderOptions",
                            value: elem
                        })) && (void 0 !== elem || _report(_exceptionable, {
                            path: _path + ".swc[" + _index719 + "]",
                            expected: "SwcLoaderOptions",
                            value: elem
                        })) && ("function" == typeof elem || ("object" == typeof elem && null !== elem && false === Array.isArray(elem) || _report(_exceptionable, {
                            path: _path + ".swc[" + _index719 + "]",
                            expected: "SwcLoaderOptions",
                            value: elem
                        })) && _vo43(elem, _path + ".swc[" + _index719 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".swc[" + _index719 + "]",
                            expected: "SwcLoaderOptions",
                            value: elem
                        }))).every((flag)=>flag) || "object" == typeof input.swc && null !== input.swc && false === Array.isArray(input.swc) && _vo43(input.swc, _path + ".swc", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".swc",
                        expected: "(Array<SwcLoaderOptions | ((config: SwcLoaderOptions) => void | SwcLoaderOptions)> | SwcLoaderOptions | undefined)",
                        value: input.swc
                    }) || _report(_exceptionable, {
                        path: _path + ".swc",
                        expected: "(Array<SwcLoaderOptions | ((config: SwcLoaderOptions) => void | SwcLoaderOptions)> | SwcLoaderOptions | undefined)",
                        value: input.swc
                    })),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "bundlerChain",
                            "cssLoader",
                            "cssExtract",
                            "rsdoctor",
                            "rspack",
                            "swc"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo428 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.importLoaders || 0 === input.importLoaders || 1 === input.importLoaders || 2 === input.importLoaders || _report(_exceptionable, {
                        path: _path + ".importLoaders",
                        expected: "(0 | 1 | 2 | undefined)",
                        value: input.importLoaders
                    }),
                    (null !== input.modules || _report(_exceptionable, {
                        path: _path + ".modules",
                        expected: "(CssLoaderModules | boolean | undefined)",
                        value: input.modules
                    })) && (void 0 === input.modules || "boolean" == typeof input.modules || ("object" == typeof input.modules && null !== input.modules && false === Array.isArray(input.modules) || _report(_exceptionable, {
                        path: _path + ".modules",
                        expected: "(CssLoaderModules | boolean | undefined)",
                        value: input.modules
                    })) && _vo429(input.modules, _path + ".modules", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".modules",
                        expected: "(CssLoaderModules | boolean | undefined)",
                        value: input.modules
                    })),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "importLoaders",
                            "modules"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo429 = (input, _path, _exceptionable = true)=>[
                    (null !== input.auto || _report(_exceptionable, {
                        path: _path + ".auto",
                        expected: "(RegExp | boolean | undefined)",
                        value: input.auto
                    })) && (void 0 === input.auto || "function" == typeof input.auto || "boolean" == typeof input.auto || input.auto instanceof RegExp || _report(_exceptionable, {
                        path: _path + ".auto",
                        expected: "(RegExp | boolean | undefined)",
                        value: input.auto
                    })),
                    void 0 === input.exportLocalsConvention || "asIs" === input.exportLocalsConvention || "camelCase" === input.exportLocalsConvention || "camelCaseOnly" === input.exportLocalsConvention || "dashes" === input.exportLocalsConvention || "dashesOnly" === input.exportLocalsConvention || _report(_exceptionable, {
                        path: _path + ".exportLocalsConvention",
                        expected: "(\"asIs\" | \"camelCase\" | \"camelCaseOnly\" | \"dashes\" | \"dashesOnly\" | undefined)",
                        value: input.exportLocalsConvention
                    }),
                    void 0 === input.localIdentName || "string" == typeof input.localIdentName || _report(_exceptionable, {
                        path: _path + ".localIdentName",
                        expected: "(string | undefined)",
                        value: input.localIdentName
                    }),
                    void 0 === input.namedExport || "boolean" == typeof input.namedExport || _report(_exceptionable, {
                        path: _path + ".namedExport",
                        expected: "(boolean | undefined)",
                        value: input.namedExport
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "auto",
                            "exportLocalsConvention",
                            "localIdentName",
                            "namedExport"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo430 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.loaderOptions || ("object" == typeof input.loaderOptions && null !== input.loaderOptions && false === Array.isArray(input.loaderOptions) || _report(_exceptionable, {
                        path: _path + ".loaderOptions",
                        expected: "(CssExtractRspackLoaderOptions.o1 | undefined)",
                        value: input.loaderOptions
                    })) && _vo431(input.loaderOptions, _path + ".loaderOptions", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".loaderOptions",
                        expected: "(CssExtractRspackLoaderOptions.o1 | undefined)",
                        value: input.loaderOptions
                    }),
                    void 0 === input.pluginOptions || ("object" == typeof input.pluginOptions && null !== input.pluginOptions && false === Array.isArray(input.pluginOptions) || _report(_exceptionable, {
                        path: _path + ".pluginOptions",
                        expected: "(CssExtractRspackPluginOptions.o1 | undefined)",
                        value: input.pluginOptions
                    })) && _vo432(input.pluginOptions, _path + ".pluginOptions", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".pluginOptions",
                        expected: "(CssExtractRspackPluginOptions.o1 | undefined)",
                        value: input.pluginOptions
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "loaderOptions",
                            "pluginOptions"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo431 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.esModule || "boolean" == typeof input.esModule || _report(_exceptionable, {
                        path: _path + ".esModule",
                        expected: "(boolean | undefined)",
                        value: input.esModule
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "esModule"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo432 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.ignoreOrder || "boolean" == typeof input.ignoreOrder || _report(_exceptionable, {
                        path: _path + ".ignoreOrder",
                        expected: "(boolean | undefined)",
                        value: input.ignoreOrder
                    }),
                    void 0 === input.pathinfo || "boolean" == typeof input.pathinfo || _report(_exceptionable, {
                        path: _path + ".pathinfo",
                        expected: "(boolean | undefined)",
                        value: input.pathinfo
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "ignoreOrder",
                            "pathinfo"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo433 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.experiments || ("object" == typeof input.experiments && null !== input.experiments && false === Array.isArray(input.experiments) || _report(_exceptionable, {
                        path: _path + ".experiments",
                        expected: "(RsdoctorRspackPluginExperiments | undefined)",
                        value: input.experiments
                    })) && _vo434(input.experiments, _path + ".experiments", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".experiments",
                        expected: "(RsdoctorRspackPluginExperiments | undefined)",
                        value: input.experiments
                    }),
                    void 0 === input.linter || ("object" == typeof input.linter && null !== input.linter && false === Array.isArray(input.linter) || _report(_exceptionable, {
                        path: _path + ".linter",
                        expected: "(Options<[], [RuleData<Config, \"duplicate-package\">, RuleData<Config, \"default-import-check\">, RuleData<Config, \"loader-performance-optimization\">, RuleData<...>, RuleData<...>], []> | undefined)",
                        value: input.linter
                    })) && _vo435(input.linter, _path + ".linter", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".linter",
                        expected: "(Options<[], [RuleData<Config, \"duplicate-package\">, RuleData<Config, \"default-import-check\">, RuleData<Config, \"loader-performance-optimization\">, RuleData<...>, RuleData<...>], []> | undefined)",
                        value: input.linter
                    }),
                    (null !== input.features || _report(_exceptionable, {
                        path: _path + ".features",
                        expected: "(Array<keyof RsdoctorWebpackPluginFeatures> | RsdoctorWebpackPluginFeatures | undefined)",
                        value: input.features
                    })) && (void 0 === input.features || Array.isArray(input.features) && input.features.map((elem, _index720)=>"plugins" === elem || "loader" === elem || "bundle" === elem || "resolver" === elem || "treeShaking" === elem || "lite" === elem || _report(_exceptionable, {
                            path: _path + ".features[" + _index720 + "]",
                            expected: "(\"bundle\" | \"lite\" | \"loader\" | \"plugins\" | \"resolver\" | \"treeShaking\")",
                            value: elem
                        })).every((flag)=>flag) || "object" == typeof input.features && null !== input.features && false === Array.isArray(input.features) && _vo442(input.features, _path + ".features", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".features",
                        expected: "(Array<keyof RsdoctorWebpackPluginFeatures> | RsdoctorWebpackPluginFeatures | undefined)",
                        value: input.features
                    }) || _report(_exceptionable, {
                        path: _path + ".features",
                        expected: "(Array<keyof RsdoctorWebpackPluginFeatures> | RsdoctorWebpackPluginFeatures | undefined)",
                        value: input.features
                    })),
                    void 0 === input.mode || "normal" === input.mode || "lite" === input.mode || "brief" === input.mode || _report(_exceptionable, {
                        path: _path + ".mode",
                        expected: "(\"brief\" | \"lite\" | \"normal\" | undefined)",
                        value: input.mode
                    }),
                    void 0 === input.loaderInterceptorOptions || ("object" == typeof input.loaderInterceptorOptions && null !== input.loaderInterceptorOptions && false === Array.isArray(input.loaderInterceptorOptions) || _report(_exceptionable, {
                        path: _path + ".loaderInterceptorOptions",
                        expected: "(__type.o114 | undefined)",
                        value: input.loaderInterceptorOptions
                    })) && _vo443(input.loaderInterceptorOptions, _path + ".loaderInterceptorOptions", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".loaderInterceptorOptions",
                        expected: "(__type.o114 | undefined)",
                        value: input.loaderInterceptorOptions
                    }),
                    void 0 === input.disableClientServer || "boolean" == typeof input.disableClientServer || _report(_exceptionable, {
                        path: _path + ".disableClientServer",
                        expected: "(boolean | undefined)",
                        value: input.disableClientServer
                    }),
                    void 0 === input.sdkInstance || ("object" == typeof input.sdkInstance && null !== input.sdkInstance || _report(_exceptionable, {
                        path: _path + ".sdkInstance",
                        expected: "(RsdoctorSDK<RsdoctorWebpackSDKOptions> | undefined)",
                        value: input.sdkInstance
                    })) && _vo444(input.sdkInstance, _path + ".sdkInstance", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".sdkInstance",
                        expected: "(RsdoctorSDK<RsdoctorWebpackSDKOptions> | undefined)",
                        value: input.sdkInstance
                    }),
                    void 0 === input.supports || ("object" == typeof input.supports && null !== input.supports && false === Array.isArray(input.supports) || _report(_exceptionable, {
                        path: _path + ".supports",
                        expected: "(ISupport | undefined)",
                        value: input.supports
                    })) && _vo457(input.supports, _path + ".supports", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".supports",
                        expected: "(ISupport | undefined)",
                        value: input.supports
                    }),
                    void 0 === input.port || "number" == typeof input.port || _report(_exceptionable, {
                        path: _path + ".port",
                        expected: "(number | undefined)",
                        value: input.port
                    }),
                    void 0 === input.printLog || ("object" == typeof input.printLog && null !== input.printLog || _report(_exceptionable, {
                        path: _path + ".printLog",
                        expected: "(IPrintLog | undefined)",
                        value: input.printLog
                    })) && _vo447(input.printLog, _path + ".printLog", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".printLog",
                        expected: "(IPrintLog | undefined)",
                        value: input.printLog
                    }),
                    void 0 === input.brief || ("object" == typeof input.brief && null !== input.brief || _report(_exceptionable, {
                        path: _path + ".brief",
                        expected: "(BriefConfig | undefined)",
                        value: input.brief
                    })) && _vo448(input.brief, _path + ".brief", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".brief",
                        expected: "(BriefConfig | undefined)",
                        value: input.brief
                    }),
                    void 0 === input.innerClientPath || "string" == typeof input.innerClientPath || _report(_exceptionable, {
                        path: _path + ".innerClientPath",
                        expected: "(string | undefined)",
                        value: input.innerClientPath
                    }),
                    void 0 === input.output || ("object" == typeof input.output && null !== input.output && false === Array.isArray(input.output) || _report(_exceptionable, {
                        path: _path + ".output",
                        expected: "(__type.o115 | undefined)",
                        value: input.output
                    })) && _vo458(input.output, _path + ".output", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".output",
                        expected: "(__type.o115 | undefined)",
                        value: input.output
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "experiments",
                            "linter",
                            "features",
                            "mode",
                            "loaderInterceptorOptions",
                            "disableClientServer",
                            "sdkInstance",
                            "supports",
                            "port",
                            "printLog",
                            "brief",
                            "innerClientPath",
                            "output"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo434 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.enableNativePlugin || "boolean" == typeof input.enableNativePlugin || _report(_exceptionable, {
                        path: _path + ".enableNativePlugin",
                        expected: "(boolean | undefined)",
                        value: input.enableNativePlugin
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "enableNativePlugin"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo435 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.rules || ("object" == typeof input.rules && null !== input.rules && false === Array.isArray(input.rules) || _report(_exceptionable, {
                        path: _path + ".rules",
                        expected: "(undefined | {} & { [key: string]: RuleConfigItem<unknown>; } & { \"duplicate-package\"?: RuleConfigItem<Config>; \"default-import-check\"?: RuleConfigItem<Config>; \"loader-performance-optimization\"?: RuleConfigItem<...>; \"ecma-version-check\"?: RuleConfigItem<...>; \"cross-chunks-package\"?: RuleConfigItem<...>; })",
                        value: input.rules
                    })) && _vo436(input.rules, _path + ".rules", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".rules",
                        expected: "(undefined | {} & { [key: string]: RuleConfigItem<unknown>; } & { \"duplicate-package\"?: RuleConfigItem<Config>; \"default-import-check\"?: RuleConfigItem<Config>; \"loader-performance-optimization\"?: RuleConfigItem<...>; \"ecma-version-check\"?: RuleConfigItem<...>; \"cross-chunks-package\"?: RuleConfigItem<...>; })",
                        value: input.rules
                    }),
                    void 0 === input.level || "Ignore" === input.level || "Warn" === input.level || "Error" === input.level || _report(_exceptionable, {
                        path: _path + ".level",
                        expected: "(\"Error\" | \"Ignore\" | \"Warn\" | undefined)",
                        value: input.level
                    }),
                    void 0 === input["extends"] || (Array.isArray(input["extends"]) || _report(_exceptionable, {
                        path: _path + "[\"extends\"]",
                        expected: "([] | undefined)",
                        value: input["extends"]
                    })) && (0 === input["extends"].length || _report(_exceptionable, {
                        path: _path + "[\"extends\"]",
                        expected: "[]",
                        value: input["extends"]
                    })) && [].every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + "[\"extends\"]",
                        expected: "([] | undefined)",
                        value: input["extends"]
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "rules",
                            "level",
                            "extends"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo436 = (input, _path, _exceptionable = true)=>[
                    (null !== input["duplicate-package"] || _report(_exceptionable, {
                        path: _path + "[\"duplicate-package\"]",
                        expected: "(\"Error\" | \"Ignore\" | \"Warn\" | \"off\" | \"on\" | [SeverityInput, Config] | undefined)",
                        value: input["duplicate-package"]
                    })) && (void 0 === input["duplicate-package"] || "off" === input["duplicate-package"] || "Ignore" === input["duplicate-package"] || "Warn" === input["duplicate-package"] || "Error" === input["duplicate-package"] || "on" === input["duplicate-package"] || (Array.isArray(input["duplicate-package"]) || _report(_exceptionable, {
                        path: _path + "[\"duplicate-package\"]",
                        expected: "(\"Error\" | \"Ignore\" | \"Warn\" | \"off\" | \"on\" | [SeverityInput, Config] | undefined)",
                        value: input["duplicate-package"]
                    })) && (2 === input["duplicate-package"].length || _report(_exceptionable, {
                        path: _path + "[\"duplicate-package\"]",
                        expected: "[(\"Error\" | \"Ignore\" | \"Warn\" | \"off\" | \"on\"), Config.o2]",
                        value: input["duplicate-package"]
                    })) && [
                        "off" === input["duplicate-package"][0] || "Ignore" === input["duplicate-package"][0] || "Warn" === input["duplicate-package"][0] || "Error" === input["duplicate-package"][0] || "on" === input["duplicate-package"][0] || _report(_exceptionable, {
                            path: _path + "[\"duplicate-package\"][0]",
                            expected: "(\"Error\" | \"Ignore\" | \"Warn\" | \"off\" | \"on\")",
                            value: input["duplicate-package"][0]
                        }),
                        ("object" == typeof input["duplicate-package"][1] && null !== input["duplicate-package"][1] || _report(_exceptionable, {
                            path: _path + "[\"duplicate-package\"][1]",
                            expected: "Config.o2",
                            value: input["duplicate-package"][1]
                        })) && _vo437(input["duplicate-package"][1], _path + "[\"duplicate-package\"][1]", _exceptionable) || _report(_exceptionable, {
                            path: _path + "[\"duplicate-package\"][1]",
                            expected: "Config.o2",
                            value: input["duplicate-package"][1]
                        })
                    ].every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + "[\"duplicate-package\"]",
                        expected: "(\"Error\" | \"Ignore\" | \"Warn\" | \"off\" | \"on\" | [SeverityInput, Config] | undefined)",
                        value: input["duplicate-package"]
                    })),
                    (null !== input["default-import-check"] || _report(_exceptionable, {
                        path: _path + "[\"default-import-check\"]",
                        expected: "(\"Error\" | \"Ignore\" | \"Warn\" | \"off\" | \"on\" | [SeverityInput, Config].o1 | undefined)",
                        value: input["default-import-check"]
                    })) && (void 0 === input["default-import-check"] || "off" === input["default-import-check"] || "Ignore" === input["default-import-check"] || "Warn" === input["default-import-check"] || "Error" === input["default-import-check"] || "on" === input["default-import-check"] || (Array.isArray(input["default-import-check"]) || _report(_exceptionable, {
                        path: _path + "[\"default-import-check\"]",
                        expected: "(\"Error\" | \"Ignore\" | \"Warn\" | \"off\" | \"on\" | [SeverityInput, Config].o1 | undefined)",
                        value: input["default-import-check"]
                    })) && (2 === input["default-import-check"].length || _report(_exceptionable, {
                        path: _path + "[\"default-import-check\"]",
                        expected: "[(\"Error\" | \"Ignore\" | \"Warn\" | \"off\" | \"on\"), Config.o3]",
                        value: input["default-import-check"]
                    })) && [
                        "off" === input["default-import-check"][0] || "Ignore" === input["default-import-check"][0] || "Warn" === input["default-import-check"][0] || "Error" === input["default-import-check"][0] || "on" === input["default-import-check"][0] || _report(_exceptionable, {
                            path: _path + "[\"default-import-check\"][0]",
                            expected: "(\"Error\" | \"Ignore\" | \"Warn\" | \"off\" | \"on\")",
                            value: input["default-import-check"][0]
                        }),
                        ("object" == typeof input["default-import-check"][1] && null !== input["default-import-check"][1] || _report(_exceptionable, {
                            path: _path + "[\"default-import-check\"][1]",
                            expected: "Config.o3",
                            value: input["default-import-check"][1]
                        })) && _vo438(input["default-import-check"][1], _path + "[\"default-import-check\"][1]", _exceptionable) || _report(_exceptionable, {
                            path: _path + "[\"default-import-check\"][1]",
                            expected: "Config.o3",
                            value: input["default-import-check"][1]
                        })
                    ].every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + "[\"default-import-check\"]",
                        expected: "(\"Error\" | \"Ignore\" | \"Warn\" | \"off\" | \"on\" | [SeverityInput, Config].o1 | undefined)",
                        value: input["default-import-check"]
                    })),
                    (null !== input["loader-performance-optimization"] || _report(_exceptionable, {
                        path: _path + "[\"loader-performance-optimization\"]",
                        expected: "(\"Error\" | \"Ignore\" | \"Warn\" | \"off\" | \"on\" | [SeverityInput, Config].o2 | undefined)",
                        value: input["loader-performance-optimization"]
                    })) && (void 0 === input["loader-performance-optimization"] || "off" === input["loader-performance-optimization"] || "Ignore" === input["loader-performance-optimization"] || "Warn" === input["loader-performance-optimization"] || "Error" === input["loader-performance-optimization"] || "on" === input["loader-performance-optimization"] || (Array.isArray(input["loader-performance-optimization"]) || _report(_exceptionable, {
                        path: _path + "[\"loader-performance-optimization\"]",
                        expected: "(\"Error\" | \"Ignore\" | \"Warn\" | \"off\" | \"on\" | [SeverityInput, Config].o2 | undefined)",
                        value: input["loader-performance-optimization"]
                    })) && (2 === input["loader-performance-optimization"].length || _report(_exceptionable, {
                        path: _path + "[\"loader-performance-optimization\"]",
                        expected: "[(\"Error\" | \"Ignore\" | \"Warn\" | \"off\" | \"on\"), Config.o4]",
                        value: input["loader-performance-optimization"]
                    })) && [
                        "off" === input["loader-performance-optimization"][0] || "Ignore" === input["loader-performance-optimization"][0] || "Warn" === input["loader-performance-optimization"][0] || "Error" === input["loader-performance-optimization"][0] || "on" === input["loader-performance-optimization"][0] || _report(_exceptionable, {
                            path: _path + "[\"loader-performance-optimization\"][0]",
                            expected: "(\"Error\" | \"Ignore\" | \"Warn\" | \"off\" | \"on\")",
                            value: input["loader-performance-optimization"][0]
                        }),
                        ("object" == typeof input["loader-performance-optimization"][1] && null !== input["loader-performance-optimization"][1] && false === Array.isArray(input["loader-performance-optimization"][1]) || _report(_exceptionable, {
                            path: _path + "[\"loader-performance-optimization\"][1]",
                            expected: "Config.o4",
                            value: input["loader-performance-optimization"][1]
                        })) && _vo439(input["loader-performance-optimization"][1], _path + "[\"loader-performance-optimization\"][1]", _exceptionable) || _report(_exceptionable, {
                            path: _path + "[\"loader-performance-optimization\"][1]",
                            expected: "Config.o4",
                            value: input["loader-performance-optimization"][1]
                        })
                    ].every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + "[\"loader-performance-optimization\"]",
                        expected: "(\"Error\" | \"Ignore\" | \"Warn\" | \"off\" | \"on\" | [SeverityInput, Config].o2 | undefined)",
                        value: input["loader-performance-optimization"]
                    })),
                    (null !== input["ecma-version-check"] || _report(_exceptionable, {
                        path: _path + "[\"ecma-version-check\"]",
                        expected: "(\"Error\" | \"Ignore\" | \"Warn\" | \"off\" | \"on\" | [SeverityInput, Config].o3 | undefined)",
                        value: input["ecma-version-check"]
                    })) && (void 0 === input["ecma-version-check"] || "off" === input["ecma-version-check"] || "Ignore" === input["ecma-version-check"] || "Warn" === input["ecma-version-check"] || "Error" === input["ecma-version-check"] || "on" === input["ecma-version-check"] || (Array.isArray(input["ecma-version-check"]) || _report(_exceptionable, {
                        path: _path + "[\"ecma-version-check\"]",
                        expected: "(\"Error\" | \"Ignore\" | \"Warn\" | \"off\" | \"on\" | [SeverityInput, Config].o3 | undefined)",
                        value: input["ecma-version-check"]
                    })) && (2 === input["ecma-version-check"].length || _report(_exceptionable, {
                        path: _path + "[\"ecma-version-check\"]",
                        expected: "[(\"Error\" | \"Ignore\" | \"Warn\" | \"off\" | \"on\"), Config.o5]",
                        value: input["ecma-version-check"]
                    })) && [
                        "off" === input["ecma-version-check"][0] || "Ignore" === input["ecma-version-check"][0] || "Warn" === input["ecma-version-check"][0] || "Error" === input["ecma-version-check"][0] || "on" === input["ecma-version-check"][0] || _report(_exceptionable, {
                            path: _path + "[\"ecma-version-check\"][0]",
                            expected: "(\"Error\" | \"Ignore\" | \"Warn\" | \"off\" | \"on\")",
                            value: input["ecma-version-check"][0]
                        }),
                        ("object" == typeof input["ecma-version-check"][1] && null !== input["ecma-version-check"][1] && false === Array.isArray(input["ecma-version-check"][1]) || _report(_exceptionable, {
                            path: _path + "[\"ecma-version-check\"][1]",
                            expected: "Config.o5",
                            value: input["ecma-version-check"][1]
                        })) && _vo440(input["ecma-version-check"][1], _path + "[\"ecma-version-check\"][1]", _exceptionable) || _report(_exceptionable, {
                            path: _path + "[\"ecma-version-check\"][1]",
                            expected: "Config.o5",
                            value: input["ecma-version-check"][1]
                        })
                    ].every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + "[\"ecma-version-check\"]",
                        expected: "(\"Error\" | \"Ignore\" | \"Warn\" | \"off\" | \"on\" | [SeverityInput, Config].o3 | undefined)",
                        value: input["ecma-version-check"]
                    })),
                    (null !== input["cross-chunks-package"] || _report(_exceptionable, {
                        path: _path + "[\"cross-chunks-package\"]",
                        expected: "(\"Error\" | \"Ignore\" | \"Warn\" | \"off\" | \"on\" | [SeverityInput, Config].o4 | undefined)",
                        value: input["cross-chunks-package"]
                    })) && (void 0 === input["cross-chunks-package"] || "off" === input["cross-chunks-package"] || "Ignore" === input["cross-chunks-package"] || "Warn" === input["cross-chunks-package"] || "Error" === input["cross-chunks-package"] || "on" === input["cross-chunks-package"] || (Array.isArray(input["cross-chunks-package"]) || _report(_exceptionable, {
                        path: _path + "[\"cross-chunks-package\"]",
                        expected: "(\"Error\" | \"Ignore\" | \"Warn\" | \"off\" | \"on\" | [SeverityInput, Config].o4 | undefined)",
                        value: input["cross-chunks-package"]
                    })) && (2 === input["cross-chunks-package"].length || _report(_exceptionable, {
                        path: _path + "[\"cross-chunks-package\"]",
                        expected: "[(\"Error\" | \"Ignore\" | \"Warn\" | \"off\" | \"on\"), Config.o6]",
                        value: input["cross-chunks-package"]
                    })) && [
                        "off" === input["cross-chunks-package"][0] || "Ignore" === input["cross-chunks-package"][0] || "Warn" === input["cross-chunks-package"][0] || "Error" === input["cross-chunks-package"][0] || "on" === input["cross-chunks-package"][0] || _report(_exceptionable, {
                            path: _path + "[\"cross-chunks-package\"][0]",
                            expected: "(\"Error\" | \"Ignore\" | \"Warn\" | \"off\" | \"on\")",
                            value: input["cross-chunks-package"][0]
                        }),
                        ("object" == typeof input["cross-chunks-package"][1] && null !== input["cross-chunks-package"][1] || _report(_exceptionable, {
                            path: _path + "[\"cross-chunks-package\"][1]",
                            expected: "Config.o6",
                            value: input["cross-chunks-package"][1]
                        })) && _vo441(input["cross-chunks-package"][1], _path + "[\"cross-chunks-package\"][1]", _exceptionable) || _report(_exceptionable, {
                            path: _path + "[\"cross-chunks-package\"][1]",
                            expected: "Config.o6",
                            value: input["cross-chunks-package"][1]
                        })
                    ].every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + "[\"cross-chunks-package\"]",
                        expected: "(\"Error\" | \"Ignore\" | \"Warn\" | \"off\" | \"on\" | [SeverityInput, Config].o4 | undefined)",
                        value: input["cross-chunks-package"]
                    })),
                    false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "duplicate-package",
                            "default-import-check",
                            "loader-performance-optimization",
                            "ecma-version-check",
                            "cross-chunks-package"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return (null !== value || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(\"Error\" | \"Ignore\" | \"Warn\" | \"off\" | \"on\" | [SeverityInput, unknown])",
                            value: value
                        })) && (void 0 !== value || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(\"Error\" | \"Ignore\" | \"Warn\" | \"off\" | \"on\" | [SeverityInput, unknown])",
                            value: value
                        })) && ("off" === value || "Ignore" === value || "Warn" === value || "Error" === value || "on" === value || (Array.isArray(value) || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(\"Error\" | \"Ignore\" | \"Warn\" | \"off\" | \"on\" | [SeverityInput, unknown])",
                            value: value
                        })) && (2 === value.length || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "[(\"Error\" | \"Ignore\" | \"Warn\" | \"off\" | \"on\"), any]",
                            value: value
                        })) && [
                            "off" === value[0] || "Ignore" === value[0] || "Warn" === value[0] || "Error" === value[0] || "on" === value[0] || _report(_exceptionable, {
                                path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key) + "[0]",
                                expected: "(\"Error\" | \"Ignore\" | \"Warn\" | \"off\" | \"on\")",
                                value: value[0]
                            }),
                            true
                        ].every((flag)=>flag) || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(\"Error\" | \"Ignore\" | \"Warn\" | \"off\" | \"on\" | [SeverityInput, unknown])",
                            value: value
                        }));
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo437 = (input, _path, _exceptionable = true)=>[
                    "null" === input.checkVersion || "prerelease" === input.checkVersion || "prepatch" === input.checkVersion || "patch" === input.checkVersion || "preminor" === input.checkVersion || "minor" === input.checkVersion || "premajor" === input.checkVersion || "major" === input.checkVersion || _report(_exceptionable, {
                        path: _path + ".checkVersion",
                        expected: "(\"major\" | \"minor\" | \"null\" | \"patch\" | \"premajor\" | \"preminor\" | \"prepatch\" | \"prerelease\")",
                        value: input.checkVersion
                    }),
                    (Array.isArray(input.ignore) || _report(_exceptionable, {
                        path: _path + ".ignore",
                        expected: "Array<string>",
                        value: input.ignore
                    })) && input.ignore.map((elem, _index721)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".ignore[" + _index721 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".ignore",
                        expected: "Array<string>",
                        value: input.ignore
                    }),
                    2 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "checkVersion",
                            "ignore"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo438 = (input, _path, _exceptionable = true)=>[
                    (Array.isArray(input.ignore) || _report(_exceptionable, {
                        path: _path + ".ignore",
                        expected: "Array<string>",
                        value: input.ignore
                    })) && input.ignore.map((elem, _index722)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".ignore[" + _index722 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".ignore",
                        expected: "Array<string>",
                        value: input.ignore
                    }),
                    1 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "ignore"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo439 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.ignore || (Array.isArray(input.ignore) || _report(_exceptionable, {
                        path: _path + ".ignore",
                        expected: "(Array<string | RegExp> | undefined)",
                        value: input.ignore
                    })) && input.ignore.map((elem, _index723)=>(null !== elem || _report(_exceptionable, {
                            path: _path + ".ignore[" + _index723 + "]",
                            expected: "(RegExp | string)",
                            value: elem
                        })) && (void 0 !== elem || _report(_exceptionable, {
                            path: _path + ".ignore[" + _index723 + "]",
                            expected: "(RegExp | string)",
                            value: elem
                        })) && ("string" == typeof elem || elem instanceof RegExp || _report(_exceptionable, {
                            path: _path + ".ignore[" + _index723 + "]",
                            expected: "(RegExp | string)",
                            value: elem
                        }))).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".ignore",
                        expected: "(Array<string | RegExp> | undefined)",
                        value: input.ignore
                    }),
                    void 0 === input.threshold || "number" == typeof input.threshold || _report(_exceptionable, {
                        path: _path + ".threshold",
                        expected: "(number | undefined)",
                        value: input.threshold
                    }),
                    void 0 === input.extensions || (Array.isArray(input.extensions) || _report(_exceptionable, {
                        path: _path + ".extensions",
                        expected: "(Array<string | RegExp> | undefined)",
                        value: input.extensions
                    })) && input.extensions.map((elem, _index724)=>(null !== elem || _report(_exceptionable, {
                            path: _path + ".extensions[" + _index724 + "]",
                            expected: "(RegExp | string)",
                            value: elem
                        })) && (void 0 !== elem || _report(_exceptionable, {
                            path: _path + ".extensions[" + _index724 + "]",
                            expected: "(RegExp | string)",
                            value: elem
                        })) && ("string" == typeof elem || elem instanceof RegExp || _report(_exceptionable, {
                            path: _path + ".extensions[" + _index724 + "]",
                            expected: "(RegExp | string)",
                            value: elem
                        }))).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".extensions",
                        expected: "(Array<string | RegExp> | undefined)",
                        value: input.extensions
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "ignore",
                            "threshold",
                            "extensions"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo440 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.targets || (Array.isArray(input.targets) || _report(_exceptionable, {
                        path: _path + ".targets",
                        expected: "(Array<string> | undefined)",
                        value: input.targets
                    })) && input.targets.map((elem, _index725)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".targets[" + _index725 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".targets",
                        expected: "(Array<string> | undefined)",
                        value: input.targets
                    }),
                    (null !== input.exclude || _report(_exceptionable, {
                        path: _path + ".exclude",
                        expected: "(Array<RegExp> | RegExp | undefined)",
                        value: input.exclude
                    })) && (void 0 === input.exclude || input.exclude instanceof RegExp || (Array.isArray(input.exclude) || _report(_exceptionable, {
                        path: _path + ".exclude",
                        expected: "(Array<RegExp> | RegExp | undefined)",
                        value: input.exclude
                    })) && input.exclude.map((elem, _index726)=>elem instanceof RegExp || _report(_exceptionable, {
                            path: _path + ".exclude[" + _index726 + "]",
                            expected: "RegExp",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".exclude",
                        expected: "(Array<RegExp> | RegExp | undefined)",
                        value: input.exclude
                    })),
                    (null !== input.excludeOutput || _report(_exceptionable, {
                        path: _path + ".excludeOutput",
                        expected: "(Array<RegExp> | RegExp | undefined)",
                        value: input.excludeOutput
                    })) && (void 0 === input.excludeOutput || input.excludeOutput instanceof RegExp || (Array.isArray(input.excludeOutput) || _report(_exceptionable, {
                        path: _path + ".excludeOutput",
                        expected: "(Array<RegExp> | RegExp | undefined)",
                        value: input.excludeOutput
                    })) && input.excludeOutput.map((elem, _index727)=>elem instanceof RegExp || _report(_exceptionable, {
                            path: _path + ".excludeOutput[" + _index727 + "]",
                            expected: "RegExp",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".excludeOutput",
                        expected: "(Array<RegExp> | RegExp | undefined)",
                        value: input.excludeOutput
                    })),
                    void 0 === input.ecmaVersion || true === _vv728.has(input.ecmaVersion) || _report(_exceptionable, {
                        path: _path + ".ecmaVersion",
                        expected: "(\"latest\" | 10 | 11 | 12 | 13 | 14 | 15 | 16 | 17 | 2015 | 2016 | 2017 | 2018 | 2019 | 2020 | 2021 | 2022 | 2023 | 2024 | 2025 | 2026 | 3 | 5 | 6 | 7 | 8 | 9 | undefined)",
                        value: input.ecmaVersion
                    }),
                    void 0 === input.excludeErrorLogs || (Array.isArray(input.excludeErrorLogs) || _report(_exceptionable, {
                        path: _path + ".excludeErrorLogs",
                        expected: "(Array<keyof SyntaxErrorInfo> | undefined)",
                        value: input.excludeErrorLogs
                    })) && input.excludeErrorLogs.map((elem, _index729)=>"output" === elem || "code" === elem || "source" === elem || "reason" === elem || _report(_exceptionable, {
                            path: _path + ".excludeErrorLogs[" + _index729 + "]",
                            expected: "(\"code\" | \"output\" | \"reason\" | \"source\")",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".excludeErrorLogs",
                        expected: "(Array<keyof SyntaxErrorInfo> | undefined)",
                        value: input.excludeErrorLogs
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "targets",
                            "exclude",
                            "excludeOutput",
                            "ecmaVersion",
                            "excludeErrorLogs"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo441 = (input, _path, _exceptionable = true)=>[
                    (Array.isArray(input.ignore) || _report(_exceptionable, {
                        path: _path + ".ignore",
                        expected: "Array<string>",
                        value: input.ignore
                    })) && input.ignore.map((elem, _index730)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".ignore[" + _index730 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".ignore",
                        expected: "Array<string>",
                        value: input.ignore
                    }),
                    1 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "ignore"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo442 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.loader || "boolean" == typeof input.loader || _report(_exceptionable, {
                        path: _path + ".loader",
                        expected: "(boolean | undefined)",
                        value: input.loader
                    }),
                    void 0 === input.plugins || "boolean" == typeof input.plugins || _report(_exceptionable, {
                        path: _path + ".plugins",
                        expected: "(boolean | undefined)",
                        value: input.plugins
                    }),
                    void 0 === input.resolver || "boolean" == typeof input.resolver || _report(_exceptionable, {
                        path: _path + ".resolver",
                        expected: "(boolean | undefined)",
                        value: input.resolver
                    }),
                    void 0 === input.bundle || "boolean" == typeof input.bundle || _report(_exceptionable, {
                        path: _path + ".bundle",
                        expected: "(boolean | undefined)",
                        value: input.bundle
                    }),
                    void 0 === input.treeShaking || "boolean" == typeof input.treeShaking || _report(_exceptionable, {
                        path: _path + ".treeShaking",
                        expected: "(boolean | undefined)",
                        value: input.treeShaking
                    }),
                    void 0 === input.lite || "boolean" == typeof input.lite || _report(_exceptionable, {
                        path: _path + ".lite",
                        expected: "(boolean | undefined)",
                        value: input.lite
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "loader",
                            "plugins",
                            "resolver",
                            "bundle",
                            "treeShaking",
                            "lite"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo443 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.skipLoaders || (Array.isArray(input.skipLoaders) || _report(_exceptionable, {
                        path: _path + ".skipLoaders",
                        expected: "(Array<string> | undefined)",
                        value: input.skipLoaders
                    })) && input.skipLoaders.map((elem, _index731)=>"string" == typeof elem || _report(_exceptionable, {
                            path: _path + ".skipLoaders[" + _index731 + "]",
                            expected: "string",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".skipLoaders",
                        expected: "(Array<string> | undefined)",
                        value: input.skipLoaders
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "skipLoaders"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo444 = (input, _path, _exceptionable = true)=>[
                    ("object" == typeof input.server && null !== input.server || _report(_exceptionable, {
                        path: _path + ".server",
                        expected: "RsdoctorServer",
                        value: input.server
                    })) && _vo445(input.server, _path + ".server", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".server",
                        expected: "RsdoctorServer",
                        value: input.server
                    }),
                    void 0 === input.extraConfig || ("object" == typeof input.extraConfig && null !== input.extraConfig && false === Array.isArray(input.extraConfig) || _report(_exceptionable, {
                        path: _path + ".extraConfig",
                        expected: "(SDKOptionsType | undefined)",
                        value: input.extraConfig
                    })) && _vo446(input.extraConfig, _path + ".extraConfig", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".extraConfig",
                        expected: "(SDKOptionsType | undefined)",
                        value: input.extraConfig
                    }),
                    0 === input.type || 1 === input.type || 2 === input.type || 3 === input.type || 4 === input.type || _report(_exceptionable, {
                        path: _path + ".type",
                        expected: "(0 | 1 | 2 | 3 | 4)",
                        value: input.type
                    }),
                    "string" == typeof input._root || _report(_exceptionable, {
                        path: _path + "._root",
                        expected: "string",
                        value: input._root
                    }),
                    true,
                    true,
                    true,
                    true,
                    true,
                    true,
                    true,
                    true,
                    true,
                    true,
                    true,
                    true,
                    "string" == typeof input._name || _report(_exceptionable, {
                        path: _path + "._name",
                        expected: "string",
                        value: input._name
                    }),
                    "string" == typeof input.hash || _report(_exceptionable, {
                        path: _path + ".hash",
                        expected: "string",
                        value: input.hash
                    }),
                    "string" == typeof input.root || _report(_exceptionable, {
                        path: _path + ".root",
                        expected: "string",
                        value: input.root
                    }),
                    "number" == typeof input.pid || _report(_exceptionable, {
                        path: _path + ".pid",
                        expected: "number",
                        value: input.pid
                    }),
                    ("object" == typeof input.hooks && null !== input.hooks || _report(_exceptionable, {
                        path: _path + ".hooks",
                        expected: "Hooks",
                        value: input.hooks
                    })) && _vo449(input.hooks, _path + ".hooks", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".hooks",
                        expected: "Hooks",
                        value: input.hooks
                    }),
                    ("object" == typeof input._envinfo && null !== input._envinfo || _report(_exceptionable, {
                        path: _path + "._envinfo",
                        expected: "EnvInfo",
                        value: input._envinfo
                    })) && _vo452(input._envinfo, _path + "._envinfo", _exceptionable) || _report(_exceptionable, {
                        path: _path + "._envinfo",
                        expected: "EnvInfo",
                        value: input._envinfo
                    }),
                    true,
                    true,
                    "string" == typeof input.diskManifestPath || _report(_exceptionable, {
                        path: _path + ".diskManifestPath",
                        expected: "string",
                        value: input.diskManifestPath
                    }),
                    void 0 === input.cloudData || ("object" == typeof input.cloudData && null !== input.cloudData || _report(_exceptionable, {
                        path: _path + ".cloudData",
                        expected: "(RsdoctorManifestWithShardingFiles | undefined)",
                        value: input.cloudData
                    })) && _vo453(input.cloudData, _path + ".cloudData", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".cloudData",
                        expected: "(RsdoctorManifestWithShardingFiles | undefined)",
                        value: input.cloudData
                    }),
                    24 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "server",
                            "extraConfig",
                            "type",
                            "_root",
                            "_summary",
                            "_configs",
                            "_errors",
                            "_loader",
                            "_loaderStart",
                            "_resolver",
                            "_plugin",
                            "_moduleGraph",
                            "_chunkGraph",
                            "_rawSourceMapCache",
                            "_sourceMap",
                            "_packageGraph",
                            "_name",
                            "hash",
                            "root",
                            "pid",
                            "hooks",
                            "_envinfo",
                            "_clientRoutes",
                            "_outputDir",
                            "diskManifestPath",
                            "cloudData"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo445 = (input, _path, _exceptionable = true)=>[
                    "number" == typeof input.port || _report(_exceptionable, {
                        path: _path + ".port",
                        expected: "number",
                        value: input.port
                    }),
                    true,
                    true,
                    true,
                    4 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "port",
                            "get",
                            "post",
                            "dispose"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo446 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.innerClientPath || "string" == typeof input.innerClientPath || _report(_exceptionable, {
                        path: _path + ".innerClientPath",
                        expected: "(string | undefined)",
                        value: input.innerClientPath
                    }),
                    void 0 === input.disableClientServer || "boolean" == typeof input.disableClientServer || _report(_exceptionable, {
                        path: _path + ".disableClientServer",
                        expected: "(boolean | undefined)",
                        value: input.disableClientServer
                    }),
                    void 0 === input.noServer || "boolean" == typeof input.noServer || _report(_exceptionable, {
                        path: _path + ".noServer",
                        expected: "(boolean | undefined)",
                        value: input.noServer
                    }),
                    void 0 === input.printLog || ("object" == typeof input.printLog && null !== input.printLog || _report(_exceptionable, {
                        path: _path + ".printLog",
                        expected: "(IPrintLog | undefined)",
                        value: input.printLog
                    })) && _vo447(input.printLog, _path + ".printLog", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".printLog",
                        expected: "(IPrintLog | undefined)",
                        value: input.printLog
                    }),
                    void 0 === input.mode || "normal" === input.mode || "lite" === input.mode || "brief" === input.mode || _report(_exceptionable, {
                        path: _path + ".mode",
                        expected: "(\"brief\" | \"lite\" | \"normal\" | undefined)",
                        value: input.mode
                    }),
                    void 0 === input.brief || ("object" == typeof input.brief && null !== input.brief || _report(_exceptionable, {
                        path: _path + ".brief",
                        expected: "(BriefConfig | undefined)",
                        value: input.brief
                    })) && _vo448(input.brief, _path + ".brief", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".brief",
                        expected: "(BriefConfig | undefined)",
                        value: input.brief
                    }),
                    void 0 === input.compressData || "boolean" == typeof input.compressData || _report(_exceptionable, {
                        path: _path + ".compressData",
                        expected: "(boolean | undefined)",
                        value: input.compressData
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "innerClientPath",
                            "disableClientServer",
                            "noServer",
                            "printLog",
                            "mode",
                            "brief",
                            "compressData"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo447 = (input, _path, _exceptionable = true)=>[
                    "boolean" == typeof input.serverUrls || _report(_exceptionable, {
                        path: _path + ".serverUrls",
                        expected: "boolean",
                        value: input.serverUrls
                    }),
                    1 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "serverUrls"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo448 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.reportHtmlName || "string" == typeof input.reportHtmlName || _report(_exceptionable, {
                        path: _path + ".reportHtmlName",
                        expected: "(string | undefined)",
                        value: input.reportHtmlName
                    }),
                    "boolean" == typeof input.writeDataJson || _report(_exceptionable, {
                        path: _path + ".writeDataJson",
                        expected: "boolean",
                        value: input.writeDataJson
                    }),
                    1 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "reportHtmlName",
                            "writeDataJson"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo449 = (input, _path, _exceptionable = true)=>[
                    ("object" == typeof input.afterSaveManifest && null !== input.afterSaveManifest || _report(_exceptionable, {
                        path: _path + ".afterSaveManifest",
                        expected: "AsyncSeriesHook<[{ manifestWithShardingFiles: RsdoctorManifestWithShardingFiles; manifestDiskPath: string; manifestCloudPath?: string; }], UnsetAdditionalOptions>",
                        value: input.afterSaveManifest
                    })) && _vo450(input.afterSaveManifest, _path + ".afterSaveManifest", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".afterSaveManifest",
                        expected: "AsyncSeriesHook<[{ manifestWithShardingFiles: RsdoctorManifestWithShardingFiles; manifestDiskPath: string; manifestCloudPath?: string; }], UnsetAdditionalOptions>",
                        value: input.afterSaveManifest
                    }),
                    1 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "afterSaveManifest"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo450 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.name || "string" == typeof input.name || _report(_exceptionable, {
                        path: _path + ".name",
                        expected: "(string | undefined)",
                        value: input.name
                    }),
                    (Array.isArray(input.interceptors) || _report(_exceptionable, {
                        path: _path + ".interceptors",
                        expected: "Array<HookInterceptor<[{ manifestWithShardingFiles: RsdoctorManifestWithShardingFiles; manifestDiskPath: string; manifestCloudPath?: string; }], void, UnsetAdditionalOptions>>",
                        value: input.interceptors
                    })) && input.interceptors.map((elem, _index732)=>("object" == typeof elem && null !== elem && false === Array.isArray(elem) || _report(_exceptionable, {
                            path: _path + ".interceptors[" + _index732 + "]",
                            expected: "HookInterceptor<[{ manifestWithShardingFiles: RsdoctorManifestWithShardingFiles; manifestDiskPath: string; manifestCloudPath?: string; }], void, UnsetAdditionalOptions>",
                            value: elem
                        })) && _vo451(elem, _path + ".interceptors[" + _index732 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".interceptors[" + _index732 + "]",
                            expected: "HookInterceptor<[{ manifestWithShardingFiles: RsdoctorManifestWithShardingFiles; manifestDiskPath: string; manifestCloudPath?: string; }], void, UnsetAdditionalOptions>",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".interceptors",
                        expected: "Array<HookInterceptor<[{ manifestWithShardingFiles: RsdoctorManifestWithShardingFiles; manifestDiskPath: string; manifestCloudPath?: string; }], void, UnsetAdditionalOptions>>",
                        value: input.interceptors
                    }),
                    (Array.isArray(input.taps) || _report(_exceptionable, {
                        path: _path + ".taps",
                        expected: "Array<FullTap>",
                        value: input.taps
                    })) && input.taps.map((elem, _index733)=>("object" == typeof elem && null !== elem || _report(_exceptionable, {
                            path: _path + ".taps[" + _index733 + "]",
                            expected: "FullTap",
                            value: elem
                        })) && _vo272(elem, _path + ".taps[" + _index733 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".taps[" + _index733 + "]",
                            expected: "FullTap",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".taps",
                        expected: "Array<FullTap>",
                        value: input.taps
                    }),
                    2 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "name",
                            "interceptors",
                            "taps"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo451 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.name || "string" == typeof input.name || _report(_exceptionable, {
                        path: _path + ".name",
                        expected: "(string | undefined)",
                        value: input.name
                    }),
                    void 0 === input.tap || true,
                    void 0 === input.call || true,
                    void 0 === input.loop || true,
                    void 0 === input.error || true,
                    void 0 === input.result || true,
                    void 0 === input.done || true,
                    void 0 === input.register || true,
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "name",
                            "tap",
                            "call",
                            "loop",
                            "error",
                            "result",
                            "done",
                            "register"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo452 = (input, _path, _exceptionable = true)=>[
                    "string" == typeof input.os || _report(_exceptionable, {
                        path: _path + ".os",
                        expected: "string",
                        value: input.os
                    }),
                    "string" == typeof input.cpu || _report(_exceptionable, {
                        path: _path + ".cpu",
                        expected: "string",
                        value: input.cpu
                    }),
                    "string" == typeof input.memory || _report(_exceptionable, {
                        path: _path + ".memory",
                        expected: "string",
                        value: input.memory
                    }),
                    "string" == typeof input.nodeVersion || _report(_exceptionable, {
                        path: _path + ".nodeVersion",
                        expected: "string",
                        value: input.nodeVersion
                    }),
                    "string" == typeof input.yarnVersion || _report(_exceptionable, {
                        path: _path + ".yarnVersion",
                        expected: "string",
                        value: input.yarnVersion
                    }),
                    "string" == typeof input.npmVersion || _report(_exceptionable, {
                        path: _path + ".npmVersion",
                        expected: "string",
                        value: input.npmVersion
                    }),
                    "string" == typeof input.pnpmVersion || _report(_exceptionable, {
                        path: _path + ".pnpmVersion",
                        expected: "string",
                        value: input.pnpmVersion
                    }),
                    false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "os",
                            "cpu",
                            "memory",
                            "nodeVersion",
                            "yarnVersion",
                            "npmVersion",
                            "pnpmVersion"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return "string" == typeof value || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "string",
                            value: value
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo453 = (input, _path, _exceptionable = true)=>[
                    ("object" == typeof input.data && null !== input.data && false === Array.isArray(input.data) || _report(_exceptionable, {
                        path: _path + ".data",
                        expected: "Record<keyof RsdoctorManifestData, string | string[]>",
                        value: input.data
                    })) && _vo454(input.data, _path + ".data", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".data",
                        expected: "Record<keyof RsdoctorManifestData, string | string[]>",
                        value: input.data
                    }),
                    void 0 === input.cloudData || ("object" == typeof input.cloudData && null !== input.cloudData && false === Array.isArray(input.cloudData) || _report(_exceptionable, {
                        path: _path + ".cloudData",
                        expected: "(Record<keyof RsdoctorManifestData, string | string[]> | undefined)",
                        value: input.cloudData
                    })) && _vo454(input.cloudData, _path + ".cloudData", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".cloudData",
                        expected: "(Record<keyof RsdoctorManifestData, string | string[]> | undefined)",
                        value: input.cloudData
                    }),
                    void 0 === input.__LOCAL__SERVER__ || "boolean" == typeof input.__LOCAL__SERVER__ || _report(_exceptionable, {
                        path: _path + ".__LOCAL__SERVER__",
                        expected: "(boolean | undefined)",
                        value: input.__LOCAL__SERVER__
                    }),
                    void 0 === input.__SOCKET__PORT__ || "string" == typeof input.__SOCKET__PORT__ || _report(_exceptionable, {
                        path: _path + ".__SOCKET__PORT__",
                        expected: "(string | undefined)",
                        value: input.__SOCKET__PORT__
                    }),
                    void 0 === input.__SOCKET__URL__ || "string" == typeof input.__SOCKET__URL__ || _report(_exceptionable, {
                        path: _path + ".__SOCKET__URL__",
                        expected: "(string | undefined)",
                        value: input.__SOCKET__URL__
                    }),
                    ("object" == typeof input.client && null !== input.client || _report(_exceptionable, {
                        path: _path + ".client",
                        expected: "RsdoctorManifestClient",
                        value: input.client
                    })) && _vo455(input.client, _path + ".client", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".client",
                        expected: "RsdoctorManifestClient",
                        value: input.client
                    }),
                    void 0 === input.name || "string" == typeof input.name || _report(_exceptionable, {
                        path: _path + ".name",
                        expected: "(string | undefined)",
                        value: input.name
                    }),
                    void 0 === input.cloudManifestUrl || "string" == typeof input.cloudManifestUrl || _report(_exceptionable, {
                        path: _path + ".cloudManifestUrl",
                        expected: "(string | undefined)",
                        value: input.cloudManifestUrl
                    }),
                    void 0 === input.series || (Array.isArray(input.series) || _report(_exceptionable, {
                        path: _path + ".series",
                        expected: "(Array<RsdoctorManifestSeriesData> | undefined)",
                        value: input.series
                    })) && input.series.map((elem, _index734)=>("object" == typeof elem && null !== elem || _report(_exceptionable, {
                            path: _path + ".series[" + _index734 + "]",
                            expected: "RsdoctorManifestSeriesData",
                            value: elem
                        })) && _vo456(elem, _path + ".series[" + _index734 + "]", _exceptionable) || _report(_exceptionable, {
                            path: _path + ".series[" + _index734 + "]",
                            expected: "RsdoctorManifestSeriesData",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".series",
                        expected: "(Array<RsdoctorManifestSeriesData> | undefined)",
                        value: input.series
                    }),
                    2 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "data",
                            "cloudData",
                            "__LOCAL__SERVER__",
                            "__SOCKET__PORT__",
                            "__SOCKET__URL__",
                            "client",
                            "name",
                            "cloudManifestUrl",
                            "series"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo454 = (input, _path, _exceptionable = true)=>[
                    false === _exceptionable || Object.keys(input).map((key)=>{
                        const value = input[key];
                        if (void 0 === value) return true;
                        return (null !== value || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(Array<string> | string)",
                            value: value
                        })) && (void 0 !== value || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(Array<string> | string)",
                            value: value
                        })) && ("string" == typeof value || (Array.isArray(value) || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(Array<string> | string)",
                            value: value
                        })) && value.map((elem, _index735)=>"string" == typeof elem || _report(_exceptionable, {
                                path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key) + "[" + _index735 + "]",
                                expected: "string",
                                value: elem
                            })).every((flag)=>flag) || _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "(Array<string> | string)",
                            value: value
                        }));
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo455 = (input, _path, _exceptionable = true)=>[
                    (Array.isArray(input.enableRoutes) || _report(_exceptionable, {
                        path: _path + ".enableRoutes",
                        expected: "Array<RsdoctorManifestClientRoutes>",
                        value: input.enableRoutes
                    })) && input.enableRoutes.map((elem, _index737)=>"Overall" === elem || "Compile.WebpackLoaders" === elem || "Compile.ModuleResolve" === elem || "Compile.WebpackPlugins" === elem || "Bundle.BundleSize" === elem || "Bundle.ModuleGraph" === elem || "Bundle.TreeShaking" === elem || _report(_exceptionable, {
                            path: _path + ".enableRoutes[" + _index737 + "]",
                            expected: "(\"Bundle.BundleSize\" | \"Bundle.ModuleGraph\" | \"Bundle.TreeShaking\" | \"Compile.ModuleResolve\" | \"Compile.WebpackLoaders\" | \"Compile.WebpackPlugins\" | \"Overall\")",
                            value: elem
                        })).every((flag)=>flag) || _report(_exceptionable, {
                        path: _path + ".enableRoutes",
                        expected: "Array<RsdoctorManifestClientRoutes>",
                        value: input.enableRoutes
                    }),
                    1 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "enableRoutes"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo456 = (input, _path, _exceptionable = true)=>[
                    "string" == typeof input.name || _report(_exceptionable, {
                        path: _path + ".name",
                        expected: "string",
                        value: input.name
                    }),
                    "string" == typeof input.path || _report(_exceptionable, {
                        path: _path + ".path",
                        expected: "string",
                        value: input.path
                    }),
                    "number" == typeof input.stage || _report(_exceptionable, {
                        path: _path + ".stage",
                        expected: "number",
                        value: input.stage
                    }),
                    void 0 === input.origin || "string" == typeof input.origin || _report(_exceptionable, {
                        path: _path + ".origin",
                        expected: "(string | undefined)",
                        value: input.origin
                    }),
                    3 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "name",
                            "path",
                            "stage",
                            "origin"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo457 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.banner || "boolean" == typeof input.banner || _report(_exceptionable, {
                        path: _path + ".banner",
                        expected: "(boolean | undefined)",
                        value: input.banner
                    }),
                    void 0 === input.parseBundle || "boolean" == typeof input.parseBundle || _report(_exceptionable, {
                        path: _path + ".parseBundle",
                        expected: "(boolean | undefined)",
                        value: input.parseBundle
                    }),
                    void 0 === input.generateTileGraph || "boolean" == typeof input.generateTileGraph || _report(_exceptionable, {
                        path: _path + ".generateTileGraph",
                        expected: "(boolean | undefined)",
                        value: input.generateTileGraph
                    }),
                    void 0 === input.gzip || "boolean" == typeof input.gzip || _report(_exceptionable, {
                        path: _path + ".gzip",
                        expected: "(boolean | undefined)",
                        value: input.gzip
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "banner",
                            "parseBundle",
                            "generateTileGraph",
                            "gzip"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo458 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.reportDir || "string" == typeof input.reportDir || _report(_exceptionable, {
                        path: _path + ".reportDir",
                        expected: "(string | undefined)",
                        value: input.reportDir
                    }),
                    void 0 === input.reportCodeType || ("object" == typeof input.reportCodeType && null !== input.reportCodeType && false === Array.isArray(input.reportCodeType) || _report(_exceptionable, {
                        path: _path + ".reportCodeType",
                        expected: "(IReportCodeType | undefined)",
                        value: input.reportCodeType
                    })) && _vo459(input.reportCodeType, _path + ".reportCodeType", _exceptionable) || _report(_exceptionable, {
                        path: _path + ".reportCodeType",
                        expected: "(IReportCodeType | undefined)",
                        value: input.reportCodeType
                    }),
                    void 0 === input.compressData || "boolean" == typeof input.compressData || _report(_exceptionable, {
                        path: _path + ".compressData",
                        expected: "(boolean | undefined)",
                        value: input.compressData
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "reportDir",
                            "reportCodeType",
                            "compressData"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo459 = (input, _path, _exceptionable = true)=>[
                    void 0 === input.noModuleSource || "boolean" == typeof input.noModuleSource || _report(_exceptionable, {
                        path: _path + ".noModuleSource",
                        expected: "(boolean | undefined)",
                        value: input.noModuleSource
                    }),
                    void 0 === input.noAssetsAndModuleSource || "boolean" == typeof input.noAssetsAndModuleSource || _report(_exceptionable, {
                        path: _path + ".noAssetsAndModuleSource",
                        expected: "(boolean | undefined)",
                        value: input.noAssetsAndModuleSource
                    }),
                    void 0 === input.noCode || "boolean" == typeof input.noCode || _report(_exceptionable, {
                        path: _path + ".noCode",
                        expected: "(boolean | undefined)",
                        value: input.noCode
                    }),
                    0 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "noModuleSource",
                            "noAssetsAndModuleSource",
                            "noCode"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vo460 = (input, _path, _exceptionable = true)=>[
                    "string" == typeof input["__@toStringTag@6659"] || _report(_exceptionable, {
                        path: _path + "[\"__@toStringTag@6659\"]",
                        expected: "string",
                        value: input["__@toStringTag@6659"]
                    }),
                    1 === Object.keys(input).length || false === _exceptionable || Object.keys(input).map((key)=>{
                        if ([
                            "__@toStringTag@6659"
                        ].some((prop)=>key === prop)) return true;
                        const value = input[key];
                        if (void 0 === value) return true;
                        return _report(_exceptionable, {
                            path: _path + typia_lib_internal_accessExpressionAsString_js__WEBPACK_IMPORTED_MODULE_0__._accessExpressionAsString(key),
                            expected: "undefined",
                            value: value,
                            description: [
                                `The property \`${key}\` is not defined in the object type.`,
                                "",
                                "Please remove the property next time."
                            ].join("\n")
                        });
                    }).every((flag)=>flag)
                ].every((flag)=>flag);
            const _vu0 = (input, _path, _exceptionable = true)=>(()=>{
                    if (_vo121(input, _path, false)) return _vo121(input, _path, _exceptionable);
                    if (_vo120(input, _path, false)) return _vo120(input, _path, _exceptionable);
                    return _report(_exceptionable, {
                        path: _path,
                        expected: "(WebpackPluginInstance | RspackPluginInstance)",
                        value: input
                    });
                })();
            const _vu1 = (input, _path, _exceptionable = true)=>(()=>{
                    if (void 0 !== input["__@toStringTag@6659"]) return _vo149(input, _path, _exceptionable);
                    if (void 0 !== input.pem) return _vo150(input, _path, _exceptionable);
                    return _report(_exceptionable, {
                        path: _path,
                        expected: "(\"buffer\".global.Buffer<ArrayBufferLike> | \"tls\".KeyObject)",
                        value: input
                    });
                })();
            const _vu2 = (input, _path, _exceptionable = true)=>(()=>{
                    if (void 0 !== input["__@toStringTag@6659"]) return _vo149(input, _path, _exceptionable);
                    if (void 0 !== input.buf) return _vo151(input, _path, _exceptionable);
                    return _report(_exceptionable, {
                        path: _path,
                        expected: "(\"buffer\".global.Buffer<ArrayBufferLike> | \"tls\".PxfObject)",
                        value: input
                    });
                })();
            const _vu3 = (input, _path, _exceptionable = true)=>(()=>{
                    if (void 0 !== input.name) return _vo405(input, _path, _exceptionable);
                    if (void 0 !== input["__@toStringTag@6659"]) return _vo406(input, _path, _exceptionable);
                    return _report(_exceptionable, {
                        path: _path,
                        expected: "(LooseRsbuildPlugin | RsbuildPlugins | LooseRsbuildPlugin | Falsy)",
                        value: input
                    });
                })();
            const _vu4 = (input, _path, _exceptionable = true)=>(()=>{
                    if (void 0 !== input.prototype) return _vo32(input, _path, _exceptionable);
                    return _vo34(input, _path, _exceptionable);
                })();
            const _vu5 = (input, _path, _exceptionable = true)=>(()=>{
                    if (void 0 !== input.prototype) return _vo35(input, _path, _exceptionable);
                    return _vo34(input, _path, _exceptionable);
                })();
            const _vu6 = (input, _path, _exceptionable = true)=>(()=>{
                    if ("commonjs" === input.type) return _vo68(input, _path, _exceptionable);
                    if ("es6" === input.type) return _vo67(input, _path, _exceptionable);
                    if ("umd" === input.type) return _vo69(input, _path, _exceptionable);
                    if ("amd" === input.type) return _vo71(input, _path, _exceptionable);
                    if ("nodenext" === input.type) return _vo72(input, _path, _exceptionable);
                    else if ("systemjs" === input.type) return _vo73(input, _path, _exceptionable);
                    else return _report(_exceptionable, {
                        path: _path,
                        expected: "(CommonJsConfig | Es6Config | UmdConfig | AmdConfig | NodeNextConfig | SystemjsConfig)",
                        value: input
                    });
                })();
            const _vu7 = (input, _path, _exceptionable = true)=>(()=>{
                    if ("typescript" === input.syntax) return _vo47(input, _path, _exceptionable);
                    if ("ecmascript" === input.syntax) return _vo48(input, _path, _exceptionable);
                    return _report(_exceptionable, {
                        path: _path,
                        expected: "(TsParserConfig | EsParserConfig)",
                        value: input
                    });
                })();
            const _vu8 = (input, _path, _exceptionable = true)=>(()=>{
                    if (void 0 !== input.type) return _vo89(input, _path, _exceptionable);
                    return _vo91(input, _path, _exceptionable);
                })();
            const _vu9 = (input, _path, _exceptionable = true)=>(()=>{
                    if ("memory" === input.type) return _vo97(input, _path, _exceptionable);
                    if ("persistent" === input.type) return _vo98(input, _path, _exceptionable);
                    return _report(_exceptionable, {
                        path: _path,
                        expected: "(__type.o21 | __type.o22)",
                        value: input
                    });
                })();
            const _vu10 = (input, _path, _exceptionable = true)=>(()=>{
                    if (void 0 !== input.root) return _vo106(input, _path, _exceptionable);
                    return _vo107(input, _path, _exceptionable);
                })();
            const _vu11 = (input, _path, _exceptionable = true)=>(()=>{
                    if (_vo177(input, _path, false)) return _vo177(input, _path, _exceptionable);
                    if (_vo185(input, _path, false)) return _vo185(input, _path, _exceptionable);
                    return _report(_exceptionable, {
                        path: _path,
                        expected: "(ParserOptionsByModuleTypeKnown | ParserOptionsByModuleTypeUnknown)",
                        value: input
                    });
                })();
            const _vu12 = (input, _path, _exceptionable = true)=>(()=>{
                    if (_vo186(input, _path, false)) return _vo186(input, _path, _exceptionable);
                    if (_vo194(input, _path, false)) return _vo194(input, _path, _exceptionable);
                    return _report(_exceptionable, {
                        path: _path,
                        expected: "(GeneratorOptionsByModuleTypeKnown | GeneratorOptionsByModuleTypeUnknown)",
                        value: input
                    });
                })();
            const _vu13 = (input, _path, _exceptionable = true)=>(()=>{
                    if ("filesystem" === input.type) return _vo198(input, _path, _exceptionable);
                    if ("memory" === input.type) return _vo200(input, _path, _exceptionable);
                    return _report(_exceptionable, {
                        path: _path,
                        expected: "(FileCacheOptions | MemoryCacheOptions)",
                        value: input
                    });
                })();
            const _vu14 = (input, _path, _exceptionable = true)=>(()=>{
                    if (_vo212(input, _path, false)) return _vo212(input, _path, _exceptionable);
                    if (_vo213(input, _path, false)) return _vo213(input, _path, _exceptionable);
                    return _report(_exceptionable, {
                        path: _path,
                        expected: "(\"http\".ServerOptions<\"http\".IncomingMessage, \"http\".ServerResponse> | HttpsServerOptions)",
                        value: input
                    });
                })();
            const _vu15 = (input, _path, _exceptionable = true)=>(()=>{
                    if (void 0 !== input.type) return _vo203(input, _path, _exceptionable);
                    return _vo205(input, _path, _exceptionable);
                })();
            const _vu16 = (input, _path, _exceptionable = true)=>(()=>{
                    if ("split-by-size" === input.strategy) return _vo391(input, _path, _exceptionable);
                    if ("custom" === input.strategy) return _vo392(input, _path, _exceptionable);
                    return _vo389(input, _path, _exceptionable);
                })();
            const _vu17 = (input, _path, _exceptionable = true)=>(()=>{
                    if ("split-by-size" === input.strategy) return _vo416(input, _path, _exceptionable);
                    if ("custom" === input.strategy) return _vo417(input, _path, _exceptionable);
                    return _vo415(input, _path, _exceptionable);
                })();
            const _vu18 = (input, _path, _exceptionable = true)=>(()=>{
                    if (void 0 !== input["__@toStringTag@6659"]) return _vo460(input, _path, _exceptionable);
                    return _vo0(input, _path, _exceptionable);
                })();
            const _va0 = (input, _path, _exceptionable = true)=>input.map((elem, _index738)=>(null !== elem || _report(_exceptionable, {
                        path: _path + "[" + _index738 + "]",
                        expected: "(RegExp | RuleSetConditions | RuleSetLogicalConditions | string)",
                        value: elem
                    })) && (void 0 !== elem || _report(_exceptionable, {
                        path: _path + "[" + _index738 + "]",
                        expected: "(RegExp | RuleSetConditions | RuleSetLogicalConditions | string)",
                        value: elem
                    })) && ("function" == typeof elem || "string" == typeof elem || elem instanceof RegExp || Array.isArray(elem) && (_va0(elem, _path + "[" + _index738 + "]", _exceptionable) || _report(_exceptionable, {
                        path: _path + "[" + _index738 + "]",
                        expected: "RuleSetConditions",
                        value: elem
                    })) || "object" == typeof elem && null !== elem && false === Array.isArray(elem) && _vo174(elem, _path + "[" + _index738 + "]", _exceptionable) || _report(_exceptionable, {
                        path: _path + "[" + _index738 + "]",
                        expected: "(RegExp | RuleSetConditions | RuleSetLogicalConditions | string)",
                        value: elem
                    }) || _report(_exceptionable, {
                        path: _path + "[" + _index738 + "]",
                        expected: "(RegExp | RuleSetConditions | RuleSetLogicalConditions | string)",
                        value: elem
                    }))).every((flag)=>flag);
            const _va1 = (input, _path, _exceptionable = true)=>input.map((elem, _index739)=>(null !== elem || _report(_exceptionable, {
                        path: _path + "[" + _index739 + "]",
                        expected: "(Array<RuleSetCondition>.o1 | RegExp | RuleSetLogicalConditions.o1 | string)",
                        value: elem
                    })) && (void 0 !== elem || _report(_exceptionable, {
                        path: _path + "[" + _index739 + "]",
                        expected: "(Array<RuleSetCondition>.o1 | RegExp | RuleSetLogicalConditions.o1 | string)",
                        value: elem
                    })) && ("function" == typeof elem || "string" == typeof elem || elem instanceof RegExp || Array.isArray(elem) && (_va1(elem, _path + "[" + _index739 + "]", _exceptionable) || _report(_exceptionable, {
                        path: _path + "[" + _index739 + "]",
                        expected: "Array<RuleSetCondition>.o1",
                        value: elem
                    })) || "object" == typeof elem && null !== elem && false === Array.isArray(elem) && _vo225(elem, _path + "[" + _index739 + "]", _exceptionable) || _report(_exceptionable, {
                        path: _path + "[" + _index739 + "]",
                        expected: "(Array<RuleSetCondition>.o1 | RegExp | RuleSetLogicalConditions.o1 | string)",
                        value: elem
                    }) || _report(_exceptionable, {
                        path: _path + "[" + _index739 + "]",
                        expected: "(Array<RuleSetCondition>.o1 | RegExp | RuleSetLogicalConditions.o1 | string)",
                        value: elem
                    }))).every((flag)=>flag);
            const _va2 = (input, _path, _exceptionable = true)=>input.map((elem, _index740)=>(null !== elem || _report(_exceptionable, {
                        path: _path + "[" + _index740 + "]",
                        expected: "(Array<RuleSetConditionAbsolute>.o1 | RegExp | RuleSetLogicalConditionsAbsolute | string)",
                        value: elem
                    })) && (void 0 !== elem || _report(_exceptionable, {
                        path: _path + "[" + _index740 + "]",
                        expected: "(Array<RuleSetConditionAbsolute>.o1 | RegExp | RuleSetLogicalConditionsAbsolute | string)",
                        value: elem
                    })) && ("function" == typeof elem || "string" == typeof elem || elem instanceof RegExp || Array.isArray(elem) && (_va2(elem, _path + "[" + _index740 + "]", _exceptionable) || _report(_exceptionable, {
                        path: _path + "[" + _index740 + "]",
                        expected: "Array<RuleSetConditionAbsolute>.o1",
                        value: elem
                    })) || "object" == typeof elem && null !== elem && false === Array.isArray(elem) && _vo227(elem, _path + "[" + _index740 + "]", _exceptionable) || _report(_exceptionable, {
                        path: _path + "[" + _index740 + "]",
                        expected: "(Array<RuleSetConditionAbsolute>.o1 | RegExp | RuleSetLogicalConditionsAbsolute | string)",
                        value: elem
                    }) || _report(_exceptionable, {
                        path: _path + "[" + _index740 + "]",
                        expected: "(Array<RuleSetConditionAbsolute>.o1 | RegExp | RuleSetLogicalConditionsAbsolute | string)",
                        value: elem
                    }))).every((flag)=>flag);
            const _va3 = (input, _path, _exceptionable = true)=>input.map((elem, _index741)=>(void 0 !== elem || _report(_exceptionable, {
                        path: _path + "[" + _index741 + "]",
                        expected: "(Array<JsonValueTypes>.o1 | JsonObjectTypes | boolean | null | number | string)",
                        value: elem
                    })) && (null === elem || "string" == typeof elem || "number" == typeof elem || "boolean" == typeof elem || Array.isArray(elem) && (_va3(elem, _path + "[" + _index741 + "]", _exceptionable) || _report(_exceptionable, {
                        path: _path + "[" + _index741 + "]",
                        expected: "Array<JsonValueTypes>.o1",
                        value: elem
                    })) || "object" == typeof elem && null !== elem && false === Array.isArray(elem) && _vo265(elem, _path + "[" + _index741 + "]", _exceptionable) || _report(_exceptionable, {
                        path: _path + "[" + _index741 + "]",
                        expected: "(Array<JsonValueTypes>.o1 | JsonObjectTypes | boolean | null | number | string)",
                        value: elem
                    }) || _report(_exceptionable, {
                        path: _path + "[" + _index741 + "]",
                        expected: "(Array<JsonValueTypes>.o1 | JsonObjectTypes | boolean | null | number | string)",
                        value: elem
                    }))).every((flag)=>flag);
            const _va4 = (input, _path, _exceptionable = true)=>input.map((elem, _index742)=>null == elem || false === elem || Array.isArray(elem) && (_va4(elem, _path + "[" + _index742 + "]", _exceptionable) || _report(_exceptionable, {
                        path: _path + "[" + _index742 + "]",
                        expected: "RsbuildPlugins",
                        value: elem
                    })) || "object" == typeof elem && null !== elem && _vu3(elem, _path + "[" + _index742 + "]", _exceptionable) || _report(_exceptionable, {
                        path: _path + "[" + _index742 + "]",
                        expected: "(LooseRsbuildPlugin | RsbuildPlugins | RsbuildPlugins | LooseRsbuildPlugin | Falsy | false | null | undefined)",
                        value: elem
                    }) || _report(_exceptionable, {
                        path: _path + "[" + _index742 + "]",
                        expected: "(LooseRsbuildPlugin | RsbuildPlugins | RsbuildPlugins | LooseRsbuildPlugin | Falsy | false | null | undefined)",
                        value: elem
                    })).every((flag)=>flag);
            const __is = (input, _exceptionable = true)=>null != input && ("function" == typeof input || "object" == typeof input && null !== input && false === Array.isArray(input) && _iu18(input, true));
            let errors;
            let _report;
            return typia_lib_internal_createStandardSchema_js__WEBPACK_IMPORTED_MODULE_1__._createStandardSchema((input)=>{
                if (false === __is(input)) {
                    errors = [];
                    _report = typia_lib_internal_validateReport_js__WEBPACK_IMPORTED_MODULE_2__._validateReport(errors);
                    ((input, _path, _exceptionable = true)=>(null !== input || _report(true, {
                            path: _path + "",
                            expected: "(Config | Config.o7)",
                            value: input
                        })) && (void 0 !== input || _report(true, {
                            path: _path + "",
                            expected: "(Config | Config.o7)",
                            value: input
                        })) && ("function" == typeof input || ("object" == typeof input && null !== input && false === Array.isArray(input) || _report(true, {
                            path: _path + "",
                            expected: "(Config | Config.o7)",
                            value: input
                        })) && _vu18(input, _path + "", true) || _report(true, {
                            path: _path + "",
                            expected: "(Config | Config.o7)",
                            value: input
                        })))(input, "$input", true);
                    const success = 0 === errors.length;
                    return success ? {
                        success,
                        data: input
                    } : {
                        success,
                        errors,
                        data: input
                    };
                }
                return {
                    success: true,
                    data: input
                };
            });
        })();
        function validate(input, configPath) {
            const result = validateConfig(input);
            if (result.success) return result.data;
            const messages = result.errors.flatMap(({ expected, path, value })=>{
                if ('undefined' === expected) return [
                    `Unknown property: \`${picocolors__WEBPACK_IMPORTED_MODULE_3___default().red(path)}\` in configuration`,
                    ''
                ];
                return [
                    `Invalid config on \`${picocolors__WEBPACK_IMPORTED_MODULE_3___default().red(path)}\`.`,
                    `  - Expect to be ${picocolors__WEBPACK_IMPORTED_MODULE_3___default().green(expected)}`,
                    `  - Got: ${picocolors__WEBPACK_IMPORTED_MODULE_3___default().red(whatIs(value))}`,
                    ''
                ];
            });
            throw new Error([
                `Invalid configuration${configPath ? ` loaded from ${picocolors__WEBPACK_IMPORTED_MODULE_3___default().dim(configPath)}` : '.'}`,
                ''
            ].concat(messages).join('\n'));
        }
        function whatIs(value) {
            return Object.prototype.toString.call(value).replace(/^\[object\s+([a-z]+)\]$/i, '$1').toLowerCase();
        }
    }
};
