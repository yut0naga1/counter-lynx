export const __webpack_id__ = "src_plugins_swc_plugin_ts";
export const __webpack_ids__ = [
    "src_plugins_swc_plugin_ts"
];
export const __webpack_modules__ = {
    "./src/plugins/swc.plugin.ts": function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.r(__webpack_exports__);
        __webpack_require__.d(__webpack_exports__, {
            pluginSwc: ()=>pluginSwc
        });
        var _utils_getESVersionTarget_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./src/utils/getESVersionTarget.ts");
        function pluginSwc() {
            return {
                name: 'lynx:rsbuild:swc',
                setup (api) {
                    api.modifyRsbuildConfig((config, { mergeRsbuildConfig })=>{
                        const isProd = 'production' === config.mode;
                        return mergeRsbuildConfig(config, {
                            tools: {
                                swc (config) {
                                    delete config.env;
                                    config.jsc ??= {};
                                    config.jsc.target = (0, _utils_getESVersionTarget_js__WEBPACK_IMPORTED_MODULE_0__.y)(isProd);
                                }
                            }
                        });
                    });
                }
            };
        }
    },
    "./src/utils/getESVersionTarget.ts": function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.d(__webpack_exports__, {
            y: ()=>getESVersionTarget
        });
        function getESVersionTarget(isProd) {
            return isProd ? 'es2015' : 'es2019';
        }
    }
};
