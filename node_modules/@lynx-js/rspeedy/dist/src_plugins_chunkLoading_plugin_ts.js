import { LynxCacheEventsPlugin } from "@lynx-js/cache-events-webpack-plugin";
import { ChunkLoadingWebpackPlugin } from "@lynx-js/chunk-loading-webpack-plugin";
export const __webpack_id__ = "src_plugins_chunkLoading_plugin_ts";
export const __webpack_ids__ = [
    "src_plugins_chunkLoading_plugin_ts"
];
export const __webpack_modules__ = {
    "./src/plugins/chunkLoading.plugin.ts": function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.r(__webpack_exports__);
        __webpack_require__.d(__webpack_exports__, {
            pluginChunkLoading: ()=>pluginChunkLoading
        });
        function isLynx(environment) {
            return 'string' == typeof environment ? 'lynx' === environment : 'lynx' === environment.name;
        }
        var is_web = __webpack_require__("./src/utils/is-web.ts");
        function pluginChunkLoading() {
            return {
                name: 'lynx:rsbuild:chunk-loading',
                setup (api) {
                    api.modifyBundlerChain((chain, { environment })=>{
                        if ((0, is_web.H)(environment)) return void chain.output.chunkLoading("import-scripts").end();
                        if (isLynx(environment)) chain.plugin('lynx:chunk-loading').use(ChunkLoadingWebpackPlugin).end().plugin('lynx:cache-events').use(LynxCacheEventsPlugin).end().output.chunkLoading('lynx').chunkFormat('commonjs').end();
                    });
                }
            };
        }
    },
    "./src/utils/is-web.ts": function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.d(__webpack_exports__, {
            H: ()=>isWeb
        });
        function isWeb(environment) {
            return 'string' == typeof environment ? 'web' === environment : 'web' === environment.name;
        }
    }
};
