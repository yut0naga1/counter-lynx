import { CssRuntimeModule } from './runtime/CssRuntimeModule.js';
import { getCssChunkObject } from './runtime/helper.js';
export function createCssChunkLoadingRuntimeModule(webpack) {
    const { RuntimeModule, RuntimeGlobals, Template } = webpack;
    return class CssChunkLoadingRuntimeModule extends RuntimeModule {
        runtimeRequirements;
        constructor(runtimeRequirements) {
            super('Lynx css loading', 10);
            this.runtimeRequirements = runtimeRequirements;
            this.runtimeRequirements = runtimeRequirements;
        }
        generate() {
            const { chunk, runtimeRequirements } = this;
            const chunkMap = getCssChunkObject(chunk, this.compilation);
            const withLoading = runtimeRequirements.has(RuntimeGlobals.ensureChunkHandlers)
                && Object.keys(chunkMap).length > 0;
            const withHmr = runtimeRequirements.has(RuntimeGlobals.hmrDownloadUpdateHandlers);
            if (!withLoading && !withHmr) {
                return '';
            }
            return Template.asString([
                CssRuntimeModule.generateLoadStyleRuntime(),
                '',
                withLoading
                    ? CssRuntimeModule.generateChunkLoadingRuntime(chunkMap, chunk.ids ?? [])
                    : '// no chunk loading',
                '',
                withHmr ? CssRuntimeModule.generateHMRLoadChunkRuntime() : '// no hmr',
            ]);
        }
    };
}
//# sourceMappingURL=CssChunkLoadingRuntimeModule.js.map