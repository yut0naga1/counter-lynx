// Copyright 2024 The Lynx Authors. All rights reserved.
// Licensed under the Apache License Version 2.0 that can be found in the
// LICENSE file in the root directory of this source tree.
const runtimeTemplateBasicFunction = (args, body) => {
    return `(${args}) => {\n${body.join('\n')}\n}`;
};
const runtimeTemplateReturningFunction = (returnValue, args = '') => {
    return `(${args}) => (${returnValue})`;
};
export function createStartupEntrypointRuntimeModule(webpack) {
    const { RuntimeGlobals, RuntimeModule } = webpack;
    return class StartupEntrypointRuntimeModule extends RuntimeModule {
        asyncChunkLoading;
        constructor(asyncChunkLoading) {
            super('Lynx startup entrypoint', RuntimeModule.STAGE_ATTACH);
            this.asyncChunkLoading = asyncChunkLoading;
        }
        generate() {
            return `${RuntimeGlobals.startupEntrypoint} = ${runtimeTemplateBasicFunction('result, chunkIds, fn', [
                '// arguments: chunkIds, moduleId are deprecated',
                'var moduleId = chunkIds;',
                `if(!fn) chunkIds = result, fn = ${runtimeTemplateReturningFunction(`${RuntimeGlobals.require}(${RuntimeGlobals.entryModuleId} = moduleId)`)};`,
                ...(this.asyncChunkLoading
                    ? [
                        `return Promise.all(chunkIds.map(${RuntimeGlobals.ensureChunk}, ${RuntimeGlobals.require})).then(${runtimeTemplateBasicFunction('', [
                            'var r = fn();',
                            'return r === undefined ? result : r;',
                        ])})`,
                    ]
                    : [
                        `chunkIds.map(${RuntimeGlobals.ensureChunk}, ${RuntimeGlobals.require})`,
                        'var r = fn();',
                        'return r === undefined ? result : r;',
                    ]),
            ])}`;
        }
    };
}
//# sourceMappingURL=StartupEntrypointRuntimeModule.js.map