/*! For license information please see pure.js.LICENSE.txt */
import { jsx } from "@lynx-js/react/jsx-runtime";
import { cloneElement, createRef, h, render } from "preact";
import { useEffect } from "preact/hooks";
import { act } from "preact/test-utils";
import { __root } from "@lynx-js/react/internal";
import { flushDelayedLifecycleEvents } from "../../runtime/lib/lynx/tt.js";
import { clearPage } from "../../runtime/lib/snapshot.js";
var __webpack_modules__ = {
    "../../../node_modules/.pnpm/@testing-library+dom@10.4.1/node_modules/@testing-library/dom/dist/@testing-library/dom.esm.js": function(module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.d(__webpack_exports__, {
            Pq: ()=>queries,
            Rt: ()=>getAllByRole,
            BJ: ()=>getAllByPlaceholderText,
            Iv: ()=>getByPlaceholderText,
            v5: ()=>findAllByTestId,
            fG: ()=>findAllByText,
            It: ()=>findByLabelText,
            rC: ()=>fireEvent,
            NX: ()=>getByLabelTextWithSuggestions,
            tc: ()=>queryAllByAttribute,
            Gz: ()=>getAllByTestId,
            jK: ()=>configure,
            j7: ()=>queryAllByAltTextWithSuggestions,
            tl: ()=>queryAllByTitleWithSuggestions,
            zj: ()=>getConfig,
            fE: ()=>prettyDOM,
            aM: ()=>queryAllByDisplayValueWithSuggestions,
            H0: ()=>queryAllByPlaceholderTextWithSuggestions,
            Bw: ()=>getAllByAltText,
            $b: ()=>getByDisplayValue,
            cY: ()=>logRoles,
            d_: ()=>findByAltText,
            fm: ()=>waitForWrapper,
            Oe: ()=>getNodeText,
            IS: ()=>getSuggestedQuery,
            sd: ()=>queryHelpers,
            D3: ()=>queryByText,
            Aq: ()=>wrapAllByQueryWithSuggestion,
            rg: ()=>findByRole,
            E9: ()=>findByText,
            Tf: ()=>getByText,
            P8: ()=>queryByTestId,
            r4: ()=>getAllByTitle,
            Xj: ()=>getElementError,
            E_: ()=>findAllByTitle,
            op: ()=>getMultipleElementsFoundError,
            mm: ()=>findAllByAltText,
            nj: ()=>screen,
            xO: ()=>makeSingleQuery,
            eX: ()=>findAllByPlaceholderText,
            WY: ()=>getAllByLabelTextWithSuggestions,
            O0: ()=>getRoles,
            X_: ()=>logDOM,
            Ou: ()=>findByDisplayValue,
            Ll: ()=>findAllByLabelText,
            H5: ()=>buildQueries,
            Eh: ()=>queryByTitle,
            on: ()=>makeGetAllQuery,
            MJ: ()=>queryAllByTextWithSuggestions,
            E5: ()=>getQueriesForElement,
            CF: ()=>getByAltText,
            Oj: ()=>queryByAttribute,
            LM: ()=>queryByLabelText,
            v6: ()=>getDefaultNormalizer,
            Qb: ()=>findAllByRole,
            oO: ()=>findByTestId,
            Yc: ()=>build,
            wY: ()=>queryAllByTestIdWithSuggestions,
            L_: ()=>findByTitle,
            V: ()=>queryByDisplayValue,
            h5: ()=>getByTestId,
            v4: ()=>wrapSingleQueryWithSuggestion,
            tN: ()=>findAllByDisplayValue,
            yw: ()=>getByTitle,
            AS: ()=>queryByRole,
            h3: ()=>queryAllByRoleWithSuggestions,
            uq: ()=>queryByPlaceholderText,
            Y7: ()=>getAllByText,
            lh: ()=>createEvent,
            Fz: ()=>findByPlaceholderText,
            Uk: ()=>queryByAltText,
            gy: ()=>getByRole,
            n8: ()=>waitForElementToBeRemoved,
            ux: ()=>getQueriesForElement,
            kL: ()=>getAllByDisplayValue,
            s9: ()=>queryAllByLabelTextWithSuggestions,
            _Y: ()=>makeFindQuery,
            _E: ()=>dom_esm_isInaccessible
        });
        var build = __webpack_require__("../../../node_modules/.pnpm/pretty-format@27.5.1/node_modules/pretty-format/build/index.js");
        var toStr = Object.prototype.toString;
        function isCallable(fn) {
            return "function" == typeof fn || "[object Function]" === toStr.call(fn);
        }
        function toInteger(value) {
            var number = Number(value);
            if (isNaN(number)) return 0;
            if (0 === number || !isFinite(number)) return number;
            return (number > 0 ? 1 : -1) * Math.floor(Math.abs(number));
        }
        var maxSafeInteger = Math.pow(2, 53) - 1;
        function toLength(value) {
            var len = toInteger(value);
            return Math.min(Math.max(len, 0), maxSafeInteger);
        }
        function arrayFrom(arrayLike, mapFn) {
            var C = Array;
            var items = Object(arrayLike);
            if (null == arrayLike) throw new TypeError("Array.from requires an array-like object - not null or undefined");
            if (void 0 !== mapFn) {
                if (!isCallable(mapFn)) throw new TypeError("Array.from: when provided, the second argument must be a function");
            }
            var len = toLength(items.length);
            var A = isCallable(C) ? Object(new C(len)) : new Array(len);
            var k = 0;
            var kValue;
            while(k < len){
                kValue = items[k];
                if (mapFn) A[k] = mapFn(kValue, k);
                else A[k] = kValue;
                k += 1;
            }
            A.length = len;
            return A;
        }
        function _typeof(obj) {
            return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj) {
                return typeof obj;
            } : function(obj) {
                return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
            }, _typeof(obj);
        }
        function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
        }
        function _defineProperties(target, props) {
            for(var i = 0; i < props.length; i++){
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ("value" in descriptor) descriptor.writable = true;
                Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
            }
        }
        function _createClass(Constructor, protoProps, staticProps) {
            if (protoProps) _defineProperties(Constructor.prototype, protoProps);
            if (staticProps) _defineProperties(Constructor, staticProps);
            Object.defineProperty(Constructor, "prototype", {
                writable: false
            });
            return Constructor;
        }
        function _defineProperty(obj, key, value) {
            key = _toPropertyKey(key);
            if (key in obj) Object.defineProperty(obj, key, {
                value: value,
                enumerable: true,
                configurable: true,
                writable: true
            });
            else obj[key] = value;
            return obj;
        }
        function _toPropertyKey(arg) {
            var key = _toPrimitive(arg, "string");
            return "symbol" === _typeof(key) ? key : String(key);
        }
        function _toPrimitive(input, hint) {
            if ("object" !== _typeof(input) || null === input) return input;
            var prim = input[Symbol.toPrimitive];
            if (void 0 !== prim) {
                var res = prim.call(input, hint || "default");
                if ("object" !== _typeof(res)) return res;
                throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return ("string" === hint ? String : Number)(input);
        }
        var SetLike_SetLike = /*#__PURE__*/ function() {
            function SetLike() {
                var items = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [];
                _classCallCheck(this, SetLike);
                _defineProperty(this, "items", void 0);
                this.items = items;
            }
            _createClass(SetLike, [
                {
                    key: "add",
                    value: function(value) {
                        if (false === this.has(value)) this.items.push(value);
                        return this;
                    }
                },
                {
                    key: "clear",
                    value: function() {
                        this.items = [];
                    }
                },
                {
                    key: "delete",
                    value: function(value) {
                        var previousLength = this.items.length;
                        this.items = this.items.filter(function(item) {
                            return item !== value;
                        });
                        return previousLength !== this.items.length;
                    }
                },
                {
                    key: "forEach",
                    value: function(callbackfn) {
                        var _this = this;
                        this.items.forEach(function(item) {
                            callbackfn(item, item, _this);
                        });
                    }
                },
                {
                    key: "has",
                    value: function(value) {
                        return -1 !== this.items.indexOf(value);
                    }
                },
                {
                    key: "size",
                    get: function() {
                        return this.items.length;
                    }
                }
            ]);
            return SetLike;
        }();
        const polyfills_SetLike = "undefined" == typeof Set ? Set : SetLike_SetLike;
        function getLocalName(element) {
            var _element$localName;
            return null != (_element$localName = element.localName) ? _element$localName : element.tagName.toLowerCase();
        }
        var localNameToRoleMappings = {
            article: "article",
            aside: "complementary",
            button: "button",
            datalist: "listbox",
            dd: "definition",
            details: "group",
            dialog: "dialog",
            dt: "term",
            fieldset: "group",
            figure: "figure",
            form: "form",
            footer: "contentinfo",
            h1: "heading",
            h2: "heading",
            h3: "heading",
            h4: "heading",
            h5: "heading",
            h6: "heading",
            header: "banner",
            hr: "separator",
            html: "document",
            legend: "legend",
            li: "listitem",
            math: "math",
            main: "main",
            menu: "list",
            nav: "navigation",
            ol: "list",
            optgroup: "group",
            option: "option",
            output: "status",
            progress: "progressbar",
            section: "region",
            summary: "button",
            table: "table",
            tbody: "rowgroup",
            textarea: "textbox",
            tfoot: "rowgroup",
            td: "cell",
            th: "columnheader",
            thead: "rowgroup",
            tr: "row",
            ul: "list"
        };
        var prohibitedAttributes = {
            caption: new Set([
                "aria-label",
                "aria-labelledby"
            ]),
            code: new Set([
                "aria-label",
                "aria-labelledby"
            ]),
            deletion: new Set([
                "aria-label",
                "aria-labelledby"
            ]),
            emphasis: new Set([
                "aria-label",
                "aria-labelledby"
            ]),
            generic: new Set([
                "aria-label",
                "aria-labelledby",
                "aria-roledescription"
            ]),
            insertion: new Set([
                "aria-label",
                "aria-labelledby"
            ]),
            paragraph: new Set([
                "aria-label",
                "aria-labelledby"
            ]),
            presentation: new Set([
                "aria-label",
                "aria-labelledby"
            ]),
            strong: new Set([
                "aria-label",
                "aria-labelledby"
            ]),
            subscript: new Set([
                "aria-label",
                "aria-labelledby"
            ]),
            superscript: new Set([
                "aria-label",
                "aria-labelledby"
            ])
        };
        function hasGlobalAriaAttributes(element, role) {
            return [
                "aria-atomic",
                "aria-busy",
                "aria-controls",
                "aria-current",
                "aria-describedby",
                "aria-details",
                "aria-dropeffect",
                "aria-flowto",
                "aria-grabbed",
                "aria-hidden",
                "aria-keyshortcuts",
                "aria-label",
                "aria-labelledby",
                "aria-live",
                "aria-owns",
                "aria-relevant",
                "aria-roledescription"
            ].some(function(attributeName) {
                var _prohibitedAttributes;
                return element.hasAttribute(attributeName) && !(null != (_prohibitedAttributes = prohibitedAttributes[role]) && _prohibitedAttributes.has(attributeName));
            });
        }
        function ignorePresentationalRole(element, implicitRole) {
            return hasGlobalAriaAttributes(element, implicitRole);
        }
        function getRole(element) {
            var explicitRole = getExplicitRole(element);
            if (null === explicitRole || "presentation" === explicitRole) {
                var implicitRole = getImplicitRole(element);
                if ("presentation" !== explicitRole || ignorePresentationalRole(element, implicitRole || "")) return implicitRole;
            }
            return explicitRole;
        }
        function getImplicitRole(element) {
            var mappedByTag = localNameToRoleMappings[getLocalName(element)];
            if (void 0 !== mappedByTag) return mappedByTag;
            switch(getLocalName(element)){
                case "a":
                case "area":
                case "link":
                    if (element.hasAttribute("href")) return "link";
                    break;
                case "img":
                    if ("" === element.getAttribute("alt") && !ignorePresentationalRole(element, "img")) return "presentation";
                    return "img";
                case "input":
                    var _ref = element, type = _ref.type;
                    switch(type){
                        case "button":
                        case "image":
                        case "reset":
                        case "submit":
                            return "button";
                        case "checkbox":
                        case "radio":
                            return type;
                        case "range":
                            return "slider";
                        case "email":
                        case "tel":
                        case "text":
                        case "url":
                            if (element.hasAttribute("list")) return "combobox";
                            return "textbox";
                        case "search":
                            if (element.hasAttribute("list")) return "combobox";
                            return "searchbox";
                        case "number":
                            return "spinbutton";
                        default:
                            return null;
                    }
                case "select":
                    if (element.hasAttribute("multiple") || element.size > 1) return "listbox";
                    return "combobox";
            }
            return null;
        }
        function getExplicitRole(element) {
            var role = element.getAttribute("role");
            if (null !== role) {
                var explicitRole = role.trim().split(" ")[0];
                if (explicitRole.length > 0) return explicitRole;
            }
            return null;
        }
        function isElement(node) {
            return null !== node && node.nodeType === node.ELEMENT_NODE;
        }
        function isHTMLTableCaptionElement(node) {
            return isElement(node) && "caption" === getLocalName(node);
        }
        function isHTMLInputElement(node) {
            return isElement(node) && "input" === getLocalName(node);
        }
        function isHTMLOptGroupElement(node) {
            return isElement(node) && "optgroup" === getLocalName(node);
        }
        function isHTMLSelectElement(node) {
            return isElement(node) && "select" === getLocalName(node);
        }
        function isHTMLTableElement(node) {
            return isElement(node) && "table" === getLocalName(node);
        }
        function isHTMLTextAreaElement(node) {
            return isElement(node) && "textarea" === getLocalName(node);
        }
        function safeWindow(node) {
            var _ref = null === node.ownerDocument ? node : node.ownerDocument, defaultView = _ref.defaultView;
            if (null === defaultView) throw new TypeError("no window available");
            return defaultView;
        }
        function isHTMLFieldSetElement(node) {
            return isElement(node) && "fieldset" === getLocalName(node);
        }
        function isHTMLLegendElement(node) {
            return isElement(node) && "legend" === getLocalName(node);
        }
        function isHTMLSlotElement(node) {
            return isElement(node) && "slot" === getLocalName(node);
        }
        function isSVGElement(node) {
            return isElement(node) && void 0 !== node.ownerSVGElement;
        }
        function isSVGSVGElement(node) {
            return isElement(node) && "svg" === getLocalName(node);
        }
        function isSVGTitleElement(node) {
            return isSVGElement(node) && "title" === getLocalName(node);
        }
        function queryIdRefs(node, attributeName) {
            if (isElement(node) && node.hasAttribute(attributeName)) {
                var ids = node.getAttribute(attributeName).split(" ");
                var root = node.getRootNode ? node.getRootNode() : node.ownerDocument;
                return ids.map(function(id) {
                    return root.getElementById(id);
                }).filter(function(element) {
                    return null !== element;
                });
            }
            return [];
        }
        function hasAnyConcreteRoles(node, roles) {
            if (isElement(node)) return -1 !== roles.indexOf(getRole(node));
            return false;
        }
        function asFlatString(s) {
            return s.trim().replace(/\s\s+/g, " ");
        }
        function isHidden(node, getComputedStyleImplementation) {
            if (!isElement(node)) return false;
            if (node.hasAttribute("hidden") || "true" === node.getAttribute("aria-hidden")) return true;
            var style = getComputedStyleImplementation(node);
            return "none" === style.getPropertyValue("display") || "hidden" === style.getPropertyValue("visibility");
        }
        function isControl(node) {
            return hasAnyConcreteRoles(node, [
                "button",
                "combobox",
                "listbox",
                "textbox"
            ]) || hasAbstractRole(node, "range");
        }
        function hasAbstractRole(node, role) {
            if (!isElement(node)) return false;
            switch(role){
                case "range":
                    return hasAnyConcreteRoles(node, [
                        "meter",
                        "progressbar",
                        "scrollbar",
                        "slider",
                        "spinbutton"
                    ]);
                default:
                    throw new TypeError("No knowledge about abstract role '".concat(role, "'. This is likely a bug :("));
            }
        }
        function querySelectorAllSubtree(element, selectors) {
            var elements = arrayFrom(element.querySelectorAll(selectors));
            queryIdRefs(element, "aria-owns").forEach(function(root) {
                elements.push.apply(elements, arrayFrom(root.querySelectorAll(selectors)));
            });
            return elements;
        }
        function querySelectedOptions(listbox) {
            if (isHTMLSelectElement(listbox)) return listbox.selectedOptions || querySelectorAllSubtree(listbox, "[selected]");
            return querySelectorAllSubtree(listbox, '[aria-selected="true"]');
        }
        function isMarkedPresentational(node) {
            return hasAnyConcreteRoles(node, [
                "none",
                "presentation"
            ]);
        }
        function isNativeHostLanguageTextAlternativeElement(node) {
            return isHTMLTableCaptionElement(node);
        }
        function allowsNameFromContent(node) {
            return hasAnyConcreteRoles(node, [
                "button",
                "cell",
                "checkbox",
                "columnheader",
                "gridcell",
                "heading",
                "label",
                "legend",
                "link",
                "menuitem",
                "menuitemcheckbox",
                "menuitemradio",
                "option",
                "radio",
                "row",
                "rowheader",
                "switch",
                "tab",
                "tooltip",
                "treeitem"
            ]);
        }
        function isDescendantOfNativeHostLanguageTextAlternativeElement(node) {
            return false;
        }
        function getValueOfTextbox(element) {
            if (isHTMLInputElement(element) || isHTMLTextAreaElement(element)) return element.value;
            return element.textContent || "";
        }
        function getTextualContent(declaration) {
            var content = declaration.getPropertyValue("content");
            if (/^["'].*["']$/.test(content)) return content.slice(1, -1);
            return "";
        }
        function isLabelableElement(element) {
            var localName = getLocalName(element);
            return "button" === localName || "input" === localName && "hidden" !== element.getAttribute("type") || "meter" === localName || "output" === localName || "progress" === localName || "select" === localName || "textarea" === localName;
        }
        function findLabelableElement(element) {
            if (isLabelableElement(element)) return element;
            var labelableElement = null;
            element.childNodes.forEach(function(childNode) {
                if (null === labelableElement && isElement(childNode)) {
                    var descendantLabelableElement = findLabelableElement(childNode);
                    if (null !== descendantLabelableElement) labelableElement = descendantLabelableElement;
                }
            });
            return labelableElement;
        }
        function getControlOfLabel(label) {
            if (void 0 !== label.control) return label.control;
            var htmlFor = label.getAttribute("for");
            if (null !== htmlFor) return label.ownerDocument.getElementById(htmlFor);
            return findLabelableElement(label);
        }
        function getLabels(element) {
            var labelsProperty = element.labels;
            if (null === labelsProperty) return labelsProperty;
            if (void 0 !== labelsProperty) return arrayFrom(labelsProperty);
            if (!isLabelableElement(element)) return null;
            var document1 = element.ownerDocument;
            return arrayFrom(document1.querySelectorAll("label")).filter(function(label) {
                return getControlOfLabel(label) === element;
            });
        }
        function getSlotContents(slot) {
            var assignedNodes = slot.assignedNodes();
            if (0 === assignedNodes.length) return arrayFrom(slot.childNodes);
            return assignedNodes;
        }
        function accessible_name_and_description_computeTextAlternative(root) {
            var options = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
            var consultedNodes = new polyfills_SetLike();
            var window1 = safeWindow(root);
            var _options$compute = options.compute, compute = void 0 === _options$compute ? "name" : _options$compute, _options$computedStyl = options.computedStyleSupportsPseudoElements, computedStyleSupportsPseudoElements = void 0 === _options$computedStyl ? void 0 !== options.getComputedStyle : _options$computedStyl, _options$getComputedS = options.getComputedStyle, getComputedStyle = void 0 === _options$getComputedS ? window1.getComputedStyle.bind(window1) : _options$getComputedS, _options$hidden = options.hidden, hidden = void 0 === _options$hidden ? false : _options$hidden;
            function computeMiscTextAlternative(node, context) {
                var accumulatedText = "";
                if (isElement(node) && computedStyleSupportsPseudoElements) {
                    var pseudoBefore = getComputedStyle(node, "::before");
                    var beforeContent = getTextualContent(pseudoBefore);
                    accumulatedText = "".concat(beforeContent, " ").concat(accumulatedText);
                }
                var childNodes = isHTMLSlotElement(node) ? getSlotContents(node) : arrayFrom(node.childNodes).concat(queryIdRefs(node, "aria-owns"));
                childNodes.forEach(function(child) {
                    var result = computeTextAlternative(child, {
                        isEmbeddedInLabel: context.isEmbeddedInLabel,
                        isReferenced: false,
                        recursion: true
                    });
                    var display = isElement(child) ? getComputedStyle(child).getPropertyValue("display") : "inline";
                    var separator = "inline" !== display ? " " : "";
                    accumulatedText += "".concat(separator).concat(result).concat(separator);
                });
                if (isElement(node) && computedStyleSupportsPseudoElements) {
                    var pseudoAfter = getComputedStyle(node, "::after");
                    var afterContent = getTextualContent(pseudoAfter);
                    accumulatedText = "".concat(accumulatedText, " ").concat(afterContent);
                }
                return accumulatedText.trim();
            }
            function useAttribute(element, attributeName) {
                var attribute = element.getAttributeNode(attributeName);
                if (null !== attribute && !consultedNodes.has(attribute) && "" !== attribute.value.trim()) {
                    consultedNodes.add(attribute);
                    return attribute.value;
                }
                return null;
            }
            function computeTooltipAttributeValue(node) {
                if (!isElement(node)) return null;
                return useAttribute(node, "title");
            }
            function computeElementTextAlternative(node) {
                if (!isElement(node)) return null;
                if (isHTMLFieldSetElement(node)) {
                    consultedNodes.add(node);
                    var children = arrayFrom(node.childNodes);
                    for(var i = 0; i < children.length; i += 1){
                        var child = children[i];
                        if (isHTMLLegendElement(child)) return computeTextAlternative(child, {
                            isEmbeddedInLabel: false,
                            isReferenced: false,
                            recursion: false
                        });
                    }
                } else if (isHTMLTableElement(node)) {
                    consultedNodes.add(node);
                    var _children = arrayFrom(node.childNodes);
                    for(var _i = 0; _i < _children.length; _i += 1){
                        var _child = _children[_i];
                        if (isHTMLTableCaptionElement(_child)) return computeTextAlternative(_child, {
                            isEmbeddedInLabel: false,
                            isReferenced: false,
                            recursion: false
                        });
                    }
                } else if (isSVGSVGElement(node)) {
                    consultedNodes.add(node);
                    var _children2 = arrayFrom(node.childNodes);
                    for(var _i2 = 0; _i2 < _children2.length; _i2 += 1){
                        var _child2 = _children2[_i2];
                        if (isSVGTitleElement(_child2)) return _child2.textContent;
                    }
                    return null;
                } else if ("img" === getLocalName(node) || "area" === getLocalName(node)) {
                    var nameFromAlt = useAttribute(node, "alt");
                    if (null !== nameFromAlt) return nameFromAlt;
                } else if (isHTMLOptGroupElement(node)) {
                    var nameFromLabel = useAttribute(node, "label");
                    if (null !== nameFromLabel) return nameFromLabel;
                }
                if (isHTMLInputElement(node) && ("button" === node.type || "submit" === node.type || "reset" === node.type)) {
                    var nameFromValue = useAttribute(node, "value");
                    if (null !== nameFromValue) return nameFromValue;
                    if ("submit" === node.type) return "Submit";
                    if ("reset" === node.type) return "Reset";
                }
                var labels = getLabels(node);
                if (null !== labels && 0 !== labels.length) {
                    consultedNodes.add(node);
                    return arrayFrom(labels).map(function(element) {
                        return computeTextAlternative(element, {
                            isEmbeddedInLabel: true,
                            isReferenced: false,
                            recursion: true
                        });
                    }).filter(function(label) {
                        return label.length > 0;
                    }).join(" ");
                }
                if (isHTMLInputElement(node) && "image" === node.type) {
                    var _nameFromAlt = useAttribute(node, "alt");
                    if (null !== _nameFromAlt) return _nameFromAlt;
                    var nameFromTitle = useAttribute(node, "title");
                    if (null !== nameFromTitle) return nameFromTitle;
                    return "Submit Query";
                }
                if (hasAnyConcreteRoles(node, [
                    "button"
                ])) {
                    var nameFromSubTree = computeMiscTextAlternative(node, {
                        isEmbeddedInLabel: false,
                        isReferenced: false
                    });
                    if ("" !== nameFromSubTree) return nameFromSubTree;
                }
                return null;
            }
            function computeTextAlternative(current, context) {
                if (consultedNodes.has(current)) return "";
                if (!hidden && isHidden(current, getComputedStyle) && !context.isReferenced) {
                    consultedNodes.add(current);
                    return "";
                }
                var labelAttributeNode = isElement(current) ? current.getAttributeNode("aria-labelledby") : null;
                var labelElements = null === labelAttributeNode || consultedNodes.has(labelAttributeNode) ? [] : queryIdRefs(current, "aria-labelledby");
                if ("name" === compute && !context.isReferenced && labelElements.length > 0) {
                    consultedNodes.add(labelAttributeNode);
                    return labelElements.map(function(element) {
                        return computeTextAlternative(element, {
                            isEmbeddedInLabel: context.isEmbeddedInLabel,
                            isReferenced: true,
                            recursion: false
                        });
                    }).join(" ");
                }
                var skipToStep2E = context.recursion && isControl(current) && "name" === compute;
                if (!skipToStep2E) {
                    var ariaLabel = (isElement(current) && current.getAttribute("aria-label") || "").trim();
                    if ("" !== ariaLabel && "name" === compute) {
                        consultedNodes.add(current);
                        return ariaLabel;
                    }
                    if (!isMarkedPresentational(current)) {
                        var elementTextAlternative = computeElementTextAlternative(current);
                        if (null !== elementTextAlternative) {
                            consultedNodes.add(current);
                            return elementTextAlternative;
                        }
                    }
                }
                if (hasAnyConcreteRoles(current, [
                    "menu"
                ])) {
                    consultedNodes.add(current);
                    return "";
                }
                if (skipToStep2E || context.isEmbeddedInLabel || context.isReferenced) {
                    if (hasAnyConcreteRoles(current, [
                        "combobox",
                        "listbox"
                    ])) {
                        consultedNodes.add(current);
                        var selectedOptions = querySelectedOptions(current);
                        if (0 === selectedOptions.length) return isHTMLInputElement(current) ? current.value : "";
                        return arrayFrom(selectedOptions).map(function(selectedOption) {
                            return computeTextAlternative(selectedOption, {
                                isEmbeddedInLabel: context.isEmbeddedInLabel,
                                isReferenced: false,
                                recursion: true
                            });
                        }).join(" ");
                    }
                    if (hasAbstractRole(current, "range")) {
                        consultedNodes.add(current);
                        if (current.hasAttribute("aria-valuetext")) return current.getAttribute("aria-valuetext");
                        if (current.hasAttribute("aria-valuenow")) return current.getAttribute("aria-valuenow");
                        return current.getAttribute("value") || "";
                    }
                    if (hasAnyConcreteRoles(current, [
                        "textbox"
                    ])) {
                        consultedNodes.add(current);
                        return getValueOfTextbox(current);
                    }
                }
                if (allowsNameFromContent(current) || isElement(current) && context.isReferenced || isNativeHostLanguageTextAlternativeElement(current) || isDescendantOfNativeHostLanguageTextAlternativeElement(current)) {
                    var accumulatedText2F = computeMiscTextAlternative(current, {
                        isEmbeddedInLabel: context.isEmbeddedInLabel,
                        isReferenced: false
                    });
                    if ("" !== accumulatedText2F) {
                        consultedNodes.add(current);
                        return accumulatedText2F;
                    }
                }
                if (current.nodeType === current.TEXT_NODE) {
                    consultedNodes.add(current);
                    return current.textContent || "";
                }
                if (context.recursion) {
                    consultedNodes.add(current);
                    return computeMiscTextAlternative(current, {
                        isEmbeddedInLabel: context.isEmbeddedInLabel,
                        isReferenced: false
                    });
                }
                var tooltipAttributeValue = computeTooltipAttributeValue(current);
                if (null !== tooltipAttributeValue) {
                    consultedNodes.add(current);
                    return tooltipAttributeValue;
                }
                consultedNodes.add(current);
                return "";
            }
            return asFlatString(computeTextAlternative(root, {
                isEmbeddedInLabel: false,
                isReferenced: "description" === compute,
                recursion: false
            }));
        }
        function accessible_description_typeof(obj) {
            return accessible_description_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj) {
                return typeof obj;
            } : function(obj) {
                return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
            }, accessible_description_typeof(obj);
        }
        function ownKeys(object, enumerableOnly) {
            var keys = Object.keys(object);
            if (Object.getOwnPropertySymbols) {
                var symbols = Object.getOwnPropertySymbols(object);
                enumerableOnly && (symbols = symbols.filter(function(sym) {
                    return Object.getOwnPropertyDescriptor(object, sym).enumerable;
                })), keys.push.apply(keys, symbols);
            }
            return keys;
        }
        function _objectSpread(target) {
            for(var i = 1; i < arguments.length; i++){
                var source = null != arguments[i] ? arguments[i] : {};
                i % 2 ? ownKeys(Object(source), !0).forEach(function(key) {
                    accessible_description_defineProperty(target, key, source[key]);
                }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function(key) {
                    Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
                });
            }
            return target;
        }
        function accessible_description_defineProperty(obj, key, value) {
            key = accessible_description_toPropertyKey(key);
            if (key in obj) Object.defineProperty(obj, key, {
                value: value,
                enumerable: true,
                configurable: true,
                writable: true
            });
            else obj[key] = value;
            return obj;
        }
        function accessible_description_toPropertyKey(arg) {
            var key = accessible_description_toPrimitive(arg, "string");
            return "symbol" === accessible_description_typeof(key) ? key : String(key);
        }
        function accessible_description_toPrimitive(input, hint) {
            if ("object" !== accessible_description_typeof(input) || null === input) return input;
            var prim = input[Symbol.toPrimitive];
            if (void 0 !== prim) {
                var res = prim.call(input, hint || "default");
                if ("object" !== accessible_description_typeof(res)) return res;
                throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return ("string" === hint ? String : Number)(input);
        }
        function computeAccessibleDescription(root) {
            var options = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
            var description = queryIdRefs(root, "aria-describedby").map(function(element) {
                return accessible_name_and_description_computeTextAlternative(element, _objectSpread(_objectSpread({}, options), {}, {
                    compute: "description"
                }));
            }).join(" ");
            if ("" === description) {
                var title = root.getAttribute("title");
                description = null === title ? "" : title;
            }
            return description;
        }
        function prohibitsNaming(node) {
            return hasAnyConcreteRoles(node, [
                "caption",
                "code",
                "deletion",
                "emphasis",
                "generic",
                "insertion",
                "paragraph",
                "presentation",
                "strong",
                "subscript",
                "superscript"
            ]);
        }
        function computeAccessibleName(root) {
            var options = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
            if (prohibitsNaming(root)) return "";
            return accessible_name_and_description_computeTextAlternative(root, options);
        }
        var lib = __webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/index.js");
        var lz_string = __webpack_require__("../../../node_modules/.pnpm/lz-string@1.5.0/node_modules/lz-string/libs/lz-string.js");
        var lz_string_default = /*#__PURE__*/ __webpack_require__.n(lz_string);
        module = __webpack_require__.hmd(module);
        function escapeHTML(str) {
            return str.replace(/</g, '&lt;').replace(/>/g, '&gt;');
        }
        const printProps = (keys, props, config, indentation, depth, refs, printer)=>{
            const indentationNext = indentation + config.indent;
            const colors = config.colors;
            return keys.map((key)=>{
                const value = props[key];
                let printed = printer(value, config, indentationNext, depth, refs);
                if ('string' != typeof value) {
                    if (-1 !== printed.indexOf('\n')) printed = config.spacingOuter + indentationNext + printed + config.spacingOuter + indentation;
                    printed = '{' + printed + '}';
                }
                return config.spacingInner + indentation + colors.prop.open + key + colors.prop.close + '=' + colors.value.open + printed + colors.value.close;
            }).join('');
        };
        const NodeTypeTextNode = 3;
        const printChildren = (children, config, indentation, depth, refs, printer)=>children.map((child)=>{
                const printedChild = 'string' == typeof child ? printText(child, config) : printer(child, config, indentation, depth, refs);
                if ('' === printedChild && 'object' == typeof child && null !== child && child.nodeType !== NodeTypeTextNode) return '';
                return config.spacingOuter + indentation + printedChild;
            }).join('');
        const printText = (text, config)=>{
            const contentColor = config.colors.content;
            return contentColor.open + escapeHTML(text) + contentColor.close;
        };
        const printComment = (comment, config)=>{
            const commentColor = config.colors.comment;
            return commentColor.open + '<!--' + escapeHTML(comment) + '-->' + commentColor.close;
        };
        const printElement = (type, printedProps, printedChildren, config, indentation)=>{
            const tagColor = config.colors.tag;
            return tagColor.open + '<' + type + (printedProps && tagColor.close + printedProps + config.spacingOuter + indentation + tagColor.open) + (printedChildren ? '>' + tagColor.close + printedChildren + config.spacingOuter + indentation + tagColor.open + '</' + type : (printedProps && !config.min ? '' : ' ') + '/') + '>' + tagColor.close;
        };
        const printElementAsLeaf = (type, config)=>{
            const tagColor = config.colors.tag;
            return tagColor.open + '<' + type + tagColor.close + ' …' + tagColor.open + ' />' + tagColor.close;
        };
        const ELEMENT_NODE$1 = 1;
        const TEXT_NODE$1 = 3;
        const COMMENT_NODE$1 = 8;
        const FRAGMENT_NODE = 11;
        const ELEMENT_REGEXP = /^((HTML|SVG)\w*)?Element$/;
        const isCustomElement = (val)=>{
            const { tagName } = val;
            return Boolean('string' == typeof tagName && tagName.includes('-') || 'function' == typeof val.hasAttribute && val.hasAttribute('is'));
        };
        const testNode = (val)=>{
            const constructorName = val.constructor.name;
            const { nodeType } = val;
            return nodeType === ELEMENT_NODE$1 && (ELEMENT_REGEXP.test(constructorName) || isCustomElement(val)) || nodeType === TEXT_NODE$1 && 'Text' === constructorName || nodeType === COMMENT_NODE$1 && 'Comment' === constructorName || nodeType === FRAGMENT_NODE && 'DocumentFragment' === constructorName;
        };
        function nodeIsText(node) {
            return node.nodeType === TEXT_NODE$1;
        }
        function nodeIsComment(node) {
            return node.nodeType === COMMENT_NODE$1;
        }
        function nodeIsFragment(node) {
            return node.nodeType === FRAGMENT_NODE;
        }
        function createDOMElementFilter(filterNode) {
            return {
                test: (val)=>{
                    var _val$constructor2;
                    return ((null == val || null == (_val$constructor2 = val.constructor) ? void 0 : _val$constructor2.name) || isCustomElement(val)) && testNode(val);
                },
                serialize: (node, config, indentation, depth, refs, printer)=>{
                    if (nodeIsText(node)) return printText(node.data, config);
                    if (nodeIsComment(node)) return printComment(node.data, config);
                    const type = nodeIsFragment(node) ? "DocumentFragment" : node.tagName.toLowerCase();
                    if (++depth > config.maxDepth) return printElementAsLeaf(type, config);
                    return printElement(type, printProps(nodeIsFragment(node) ? [] : Array.from(node.attributes).map((attr)=>attr.name).sort(), nodeIsFragment(node) ? {} : Array.from(node.attributes).reduce((props, attribute)=>{
                        props[attribute.name] = attribute.value;
                        return props;
                    }, {}), config, indentation + config.indent, depth, refs, printer), printChildren(Array.prototype.slice.call(node.childNodes || node.children).filter(filterNode), config, indentation + config.indent, depth, refs, printer), config, indentation);
                }
            };
        }
        let picocolors = null;
        let readFileSync = null;
        let codeFrameColumns = null;
        try {
            const nodeRequire = module && module.require;
            readFileSync = nodeRequire.call(module, 'fs').readFileSync;
            codeFrameColumns = nodeRequire.call(module, '@babel/code-frame').codeFrameColumns;
            picocolors = nodeRequire.call(module, 'picocolors');
        } catch  {}
        function getCodeFrame(frame) {
            const locationStart = frame.indexOf('(') + 1;
            const locationEnd = frame.indexOf(')');
            const frameLocation = frame.slice(locationStart, locationEnd);
            const frameLocationElements = frameLocation.split(':');
            const [filename, line, column] = [
                frameLocationElements[0],
                parseInt(frameLocationElements[1], 10),
                parseInt(frameLocationElements[2], 10)
            ];
            let rawFileContents = '';
            try {
                rawFileContents = readFileSync(filename, 'utf-8');
            } catch  {
                return '';
            }
            const codeFrame = codeFrameColumns(rawFileContents, {
                start: {
                    line,
                    column
                }
            }, {
                highlightCode: true,
                linesBelow: 0
            });
            return picocolors.dim(frameLocation) + "\n" + codeFrame + "\n";
        }
        function getUserCodeFrame() {
            if (!readFileSync || !codeFrameColumns) return '';
            const err = new Error();
            const firstClientCodeFrame = err.stack.split('\n').slice(1).find((frame)=>!frame.includes('node_modules/'));
            return getCodeFrame(firstClientCodeFrame);
        }
        const TEXT_NODE = 3;
        function jestFakeTimersAreEnabled() {
            if ('undefined' != typeof jest && null !== jest) return true === setTimeout._isMockFunction || Object.prototype.hasOwnProperty.call(setTimeout, 'clock');
            return false;
        }
        function getDocument() {
            if ('undefined' == typeof window) throw new Error('Could not find default container');
            return window.document;
        }
        function getWindowFromNode(node) {
            if (node.defaultView) return node.defaultView;
            if (node.ownerDocument && node.ownerDocument.defaultView) return node.ownerDocument.defaultView;
            if (node.window) return node.window;
            if (node.ownerDocument && null === node.ownerDocument.defaultView) throw new Error("It looks like the window object is not available for the provided node.");
            if (node.then instanceof Function) throw new Error("It looks like you passed a Promise object instead of a DOM node. Did you do something like `fireEvent.click(screen.findBy...` when you meant to use a `getBy` query `fireEvent.click(screen.getBy...`, or await the findBy query `fireEvent.click(await screen.findBy...`?");
            else if (Array.isArray(node)) throw new Error("It looks like you passed an Array instead of a DOM node. Did you do something like `fireEvent.click(screen.getAllBy...` when you meant to use a `getBy` query `fireEvent.click(screen.getBy...`?");
            else if ('function' == typeof node.debug && 'function' == typeof node.logTestingPlaygroundURL) throw new Error("It looks like you passed a `screen` object. Did you do something like `fireEvent.click(screen, ...` when you meant to use a query, e.g. `fireEvent.click(screen.getBy..., `?");
            else throw new Error("The given node is not an Element, the node type is: " + typeof node + ".");
        }
        function checkContainerType(container) {
            if (!container || 'function' != typeof container.querySelector || 'function' != typeof container.querySelectorAll) throw new TypeError("Expected container to be an Element, a Document or a DocumentFragment but got " + getTypeName(container) + ".");
            function getTypeName(object) {
                if ('object' == typeof object) return null === object ? 'null' : object.constructor.name;
                return typeof object;
            }
        }
        const shouldHighlight = ()=>{
            if ('undefined' == typeof process) return false;
            let colors;
            try {
                var _process$env;
                const colorsJSON = null == (_process$env = process.env) ? void 0 : _process$env.COLORS;
                if (colorsJSON) colors = JSON.parse(colorsJSON);
            } catch  {}
            if ('boolean' == typeof colors) return colors;
            return void 0 !== process.versions && void 0 !== process.versions.node;
        };
        const { DOMCollection } = build.plugins;
        const ELEMENT_NODE = 1;
        const COMMENT_NODE = 8;
        function filterCommentsAndDefaultIgnoreTagsTags(value) {
            return value.nodeType !== COMMENT_NODE && (value.nodeType !== ELEMENT_NODE || !value.matches(getConfig().defaultIgnore));
        }
        function prettyDOM(dom, maxLength, options) {
            if (void 0 === options) options = {};
            if (!dom) dom = getDocument().body;
            if ('number' != typeof maxLength) maxLength = 'undefined' != typeof process && void 0 !== process.env && process.env.DEBUG_PRINT_LIMIT || 7000;
            if (0 === maxLength) return '';
            if (dom.documentElement) dom = dom.documentElement;
            let domTypeName = typeof dom;
            if ('object' === domTypeName) domTypeName = dom.constructor.name;
            else dom = {};
            if (!('outerHTML' in dom)) throw new TypeError("Expected an element or document but got " + domTypeName);
            const { filterNode = filterCommentsAndDefaultIgnoreTagsTags, ...prettyFormatOptions } = options;
            const debugContent = build.format(dom, {
                plugins: [
                    createDOMElementFilter(filterNode),
                    DOMCollection
                ],
                printFunctionName: false,
                highlight: shouldHighlight(),
                ...prettyFormatOptions
            });
            return void 0 !== maxLength && dom.outerHTML.length > maxLength ? debugContent.slice(0, maxLength) + "..." : debugContent;
        }
        const logDOM = function() {
            const userCodeFrame = getUserCodeFrame();
            if (userCodeFrame) console.log(prettyDOM(...arguments) + "\n\n" + userCodeFrame);
            else console.log(prettyDOM(...arguments));
        };
        let dom_esm_config = {
            testIdAttribute: 'data-testid',
            asyncUtilTimeout: 1000,
            asyncWrapper: (cb)=>cb(),
            unstable_advanceTimersWrapper: (cb)=>cb(),
            eventWrapper: (cb)=>cb(),
            defaultHidden: false,
            defaultIgnore: "script, style",
            showOriginalStackTrace: false,
            throwSuggestions: false,
            getElementError (message, container) {
                const prettifiedDOM = prettyDOM(container);
                const error = new Error([
                    message,
                    "Ignored nodes: comments, " + dom_esm_config.defaultIgnore + "\n" + prettifiedDOM
                ].filter(Boolean).join('\n\n'));
                error.name = 'TestingLibraryElementError';
                return error;
            },
            _disableExpensiveErrorDiagnostics: false,
            computedStyleSupportsPseudoElements: false
        };
        function runWithExpensiveErrorDiagnosticsDisabled(callback) {
            try {
                dom_esm_config._disableExpensiveErrorDiagnostics = true;
                return callback();
            } finally{
                dom_esm_config._disableExpensiveErrorDiagnostics = false;
            }
        }
        function configure(newConfig) {
            if ('function' == typeof newConfig) newConfig = newConfig(dom_esm_config);
            dom_esm_config = {
                ...dom_esm_config,
                ...newConfig
            };
        }
        function getConfig() {
            return dom_esm_config;
        }
        const labelledNodeNames = [
            'button',
            'meter',
            'output',
            'progress',
            'select',
            'textarea',
            'input'
        ];
        function getTextContent(node) {
            if (labelledNodeNames.includes(node.nodeName.toLowerCase())) return '';
            if (node.nodeType === TEXT_NODE) return node.textContent;
            return Array.from(node.childNodes).map((childNode)=>getTextContent(childNode)).join('');
        }
        function getLabelContent(element) {
            let textContent;
            textContent = 'label' === element.tagName.toLowerCase() ? getTextContent(element) : element.value || element.textContent;
            return textContent;
        }
        function getRealLabels(element) {
            if (void 0 !== element.labels) {
                var _labels;
                return null != (_labels = element.labels) ? _labels : [];
            }
            if (!isLabelable(element)) return [];
            const labels = element.ownerDocument.querySelectorAll('label');
            return Array.from(labels).filter((label)=>label.control === element);
        }
        function isLabelable(element) {
            return /BUTTON|METER|OUTPUT|PROGRESS|SELECT|TEXTAREA/.test(element.tagName) || 'INPUT' === element.tagName && 'hidden' !== element.getAttribute('type');
        }
        function dom_esm_getLabels(container, element, _temp) {
            let { selector = '*' } = void 0 === _temp ? {} : _temp;
            const ariaLabelledBy = element.getAttribute('aria-labelledby');
            const labelsId = ariaLabelledBy ? ariaLabelledBy.split(' ') : [];
            return labelsId.length ? labelsId.map((labelId)=>{
                const labellingElement = container.querySelector("[id=\"" + labelId + "\"]");
                return labellingElement ? {
                    content: getLabelContent(labellingElement),
                    formControl: null
                } : {
                    content: '',
                    formControl: null
                };
            }) : Array.from(getRealLabels(element)).map((label)=>{
                const textToMatch = getLabelContent(label);
                const formControlSelector = 'button, input, meter, output, progress, select, textarea';
                const labelledFormControl = Array.from(label.querySelectorAll(formControlSelector)).filter((formControlElement)=>formControlElement.matches(selector))[0];
                return {
                    content: textToMatch,
                    formControl: labelledFormControl
                };
            });
        }
        function assertNotNullOrUndefined(matcher) {
            if (null == matcher) throw new Error("It looks like " + matcher + " was passed instead of a matcher. Did you do something like getByText(" + matcher + ")?");
        }
        function fuzzyMatches(textToMatch, node, matcher, normalizer) {
            if ('string' != typeof textToMatch) return false;
            assertNotNullOrUndefined(matcher);
            const normalizedText = normalizer(textToMatch);
            if ('string' == typeof matcher || 'number' == typeof matcher) return normalizedText.toLowerCase().includes(matcher.toString().toLowerCase());
            if ('function' == typeof matcher) return matcher(normalizedText, node);
            return matchRegExp(matcher, normalizedText);
        }
        function matches(textToMatch, node, matcher, normalizer) {
            if ('string' != typeof textToMatch) return false;
            assertNotNullOrUndefined(matcher);
            const normalizedText = normalizer(textToMatch);
            if (matcher instanceof Function) return matcher(normalizedText, node);
            if (matcher instanceof RegExp) return matchRegExp(matcher, normalizedText);
            return normalizedText === String(matcher);
        }
        function getDefaultNormalizer(_temp) {
            let { trim = true, collapseWhitespace = true } = void 0 === _temp ? {} : _temp;
            return (text)=>{
                let normalizedText = text;
                normalizedText = trim ? normalizedText.trim() : normalizedText;
                normalizedText = collapseWhitespace ? normalizedText.replace(/\s+/g, ' ') : normalizedText;
                return normalizedText;
            };
        }
        function makeNormalizer(_ref) {
            let { trim, collapseWhitespace, normalizer } = _ref;
            if (!normalizer) return getDefaultNormalizer({
                trim,
                collapseWhitespace
            });
            if (void 0 !== trim || void 0 !== collapseWhitespace) throw new Error('trim and collapseWhitespace are not supported with a normalizer. If you want to use the default trim and collapseWhitespace logic in your normalizer, use "getDefaultNormalizer({trim, collapseWhitespace})" and compose that into your normalizer');
            return normalizer;
        }
        function matchRegExp(matcher, text) {
            const match = matcher.test(text);
            if (matcher.global && 0 !== matcher.lastIndex) {
                console.warn("To match all elements we had to reset the lastIndex of the RegExp because the global flag is enabled. We encourage to remove the global flag from the RegExp.");
                matcher.lastIndex = 0;
            }
            return match;
        }
        function getNodeText(node) {
            if (node.matches('input[type=submit], input[type=button], input[type=reset]')) return node.value;
            return Array.from(node.childNodes).filter((child)=>child.nodeType === TEXT_NODE && Boolean(child.textContent)).map((c)=>c.textContent).join('');
        }
        const elementRoleList = buildElementRoleList(lib.elementRoles);
        function dom_esm_isSubtreeInaccessible(element) {
            if (true === element.hidden) return true;
            if ('true' === element.getAttribute('aria-hidden')) return true;
            const window1 = element.ownerDocument.defaultView;
            if ('none' === window1.getComputedStyle(element).display) return true;
            return false;
        }
        function dom_esm_isInaccessible(element, options) {
            if (void 0 === options) options = {};
            const { isSubtreeInaccessible: isSubtreeInaccessibleImpl = dom_esm_isSubtreeInaccessible } = options;
            const window1 = element.ownerDocument.defaultView;
            if ('hidden' === window1.getComputedStyle(element).visibility) return true;
            let currentElement = element;
            while(currentElement){
                if (isSubtreeInaccessibleImpl(currentElement)) return true;
                currentElement = currentElement.parentElement;
            }
            return false;
        }
        function getImplicitAriaRoles(currentNode) {
            for (const { match, roles } of elementRoleList)if (match(currentNode)) return [
                ...roles
            ];
            return [];
        }
        function buildElementRoleList(elementRolesMap) {
            function makeElementSelector(_ref) {
                let { name, attributes } = _ref;
                return "" + name + attributes.map((_ref2)=>{
                    let { name: attributeName, value, constraints = [] } = _ref2;
                    const shouldNotExist = -1 !== constraints.indexOf('undefined');
                    const shouldBeNonEmpty = -1 !== constraints.indexOf('set');
                    const hasExplicitValue = void 0 !== value;
                    if (hasExplicitValue) return "[" + attributeName + "=\"" + value + "\"]";
                    if (shouldNotExist) return ":not([" + attributeName + "])";
                    if (shouldBeNonEmpty) return "[" + attributeName + "]:not([" + attributeName + "=\"\"])";
                    return "[" + attributeName + "]";
                }).join('');
            }
            function getSelectorSpecificity(_ref3) {
                let { attributes = [] } = _ref3;
                return attributes.length;
            }
            function bySelectorSpecificity(_ref4, _ref5) {
                let { specificity: leftSpecificity } = _ref4;
                let { specificity: rightSpecificity } = _ref5;
                return rightSpecificity - leftSpecificity;
            }
            function match(element) {
                let { attributes = [] } = element;
                const typeTextIndex = attributes.findIndex((attribute)=>attribute.value && 'type' === attribute.name && 'text' === attribute.value);
                if (typeTextIndex >= 0) attributes = [
                    ...attributes.slice(0, typeTextIndex),
                    ...attributes.slice(typeTextIndex + 1)
                ];
                const selector = makeElementSelector({
                    ...element,
                    attributes
                });
                return (node)=>{
                    if (typeTextIndex >= 0 && 'text' !== node.type) return false;
                    return node.matches(selector);
                };
            }
            let result = [];
            for (const [element, roles] of elementRolesMap.entries())result = [
                ...result,
                {
                    match: match(element),
                    roles: Array.from(roles),
                    specificity: getSelectorSpecificity(element)
                }
            ];
            return result.sort(bySelectorSpecificity);
        }
        function getRoles(container, _temp) {
            let { hidden = false } = void 0 === _temp ? {} : _temp;
            function flattenDOM(node) {
                return [
                    node,
                    ...Array.from(node.children).reduce((acc, child)=>[
                            ...acc,
                            ...flattenDOM(child)
                        ], [])
                ];
            }
            return flattenDOM(container).filter((element)=>false === hidden ? false === dom_esm_isInaccessible(element) : true).reduce((acc, node)=>{
                let roles = [];
                roles = node.hasAttribute('role') ? node.getAttribute('role').split(' ').slice(0, 1) : getImplicitAriaRoles(node);
                return roles.reduce((rolesAcc, role)=>Array.isArray(rolesAcc[role]) ? {
                        ...rolesAcc,
                        [role]: [
                            ...rolesAcc[role],
                            node
                        ]
                    } : {
                        ...rolesAcc,
                        [role]: [
                            node
                        ]
                    }, acc);
            }, {});
        }
        function prettyRoles(dom, _ref6) {
            let { hidden, includeDescription } = _ref6;
            const roles = getRoles(dom, {
                hidden
            });
            return Object.entries(roles).filter((_ref7)=>{
                let [role] = _ref7;
                return 'generic' !== role;
            }).map((_ref8)=>{
                let [role, elements] = _ref8;
                const delimiterBar = '-'.repeat(50);
                const elementsString = elements.map((el)=>{
                    const nameString = "Name \"" + computeAccessibleName(el, {
                        computedStyleSupportsPseudoElements: getConfig().computedStyleSupportsPseudoElements
                    }) + "\":\n";
                    const domString = prettyDOM(el.cloneNode(false));
                    if (includeDescription) {
                        const descriptionString = 'Description "' + computeAccessibleDescription(el, {
                            computedStyleSupportsPseudoElements: getConfig().computedStyleSupportsPseudoElements
                        }) + "\":\n";
                        return "" + nameString + descriptionString + domString;
                    }
                    return "" + nameString + domString;
                }).join('\n\n');
                return role + ":\n\n" + elementsString + "\n\n" + delimiterBar;
            }).join('\n');
        }
        const logRoles = function(dom, _temp2) {
            let { hidden = false } = void 0 === _temp2 ? {} : _temp2;
            return console.log(prettyRoles(dom, {
                hidden
            }));
        };
        function computeAriaSelected(element) {
            if ('OPTION' === element.tagName) return element.selected;
            return checkBooleanAttribute(element, 'aria-selected');
        }
        function computeAriaBusy(element) {
            return 'true' === element.getAttribute('aria-busy');
        }
        function computeAriaChecked(element) {
            if ('indeterminate' in element && element.indeterminate) return;
            if ('checked' in element) return element.checked;
            return checkBooleanAttribute(element, 'aria-checked');
        }
        function computeAriaPressed(element) {
            return checkBooleanAttribute(element, 'aria-pressed');
        }
        function computeAriaCurrent(element) {
            var _ref9, _checkBooleanAttribut;
            return null != (_ref9 = null != (_checkBooleanAttribut = checkBooleanAttribute(element, 'aria-current')) ? _checkBooleanAttribut : element.getAttribute('aria-current')) ? _ref9 : false;
        }
        function computeAriaExpanded(element) {
            return checkBooleanAttribute(element, 'aria-expanded');
        }
        function checkBooleanAttribute(element, attribute) {
            const attributeValue = element.getAttribute(attribute);
            if ('true' === attributeValue) return true;
            if ('false' === attributeValue) return false;
        }
        function computeHeadingLevel(element) {
            const implicitHeadingLevels = {
                H1: 1,
                H2: 2,
                H3: 3,
                H4: 4,
                H5: 5,
                H6: 6
            };
            const ariaLevelAttribute = element.getAttribute('aria-level') && Number(element.getAttribute('aria-level'));
            return ariaLevelAttribute || implicitHeadingLevels[element.tagName];
        }
        function computeAriaValueNow(element) {
            const valueNow = element.getAttribute('aria-valuenow');
            return null === valueNow ? void 0 : +valueNow;
        }
        function computeAriaValueMax(element) {
            const valueMax = element.getAttribute('aria-valuemax');
            return null === valueMax ? void 0 : +valueMax;
        }
        function computeAriaValueMin(element) {
            const valueMin = element.getAttribute('aria-valuemin');
            return null === valueMin ? void 0 : +valueMin;
        }
        function computeAriaValueText(element) {
            const valueText = element.getAttribute('aria-valuetext');
            return null === valueText ? void 0 : valueText;
        }
        const normalize = getDefaultNormalizer();
        function escapeRegExp(string) {
            return string.replace(/[.*+\-?^${}()|[\]\\]/g, '\\$&');
        }
        function getRegExpMatcher(string) {
            return new RegExp(escapeRegExp(string.toLowerCase()), 'i');
        }
        function makeSuggestion(queryName, element, content, _ref) {
            let { variant, name } = _ref;
            let warning = '';
            const queryOptions = {};
            const queryArgs = [
                [
                    'Role',
                    'TestId'
                ].includes(queryName) ? content : getRegExpMatcher(content)
            ];
            if (name) queryOptions.name = getRegExpMatcher(name);
            if ('Role' === queryName && dom_esm_isInaccessible(element)) {
                queryOptions.hidden = true;
                warning = "Element is inaccessible. This means that the element and all its children are invisible to screen readers.\n    If you are using the aria-hidden prop, make sure this is the right choice for your case.\n    ";
            }
            if (Object.keys(queryOptions).length > 0) queryArgs.push(queryOptions);
            const queryMethod = variant + "By" + queryName;
            return {
                queryName,
                queryMethod,
                queryArgs,
                variant,
                warning,
                toString () {
                    if (warning) console.warn(warning);
                    let [text, options] = queryArgs;
                    text = 'string' == typeof text ? "'" + text + "'" : text;
                    options = options ? ", { " + Object.entries(options).map((_ref2)=>{
                        let [k, v] = _ref2;
                        return k + ": " + v;
                    }).join(', ') + " }" : '';
                    return queryMethod + "(" + text + options + ")";
                }
            };
        }
        function canSuggest(currentMethod, requestedMethod, data) {
            return data && (!requestedMethod || requestedMethod.toLowerCase() === currentMethod.toLowerCase());
        }
        function getSuggestedQuery(element, variant, method) {
            var _element$getAttribute, _getImplicitAriaRoles;
            if (void 0 === variant) variant = 'get';
            if (element.matches(getConfig().defaultIgnore)) return;
            const role = null != (_element$getAttribute = element.getAttribute('role')) ? _element$getAttribute : null == (_getImplicitAriaRoles = getImplicitAriaRoles(element)) ? void 0 : _getImplicitAriaRoles[0];
            if ('generic' !== role && canSuggest('Role', method, role)) return makeSuggestion('Role', element, role, {
                variant,
                name: computeAccessibleName(element, {
                    computedStyleSupportsPseudoElements: getConfig().computedStyleSupportsPseudoElements
                })
            });
            const labelText = dom_esm_getLabels(document, element).map((label)=>label.content).join(' ');
            if (canSuggest('LabelText', method, labelText)) return makeSuggestion('LabelText', element, labelText, {
                variant
            });
            const placeholderText = element.getAttribute('placeholder');
            if (canSuggest('PlaceholderText', method, placeholderText)) return makeSuggestion('PlaceholderText', element, placeholderText, {
                variant
            });
            const textContent = normalize(getNodeText(element));
            if (canSuggest('Text', method, textContent)) return makeSuggestion('Text', element, textContent, {
                variant
            });
            if (canSuggest('DisplayValue', method, element.value)) return makeSuggestion('DisplayValue', element, normalize(element.value), {
                variant
            });
            const alt = element.getAttribute('alt');
            if (canSuggest('AltText', method, alt)) return makeSuggestion('AltText', element, alt, {
                variant
            });
            const title = element.getAttribute('title');
            if (canSuggest('Title', method, title)) return makeSuggestion('Title', element, title, {
                variant
            });
            const testId = element.getAttribute(getConfig().testIdAttribute);
            if (canSuggest('TestId', method, testId)) return makeSuggestion('TestId', element, testId, {
                variant
            });
        }
        function copyStackTrace(target, source) {
            target.stack = source.stack.replace(source.message, target.message);
        }
        function waitFor(callback, _ref) {
            let { container = getDocument(), timeout = getConfig().asyncUtilTimeout, showOriginalStackTrace = getConfig().showOriginalStackTrace, stackTraceError, interval = 50, onTimeout = (error)=>{
                Object.defineProperty(error, 'message', {
                    value: getConfig().getElementError(error.message, container).message
                });
                return error;
            }, mutationObserverOptions = {
                subtree: true,
                childList: true,
                attributes: true,
                characterData: true
            } } = _ref;
            if ('function' != typeof callback) throw new TypeError('Received `callback` arg must be a function');
            return new Promise(async (resolve, reject)=>{
                let lastError, intervalId, observer;
                let finished = false;
                let promiseStatus = 'idle';
                const overallTimeoutTimer = setTimeout(handleTimeout, timeout);
                const usingJestFakeTimers = jestFakeTimersAreEnabled();
                if (usingJestFakeTimers) {
                    const { unstable_advanceTimersWrapper: advanceTimersWrapper } = getConfig();
                    checkCallback();
                    while(!finished){
                        if (!jestFakeTimersAreEnabled()) {
                            const error = new Error("Changed from using fake timers to real timers while using waitFor. This is not allowed and will result in very strange behavior. Please ensure you're awaiting all async things your test is doing before changing to real timers. For more info, please go to https://github.com/testing-library/dom-testing-library/issues/830");
                            if (!showOriginalStackTrace) copyStackTrace(error, stackTraceError);
                            reject(error);
                            return;
                        }
                        await advanceTimersWrapper(async ()=>{
                            jest.advanceTimersByTime(interval);
                        });
                        if (finished) break;
                        checkCallback();
                    }
                } else {
                    try {
                        checkContainerType(container);
                    } catch (e) {
                        reject(e);
                        return;
                    }
                    intervalId = setInterval(checkRealTimersCallback, interval);
                    const { MutationObserver } = getWindowFromNode(container);
                    observer = new MutationObserver(checkRealTimersCallback);
                    observer.observe(container, mutationObserverOptions);
                    checkCallback();
                }
                function onDone(error, result) {
                    finished = true;
                    clearTimeout(overallTimeoutTimer);
                    if (!usingJestFakeTimers) {
                        clearInterval(intervalId);
                        observer.disconnect();
                    }
                    if (error) reject(error);
                    else resolve(result);
                }
                function checkRealTimersCallback() {
                    if (!jestFakeTimersAreEnabled()) return checkCallback();
                    {
                        const error = new Error("Changed from using real timers to fake timers while using waitFor. This is not allowed and will result in very strange behavior. Please ensure you're awaiting all async things your test is doing before changing to fake timers. For more info, please go to https://github.com/testing-library/dom-testing-library/issues/830");
                        if (!showOriginalStackTrace) copyStackTrace(error, stackTraceError);
                        return reject(error);
                    }
                }
                function checkCallback() {
                    if ('pending' === promiseStatus) return;
                    try {
                        const result = runWithExpensiveErrorDiagnosticsDisabled(callback);
                        if ('function' == typeof (null == result ? void 0 : result.then)) {
                            promiseStatus = 'pending';
                            result.then((resolvedValue)=>{
                                promiseStatus = 'resolved';
                                onDone(null, resolvedValue);
                            }, (rejectedValue)=>{
                                promiseStatus = 'rejected';
                                lastError = rejectedValue;
                            });
                        } else onDone(null, result);
                    } catch (error) {
                        lastError = error;
                    }
                }
                function handleTimeout() {
                    let error;
                    if (lastError) {
                        error = lastError;
                        if (!showOriginalStackTrace && 'TestingLibraryElementError' === error.name) copyStackTrace(error, stackTraceError);
                    } else {
                        error = new Error('Timed out in waitFor.');
                        if (!showOriginalStackTrace) copyStackTrace(error, stackTraceError);
                    }
                    onDone(onTimeout(error), null);
                }
            });
        }
        function waitForWrapper(callback, options) {
            const stackTraceError = new Error('STACK_TRACE_MESSAGE');
            return getConfig().asyncWrapper(()=>waitFor(callback, {
                    stackTraceError,
                    ...options
                }));
        }
        function getElementError(message, container) {
            return getConfig().getElementError(message, container);
        }
        function getMultipleElementsFoundError(message, container) {
            return getElementError(message + "\n\n(If this is intentional, then use the `*AllBy*` variant of the query (like `queryAllByText`, `getAllByText`, or `findAllByText`)).", container);
        }
        function queryAllByAttribute(attribute, container, text, _temp) {
            let { exact = true, collapseWhitespace, trim, normalizer } = void 0 === _temp ? {} : _temp;
            const matcher = exact ? matches : fuzzyMatches;
            const matchNormalizer = makeNormalizer({
                collapseWhitespace,
                trim,
                normalizer
            });
            return Array.from(container.querySelectorAll("[" + attribute + "]")).filter((node)=>matcher(node.getAttribute(attribute), node, text, matchNormalizer));
        }
        function queryByAttribute(attribute, container, text, options) {
            const els = queryAllByAttribute(attribute, container, text, options);
            if (els.length > 1) throw getMultipleElementsFoundError("Found multiple elements by [" + attribute + "=" + text + "]", container);
            return els[0] || null;
        }
        function makeSingleQuery(allQuery, getMultipleError) {
            return function(container) {
                for(var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++)args[_key - 1] = arguments[_key];
                const els = allQuery(container, ...args);
                if (els.length > 1) {
                    const elementStrings = els.map((element)=>getElementError(null, element).message).join('\n\n');
                    throw getMultipleElementsFoundError(getMultipleError(container, ...args) + "\n\nHere are the matching elements:\n\n" + elementStrings, container);
                }
                return els[0] || null;
            };
        }
        function getSuggestionError(suggestion, container) {
            return getConfig().getElementError("A better query is available, try this:\n" + suggestion.toString() + "\n", container);
        }
        function makeGetAllQuery(allQuery, getMissingError) {
            return function(container) {
                for(var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++)args[_key2 - 1] = arguments[_key2];
                const els = allQuery(container, ...args);
                if (!els.length) throw getConfig().getElementError(getMissingError(container, ...args), container);
                return els;
            };
        }
        function makeFindQuery(getter) {
            return (container, text, options, waitForOptions)=>waitForWrapper(()=>getter(container, text, options), {
                    container,
                    ...waitForOptions
                });
        }
        const wrapSingleQueryWithSuggestion = (query, queryAllByName, variant)=>function(container) {
                for(var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++)args[_key3 - 1] = arguments[_key3];
                const element = query(container, ...args);
                const [{ suggest = getConfig().throwSuggestions } = {}] = args.slice(-1);
                if (element && suggest) {
                    const suggestion = getSuggestedQuery(element, variant);
                    if (suggestion && !queryAllByName.endsWith(suggestion.queryName)) throw getSuggestionError(suggestion.toString(), container);
                }
                return element;
            };
        const wrapAllByQueryWithSuggestion = (query, queryAllByName, variant)=>function(container) {
                for(var _len4 = arguments.length, args = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++)args[_key4 - 1] = arguments[_key4];
                const els = query(container, ...args);
                const [{ suggest = getConfig().throwSuggestions } = {}] = args.slice(-1);
                if (els.length && suggest) {
                    const uniqueSuggestionMessages = [
                        ...new Set(els.map((element)=>{
                            var _getSuggestedQuery;
                            return null == (_getSuggestedQuery = getSuggestedQuery(element, variant)) ? void 0 : _getSuggestedQuery.toString();
                        }))
                    ];
                    if (1 === uniqueSuggestionMessages.length && !queryAllByName.endsWith(getSuggestedQuery(els[0], variant).queryName)) throw getSuggestionError(uniqueSuggestionMessages[0], container);
                }
                return els;
            };
        function buildQueries(queryAllBy, getMultipleError, getMissingError) {
            const queryBy = wrapSingleQueryWithSuggestion(makeSingleQuery(queryAllBy, getMultipleError), queryAllBy.name, 'query');
            const getAllBy = makeGetAllQuery(queryAllBy, getMissingError);
            const getBy = makeSingleQuery(getAllBy, getMultipleError);
            const getByWithSuggestions = wrapSingleQueryWithSuggestion(getBy, queryAllBy.name, 'get');
            const getAllWithSuggestions = wrapAllByQueryWithSuggestion(getAllBy, queryAllBy.name.replace('query', 'get'), 'getAll');
            const findAllBy = makeFindQuery(wrapAllByQueryWithSuggestion(getAllBy, queryAllBy.name, 'findAll'));
            const findBy = makeFindQuery(wrapSingleQueryWithSuggestion(getBy, queryAllBy.name, 'find'));
            return [
                queryBy,
                getAllWithSuggestions,
                getByWithSuggestions,
                findAllBy,
                findBy
            ];
        }
        var queryHelpers = /*#__PURE__*/ Object.freeze({
            __proto__: null,
            getElementError: getElementError,
            wrapAllByQueryWithSuggestion: wrapAllByQueryWithSuggestion,
            wrapSingleQueryWithSuggestion: wrapSingleQueryWithSuggestion,
            getMultipleElementsFoundError: getMultipleElementsFoundError,
            queryAllByAttribute: queryAllByAttribute,
            queryByAttribute: queryByAttribute,
            makeSingleQuery: makeSingleQuery,
            makeGetAllQuery: makeGetAllQuery,
            makeFindQuery: makeFindQuery,
            buildQueries: buildQueries
        });
        function queryAllLabels(container) {
            return Array.from(container.querySelectorAll('label,input')).map((node)=>({
                    node,
                    textToMatch: getLabelContent(node)
                })).filter((_ref)=>{
                let { textToMatch } = _ref;
                return null !== textToMatch;
            });
        }
        const queryAllLabelsByText = function(container, text, _temp) {
            let { exact = true, trim, collapseWhitespace, normalizer } = void 0 === _temp ? {} : _temp;
            const matcher = exact ? matches : fuzzyMatches;
            const matchNormalizer = makeNormalizer({
                collapseWhitespace,
                trim,
                normalizer
            });
            const textToMatchByLabels = queryAllLabels(container);
            return textToMatchByLabels.filter((_ref2)=>{
                let { node, textToMatch } = _ref2;
                return matcher(textToMatch, node, text, matchNormalizer);
            }).map((_ref3)=>{
                let { node } = _ref3;
                return node;
            });
        };
        const queryAllByLabelText = function(container, text, _temp2) {
            let { selector = '*', exact = true, collapseWhitespace, trim, normalizer } = void 0 === _temp2 ? {} : _temp2;
            checkContainerType(container);
            const matcher = exact ? matches : fuzzyMatches;
            const matchNormalizer = makeNormalizer({
                collapseWhitespace,
                trim,
                normalizer
            });
            const matchingLabelledElements = Array.from(container.querySelectorAll('*')).filter((element)=>getRealLabels(element).length || element.hasAttribute('aria-labelledby')).reduce((labelledElements, labelledElement)=>{
                const labelList = dom_esm_getLabels(container, labelledElement, {
                    selector
                });
                labelList.filter((label)=>Boolean(label.formControl)).forEach((label)=>{
                    if (matcher(label.content, label.formControl, text, matchNormalizer) && label.formControl) labelledElements.push(label.formControl);
                });
                const labelsValue = labelList.filter((label)=>Boolean(label.content)).map((label)=>label.content);
                if (matcher(labelsValue.join(' '), labelledElement, text, matchNormalizer)) labelledElements.push(labelledElement);
                if (labelsValue.length > 1) labelsValue.forEach((labelValue, index)=>{
                    if (matcher(labelValue, labelledElement, text, matchNormalizer)) labelledElements.push(labelledElement);
                    const labelsFiltered = [
                        ...labelsValue
                    ];
                    labelsFiltered.splice(index, 1);
                    if (labelsFiltered.length > 1) {
                        if (matcher(labelsFiltered.join(' '), labelledElement, text, matchNormalizer)) labelledElements.push(labelledElement);
                    }
                });
                return labelledElements;
            }, []).concat(queryAllByAttribute('aria-label', container, text, {
                exact,
                normalizer: matchNormalizer
            }));
            return Array.from(new Set(matchingLabelledElements)).filter((element)=>element.matches(selector));
        };
        const getAllByLabelText = function(container, text) {
            for(var _len = arguments.length, rest = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++)rest[_key - 2] = arguments[_key];
            const els = queryAllByLabelText(container, text, ...rest);
            if (!els.length) {
                const labels = queryAllLabelsByText(container, text, ...rest);
                if (labels.length) {
                    const tagNames = labels.map((label)=>getTagNameOfElementAssociatedWithLabelViaFor(container, label)).filter((tagName)=>!!tagName);
                    if (tagNames.length) throw getConfig().getElementError(tagNames.map((tagName)=>"Found a label with the text of: " + text + ", however the element associated with this label (<" + tagName + " />) is non-labellable [https://html.spec.whatwg.org/multipage/forms.html#category-label]. If you really need to label a <" + tagName + " />, you can use aria-label or aria-labelledby instead.").join('\n\n'), container);
                    throw getConfig().getElementError("Found a label with the text of: " + text + ", however no form control was found associated to that label. Make sure you're using the \"for\" attribute or \"aria-labelledby\" attribute correctly.", container);
                }
                throw getConfig().getElementError("Unable to find a label with the text of: " + text, container);
            }
            return els;
        };
        function getTagNameOfElementAssociatedWithLabelViaFor(container, label) {
            const htmlFor = label.getAttribute('for');
            if (!htmlFor) return null;
            const element = container.querySelector("[id=\"" + htmlFor + "\"]");
            return element ? element.tagName.toLowerCase() : null;
        }
        const getMultipleError$7 = (c, text)=>"Found multiple elements with the text of: " + text;
        const queryByLabelText = wrapSingleQueryWithSuggestion(makeSingleQuery(queryAllByLabelText, getMultipleError$7), queryAllByLabelText.name, 'query');
        const getByLabelText = makeSingleQuery(getAllByLabelText, getMultipleError$7);
        const findAllByLabelText = makeFindQuery(wrapAllByQueryWithSuggestion(getAllByLabelText, getAllByLabelText.name, 'findAll'));
        const findByLabelText = makeFindQuery(wrapSingleQueryWithSuggestion(getByLabelText, getAllByLabelText.name, 'find'));
        const getAllByLabelTextWithSuggestions = wrapAllByQueryWithSuggestion(getAllByLabelText, getAllByLabelText.name, 'getAll');
        const getByLabelTextWithSuggestions = wrapSingleQueryWithSuggestion(getByLabelText, getAllByLabelText.name, 'get');
        const queryAllByLabelTextWithSuggestions = wrapAllByQueryWithSuggestion(queryAllByLabelText, queryAllByLabelText.name, 'queryAll');
        const queryAllByPlaceholderText = function() {
            for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++)args[_key] = arguments[_key];
            checkContainerType(args[0]);
            return queryAllByAttribute('placeholder', ...args);
        };
        const getMultipleError$6 = (c, text)=>"Found multiple elements with the placeholder text of: " + text;
        const getMissingError$6 = (c, text)=>"Unable to find an element with the placeholder text of: " + text;
        const queryAllByPlaceholderTextWithSuggestions = wrapAllByQueryWithSuggestion(queryAllByPlaceholderText, queryAllByPlaceholderText.name, 'queryAll');
        const [queryByPlaceholderText, getAllByPlaceholderText, getByPlaceholderText, findAllByPlaceholderText, findByPlaceholderText] = buildQueries(queryAllByPlaceholderText, getMultipleError$6, getMissingError$6);
        const queryAllByText = function(container, text, _temp) {
            let { selector = '*', exact = true, collapseWhitespace, trim, ignore = getConfig().defaultIgnore, normalizer } = void 0 === _temp ? {} : _temp;
            checkContainerType(container);
            const matcher = exact ? matches : fuzzyMatches;
            const matchNormalizer = makeNormalizer({
                collapseWhitespace,
                trim,
                normalizer
            });
            let baseArray = [];
            if ('function' == typeof container.matches && container.matches(selector)) baseArray = [
                container
            ];
            return [
                ...baseArray,
                ...Array.from(container.querySelectorAll(selector))
            ].filter((node)=>!ignore || !node.matches(ignore)).filter((node)=>matcher(getNodeText(node), node, text, matchNormalizer));
        };
        const getMultipleError$5 = (c, text)=>"Found multiple elements with the text: " + text;
        const getMissingError$5 = function(c, text, options) {
            if (void 0 === options) options = {};
            const { collapseWhitespace, trim, normalizer, selector } = options;
            const matchNormalizer = makeNormalizer({
                collapseWhitespace,
                trim,
                normalizer
            });
            const normalizedText = matchNormalizer(text.toString());
            const isNormalizedDifferent = normalizedText !== text.toString();
            const isCustomSelector = (null != selector ? selector : '*') !== '*';
            return "Unable to find an element with the text: " + (isNormalizedDifferent ? normalizedText + " (normalized from '" + text + "')" : text) + (isCustomSelector ? ", which matches selector '" + selector + "'" : '') + ". This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.";
        };
        const queryAllByTextWithSuggestions = wrapAllByQueryWithSuggestion(queryAllByText, queryAllByText.name, 'queryAll');
        const [queryByText, getAllByText, getByText, findAllByText, findByText] = buildQueries(queryAllByText, getMultipleError$5, getMissingError$5);
        const queryAllByDisplayValue = function(container, value, _temp) {
            let { exact = true, collapseWhitespace, trim, normalizer } = void 0 === _temp ? {} : _temp;
            checkContainerType(container);
            const matcher = exact ? matches : fuzzyMatches;
            const matchNormalizer = makeNormalizer({
                collapseWhitespace,
                trim,
                normalizer
            });
            return Array.from(container.querySelectorAll("input,textarea,select")).filter((node)=>{
                if ('SELECT' !== node.tagName) return matcher(node.value, node, value, matchNormalizer);
                {
                    const selectedOptions = Array.from(node.options).filter((option)=>option.selected);
                    return selectedOptions.some((optionNode)=>matcher(getNodeText(optionNode), optionNode, value, matchNormalizer));
                }
            });
        };
        const getMultipleError$4 = (c, value)=>"Found multiple elements with the display value: " + value + ".";
        const getMissingError$4 = (c, value)=>"Unable to find an element with the display value: " + value + ".";
        const queryAllByDisplayValueWithSuggestions = wrapAllByQueryWithSuggestion(queryAllByDisplayValue, queryAllByDisplayValue.name, 'queryAll');
        const [queryByDisplayValue, getAllByDisplayValue, getByDisplayValue, findAllByDisplayValue, findByDisplayValue] = buildQueries(queryAllByDisplayValue, getMultipleError$4, getMissingError$4);
        const VALID_TAG_REGEXP = /^(img|input|area|.+-.+)$/i;
        const queryAllByAltText = function(container, alt, options) {
            if (void 0 === options) options = {};
            checkContainerType(container);
            return queryAllByAttribute('alt', container, alt, options).filter((node)=>VALID_TAG_REGEXP.test(node.tagName));
        };
        const getMultipleError$3 = (c, alt)=>"Found multiple elements with the alt text: " + alt;
        const getMissingError$3 = (c, alt)=>"Unable to find an element with the alt text: " + alt;
        const queryAllByAltTextWithSuggestions = wrapAllByQueryWithSuggestion(queryAllByAltText, queryAllByAltText.name, 'queryAll');
        const [queryByAltText, getAllByAltText, getByAltText, findAllByAltText, findByAltText] = buildQueries(queryAllByAltText, getMultipleError$3, getMissingError$3);
        const isSvgTitle = (node)=>{
            var _node$parentElement;
            return 'title' === node.tagName.toLowerCase() && (null == (_node$parentElement = node.parentElement) ? void 0 : _node$parentElement.tagName.toLowerCase()) === 'svg';
        };
        const queryAllByTitle = function(container, text, _temp) {
            let { exact = true, collapseWhitespace, trim, normalizer } = void 0 === _temp ? {} : _temp;
            checkContainerType(container);
            const matcher = exact ? matches : fuzzyMatches;
            const matchNormalizer = makeNormalizer({
                collapseWhitespace,
                trim,
                normalizer
            });
            return Array.from(container.querySelectorAll('[title], svg > title')).filter((node)=>matcher(node.getAttribute('title'), node, text, matchNormalizer) || isSvgTitle(node) && matcher(getNodeText(node), node, text, matchNormalizer));
        };
        const getMultipleError$2 = (c, title)=>"Found multiple elements with the title: " + title + ".";
        const getMissingError$2 = (c, title)=>"Unable to find an element with the title: " + title + ".";
        const queryAllByTitleWithSuggestions = wrapAllByQueryWithSuggestion(queryAllByTitle, queryAllByTitle.name, 'queryAll');
        const [queryByTitle, getAllByTitle, getByTitle, findAllByTitle, findByTitle] = buildQueries(queryAllByTitle, getMultipleError$2, getMissingError$2);
        const queryAllByRole = function(container, role, _temp) {
            let { hidden = getConfig().defaultHidden, name, description, queryFallbacks = false, selected, busy, checked, pressed, current, level, expanded, value: { now: valueNow, min: valueMin, max: valueMax, text: valueText } = {} } = void 0 === _temp ? {} : _temp;
            checkContainerType(container);
            if (void 0 !== selected) {
                var _allRoles$get;
                if ((null == (_allRoles$get = lib.roles.get(role)) ? void 0 : _allRoles$get.props['aria-selected']) === void 0) throw new Error("\"aria-selected\" is not supported on role \"" + role + "\".");
            }
            if (void 0 !== busy) {
                var _allRoles$get2;
                if ((null == (_allRoles$get2 = lib.roles.get(role)) ? void 0 : _allRoles$get2.props['aria-busy']) === void 0) throw new Error("\"aria-busy\" is not supported on role \"" + role + "\".");
            }
            if (void 0 !== checked) {
                var _allRoles$get3;
                if ((null == (_allRoles$get3 = lib.roles.get(role)) ? void 0 : _allRoles$get3.props['aria-checked']) === void 0) throw new Error("\"aria-checked\" is not supported on role \"" + role + "\".");
            }
            if (void 0 !== pressed) {
                var _allRoles$get4;
                if ((null == (_allRoles$get4 = lib.roles.get(role)) ? void 0 : _allRoles$get4.props['aria-pressed']) === void 0) throw new Error("\"aria-pressed\" is not supported on role \"" + role + "\".");
            }
            if (void 0 !== current) {
                var _allRoles$get5;
                if ((null == (_allRoles$get5 = lib.roles.get(role)) ? void 0 : _allRoles$get5.props['aria-current']) === void 0) throw new Error("\"aria-current\" is not supported on role \"" + role + "\".");
            }
            if (void 0 !== level) {
                if ('heading' !== role) throw new Error("Role \"" + role + "\" cannot have \"level\" property.");
            }
            if (void 0 !== valueNow) {
                var _allRoles$get6;
                if ((null == (_allRoles$get6 = lib.roles.get(role)) ? void 0 : _allRoles$get6.props['aria-valuenow']) === void 0) throw new Error("\"aria-valuenow\" is not supported on role \"" + role + "\".");
            }
            if (void 0 !== valueMax) {
                var _allRoles$get7;
                if ((null == (_allRoles$get7 = lib.roles.get(role)) ? void 0 : _allRoles$get7.props['aria-valuemax']) === void 0) throw new Error("\"aria-valuemax\" is not supported on role \"" + role + "\".");
            }
            if (void 0 !== valueMin) {
                var _allRoles$get8;
                if ((null == (_allRoles$get8 = lib.roles.get(role)) ? void 0 : _allRoles$get8.props['aria-valuemin']) === void 0) throw new Error("\"aria-valuemin\" is not supported on role \"" + role + "\".");
            }
            if (void 0 !== valueText) {
                var _allRoles$get9;
                if ((null == (_allRoles$get9 = lib.roles.get(role)) ? void 0 : _allRoles$get9.props['aria-valuetext']) === void 0) throw new Error("\"aria-valuetext\" is not supported on role \"" + role + "\".");
            }
            if (void 0 !== expanded) {
                var _allRoles$get0;
                if ((null == (_allRoles$get0 = lib.roles.get(role)) ? void 0 : _allRoles$get0.props['aria-expanded']) === void 0) throw new Error("\"aria-expanded\" is not supported on role \"" + role + "\".");
            }
            const subtreeIsInaccessibleCache = new WeakMap();
            function cachedIsSubtreeInaccessible(element) {
                if (!subtreeIsInaccessibleCache.has(element)) subtreeIsInaccessibleCache.set(element, dom_esm_isSubtreeInaccessible(element));
                return subtreeIsInaccessibleCache.get(element);
            }
            return Array.from(container.querySelectorAll(makeRoleSelector(role))).filter((node)=>{
                const isRoleSpecifiedExplicitly = node.hasAttribute('role');
                if (isRoleSpecifiedExplicitly) {
                    const roleValue = node.getAttribute('role');
                    if (queryFallbacks) return roleValue.split(' ').filter(Boolean).some((roleAttributeToken)=>roleAttributeToken === role);
                    const [firstRoleAttributeToken] = roleValue.split(' ');
                    return firstRoleAttributeToken === role;
                }
                const implicitRoles = getImplicitAriaRoles(node);
                return implicitRoles.some((implicitRole)=>implicitRole === role);
            }).filter((element)=>{
                if (void 0 !== selected) return selected === computeAriaSelected(element);
                if (void 0 !== busy) return busy === computeAriaBusy(element);
                if (void 0 !== checked) return checked === computeAriaChecked(element);
                if (void 0 !== pressed) return pressed === computeAriaPressed(element);
                if (void 0 !== current) return current === computeAriaCurrent(element);
                if (void 0 !== expanded) return expanded === computeAriaExpanded(element);
                if (void 0 !== level) return level === computeHeadingLevel(element);
                if (void 0 !== valueNow || void 0 !== valueMax || void 0 !== valueMin || void 0 !== valueText) {
                    let valueMatches = true;
                    if (void 0 !== valueNow) valueMatches && (valueMatches = valueNow === computeAriaValueNow(element));
                    if (void 0 !== valueMax) valueMatches && (valueMatches = valueMax === computeAriaValueMax(element));
                    if (void 0 !== valueMin) valueMatches && (valueMatches = valueMin === computeAriaValueMin(element));
                    if (void 0 !== valueText) {
                        var _computeAriaValueText;
                        valueMatches && (valueMatches = matches(null != (_computeAriaValueText = computeAriaValueText(element)) ? _computeAriaValueText : null, element, valueText, (text)=>text));
                    }
                    return valueMatches;
                }
                return true;
            }).filter((element)=>{
                if (void 0 === name) return true;
                return matches(computeAccessibleName(element, {
                    computedStyleSupportsPseudoElements: getConfig().computedStyleSupportsPseudoElements
                }), element, name, (text)=>text);
            }).filter((element)=>{
                if (void 0 === description) return true;
                return matches(computeAccessibleDescription(element, {
                    computedStyleSupportsPseudoElements: getConfig().computedStyleSupportsPseudoElements
                }), element, description, (text)=>text);
            }).filter((element)=>false === hidden ? false === dom_esm_isInaccessible(element, {
                    isSubtreeInaccessible: cachedIsSubtreeInaccessible
                }) : true);
        };
        function makeRoleSelector(role) {
            var _roleElements$get;
            const explicitRoleSelector = "*[role~=\"" + role + "\"]";
            const roleRelations = null != (_roleElements$get = lib.roleElements.get(role)) ? _roleElements$get : new Set();
            const implicitRoleSelectors = new Set(Array.from(roleRelations).map((_ref)=>{
                let { name } = _ref;
                return name;
            }));
            return [
                explicitRoleSelector
            ].concat(Array.from(implicitRoleSelectors)).join(',');
        }
        const getNameHint = (name)=>{
            let nameHint = '';
            nameHint = void 0 === name ? '' : 'string' == typeof name ? " and name \"" + name + "\"" : " and name `" + name + "`";
            return nameHint;
        };
        const getMultipleError$1 = function(c, role, _temp2) {
            let { name } = void 0 === _temp2 ? {} : _temp2;
            return "Found multiple elements with the role \"" + role + "\"" + getNameHint(name);
        };
        const getMissingError$1 = function(container, role, _temp3) {
            let { hidden = getConfig().defaultHidden, name, description } = void 0 === _temp3 ? {} : _temp3;
            if (getConfig()._disableExpensiveErrorDiagnostics) return "Unable to find role=\"" + role + "\"" + getNameHint(name);
            let roles = '';
            Array.from(container.children).forEach((childElement)=>{
                roles += prettyRoles(childElement, {
                    hidden,
                    includeDescription: void 0 !== description
                });
            });
            let roleMessage;
            roleMessage = 0 === roles.length ? false === hidden ? "There are no accessible roles. But there might be some inaccessible roles. If you wish to access them, then set the `hidden` option to `true`. Learn more about this here: https://testing-library.com/docs/dom-testing-library/api-queries#byrole" : 'There are no available roles.' : ("\nHere are the " + (false === hidden ? 'accessible' : 'available') + " roles:\n\n  " + roles.replace(/\n/g, '\n  ').replace(/\n\s\s\n/g, '\n\n') + "\n").trim();
            let nameHint = '';
            nameHint = void 0 === name ? '' : 'string' == typeof name ? " and name \"" + name + "\"" : " and name `" + name + "`";
            let descriptionHint = '';
            descriptionHint = void 0 === description ? '' : 'string' == typeof description ? ' and description "' + description + "\"" : " and description `" + description + "`";
            return ("\nUnable to find an " + (false === hidden ? 'accessible ' : '') + "element with the role \"" + role + "\"" + nameHint + descriptionHint + "\n\n" + roleMessage).trim();
        };
        const queryAllByRoleWithSuggestions = wrapAllByQueryWithSuggestion(queryAllByRole, queryAllByRole.name, 'queryAll');
        const [queryByRole, getAllByRole, getByRole, findAllByRole, findByRole] = buildQueries(queryAllByRole, getMultipleError$1, getMissingError$1);
        const getTestIdAttribute = ()=>getConfig().testIdAttribute;
        const queryAllByTestId = function() {
            for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++)args[_key] = arguments[_key];
            checkContainerType(args[0]);
            return queryAllByAttribute(getTestIdAttribute(), ...args);
        };
        const dom_esm_getMultipleError = (c, id)=>"Found multiple elements by: [" + getTestIdAttribute() + "=\"" + id + "\"]";
        const dom_esm_getMissingError = (c, id)=>"Unable to find an element by: [" + getTestIdAttribute() + "=\"" + id + "\"]";
        const queryAllByTestIdWithSuggestions = wrapAllByQueryWithSuggestion(queryAllByTestId, queryAllByTestId.name, 'queryAll');
        const [queryByTestId, getAllByTestId, getByTestId, findAllByTestId, findByTestId] = buildQueries(queryAllByTestId, dom_esm_getMultipleError, dom_esm_getMissingError);
        var queries = /*#__PURE__*/ Object.freeze({
            __proto__: null,
            queryAllByLabelText: queryAllByLabelTextWithSuggestions,
            queryByLabelText: queryByLabelText,
            getAllByLabelText: getAllByLabelTextWithSuggestions,
            getByLabelText: getByLabelTextWithSuggestions,
            findAllByLabelText: findAllByLabelText,
            findByLabelText: findByLabelText,
            queryByPlaceholderText: queryByPlaceholderText,
            queryAllByPlaceholderText: queryAllByPlaceholderTextWithSuggestions,
            getByPlaceholderText: getByPlaceholderText,
            getAllByPlaceholderText: getAllByPlaceholderText,
            findAllByPlaceholderText: findAllByPlaceholderText,
            findByPlaceholderText: findByPlaceholderText,
            queryByText: queryByText,
            queryAllByText: queryAllByTextWithSuggestions,
            getByText: getByText,
            getAllByText: getAllByText,
            findAllByText: findAllByText,
            findByText: findByText,
            queryByDisplayValue: queryByDisplayValue,
            queryAllByDisplayValue: queryAllByDisplayValueWithSuggestions,
            getByDisplayValue: getByDisplayValue,
            getAllByDisplayValue: getAllByDisplayValue,
            findAllByDisplayValue: findAllByDisplayValue,
            findByDisplayValue: findByDisplayValue,
            queryByAltText: queryByAltText,
            queryAllByAltText: queryAllByAltTextWithSuggestions,
            getByAltText: getByAltText,
            getAllByAltText: getAllByAltText,
            findAllByAltText: findAllByAltText,
            findByAltText: findByAltText,
            queryByTitle: queryByTitle,
            queryAllByTitle: queryAllByTitleWithSuggestions,
            getByTitle: getByTitle,
            getAllByTitle: getAllByTitle,
            findAllByTitle: findAllByTitle,
            findByTitle: findByTitle,
            queryByRole: queryByRole,
            queryAllByRole: queryAllByRoleWithSuggestions,
            getAllByRole: getAllByRole,
            getByRole: getByRole,
            findAllByRole: findAllByRole,
            findByRole: findByRole,
            queryByTestId: queryByTestId,
            queryAllByTestId: queryAllByTestIdWithSuggestions,
            getByTestId: getByTestId,
            getAllByTestId: getAllByTestId,
            findAllByTestId: findAllByTestId,
            findByTestId: findByTestId
        });
        function getQueriesForElement(element, queries$1, initialValue) {
            if (void 0 === queries$1) queries$1 = queries;
            if (void 0 === initialValue) initialValue = {};
            return Object.keys(queries$1).reduce((helpers, key)=>{
                const fn = queries$1[key];
                helpers[key] = fn.bind(null, element);
                return helpers;
            }, initialValue);
        }
        const isRemoved = (result)=>!result || Array.isArray(result) && !result.length;
        function initialCheck(elements) {
            if (isRemoved(elements)) throw new Error('The element(s) given to waitForElementToBeRemoved are already removed. waitForElementToBeRemoved requires that the element(s) exist(s) before waiting for removal.');
        }
        async function waitForElementToBeRemoved(callback, options) {
            const timeoutError = new Error('Timed out in waitForElementToBeRemoved.');
            if ('function' != typeof callback) {
                initialCheck(callback);
                const elements = Array.isArray(callback) ? callback : [
                    callback
                ];
                const getRemainingElements = elements.map((element)=>{
                    let parent = element.parentElement;
                    if (null === parent) return ()=>null;
                    while(parent.parentElement)parent = parent.parentElement;
                    return ()=>parent.contains(element) ? element : null;
                });
                callback = ()=>getRemainingElements.map((c)=>c()).filter(Boolean);
            }
            initialCheck(callback());
            return waitForWrapper(()=>{
                let result;
                try {
                    result = callback();
                } catch (error) {
                    if ('TestingLibraryElementError' === error.name) return;
                    throw error;
                }
                if (!isRemoved(result)) throw timeoutError;
            }, options);
        }
        const eventMap = {
            copy: {
                EventType: 'ClipboardEvent',
                defaultInit: {
                    bubbles: true,
                    cancelable: true,
                    composed: true
                }
            },
            cut: {
                EventType: 'ClipboardEvent',
                defaultInit: {
                    bubbles: true,
                    cancelable: true,
                    composed: true
                }
            },
            paste: {
                EventType: 'ClipboardEvent',
                defaultInit: {
                    bubbles: true,
                    cancelable: true,
                    composed: true
                }
            },
            compositionEnd: {
                EventType: 'CompositionEvent',
                defaultInit: {
                    bubbles: true,
                    cancelable: true,
                    composed: true
                }
            },
            compositionStart: {
                EventType: 'CompositionEvent',
                defaultInit: {
                    bubbles: true,
                    cancelable: true,
                    composed: true
                }
            },
            compositionUpdate: {
                EventType: 'CompositionEvent',
                defaultInit: {
                    bubbles: true,
                    cancelable: true,
                    composed: true
                }
            },
            keyDown: {
                EventType: 'KeyboardEvent',
                defaultInit: {
                    bubbles: true,
                    cancelable: true,
                    charCode: 0,
                    composed: true
                }
            },
            keyPress: {
                EventType: 'KeyboardEvent',
                defaultInit: {
                    bubbles: true,
                    cancelable: true,
                    charCode: 0,
                    composed: true
                }
            },
            keyUp: {
                EventType: 'KeyboardEvent',
                defaultInit: {
                    bubbles: true,
                    cancelable: true,
                    charCode: 0,
                    composed: true
                }
            },
            focus: {
                EventType: 'FocusEvent',
                defaultInit: {
                    bubbles: false,
                    cancelable: false,
                    composed: true
                }
            },
            blur: {
                EventType: 'FocusEvent',
                defaultInit: {
                    bubbles: false,
                    cancelable: false,
                    composed: true
                }
            },
            focusIn: {
                EventType: 'FocusEvent',
                defaultInit: {
                    bubbles: true,
                    cancelable: false,
                    composed: true
                }
            },
            focusOut: {
                EventType: 'FocusEvent',
                defaultInit: {
                    bubbles: true,
                    cancelable: false,
                    composed: true
                }
            },
            change: {
                EventType: 'Event',
                defaultInit: {
                    bubbles: true,
                    cancelable: false
                }
            },
            input: {
                EventType: 'InputEvent',
                defaultInit: {
                    bubbles: true,
                    cancelable: false,
                    composed: true
                }
            },
            invalid: {
                EventType: 'Event',
                defaultInit: {
                    bubbles: false,
                    cancelable: true
                }
            },
            submit: {
                EventType: 'Event',
                defaultInit: {
                    bubbles: true,
                    cancelable: true
                }
            },
            reset: {
                EventType: 'Event',
                defaultInit: {
                    bubbles: true,
                    cancelable: true
                }
            },
            click: {
                EventType: 'MouseEvent',
                defaultInit: {
                    bubbles: true,
                    cancelable: true,
                    button: 0,
                    composed: true
                }
            },
            contextMenu: {
                EventType: 'MouseEvent',
                defaultInit: {
                    bubbles: true,
                    cancelable: true,
                    composed: true
                }
            },
            dblClick: {
                EventType: 'MouseEvent',
                defaultInit: {
                    bubbles: true,
                    cancelable: true,
                    composed: true
                }
            },
            drag: {
                EventType: 'DragEvent',
                defaultInit: {
                    bubbles: true,
                    cancelable: true,
                    composed: true
                }
            },
            dragEnd: {
                EventType: 'DragEvent',
                defaultInit: {
                    bubbles: true,
                    cancelable: false,
                    composed: true
                }
            },
            dragEnter: {
                EventType: 'DragEvent',
                defaultInit: {
                    bubbles: true,
                    cancelable: true,
                    composed: true
                }
            },
            dragExit: {
                EventType: 'DragEvent',
                defaultInit: {
                    bubbles: true,
                    cancelable: false,
                    composed: true
                }
            },
            dragLeave: {
                EventType: 'DragEvent',
                defaultInit: {
                    bubbles: true,
                    cancelable: false,
                    composed: true
                }
            },
            dragOver: {
                EventType: 'DragEvent',
                defaultInit: {
                    bubbles: true,
                    cancelable: true,
                    composed: true
                }
            },
            dragStart: {
                EventType: 'DragEvent',
                defaultInit: {
                    bubbles: true,
                    cancelable: true,
                    composed: true
                }
            },
            drop: {
                EventType: 'DragEvent',
                defaultInit: {
                    bubbles: true,
                    cancelable: true,
                    composed: true
                }
            },
            mouseDown: {
                EventType: 'MouseEvent',
                defaultInit: {
                    bubbles: true,
                    cancelable: true,
                    composed: true
                }
            },
            mouseEnter: {
                EventType: 'MouseEvent',
                defaultInit: {
                    bubbles: false,
                    cancelable: false,
                    composed: true
                }
            },
            mouseLeave: {
                EventType: 'MouseEvent',
                defaultInit: {
                    bubbles: false,
                    cancelable: false,
                    composed: true
                }
            },
            mouseMove: {
                EventType: 'MouseEvent',
                defaultInit: {
                    bubbles: true,
                    cancelable: true,
                    composed: true
                }
            },
            mouseOut: {
                EventType: 'MouseEvent',
                defaultInit: {
                    bubbles: true,
                    cancelable: true,
                    composed: true
                }
            },
            mouseOver: {
                EventType: 'MouseEvent',
                defaultInit: {
                    bubbles: true,
                    cancelable: true,
                    composed: true
                }
            },
            mouseUp: {
                EventType: 'MouseEvent',
                defaultInit: {
                    bubbles: true,
                    cancelable: true,
                    composed: true
                }
            },
            select: {
                EventType: 'Event',
                defaultInit: {
                    bubbles: true,
                    cancelable: false
                }
            },
            touchCancel: {
                EventType: 'TouchEvent',
                defaultInit: {
                    bubbles: true,
                    cancelable: false,
                    composed: true
                }
            },
            touchEnd: {
                EventType: 'TouchEvent',
                defaultInit: {
                    bubbles: true,
                    cancelable: true,
                    composed: true
                }
            },
            touchMove: {
                EventType: 'TouchEvent',
                defaultInit: {
                    bubbles: true,
                    cancelable: true,
                    composed: true
                }
            },
            touchStart: {
                EventType: 'TouchEvent',
                defaultInit: {
                    bubbles: true,
                    cancelable: true,
                    composed: true
                }
            },
            resize: {
                EventType: 'UIEvent',
                defaultInit: {
                    bubbles: false,
                    cancelable: false
                }
            },
            scroll: {
                EventType: 'UIEvent',
                defaultInit: {
                    bubbles: false,
                    cancelable: false
                }
            },
            wheel: {
                EventType: 'WheelEvent',
                defaultInit: {
                    bubbles: true,
                    cancelable: true,
                    composed: true
                }
            },
            abort: {
                EventType: 'Event',
                defaultInit: {
                    bubbles: false,
                    cancelable: false
                }
            },
            canPlay: {
                EventType: 'Event',
                defaultInit: {
                    bubbles: false,
                    cancelable: false
                }
            },
            canPlayThrough: {
                EventType: 'Event',
                defaultInit: {
                    bubbles: false,
                    cancelable: false
                }
            },
            durationChange: {
                EventType: 'Event',
                defaultInit: {
                    bubbles: false,
                    cancelable: false
                }
            },
            emptied: {
                EventType: 'Event',
                defaultInit: {
                    bubbles: false,
                    cancelable: false
                }
            },
            encrypted: {
                EventType: 'Event',
                defaultInit: {
                    bubbles: false,
                    cancelable: false
                }
            },
            ended: {
                EventType: 'Event',
                defaultInit: {
                    bubbles: false,
                    cancelable: false
                }
            },
            loadedData: {
                EventType: 'Event',
                defaultInit: {
                    bubbles: false,
                    cancelable: false
                }
            },
            loadedMetadata: {
                EventType: 'Event',
                defaultInit: {
                    bubbles: false,
                    cancelable: false
                }
            },
            loadStart: {
                EventType: 'ProgressEvent',
                defaultInit: {
                    bubbles: false,
                    cancelable: false
                }
            },
            pause: {
                EventType: 'Event',
                defaultInit: {
                    bubbles: false,
                    cancelable: false
                }
            },
            play: {
                EventType: 'Event',
                defaultInit: {
                    bubbles: false,
                    cancelable: false
                }
            },
            playing: {
                EventType: 'Event',
                defaultInit: {
                    bubbles: false,
                    cancelable: false
                }
            },
            progress: {
                EventType: 'ProgressEvent',
                defaultInit: {
                    bubbles: false,
                    cancelable: false
                }
            },
            rateChange: {
                EventType: 'Event',
                defaultInit: {
                    bubbles: false,
                    cancelable: false
                }
            },
            seeked: {
                EventType: 'Event',
                defaultInit: {
                    bubbles: false,
                    cancelable: false
                }
            },
            seeking: {
                EventType: 'Event',
                defaultInit: {
                    bubbles: false,
                    cancelable: false
                }
            },
            stalled: {
                EventType: 'Event',
                defaultInit: {
                    bubbles: false,
                    cancelable: false
                }
            },
            suspend: {
                EventType: 'Event',
                defaultInit: {
                    bubbles: false,
                    cancelable: false
                }
            },
            timeUpdate: {
                EventType: 'Event',
                defaultInit: {
                    bubbles: false,
                    cancelable: false
                }
            },
            volumeChange: {
                EventType: 'Event',
                defaultInit: {
                    bubbles: false,
                    cancelable: false
                }
            },
            waiting: {
                EventType: 'Event',
                defaultInit: {
                    bubbles: false,
                    cancelable: false
                }
            },
            load: {
                EventType: 'Event',
                defaultInit: {
                    bubbles: false,
                    cancelable: false
                }
            },
            error: {
                EventType: 'Event',
                defaultInit: {
                    bubbles: false,
                    cancelable: false
                }
            },
            animationStart: {
                EventType: 'AnimationEvent',
                defaultInit: {
                    bubbles: true,
                    cancelable: false
                }
            },
            animationEnd: {
                EventType: 'AnimationEvent',
                defaultInit: {
                    bubbles: true,
                    cancelable: false
                }
            },
            animationIteration: {
                EventType: 'AnimationEvent',
                defaultInit: {
                    bubbles: true,
                    cancelable: false
                }
            },
            transitionCancel: {
                EventType: 'TransitionEvent',
                defaultInit: {
                    bubbles: true,
                    cancelable: false
                }
            },
            transitionEnd: {
                EventType: 'TransitionEvent',
                defaultInit: {
                    bubbles: true,
                    cancelable: true
                }
            },
            transitionRun: {
                EventType: 'TransitionEvent',
                defaultInit: {
                    bubbles: true,
                    cancelable: false
                }
            },
            transitionStart: {
                EventType: 'TransitionEvent',
                defaultInit: {
                    bubbles: true,
                    cancelable: false
                }
            },
            pointerOver: {
                EventType: 'PointerEvent',
                defaultInit: {
                    bubbles: true,
                    cancelable: true,
                    composed: true
                }
            },
            pointerEnter: {
                EventType: 'PointerEvent',
                defaultInit: {
                    bubbles: false,
                    cancelable: false
                }
            },
            pointerDown: {
                EventType: 'PointerEvent',
                defaultInit: {
                    bubbles: true,
                    cancelable: true,
                    composed: true
                }
            },
            pointerMove: {
                EventType: 'PointerEvent',
                defaultInit: {
                    bubbles: true,
                    cancelable: true,
                    composed: true
                }
            },
            pointerUp: {
                EventType: 'PointerEvent',
                defaultInit: {
                    bubbles: true,
                    cancelable: true,
                    composed: true
                }
            },
            pointerCancel: {
                EventType: 'PointerEvent',
                defaultInit: {
                    bubbles: true,
                    cancelable: false,
                    composed: true
                }
            },
            pointerOut: {
                EventType: 'PointerEvent',
                defaultInit: {
                    bubbles: true,
                    cancelable: true,
                    composed: true
                }
            },
            pointerLeave: {
                EventType: 'PointerEvent',
                defaultInit: {
                    bubbles: false,
                    cancelable: false
                }
            },
            gotPointerCapture: {
                EventType: 'PointerEvent',
                defaultInit: {
                    bubbles: true,
                    cancelable: false,
                    composed: true
                }
            },
            lostPointerCapture: {
                EventType: 'PointerEvent',
                defaultInit: {
                    bubbles: true,
                    cancelable: false,
                    composed: true
                }
            },
            popState: {
                EventType: 'PopStateEvent',
                defaultInit: {
                    bubbles: true,
                    cancelable: false
                }
            },
            offline: {
                EventType: 'Event',
                defaultInit: {
                    bubbles: false,
                    cancelable: false
                }
            },
            online: {
                EventType: 'Event',
                defaultInit: {
                    bubbles: false,
                    cancelable: false
                }
            },
            pageHide: {
                EventType: 'PageTransitionEvent',
                defaultInit: {
                    bubbles: true,
                    cancelable: true
                }
            },
            pageShow: {
                EventType: 'PageTransitionEvent',
                defaultInit: {
                    bubbles: true,
                    cancelable: true
                }
            }
        };
        const eventAliasMap = {
            doubleClick: 'dblClick'
        };
        function fireEvent(element, event) {
            return getConfig().eventWrapper(()=>{
                if (!event) throw new Error("Unable to fire an event - please provide an event object.");
                if (!element) throw new Error("Unable to fire a \"" + event.type + "\" event - please provide a DOM element.");
                return element.dispatchEvent(event);
            });
        }
        function createEvent(eventName, node, init, _temp) {
            let { EventType = 'Event', defaultInit = {} } = void 0 === _temp ? {} : _temp;
            if (!node) throw new Error("Unable to fire a \"" + eventName + "\" event - please provide a DOM element.");
            const eventInit = {
                ...defaultInit,
                ...init
            };
            const { target: { value, files, ...targetProperties } = {} } = eventInit;
            if (void 0 !== value) setNativeValue(node, value);
            if (void 0 !== files) Object.defineProperty(node, 'files', {
                configurable: true,
                enumerable: true,
                writable: true,
                value: files
            });
            Object.assign(node, targetProperties);
            const window1 = getWindowFromNode(node);
            const EventConstructor = window1[EventType] || window1.Event;
            let event;
            if ('function' == typeof EventConstructor) event = new EventConstructor(eventName, eventInit);
            else {
                event = window1.document.createEvent(EventType);
                const { bubbles, cancelable, detail, ...otherInit } = eventInit;
                event.initEvent(eventName, bubbles, cancelable, detail);
                Object.keys(otherInit).forEach((eventKey)=>{
                    event[eventKey] = otherInit[eventKey];
                });
            }
            const dataTransferProperties = [
                'dataTransfer',
                'clipboardData'
            ];
            dataTransferProperties.forEach((dataTransferKey)=>{
                const dataTransferValue = eventInit[dataTransferKey];
                if ('object' == typeof dataTransferValue) if ('function' == typeof window1.DataTransfer) Object.defineProperty(event, dataTransferKey, {
                    value: Object.getOwnPropertyNames(dataTransferValue).reduce((acc, propName)=>{
                        Object.defineProperty(acc, propName, {
                            value: dataTransferValue[propName]
                        });
                        return acc;
                    }, new window1.DataTransfer())
                });
                else Object.defineProperty(event, dataTransferKey, {
                    value: dataTransferValue
                });
            });
            return event;
        }
        Object.keys(eventMap).forEach((key)=>{
            const { EventType, defaultInit } = eventMap[key];
            const eventName = key.toLowerCase();
            createEvent[key] = (node, init)=>createEvent(eventName, node, init, {
                    EventType,
                    defaultInit
                });
            fireEvent[key] = (node, init)=>fireEvent(node, createEvent[key](node, init));
        });
        function setNativeValue(element, value) {
            const { set: valueSetter } = Object.getOwnPropertyDescriptor(element, 'value') || {};
            const prototype = Object.getPrototypeOf(element);
            const { set: prototypeValueSetter } = Object.getOwnPropertyDescriptor(prototype, 'value') || {};
            if (prototypeValueSetter && valueSetter !== prototypeValueSetter) prototypeValueSetter.call(element, value);
            else if (valueSetter) valueSetter.call(element, value);
            else throw new Error('The given element does not have a value setter');
        }
        Object.keys(eventAliasMap).forEach((aliasKey)=>{
            const key = eventAliasMap[aliasKey];
            fireEvent[aliasKey] = function() {
                return fireEvent[key](...arguments);
            };
        });
        function unindent(string) {
            return string.replace(/[ \t]*[\n][ \t]*/g, '\n');
        }
        function encode(value) {
            return lz_string_default().compressToEncodedURIComponent(unindent(value));
        }
        function getPlaygroundUrl(markup) {
            return "https://testing-playground.com/#markup=" + encode(markup);
        }
        const debug = (element, maxLength, options)=>Array.isArray(element) ? element.forEach((el)=>logDOM(el, maxLength, options)) : logDOM(element, maxLength, options);
        const logTestingPlaygroundURL = function(element) {
            if (void 0 === element) element = getDocument().body;
            if (!element || !('innerHTML' in element)) return void console.log("The element you're providing isn't a valid DOM element.");
            if (!element.innerHTML) return void console.log("The provided element doesn't have any children.");
            const playgroundUrl = getPlaygroundUrl(element.innerHTML);
            console.log("Open this URL in your browser\n\n" + playgroundUrl);
            return playgroundUrl;
        };
        const dom_esm_initialValue = {
            debug,
            logTestingPlaygroundURL
        };
        const screen = 'undefined' != typeof document && document.body ? getQueriesForElement(document.body, queries, dom_esm_initialValue) : Object.keys(queries).reduce((helpers, key)=>{
            helpers[key] = ()=>{
                throw new TypeError('For queries bound to document.body a global document has to be available... Learn more: https://testing-library.com/s/screen-global-error');
            };
            return helpers;
        }, dom_esm_initialValue);
    },
    "../../../node_modules/.pnpm/ansi-regex@5.0.1/node_modules/ansi-regex/index.js": function(module) {
        module.exports = ({ onlyFirst = false } = {})=>{
            const pattern = "[\\u001B\\u009B][[\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]+)*|[a-zA-Z\\d]+(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]*)*)?\\u0007)|(?:(?:\\d{1,4}(?:;\\d{0,4})*)?[\\dA-PR-TZcf-ntqry=><~]))";
            return new RegExp(pattern, onlyFirst ? void 0 : 'g');
        };
    },
    "../../../node_modules/.pnpm/ansi-styles@5.2.0/node_modules/ansi-styles/index.js": function(module, __unused_webpack_exports, __webpack_require__) {
        module = __webpack_require__.nmd(module);
        const ANSI_BACKGROUND_OFFSET = 10;
        const wrapAnsi256 = (offset = 0)=>(code)=>`\u001B[${38 + offset};5;${code}m`;
        const wrapAnsi16m = (offset = 0)=>(red, green, blue)=>`\u001B[${38 + offset};2;${red};${green};${blue}m`;
        function assembleStyles() {
            const codes = new Map();
            const styles = {
                modifier: {
                    reset: [
                        0,
                        0
                    ],
                    bold: [
                        1,
                        22
                    ],
                    dim: [
                        2,
                        22
                    ],
                    italic: [
                        3,
                        23
                    ],
                    underline: [
                        4,
                        24
                    ],
                    overline: [
                        53,
                        55
                    ],
                    inverse: [
                        7,
                        27
                    ],
                    hidden: [
                        8,
                        28
                    ],
                    strikethrough: [
                        9,
                        29
                    ]
                },
                color: {
                    black: [
                        30,
                        39
                    ],
                    red: [
                        31,
                        39
                    ],
                    green: [
                        32,
                        39
                    ],
                    yellow: [
                        33,
                        39
                    ],
                    blue: [
                        34,
                        39
                    ],
                    magenta: [
                        35,
                        39
                    ],
                    cyan: [
                        36,
                        39
                    ],
                    white: [
                        37,
                        39
                    ],
                    blackBright: [
                        90,
                        39
                    ],
                    redBright: [
                        91,
                        39
                    ],
                    greenBright: [
                        92,
                        39
                    ],
                    yellowBright: [
                        93,
                        39
                    ],
                    blueBright: [
                        94,
                        39
                    ],
                    magentaBright: [
                        95,
                        39
                    ],
                    cyanBright: [
                        96,
                        39
                    ],
                    whiteBright: [
                        97,
                        39
                    ]
                },
                bgColor: {
                    bgBlack: [
                        40,
                        49
                    ],
                    bgRed: [
                        41,
                        49
                    ],
                    bgGreen: [
                        42,
                        49
                    ],
                    bgYellow: [
                        43,
                        49
                    ],
                    bgBlue: [
                        44,
                        49
                    ],
                    bgMagenta: [
                        45,
                        49
                    ],
                    bgCyan: [
                        46,
                        49
                    ],
                    bgWhite: [
                        47,
                        49
                    ],
                    bgBlackBright: [
                        100,
                        49
                    ],
                    bgRedBright: [
                        101,
                        49
                    ],
                    bgGreenBright: [
                        102,
                        49
                    ],
                    bgYellowBright: [
                        103,
                        49
                    ],
                    bgBlueBright: [
                        104,
                        49
                    ],
                    bgMagentaBright: [
                        105,
                        49
                    ],
                    bgCyanBright: [
                        106,
                        49
                    ],
                    bgWhiteBright: [
                        107,
                        49
                    ]
                }
            };
            styles.color.gray = styles.color.blackBright;
            styles.bgColor.bgGray = styles.bgColor.bgBlackBright;
            styles.color.grey = styles.color.blackBright;
            styles.bgColor.bgGrey = styles.bgColor.bgBlackBright;
            for (const [groupName, group] of Object.entries(styles)){
                for (const [styleName, style] of Object.entries(group)){
                    styles[styleName] = {
                        open: `\u001B[${style[0]}m`,
                        close: `\u001B[${style[1]}m`
                    };
                    group[styleName] = styles[styleName];
                    codes.set(style[0], style[1]);
                }
                Object.defineProperty(styles, groupName, {
                    value: group,
                    enumerable: false
                });
            }
            Object.defineProperty(styles, 'codes', {
                value: codes,
                enumerable: false
            });
            styles.color.close = '\u001B[39m';
            styles.bgColor.close = '\u001B[49m';
            styles.color.ansi256 = wrapAnsi256();
            styles.color.ansi16m = wrapAnsi16m();
            styles.bgColor.ansi256 = wrapAnsi256(ANSI_BACKGROUND_OFFSET);
            styles.bgColor.ansi16m = wrapAnsi16m(ANSI_BACKGROUND_OFFSET);
            Object.defineProperties(styles, {
                rgbToAnsi256: {
                    value: (red, green, blue)=>{
                        if (red === green && green === blue) {
                            if (red < 8) return 16;
                            if (red > 248) return 231;
                            return Math.round((red - 8) / 247 * 24) + 232;
                        }
                        return 16 + 36 * Math.round(red / 255 * 5) + 6 * Math.round(green / 255 * 5) + Math.round(blue / 255 * 5);
                    },
                    enumerable: false
                },
                hexToRgb: {
                    value: (hex)=>{
                        const matches = /(?<colorString>[a-f\d]{6}|[a-f\d]{3})/i.exec(hex.toString(16));
                        if (!matches) return [
                            0,
                            0,
                            0
                        ];
                        let { colorString } = matches.groups;
                        if (3 === colorString.length) colorString = colorString.split('').map((character)=>character + character).join('');
                        const integer = Number.parseInt(colorString, 16);
                        return [
                            integer >> 16 & 0xFF,
                            integer >> 8 & 0xFF,
                            0xFF & integer
                        ];
                    },
                    enumerable: false
                },
                hexToAnsi256: {
                    value: (hex)=>styles.rgbToAnsi256(...styles.hexToRgb(hex)),
                    enumerable: false
                }
            });
            return styles;
        }
        Object.defineProperty(module, 'exports', {
            enumerable: true,
            get: assembleStyles
        });
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/ariaPropsMap.js": function(__unused_webpack_module, exports, __webpack_require__) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var _iterationDecorator = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/util/iterationDecorator.js"));
        function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
                default: obj
            };
        }
        function _slicedToArray(arr, i) {
            return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
        }
        function _nonIterableRest() {
            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }
        function _iterableToArrayLimit(arr, i) {
            var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"];
            if (null == _i) return;
            var _arr = [];
            var _n = true;
            var _d = false;
            var _s, _e;
            try {
                for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){
                    _arr.push(_s.value);
                    if (i && _arr.length === i) break;
                }
            } catch (err) {
                _d = true;
                _e = err;
            } finally{
                try {
                    if (!_n && null != _i["return"]) _i["return"]();
                } finally{
                    if (_d) throw _e;
                }
            }
            return _arr;
        }
        function _arrayWithHoles(arr) {
            if (Array.isArray(arr)) return arr;
        }
        function _createForOfIteratorHelper(o, allowArrayLike) {
            var it = "undefined" != typeof Symbol && o[Symbol.iterator] || o["@@iterator"];
            if (!it) {
                if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && "number" == typeof o.length) {
                    if (it) o = it;
                    var i = 0;
                    var F = function() {};
                    return {
                        s: F,
                        n: function() {
                            if (i >= o.length) return {
                                done: true
                            };
                            return {
                                done: false,
                                value: o[i++]
                            };
                        },
                        e: function(_e2) {
                            throw _e2;
                        },
                        f: F
                    };
                }
                throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
            }
            var normalCompletion = true, didErr = false, err;
            return {
                s: function() {
                    it = it.call(o);
                },
                n: function() {
                    var step = it.next();
                    normalCompletion = step.done;
                    return step;
                },
                e: function(_e3) {
                    didErr = true;
                    err = _e3;
                },
                f: function() {
                    try {
                        if (!normalCompletion && null != it.return) it.return();
                    } finally{
                        if (didErr) throw err;
                    }
                }
            };
        }
        function _unsupportedIterableToArray(o, minLen) {
            if (!o) return;
            if ("string" == typeof o) return _arrayLikeToArray(o, minLen);
            var n = Object.prototype.toString.call(o).slice(8, -1);
            if ("Object" === n && o.constructor) n = o.constructor.name;
            if ("Map" === n || "Set" === n) return Array.from(o);
            if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
        }
        function _arrayLikeToArray(arr, len) {
            if (null == len || len > arr.length) len = arr.length;
            for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
            return arr2;
        }
        var properties = [
            [
                'aria-activedescendant',
                {
                    type: 'id'
                }
            ],
            [
                'aria-atomic',
                {
                    type: 'boolean'
                }
            ],
            [
                'aria-autocomplete',
                {
                    type: 'token',
                    values: [
                        'inline',
                        'list',
                        'both',
                        'none'
                    ]
                }
            ],
            [
                'aria-braillelabel',
                {
                    type: 'string'
                }
            ],
            [
                "aria-brailleroledescription",
                {
                    type: 'string'
                }
            ],
            [
                'aria-busy',
                {
                    type: 'boolean'
                }
            ],
            [
                'aria-checked',
                {
                    type: 'tristate'
                }
            ],
            [
                'aria-colcount',
                {
                    type: 'integer'
                }
            ],
            [
                'aria-colindex',
                {
                    type: 'integer'
                }
            ],
            [
                'aria-colspan',
                {
                    type: 'integer'
                }
            ],
            [
                'aria-controls',
                {
                    type: 'idlist'
                }
            ],
            [
                'aria-current',
                {
                    type: 'token',
                    values: [
                        'page',
                        'step',
                        'location',
                        'date',
                        'time',
                        true,
                        false
                    ]
                }
            ],
            [
                'aria-describedby',
                {
                    type: 'idlist'
                }
            ],
            [
                "aria-description",
                {
                    type: 'string'
                }
            ],
            [
                'aria-details',
                {
                    type: 'id'
                }
            ],
            [
                'aria-disabled',
                {
                    type: 'boolean'
                }
            ],
            [
                'aria-dropeffect',
                {
                    type: 'tokenlist',
                    values: [
                        'copy',
                        'execute',
                        'link',
                        'move',
                        'none',
                        'popup'
                    ]
                }
            ],
            [
                'aria-errormessage',
                {
                    type: 'id'
                }
            ],
            [
                'aria-expanded',
                {
                    type: 'boolean',
                    allowundefined: true
                }
            ],
            [
                'aria-flowto',
                {
                    type: 'idlist'
                }
            ],
            [
                'aria-grabbed',
                {
                    type: 'boolean',
                    allowundefined: true
                }
            ],
            [
                'aria-haspopup',
                {
                    type: 'token',
                    values: [
                        false,
                        true,
                        'menu',
                        'listbox',
                        'tree',
                        'grid',
                        'dialog'
                    ]
                }
            ],
            [
                'aria-hidden',
                {
                    type: 'boolean',
                    allowundefined: true
                }
            ],
            [
                'aria-invalid',
                {
                    type: 'token',
                    values: [
                        'grammar',
                        false,
                        'spelling',
                        true
                    ]
                }
            ],
            [
                'aria-keyshortcuts',
                {
                    type: 'string'
                }
            ],
            [
                'aria-label',
                {
                    type: 'string'
                }
            ],
            [
                'aria-labelledby',
                {
                    type: 'idlist'
                }
            ],
            [
                'aria-level',
                {
                    type: 'integer'
                }
            ],
            [
                'aria-live',
                {
                    type: 'token',
                    values: [
                        'assertive',
                        'off',
                        'polite'
                    ]
                }
            ],
            [
                'aria-modal',
                {
                    type: 'boolean'
                }
            ],
            [
                'aria-multiline',
                {
                    type: 'boolean'
                }
            ],
            [
                'aria-multiselectable',
                {
                    type: 'boolean'
                }
            ],
            [
                'aria-orientation',
                {
                    type: 'token',
                    values: [
                        'vertical',
                        'undefined',
                        'horizontal'
                    ]
                }
            ],
            [
                'aria-owns',
                {
                    type: 'idlist'
                }
            ],
            [
                'aria-placeholder',
                {
                    type: 'string'
                }
            ],
            [
                'aria-posinset',
                {
                    type: 'integer'
                }
            ],
            [
                'aria-pressed',
                {
                    type: 'tristate'
                }
            ],
            [
                'aria-readonly',
                {
                    type: 'boolean'
                }
            ],
            [
                'aria-relevant',
                {
                    type: 'tokenlist',
                    values: [
                        'additions',
                        'all',
                        'removals',
                        'text'
                    ]
                }
            ],
            [
                'aria-required',
                {
                    type: 'boolean'
                }
            ],
            [
                "aria-roledescription",
                {
                    type: 'string'
                }
            ],
            [
                'aria-rowcount',
                {
                    type: 'integer'
                }
            ],
            [
                'aria-rowindex',
                {
                    type: 'integer'
                }
            ],
            [
                'aria-rowspan',
                {
                    type: 'integer'
                }
            ],
            [
                'aria-selected',
                {
                    type: 'boolean',
                    allowundefined: true
                }
            ],
            [
                'aria-setsize',
                {
                    type: 'integer'
                }
            ],
            [
                'aria-sort',
                {
                    type: 'token',
                    values: [
                        'ascending',
                        'descending',
                        'none',
                        'other'
                    ]
                }
            ],
            [
                'aria-valuemax',
                {
                    type: 'number'
                }
            ],
            [
                'aria-valuemin',
                {
                    type: 'number'
                }
            ],
            [
                'aria-valuenow',
                {
                    type: 'number'
                }
            ],
            [
                'aria-valuetext',
                {
                    type: 'string'
                }
            ]
        ];
        var ariaPropsMap = {
            entries: function() {
                return properties;
            },
            forEach: function(fn) {
                var thisArg = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null;
                var _iterator = _createForOfIteratorHelper(properties), _step;
                try {
                    for(_iterator.s(); !(_step = _iterator.n()).done;){
                        var _step$value = _slicedToArray(_step.value, 2), key = _step$value[0], values = _step$value[1];
                        fn.call(thisArg, values, key, properties);
                    }
                } catch (err) {
                    _iterator.e(err);
                } finally{
                    _iterator.f();
                }
            },
            get: function(key) {
                var item = properties.find(function(tuple) {
                    return tuple[0] === key;
                });
                return item && item[1];
            },
            has: function(key) {
                return !!ariaPropsMap.get(key);
            },
            keys: function() {
                return properties.map(function(_ref) {
                    var _ref2 = _slicedToArray(_ref, 1), key = _ref2[0];
                    return key;
                });
            },
            values: function() {
                return properties.map(function(_ref3) {
                    var _ref4 = _slicedToArray(_ref3, 2), values = _ref4[1];
                    return values;
                });
            }
        };
        var _default = (0, _iterationDecorator.default)(ariaPropsMap, ariaPropsMap.entries());
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/domMap.js": function(__unused_webpack_module, exports, __webpack_require__) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var _iterationDecorator = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/util/iterationDecorator.js"));
        function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
                default: obj
            };
        }
        function _slicedToArray(arr, i) {
            return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
        }
        function _nonIterableRest() {
            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }
        function _iterableToArrayLimit(arr, i) {
            var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"];
            if (null == _i) return;
            var _arr = [];
            var _n = true;
            var _d = false;
            var _s, _e;
            try {
                for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){
                    _arr.push(_s.value);
                    if (i && _arr.length === i) break;
                }
            } catch (err) {
                _d = true;
                _e = err;
            } finally{
                try {
                    if (!_n && null != _i["return"]) _i["return"]();
                } finally{
                    if (_d) throw _e;
                }
            }
            return _arr;
        }
        function _arrayWithHoles(arr) {
            if (Array.isArray(arr)) return arr;
        }
        function _createForOfIteratorHelper(o, allowArrayLike) {
            var it = "undefined" != typeof Symbol && o[Symbol.iterator] || o["@@iterator"];
            if (!it) {
                if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && "number" == typeof o.length) {
                    if (it) o = it;
                    var i = 0;
                    var F = function() {};
                    return {
                        s: F,
                        n: function() {
                            if (i >= o.length) return {
                                done: true
                            };
                            return {
                                done: false,
                                value: o[i++]
                            };
                        },
                        e: function(_e2) {
                            throw _e2;
                        },
                        f: F
                    };
                }
                throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
            }
            var normalCompletion = true, didErr = false, err;
            return {
                s: function() {
                    it = it.call(o);
                },
                n: function() {
                    var step = it.next();
                    normalCompletion = step.done;
                    return step;
                },
                e: function(_e3) {
                    didErr = true;
                    err = _e3;
                },
                f: function() {
                    try {
                        if (!normalCompletion && null != it.return) it.return();
                    } finally{
                        if (didErr) throw err;
                    }
                }
            };
        }
        function _unsupportedIterableToArray(o, minLen) {
            if (!o) return;
            if ("string" == typeof o) return _arrayLikeToArray(o, minLen);
            var n = Object.prototype.toString.call(o).slice(8, -1);
            if ("Object" === n && o.constructor) n = o.constructor.name;
            if ("Map" === n || "Set" === n) return Array.from(o);
            if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
        }
        function _arrayLikeToArray(arr, len) {
            if (null == len || len > arr.length) len = arr.length;
            for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
            return arr2;
        }
        var dom = [
            [
                'a',
                {
                    reserved: false
                }
            ],
            [
                'abbr',
                {
                    reserved: false
                }
            ],
            [
                'acronym',
                {
                    reserved: false
                }
            ],
            [
                'address',
                {
                    reserved: false
                }
            ],
            [
                'applet',
                {
                    reserved: false
                }
            ],
            [
                'area',
                {
                    reserved: false
                }
            ],
            [
                'article',
                {
                    reserved: false
                }
            ],
            [
                'aside',
                {
                    reserved: false
                }
            ],
            [
                'audio',
                {
                    reserved: false
                }
            ],
            [
                'b',
                {
                    reserved: false
                }
            ],
            [
                'base',
                {
                    reserved: true
                }
            ],
            [
                'bdi',
                {
                    reserved: false
                }
            ],
            [
                'bdo',
                {
                    reserved: false
                }
            ],
            [
                'big',
                {
                    reserved: false
                }
            ],
            [
                'blink',
                {
                    reserved: false
                }
            ],
            [
                'blockquote',
                {
                    reserved: false
                }
            ],
            [
                'body',
                {
                    reserved: false
                }
            ],
            [
                'br',
                {
                    reserved: false
                }
            ],
            [
                'button',
                {
                    reserved: false
                }
            ],
            [
                'canvas',
                {
                    reserved: false
                }
            ],
            [
                'caption',
                {
                    reserved: false
                }
            ],
            [
                'center',
                {
                    reserved: false
                }
            ],
            [
                'cite',
                {
                    reserved: false
                }
            ],
            [
                'code',
                {
                    reserved: false
                }
            ],
            [
                'col',
                {
                    reserved: true
                }
            ],
            [
                'colgroup',
                {
                    reserved: true
                }
            ],
            [
                'content',
                {
                    reserved: false
                }
            ],
            [
                'data',
                {
                    reserved: false
                }
            ],
            [
                'datalist',
                {
                    reserved: false
                }
            ],
            [
                'dd',
                {
                    reserved: false
                }
            ],
            [
                'del',
                {
                    reserved: false
                }
            ],
            [
                'details',
                {
                    reserved: false
                }
            ],
            [
                'dfn',
                {
                    reserved: false
                }
            ],
            [
                'dialog',
                {
                    reserved: false
                }
            ],
            [
                'dir',
                {
                    reserved: false
                }
            ],
            [
                'div',
                {
                    reserved: false
                }
            ],
            [
                'dl',
                {
                    reserved: false
                }
            ],
            [
                'dt',
                {
                    reserved: false
                }
            ],
            [
                'em',
                {
                    reserved: false
                }
            ],
            [
                'embed',
                {
                    reserved: false
                }
            ],
            [
                'fieldset',
                {
                    reserved: false
                }
            ],
            [
                'figcaption',
                {
                    reserved: false
                }
            ],
            [
                'figure',
                {
                    reserved: false
                }
            ],
            [
                'font',
                {
                    reserved: false
                }
            ],
            [
                'footer',
                {
                    reserved: false
                }
            ],
            [
                'form',
                {
                    reserved: false
                }
            ],
            [
                'frame',
                {
                    reserved: false
                }
            ],
            [
                'frameset',
                {
                    reserved: false
                }
            ],
            [
                'h1',
                {
                    reserved: false
                }
            ],
            [
                'h2',
                {
                    reserved: false
                }
            ],
            [
                'h3',
                {
                    reserved: false
                }
            ],
            [
                'h4',
                {
                    reserved: false
                }
            ],
            [
                'h5',
                {
                    reserved: false
                }
            ],
            [
                'h6',
                {
                    reserved: false
                }
            ],
            [
                'head',
                {
                    reserved: true
                }
            ],
            [
                'header',
                {
                    reserved: false
                }
            ],
            [
                'hgroup',
                {
                    reserved: false
                }
            ],
            [
                'hr',
                {
                    reserved: false
                }
            ],
            [
                'html',
                {
                    reserved: true
                }
            ],
            [
                'i',
                {
                    reserved: false
                }
            ],
            [
                'iframe',
                {
                    reserved: false
                }
            ],
            [
                'img',
                {
                    reserved: false
                }
            ],
            [
                'input',
                {
                    reserved: false
                }
            ],
            [
                'ins',
                {
                    reserved: false
                }
            ],
            [
                'kbd',
                {
                    reserved: false
                }
            ],
            [
                'keygen',
                {
                    reserved: false
                }
            ],
            [
                'label',
                {
                    reserved: false
                }
            ],
            [
                'legend',
                {
                    reserved: false
                }
            ],
            [
                'li',
                {
                    reserved: false
                }
            ],
            [
                'link',
                {
                    reserved: true
                }
            ],
            [
                'main',
                {
                    reserved: false
                }
            ],
            [
                'map',
                {
                    reserved: false
                }
            ],
            [
                'mark',
                {
                    reserved: false
                }
            ],
            [
                'marquee',
                {
                    reserved: false
                }
            ],
            [
                'menu',
                {
                    reserved: false
                }
            ],
            [
                'menuitem',
                {
                    reserved: false
                }
            ],
            [
                'meta',
                {
                    reserved: true
                }
            ],
            [
                'meter',
                {
                    reserved: false
                }
            ],
            [
                'nav',
                {
                    reserved: false
                }
            ],
            [
                'noembed',
                {
                    reserved: true
                }
            ],
            [
                "noscript",
                {
                    reserved: true
                }
            ],
            [
                'object',
                {
                    reserved: false
                }
            ],
            [
                'ol',
                {
                    reserved: false
                }
            ],
            [
                'optgroup',
                {
                    reserved: false
                }
            ],
            [
                'option',
                {
                    reserved: false
                }
            ],
            [
                'output',
                {
                    reserved: false
                }
            ],
            [
                'p',
                {
                    reserved: false
                }
            ],
            [
                'param',
                {
                    reserved: true
                }
            ],
            [
                'picture',
                {
                    reserved: true
                }
            ],
            [
                'pre',
                {
                    reserved: false
                }
            ],
            [
                'progress',
                {
                    reserved: false
                }
            ],
            [
                'q',
                {
                    reserved: false
                }
            ],
            [
                'rp',
                {
                    reserved: false
                }
            ],
            [
                'rt',
                {
                    reserved: false
                }
            ],
            [
                'rtc',
                {
                    reserved: false
                }
            ],
            [
                'ruby',
                {
                    reserved: false
                }
            ],
            [
                's',
                {
                    reserved: false
                }
            ],
            [
                'samp',
                {
                    reserved: false
                }
            ],
            [
                "script",
                {
                    reserved: true
                }
            ],
            [
                'section',
                {
                    reserved: false
                }
            ],
            [
                'select',
                {
                    reserved: false
                }
            ],
            [
                'small',
                {
                    reserved: false
                }
            ],
            [
                'source',
                {
                    reserved: true
                }
            ],
            [
                'spacer',
                {
                    reserved: false
                }
            ],
            [
                'span',
                {
                    reserved: false
                }
            ],
            [
                'strike',
                {
                    reserved: false
                }
            ],
            [
                'strong',
                {
                    reserved: false
                }
            ],
            [
                'style',
                {
                    reserved: true
                }
            ],
            [
                'sub',
                {
                    reserved: false
                }
            ],
            [
                'summary',
                {
                    reserved: false
                }
            ],
            [
                'sup',
                {
                    reserved: false
                }
            ],
            [
                'table',
                {
                    reserved: false
                }
            ],
            [
                'tbody',
                {
                    reserved: false
                }
            ],
            [
                'td',
                {
                    reserved: false
                }
            ],
            [
                'textarea',
                {
                    reserved: false
                }
            ],
            [
                'tfoot',
                {
                    reserved: false
                }
            ],
            [
                'th',
                {
                    reserved: false
                }
            ],
            [
                'thead',
                {
                    reserved: false
                }
            ],
            [
                'time',
                {
                    reserved: false
                }
            ],
            [
                'title',
                {
                    reserved: true
                }
            ],
            [
                'tr',
                {
                    reserved: false
                }
            ],
            [
                'track',
                {
                    reserved: true
                }
            ],
            [
                'tt',
                {
                    reserved: false
                }
            ],
            [
                'u',
                {
                    reserved: false
                }
            ],
            [
                'ul',
                {
                    reserved: false
                }
            ],
            [
                'var',
                {
                    reserved: false
                }
            ],
            [
                'video',
                {
                    reserved: false
                }
            ],
            [
                'wbr',
                {
                    reserved: false
                }
            ],
            [
                'xmp',
                {
                    reserved: false
                }
            ]
        ];
        var domMap = {
            entries: function() {
                return dom;
            },
            forEach: function(fn) {
                var thisArg = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null;
                var _iterator = _createForOfIteratorHelper(dom), _step;
                try {
                    for(_iterator.s(); !(_step = _iterator.n()).done;){
                        var _step$value = _slicedToArray(_step.value, 2), key = _step$value[0], values = _step$value[1];
                        fn.call(thisArg, values, key, dom);
                    }
                } catch (err) {
                    _iterator.e(err);
                } finally{
                    _iterator.f();
                }
            },
            get: function(key) {
                var item = dom.find(function(tuple) {
                    return tuple[0] === key;
                });
                return item && item[1];
            },
            has: function(key) {
                return !!domMap.get(key);
            },
            keys: function() {
                return dom.map(function(_ref) {
                    var _ref2 = _slicedToArray(_ref, 1), key = _ref2[0];
                    return key;
                });
            },
            values: function() {
                return dom.map(function(_ref3) {
                    var _ref4 = _slicedToArray(_ref3, 2), values = _ref4[1];
                    return values;
                });
            }
        };
        var _default = (0, _iterationDecorator.default)(domMap, domMap.entries());
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/elementRoleMap.js": function(__unused_webpack_module, exports, __webpack_require__) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var _lite = __webpack_require__("../../../node_modules/.pnpm/dequal@2.0.3/node_modules/dequal/lite/index.js");
        var _iterationDecorator = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/util/iterationDecorator.js"));
        var _rolesMap = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/rolesMap.js"));
        function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
                default: obj
            };
        }
        function _slicedToArray(arr, i) {
            return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
        }
        function _nonIterableRest() {
            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }
        function _iterableToArrayLimit(arr, i) {
            var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"];
            if (null == _i) return;
            var _arr = [];
            var _n = true;
            var _d = false;
            var _s, _e;
            try {
                for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){
                    _arr.push(_s.value);
                    if (i && _arr.length === i) break;
                }
            } catch (err) {
                _d = true;
                _e = err;
            } finally{
                try {
                    if (!_n && null != _i["return"]) _i["return"]();
                } finally{
                    if (_d) throw _e;
                }
            }
            return _arr;
        }
        function _arrayWithHoles(arr) {
            if (Array.isArray(arr)) return arr;
        }
        function _createForOfIteratorHelper(o, allowArrayLike) {
            var it = "undefined" != typeof Symbol && o[Symbol.iterator] || o["@@iterator"];
            if (!it) {
                if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && "number" == typeof o.length) {
                    if (it) o = it;
                    var i = 0;
                    var F = function() {};
                    return {
                        s: F,
                        n: function() {
                            if (i >= o.length) return {
                                done: true
                            };
                            return {
                                done: false,
                                value: o[i++]
                            };
                        },
                        e: function(_e2) {
                            throw _e2;
                        },
                        f: F
                    };
                }
                throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
            }
            var normalCompletion = true, didErr = false, err;
            return {
                s: function() {
                    it = it.call(o);
                },
                n: function() {
                    var step = it.next();
                    normalCompletion = step.done;
                    return step;
                },
                e: function(_e3) {
                    didErr = true;
                    err = _e3;
                },
                f: function() {
                    try {
                        if (!normalCompletion && null != it.return) it.return();
                    } finally{
                        if (didErr) throw err;
                    }
                }
            };
        }
        function _unsupportedIterableToArray(o, minLen) {
            if (!o) return;
            if ("string" == typeof o) return _arrayLikeToArray(o, minLen);
            var n = Object.prototype.toString.call(o).slice(8, -1);
            if ("Object" === n && o.constructor) n = o.constructor.name;
            if ("Map" === n || "Set" === n) return Array.from(o);
            if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
        }
        function _arrayLikeToArray(arr, len) {
            if (null == len || len > arr.length) len = arr.length;
            for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
            return arr2;
        }
        var elementRoles = [];
        var keys = _rolesMap.default.keys();
        for(var i = 0; i < keys.length; i++){
            var key = keys[i];
            var role = _rolesMap.default.get(key);
            if (role) {
                var concepts = [].concat(role.baseConcepts, role.relatedConcepts);
                for(var k = 0; k < concepts.length; k++){
                    var relation = concepts[k];
                    if ('HTML' === relation.module) (function() {
                        var concept = relation.concept;
                        if (concept) {
                            var elementRoleRelation = elementRoles.find(function(relation) {
                                return (0, _lite.dequal)(relation, concept);
                            });
                            var roles;
                            roles = elementRoleRelation ? elementRoleRelation[1] : [];
                            var isUnique = true;
                            for(var _i = 0; _i < roles.length; _i++)if (roles[_i] === key) {
                                isUnique = false;
                                break;
                            }
                            if (isUnique) roles.push(key);
                            elementRoles.push([
                                concept,
                                roles
                            ]);
                        }
                    })();
                }
            }
        }
        var elementRoleMap = {
            entries: function() {
                return elementRoles;
            },
            forEach: function(fn) {
                var thisArg = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null;
                var _iterator = _createForOfIteratorHelper(elementRoles), _step;
                try {
                    for(_iterator.s(); !(_step = _iterator.n()).done;){
                        var _step$value = _slicedToArray(_step.value, 2), _key = _step$value[0], values = _step$value[1];
                        fn.call(thisArg, values, _key, elementRoles);
                    }
                } catch (err) {
                    _iterator.e(err);
                } finally{
                    _iterator.f();
                }
            },
            get: function(key) {
                var item = elementRoles.find(function(tuple) {
                    return key.name === tuple[0].name && (0, _lite.dequal)(key.attributes, tuple[0].attributes);
                });
                return item && item[1];
            },
            has: function(key) {
                return !!elementRoleMap.get(key);
            },
            keys: function() {
                return elementRoles.map(function(_ref) {
                    var _ref2 = _slicedToArray(_ref, 1), key = _ref2[0];
                    return key;
                });
            },
            values: function() {
                return elementRoles.map(function(_ref3) {
                    var _ref4 = _slicedToArray(_ref3, 2), values = _ref4[1];
                    return values;
                });
            }
        };
        var _default = (0, _iterationDecorator.default)(elementRoleMap, elementRoleMap.entries());
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/abstract/commandRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var commandRole = {
            abstract: true,
            accessibleNameRequired: false,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [
                'author'
            ],
            prohibitedProps: [],
            props: {},
            relatedConcepts: [],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'widget'
                ]
            ]
        };
        var _default = commandRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/abstract/compositeRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var compositeRole = {
            abstract: true,
            accessibleNameRequired: false,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [
                'author'
            ],
            prohibitedProps: [],
            props: {
                'aria-activedescendant': null,
                'aria-disabled': null
            },
            relatedConcepts: [],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'widget'
                ]
            ]
        };
        var _default = compositeRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/abstract/inputRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var inputRole = {
            abstract: true,
            accessibleNameRequired: false,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [
                'author'
            ],
            prohibitedProps: [],
            props: {
                'aria-disabled': null
            },
            relatedConcepts: [
                {
                    concept: {
                        name: 'input'
                    },
                    module: 'XForms'
                }
            ],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'widget'
                ]
            ]
        };
        var _default = inputRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/abstract/landmarkRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var landmarkRole = {
            abstract: true,
            accessibleNameRequired: false,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [
                'author'
            ],
            prohibitedProps: [],
            props: {},
            relatedConcepts: [],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'structure',
                    'section'
                ]
            ]
        };
        var _default = landmarkRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/abstract/rangeRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var rangeRole = {
            abstract: true,
            accessibleNameRequired: false,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [
                'author'
            ],
            prohibitedProps: [],
            props: {
                'aria-valuemax': null,
                'aria-valuemin': null,
                'aria-valuenow': null
            },
            relatedConcepts: [],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'structure'
                ]
            ]
        };
        var _default = rangeRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/abstract/roletypeRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var roletypeRole = {
            abstract: true,
            accessibleNameRequired: false,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [],
            prohibitedProps: [],
            props: {
                'aria-atomic': null,
                'aria-busy': null,
                'aria-controls': null,
                'aria-current': null,
                'aria-describedby': null,
                'aria-details': null,
                'aria-dropeffect': null,
                'aria-flowto': null,
                'aria-grabbed': null,
                'aria-hidden': null,
                'aria-keyshortcuts': null,
                'aria-label': null,
                'aria-labelledby': null,
                'aria-live': null,
                'aria-owns': null,
                'aria-relevant': null,
                "aria-roledescription": null
            },
            relatedConcepts: [
                {
                    concept: {
                        name: 'role'
                    },
                    module: 'XHTML'
                },
                {
                    concept: {
                        name: 'type'
                    },
                    module: 'Dublin Core'
                }
            ],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [],
            requiredProps: {},
            superClass: []
        };
        var _default = roletypeRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/abstract/sectionRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var sectionRole = {
            abstract: true,
            accessibleNameRequired: false,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [],
            prohibitedProps: [],
            props: {},
            relatedConcepts: [
                {
                    concept: {
                        name: 'frontmatter'
                    },
                    module: 'DTB'
                },
                {
                    concept: {
                        name: 'level'
                    },
                    module: 'DTB'
                },
                {
                    concept: {
                        name: 'level'
                    },
                    module: 'SMIL'
                }
            ],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'structure'
                ]
            ]
        };
        var _default = sectionRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/abstract/sectionheadRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var sectionheadRole = {
            abstract: true,
            accessibleNameRequired: false,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [
                'author',
                'contents'
            ],
            prohibitedProps: [],
            props: {},
            relatedConcepts: [],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'structure'
                ]
            ]
        };
        var _default = sectionheadRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/abstract/selectRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var selectRole = {
            abstract: true,
            accessibleNameRequired: false,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [
                'author'
            ],
            prohibitedProps: [],
            props: {
                'aria-orientation': null
            },
            relatedConcepts: [],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'widget',
                    'composite'
                ],
                [
                    'roletype',
                    'structure',
                    'section',
                    'group'
                ]
            ]
        };
        var _default = selectRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/abstract/structureRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var structureRole = {
            abstract: true,
            accessibleNameRequired: false,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [],
            prohibitedProps: [],
            props: {},
            relatedConcepts: [],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [],
            requiredProps: {},
            superClass: [
                [
                    'roletype'
                ]
            ]
        };
        var _default = structureRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/abstract/widgetRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var widgetRole = {
            abstract: true,
            accessibleNameRequired: false,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [],
            prohibitedProps: [],
            props: {},
            relatedConcepts: [],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [],
            requiredProps: {},
            superClass: [
                [
                    'roletype'
                ]
            ]
        };
        var _default = widgetRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/abstract/windowRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var windowRole = {
            abstract: true,
            accessibleNameRequired: false,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [
                'author'
            ],
            prohibitedProps: [],
            props: {
                'aria-modal': null
            },
            relatedConcepts: [],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [],
            requiredProps: {},
            superClass: [
                [
                    'roletype'
                ]
            ]
        };
        var _default = windowRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/ariaAbstractRoles.js": function(__unused_webpack_module, exports, __webpack_require__) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var _commandRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/abstract/commandRole.js"));
        var _compositeRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/abstract/compositeRole.js"));
        var _inputRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/abstract/inputRole.js"));
        var _landmarkRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/abstract/landmarkRole.js"));
        var _rangeRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/abstract/rangeRole.js"));
        var _roletypeRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/abstract/roletypeRole.js"));
        var _sectionRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/abstract/sectionRole.js"));
        var _sectionheadRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/abstract/sectionheadRole.js"));
        var _selectRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/abstract/selectRole.js"));
        var _structureRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/abstract/structureRole.js"));
        var _widgetRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/abstract/widgetRole.js"));
        var _windowRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/abstract/windowRole.js"));
        function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
                default: obj
            };
        }
        var ariaAbstractRoles = [
            [
                'command',
                _commandRole.default
            ],
            [
                'composite',
                _compositeRole.default
            ],
            [
                'input',
                _inputRole.default
            ],
            [
                'landmark',
                _landmarkRole.default
            ],
            [
                'range',
                _rangeRole.default
            ],
            [
                'roletype',
                _roletypeRole.default
            ],
            [
                'section',
                _sectionRole.default
            ],
            [
                'sectionhead',
                _sectionheadRole.default
            ],
            [
                'select',
                _selectRole.default
            ],
            [
                'structure',
                _structureRole.default
            ],
            [
                'widget',
                _widgetRole.default
            ],
            [
                'window',
                _windowRole.default
            ]
        ];
        var _default = ariaAbstractRoles;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/ariaDpubRoles.js": function(__unused_webpack_module, exports, __webpack_require__) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var _docAbstractRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/dpub/docAbstractRole.js"));
        var _docAcknowledgmentsRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/dpub/docAcknowledgmentsRole.js"));
        var _docAfterwordRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/dpub/docAfterwordRole.js"));
        var _docAppendixRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/dpub/docAppendixRole.js"));
        var _docBacklinkRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/dpub/docBacklinkRole.js"));
        var _docBiblioentryRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/dpub/docBiblioentryRole.js"));
        var _docBibliographyRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/dpub/docBibliographyRole.js"));
        var _docBibliorefRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/dpub/docBibliorefRole.js"));
        var _docChapterRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/dpub/docChapterRole.js"));
        var _docColophonRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/dpub/docColophonRole.js"));
        var _docConclusionRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/dpub/docConclusionRole.js"));
        var _docCoverRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/dpub/docCoverRole.js"));
        var _docCreditRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/dpub/docCreditRole.js"));
        var _docCreditsRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/dpub/docCreditsRole.js"));
        var _docDedicationRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/dpub/docDedicationRole.js"));
        var _docEndnoteRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/dpub/docEndnoteRole.js"));
        var _docEndnotesRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/dpub/docEndnotesRole.js"));
        var _docEpigraphRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/dpub/docEpigraphRole.js"));
        var _docEpilogueRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/dpub/docEpilogueRole.js"));
        var _docErrataRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/dpub/docErrataRole.js"));
        var _docExampleRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/dpub/docExampleRole.js"));
        var _docFootnoteRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/dpub/docFootnoteRole.js"));
        var _docForewordRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/dpub/docForewordRole.js"));
        var _docGlossaryRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/dpub/docGlossaryRole.js"));
        var _docGlossrefRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/dpub/docGlossrefRole.js"));
        var _docIndexRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/dpub/docIndexRole.js"));
        var _docIntroductionRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/dpub/docIntroductionRole.js"));
        var _docNoterefRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/dpub/docNoterefRole.js"));
        var _docNoticeRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/dpub/docNoticeRole.js"));
        var _docPagebreakRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/dpub/docPagebreakRole.js"));
        var _docPagelistRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/dpub/docPagelistRole.js"));
        var _docPartRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/dpub/docPartRole.js"));
        var _docPrefaceRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/dpub/docPrefaceRole.js"));
        var _docPrologueRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/dpub/docPrologueRole.js"));
        var _docPullquoteRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/dpub/docPullquoteRole.js"));
        var _docQnaRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/dpub/docQnaRole.js"));
        var _docSubtitleRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/dpub/docSubtitleRole.js"));
        var _docTipRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/dpub/docTipRole.js"));
        var _docTocRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/dpub/docTocRole.js"));
        function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
                default: obj
            };
        }
        var ariaDpubRoles = [
            [
                'doc-abstract',
                _docAbstractRole.default
            ],
            [
                'doc-acknowledgments',
                _docAcknowledgmentsRole.default
            ],
            [
                'doc-afterword',
                _docAfterwordRole.default
            ],
            [
                'doc-appendix',
                _docAppendixRole.default
            ],
            [
                'doc-backlink',
                _docBacklinkRole.default
            ],
            [
                'doc-biblioentry',
                _docBiblioentryRole.default
            ],
            [
                'doc-bibliography',
                _docBibliographyRole.default
            ],
            [
                'doc-biblioref',
                _docBibliorefRole.default
            ],
            [
                'doc-chapter',
                _docChapterRole.default
            ],
            [
                'doc-colophon',
                _docColophonRole.default
            ],
            [
                'doc-conclusion',
                _docConclusionRole.default
            ],
            [
                'doc-cover',
                _docCoverRole.default
            ],
            [
                'doc-credit',
                _docCreditRole.default
            ],
            [
                'doc-credits',
                _docCreditsRole.default
            ],
            [
                'doc-dedication',
                _docDedicationRole.default
            ],
            [
                'doc-endnote',
                _docEndnoteRole.default
            ],
            [
                'doc-endnotes',
                _docEndnotesRole.default
            ],
            [
                'doc-epigraph',
                _docEpigraphRole.default
            ],
            [
                'doc-epilogue',
                _docEpilogueRole.default
            ],
            [
                'doc-errata',
                _docErrataRole.default
            ],
            [
                'doc-example',
                _docExampleRole.default
            ],
            [
                'doc-footnote',
                _docFootnoteRole.default
            ],
            [
                'doc-foreword',
                _docForewordRole.default
            ],
            [
                'doc-glossary',
                _docGlossaryRole.default
            ],
            [
                'doc-glossref',
                _docGlossrefRole.default
            ],
            [
                'doc-index',
                _docIndexRole.default
            ],
            [
                'doc-introduction',
                _docIntroductionRole.default
            ],
            [
                'doc-noteref',
                _docNoterefRole.default
            ],
            [
                'doc-notice',
                _docNoticeRole.default
            ],
            [
                'doc-pagebreak',
                _docPagebreakRole.default
            ],
            [
                'doc-pagelist',
                _docPagelistRole.default
            ],
            [
                'doc-part',
                _docPartRole.default
            ],
            [
                'doc-preface',
                _docPrefaceRole.default
            ],
            [
                'doc-prologue',
                _docPrologueRole.default
            ],
            [
                'doc-pullquote',
                _docPullquoteRole.default
            ],
            [
                'doc-qna',
                _docQnaRole.default
            ],
            [
                'doc-subtitle',
                _docSubtitleRole.default
            ],
            [
                'doc-tip',
                _docTipRole.default
            ],
            [
                'doc-toc',
                _docTocRole.default
            ]
        ];
        var _default = ariaDpubRoles;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/ariaGraphicsRoles.js": function(__unused_webpack_module, exports, __webpack_require__) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var _graphicsDocumentRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/graphics/graphicsDocumentRole.js"));
        var _graphicsObjectRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/graphics/graphicsObjectRole.js"));
        var _graphicsSymbolRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/graphics/graphicsSymbolRole.js"));
        function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
                default: obj
            };
        }
        var ariaGraphicsRoles = [
            [
                'graphics-document',
                _graphicsDocumentRole.default
            ],
            [
                'graphics-object',
                _graphicsObjectRole.default
            ],
            [
                'graphics-symbol',
                _graphicsSymbolRole.default
            ]
        ];
        var _default = ariaGraphicsRoles;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/ariaLiteralRoles.js": function(__unused_webpack_module, exports, __webpack_require__) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var _alertRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/alertRole.js"));
        var _alertdialogRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/alertdialogRole.js"));
        var _applicationRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/applicationRole.js"));
        var _articleRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/articleRole.js"));
        var _bannerRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/bannerRole.js"));
        var _blockquoteRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/blockquoteRole.js"));
        var _buttonRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/buttonRole.js"));
        var _captionRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/captionRole.js"));
        var _cellRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/cellRole.js"));
        var _checkboxRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/checkboxRole.js"));
        var _codeRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/codeRole.js"));
        var _columnheaderRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/columnheaderRole.js"));
        var _comboboxRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/comboboxRole.js"));
        var _complementaryRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/complementaryRole.js"));
        var _contentinfoRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/contentinfoRole.js"));
        var _definitionRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/definitionRole.js"));
        var _deletionRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/deletionRole.js"));
        var _dialogRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/dialogRole.js"));
        var _directoryRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/directoryRole.js"));
        var _documentRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/documentRole.js"));
        var _emphasisRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/emphasisRole.js"));
        var _feedRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/feedRole.js"));
        var _figureRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/figureRole.js"));
        var _formRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/formRole.js"));
        var _genericRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/genericRole.js"));
        var _gridRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/gridRole.js"));
        var _gridcellRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/gridcellRole.js"));
        var _groupRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/groupRole.js"));
        var _headingRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/headingRole.js"));
        var _imgRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/imgRole.js"));
        var _insertionRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/insertionRole.js"));
        var _linkRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/linkRole.js"));
        var _listRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/listRole.js"));
        var _listboxRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/listboxRole.js"));
        var _listitemRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/listitemRole.js"));
        var _logRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/logRole.js"));
        var _mainRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/mainRole.js"));
        var _markRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/markRole.js"));
        var _marqueeRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/marqueeRole.js"));
        var _mathRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/mathRole.js"));
        var _menuRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/menuRole.js"));
        var _menubarRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/menubarRole.js"));
        var _menuitemRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/menuitemRole.js"));
        var _menuitemcheckboxRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/menuitemcheckboxRole.js"));
        var _menuitemradioRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/menuitemradioRole.js"));
        var _meterRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/meterRole.js"));
        var _navigationRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/navigationRole.js"));
        var _noneRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/noneRole.js"));
        var _noteRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/noteRole.js"));
        var _optionRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/optionRole.js"));
        var _paragraphRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/paragraphRole.js"));
        var _presentationRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/presentationRole.js"));
        var _progressbarRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/progressbarRole.js"));
        var _radioRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/radioRole.js"));
        var _radiogroupRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/radiogroupRole.js"));
        var _regionRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/regionRole.js"));
        var _rowRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/rowRole.js"));
        var _rowgroupRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/rowgroupRole.js"));
        var _rowheaderRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/rowheaderRole.js"));
        var _scrollbarRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/scrollbarRole.js"));
        var _searchRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/searchRole.js"));
        var _searchboxRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/searchboxRole.js"));
        var _separatorRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/separatorRole.js"));
        var _sliderRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/sliderRole.js"));
        var _spinbuttonRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/spinbuttonRole.js"));
        var _statusRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/statusRole.js"));
        var _strongRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/strongRole.js"));
        var _subscriptRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/subscriptRole.js"));
        var _superscriptRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/superscriptRole.js"));
        var _switchRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/switchRole.js"));
        var _tabRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/tabRole.js"));
        var _tableRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/tableRole.js"));
        var _tablistRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/tablistRole.js"));
        var _tabpanelRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/tabpanelRole.js"));
        var _termRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/termRole.js"));
        var _textboxRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/textboxRole.js"));
        var _timeRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/timeRole.js"));
        var _timerRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/timerRole.js"));
        var _toolbarRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/toolbarRole.js"));
        var _tooltipRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/tooltipRole.js"));
        var _treeRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/treeRole.js"));
        var _treegridRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/treegridRole.js"));
        var _treeitemRole = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/treeitemRole.js"));
        function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
                default: obj
            };
        }
        var ariaLiteralRoles = [
            [
                'alert',
                _alertRole.default
            ],
            [
                'alertdialog',
                _alertdialogRole.default
            ],
            [
                'application',
                _applicationRole.default
            ],
            [
                'article',
                _articleRole.default
            ],
            [
                'banner',
                _bannerRole.default
            ],
            [
                'blockquote',
                _blockquoteRole.default
            ],
            [
                'button',
                _buttonRole.default
            ],
            [
                'caption',
                _captionRole.default
            ],
            [
                'cell',
                _cellRole.default
            ],
            [
                'checkbox',
                _checkboxRole.default
            ],
            [
                'code',
                _codeRole.default
            ],
            [
                'columnheader',
                _columnheaderRole.default
            ],
            [
                'combobox',
                _comboboxRole.default
            ],
            [
                'complementary',
                _complementaryRole.default
            ],
            [
                'contentinfo',
                _contentinfoRole.default
            ],
            [
                'definition',
                _definitionRole.default
            ],
            [
                'deletion',
                _deletionRole.default
            ],
            [
                'dialog',
                _dialogRole.default
            ],
            [
                'directory',
                _directoryRole.default
            ],
            [
                'document',
                _documentRole.default
            ],
            [
                'emphasis',
                _emphasisRole.default
            ],
            [
                'feed',
                _feedRole.default
            ],
            [
                'figure',
                _figureRole.default
            ],
            [
                'form',
                _formRole.default
            ],
            [
                'generic',
                _genericRole.default
            ],
            [
                'grid',
                _gridRole.default
            ],
            [
                'gridcell',
                _gridcellRole.default
            ],
            [
                'group',
                _groupRole.default
            ],
            [
                'heading',
                _headingRole.default
            ],
            [
                'img',
                _imgRole.default
            ],
            [
                'insertion',
                _insertionRole.default
            ],
            [
                'link',
                _linkRole.default
            ],
            [
                'list',
                _listRole.default
            ],
            [
                'listbox',
                _listboxRole.default
            ],
            [
                'listitem',
                _listitemRole.default
            ],
            [
                'log',
                _logRole.default
            ],
            [
                'main',
                _mainRole.default
            ],
            [
                'mark',
                _markRole.default
            ],
            [
                'marquee',
                _marqueeRole.default
            ],
            [
                'math',
                _mathRole.default
            ],
            [
                'menu',
                _menuRole.default
            ],
            [
                'menubar',
                _menubarRole.default
            ],
            [
                'menuitem',
                _menuitemRole.default
            ],
            [
                'menuitemcheckbox',
                _menuitemcheckboxRole.default
            ],
            [
                'menuitemradio',
                _menuitemradioRole.default
            ],
            [
                'meter',
                _meterRole.default
            ],
            [
                'navigation',
                _navigationRole.default
            ],
            [
                'none',
                _noneRole.default
            ],
            [
                'note',
                _noteRole.default
            ],
            [
                'option',
                _optionRole.default
            ],
            [
                'paragraph',
                _paragraphRole.default
            ],
            [
                'presentation',
                _presentationRole.default
            ],
            [
                'progressbar',
                _progressbarRole.default
            ],
            [
                'radio',
                _radioRole.default
            ],
            [
                'radiogroup',
                _radiogroupRole.default
            ],
            [
                'region',
                _regionRole.default
            ],
            [
                'row',
                _rowRole.default
            ],
            [
                'rowgroup',
                _rowgroupRole.default
            ],
            [
                'rowheader',
                _rowheaderRole.default
            ],
            [
                'scrollbar',
                _scrollbarRole.default
            ],
            [
                'search',
                _searchRole.default
            ],
            [
                'searchbox',
                _searchboxRole.default
            ],
            [
                'separator',
                _separatorRole.default
            ],
            [
                'slider',
                _sliderRole.default
            ],
            [
                'spinbutton',
                _spinbuttonRole.default
            ],
            [
                'status',
                _statusRole.default
            ],
            [
                'strong',
                _strongRole.default
            ],
            [
                "subscript",
                _subscriptRole.default
            ],
            [
                "superscript",
                _superscriptRole.default
            ],
            [
                'switch',
                _switchRole.default
            ],
            [
                'tab',
                _tabRole.default
            ],
            [
                'table',
                _tableRole.default
            ],
            [
                'tablist',
                _tablistRole.default
            ],
            [
                'tabpanel',
                _tabpanelRole.default
            ],
            [
                'term',
                _termRole.default
            ],
            [
                'textbox',
                _textboxRole.default
            ],
            [
                'time',
                _timeRole.default
            ],
            [
                'timer',
                _timerRole.default
            ],
            [
                'toolbar',
                _toolbarRole.default
            ],
            [
                'tooltip',
                _tooltipRole.default
            ],
            [
                'tree',
                _treeRole.default
            ],
            [
                'treegrid',
                _treegridRole.default
            ],
            [
                'treeitem',
                _treeitemRole.default
            ]
        ];
        var _default = ariaLiteralRoles;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/dpub/docAbstractRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var docAbstractRole = {
            abstract: false,
            accessibleNameRequired: false,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [
                'author'
            ],
            prohibitedProps: [],
            props: {
                'aria-disabled': null,
                'aria-errormessage': null,
                'aria-expanded': null,
                'aria-haspopup': null,
                'aria-invalid': null
            },
            relatedConcepts: [
                {
                    concept: {
                        name: 'abstract [EPUB-SSV]'
                    },
                    module: 'EPUB'
                }
            ],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'structure',
                    'section'
                ]
            ]
        };
        var _default = docAbstractRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/dpub/docAcknowledgmentsRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var docAcknowledgmentsRole = {
            abstract: false,
            accessibleNameRequired: false,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [
                'author'
            ],
            prohibitedProps: [],
            props: {
                'aria-disabled': null,
                'aria-errormessage': null,
                'aria-expanded': null,
                'aria-haspopup': null,
                'aria-invalid': null
            },
            relatedConcepts: [
                {
                    concept: {
                        name: 'acknowledgments [EPUB-SSV]'
                    },
                    module: 'EPUB'
                }
            ],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'structure',
                    'section',
                    'landmark'
                ]
            ]
        };
        var _default = docAcknowledgmentsRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/dpub/docAfterwordRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var docAfterwordRole = {
            abstract: false,
            accessibleNameRequired: false,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [
                'author'
            ],
            prohibitedProps: [],
            props: {
                'aria-disabled': null,
                'aria-errormessage': null,
                'aria-expanded': null,
                'aria-haspopup': null,
                'aria-invalid': null
            },
            relatedConcepts: [
                {
                    concept: {
                        name: 'afterword [EPUB-SSV]'
                    },
                    module: 'EPUB'
                }
            ],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'structure',
                    'section',
                    'landmark'
                ]
            ]
        };
        var _default = docAfterwordRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/dpub/docAppendixRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var docAppendixRole = {
            abstract: false,
            accessibleNameRequired: false,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [
                'author'
            ],
            prohibitedProps: [],
            props: {
                'aria-disabled': null,
                'aria-errormessage': null,
                'aria-expanded': null,
                'aria-haspopup': null,
                'aria-invalid': null
            },
            relatedConcepts: [
                {
                    concept: {
                        name: 'appendix [EPUB-SSV]'
                    },
                    module: 'EPUB'
                }
            ],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'structure',
                    'section',
                    'landmark'
                ]
            ]
        };
        var _default = docAppendixRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/dpub/docBacklinkRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var docBacklinkRole = {
            abstract: false,
            accessibleNameRequired: true,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [
                'author',
                'contents'
            ],
            prohibitedProps: [],
            props: {
                'aria-errormessage': null,
                'aria-invalid': null
            },
            relatedConcepts: [
                {
                    concept: {
                        name: 'referrer [EPUB-SSV]'
                    },
                    module: 'EPUB'
                }
            ],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'widget',
                    'command',
                    'link'
                ]
            ]
        };
        var _default = docBacklinkRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/dpub/docBiblioentryRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var docBiblioentryRole = {
            abstract: false,
            accessibleNameRequired: true,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [
                'author'
            ],
            prohibitedProps: [],
            props: {
                'aria-disabled': null,
                'aria-errormessage': null,
                'aria-expanded': null,
                'aria-haspopup': null,
                'aria-invalid': null
            },
            relatedConcepts: [
                {
                    concept: {
                        name: 'EPUB biblioentry [EPUB-SSV]'
                    },
                    module: 'EPUB'
                }
            ],
            requireContextRole: [
                'doc-bibliography'
            ],
            requiredContextRole: [
                'doc-bibliography'
            ],
            requiredOwnedElements: [],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'structure',
                    'section',
                    'listitem'
                ]
            ]
        };
        var _default = docBiblioentryRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/dpub/docBibliographyRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var docBibliographyRole = {
            abstract: false,
            accessibleNameRequired: false,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [
                'author'
            ],
            prohibitedProps: [],
            props: {
                'aria-disabled': null,
                'aria-errormessage': null,
                'aria-expanded': null,
                'aria-haspopup': null,
                'aria-invalid': null
            },
            relatedConcepts: [
                {
                    concept: {
                        name: 'bibliography [EPUB-SSV]'
                    },
                    module: 'EPUB'
                }
            ],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [
                [
                    'doc-biblioentry'
                ]
            ],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'structure',
                    'section',
                    'landmark'
                ]
            ]
        };
        var _default = docBibliographyRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/dpub/docBibliorefRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var docBibliorefRole = {
            abstract: false,
            accessibleNameRequired: true,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [
                'author',
                'contents'
            ],
            prohibitedProps: [],
            props: {
                'aria-errormessage': null,
                'aria-invalid': null
            },
            relatedConcepts: [
                {
                    concept: {
                        name: 'biblioref [EPUB-SSV]'
                    },
                    module: 'EPUB'
                }
            ],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'widget',
                    'command',
                    'link'
                ]
            ]
        };
        var _default = docBibliorefRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/dpub/docChapterRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var docChapterRole = {
            abstract: false,
            accessibleNameRequired: false,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [
                'author'
            ],
            prohibitedProps: [],
            props: {
                'aria-disabled': null,
                'aria-errormessage': null,
                'aria-expanded': null,
                'aria-haspopup': null,
                'aria-invalid': null
            },
            relatedConcepts: [
                {
                    concept: {
                        name: 'chapter [EPUB-SSV]'
                    },
                    module: 'EPUB'
                }
            ],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'structure',
                    'section',
                    'landmark'
                ]
            ]
        };
        var _default = docChapterRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/dpub/docColophonRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var docColophonRole = {
            abstract: false,
            accessibleNameRequired: false,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [
                'author'
            ],
            prohibitedProps: [],
            props: {
                'aria-disabled': null,
                'aria-errormessage': null,
                'aria-expanded': null,
                'aria-haspopup': null,
                'aria-invalid': null
            },
            relatedConcepts: [
                {
                    concept: {
                        name: 'colophon [EPUB-SSV]'
                    },
                    module: 'EPUB'
                }
            ],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'structure',
                    'section'
                ]
            ]
        };
        var _default = docColophonRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/dpub/docConclusionRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var docConclusionRole = {
            abstract: false,
            accessibleNameRequired: false,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [
                'author'
            ],
            prohibitedProps: [],
            props: {
                'aria-disabled': null,
                'aria-errormessage': null,
                'aria-expanded': null,
                'aria-haspopup': null,
                'aria-invalid': null
            },
            relatedConcepts: [
                {
                    concept: {
                        name: 'conclusion [EPUB-SSV]'
                    },
                    module: 'EPUB'
                }
            ],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'structure',
                    'section',
                    'landmark'
                ]
            ]
        };
        var _default = docConclusionRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/dpub/docCoverRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var docCoverRole = {
            abstract: false,
            accessibleNameRequired: false,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [
                'author'
            ],
            prohibitedProps: [],
            props: {
                'aria-disabled': null,
                'aria-errormessage': null,
                'aria-expanded': null,
                'aria-haspopup': null,
                'aria-invalid': null
            },
            relatedConcepts: [
                {
                    concept: {
                        name: 'cover [EPUB-SSV]'
                    },
                    module: 'EPUB'
                }
            ],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'structure',
                    'section',
                    'img'
                ]
            ]
        };
        var _default = docCoverRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/dpub/docCreditRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var docCreditRole = {
            abstract: false,
            accessibleNameRequired: false,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [
                'author'
            ],
            prohibitedProps: [],
            props: {
                'aria-disabled': null,
                'aria-errormessage': null,
                'aria-expanded': null,
                'aria-haspopup': null,
                'aria-invalid': null
            },
            relatedConcepts: [
                {
                    concept: {
                        name: 'credit [EPUB-SSV]'
                    },
                    module: 'EPUB'
                }
            ],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'structure',
                    'section'
                ]
            ]
        };
        var _default = docCreditRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/dpub/docCreditsRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var docCreditsRole = {
            abstract: false,
            accessibleNameRequired: false,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [
                'author'
            ],
            prohibitedProps: [],
            props: {
                'aria-disabled': null,
                'aria-errormessage': null,
                'aria-expanded': null,
                'aria-haspopup': null,
                'aria-invalid': null
            },
            relatedConcepts: [
                {
                    concept: {
                        name: 'credits [EPUB-SSV]'
                    },
                    module: 'EPUB'
                }
            ],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'structure',
                    'section',
                    'landmark'
                ]
            ]
        };
        var _default = docCreditsRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/dpub/docDedicationRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var docDedicationRole = {
            abstract: false,
            accessibleNameRequired: false,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [
                'author'
            ],
            prohibitedProps: [],
            props: {
                'aria-disabled': null,
                'aria-errormessage': null,
                'aria-expanded': null,
                'aria-haspopup': null,
                'aria-invalid': null
            },
            relatedConcepts: [
                {
                    concept: {
                        name: 'dedication [EPUB-SSV]'
                    },
                    module: 'EPUB'
                }
            ],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'structure',
                    'section'
                ]
            ]
        };
        var _default = docDedicationRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/dpub/docEndnoteRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var docEndnoteRole = {
            abstract: false,
            accessibleNameRequired: false,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [
                'author'
            ],
            prohibitedProps: [],
            props: {
                'aria-disabled': null,
                'aria-errormessage': null,
                'aria-expanded': null,
                'aria-haspopup': null,
                'aria-invalid': null
            },
            relatedConcepts: [
                {
                    concept: {
                        name: 'rearnote [EPUB-SSV]'
                    },
                    module: 'EPUB'
                }
            ],
            requireContextRole: [
                'doc-endnotes'
            ],
            requiredContextRole: [
                'doc-endnotes'
            ],
            requiredOwnedElements: [],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'structure',
                    'section',
                    'listitem'
                ]
            ]
        };
        var _default = docEndnoteRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/dpub/docEndnotesRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var docEndnotesRole = {
            abstract: false,
            accessibleNameRequired: false,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [
                'author'
            ],
            prohibitedProps: [],
            props: {
                'aria-disabled': null,
                'aria-errormessage': null,
                'aria-expanded': null,
                'aria-haspopup': null,
                'aria-invalid': null
            },
            relatedConcepts: [
                {
                    concept: {
                        name: 'rearnotes [EPUB-SSV]'
                    },
                    module: 'EPUB'
                }
            ],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [
                [
                    'doc-endnote'
                ]
            ],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'structure',
                    'section',
                    'landmark'
                ]
            ]
        };
        var _default = docEndnotesRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/dpub/docEpigraphRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var docEpigraphRole = {
            abstract: false,
            accessibleNameRequired: false,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [
                'author'
            ],
            prohibitedProps: [],
            props: {
                'aria-disabled': null,
                'aria-errormessage': null,
                'aria-expanded': null,
                'aria-haspopup': null,
                'aria-invalid': null
            },
            relatedConcepts: [
                {
                    concept: {
                        name: 'epigraph [EPUB-SSV]'
                    },
                    module: 'EPUB'
                }
            ],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'structure',
                    'section'
                ]
            ]
        };
        var _default = docEpigraphRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/dpub/docEpilogueRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var docEpilogueRole = {
            abstract: false,
            accessibleNameRequired: false,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [
                'author'
            ],
            prohibitedProps: [],
            props: {
                'aria-disabled': null,
                'aria-errormessage': null,
                'aria-expanded': null,
                'aria-haspopup': null,
                'aria-invalid': null
            },
            relatedConcepts: [
                {
                    concept: {
                        name: 'epilogue [EPUB-SSV]'
                    },
                    module: 'EPUB'
                }
            ],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'structure',
                    'section',
                    'landmark'
                ]
            ]
        };
        var _default = docEpilogueRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/dpub/docErrataRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var docErrataRole = {
            abstract: false,
            accessibleNameRequired: false,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [
                'author'
            ],
            prohibitedProps: [],
            props: {
                'aria-disabled': null,
                'aria-errormessage': null,
                'aria-expanded': null,
                'aria-haspopup': null,
                'aria-invalid': null
            },
            relatedConcepts: [
                {
                    concept: {
                        name: 'errata [EPUB-SSV]'
                    },
                    module: 'EPUB'
                }
            ],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'structure',
                    'section',
                    'landmark'
                ]
            ]
        };
        var _default = docErrataRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/dpub/docExampleRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var docExampleRole = {
            abstract: false,
            accessibleNameRequired: false,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [
                'author'
            ],
            prohibitedProps: [],
            props: {
                'aria-disabled': null,
                'aria-errormessage': null,
                'aria-expanded': null,
                'aria-haspopup': null,
                'aria-invalid': null
            },
            relatedConcepts: [],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'structure',
                    'section'
                ]
            ]
        };
        var _default = docExampleRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/dpub/docFootnoteRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var docFootnoteRole = {
            abstract: false,
            accessibleNameRequired: false,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [
                'author'
            ],
            prohibitedProps: [],
            props: {
                'aria-disabled': null,
                'aria-errormessage': null,
                'aria-expanded': null,
                'aria-haspopup': null,
                'aria-invalid': null
            },
            relatedConcepts: [
                {
                    concept: {
                        name: 'footnote [EPUB-SSV]'
                    },
                    module: 'EPUB'
                }
            ],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'structure',
                    'section'
                ]
            ]
        };
        var _default = docFootnoteRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/dpub/docForewordRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var docForewordRole = {
            abstract: false,
            accessibleNameRequired: false,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [
                'author'
            ],
            prohibitedProps: [],
            props: {
                'aria-disabled': null,
                'aria-errormessage': null,
                'aria-expanded': null,
                'aria-haspopup': null,
                'aria-invalid': null
            },
            relatedConcepts: [
                {
                    concept: {
                        name: 'foreword [EPUB-SSV]'
                    },
                    module: 'EPUB'
                }
            ],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'structure',
                    'section',
                    'landmark'
                ]
            ]
        };
        var _default = docForewordRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/dpub/docGlossaryRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var docGlossaryRole = {
            abstract: false,
            accessibleNameRequired: false,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [
                'author'
            ],
            prohibitedProps: [],
            props: {
                'aria-disabled': null,
                'aria-errormessage': null,
                'aria-expanded': null,
                'aria-haspopup': null,
                'aria-invalid': null
            },
            relatedConcepts: [
                {
                    concept: {
                        name: 'glossary [EPUB-SSV]'
                    },
                    module: 'EPUB'
                }
            ],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [
                [
                    'definition'
                ],
                [
                    'term'
                ]
            ],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'structure',
                    'section',
                    'landmark'
                ]
            ]
        };
        var _default = docGlossaryRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/dpub/docGlossrefRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var docGlossrefRole = {
            abstract: false,
            accessibleNameRequired: true,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [
                'author',
                'contents'
            ],
            prohibitedProps: [],
            props: {
                'aria-errormessage': null,
                'aria-invalid': null
            },
            relatedConcepts: [
                {
                    concept: {
                        name: 'glossref [EPUB-SSV]'
                    },
                    module: 'EPUB'
                }
            ],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'widget',
                    'command',
                    'link'
                ]
            ]
        };
        var _default = docGlossrefRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/dpub/docIndexRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var docIndexRole = {
            abstract: false,
            accessibleNameRequired: false,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [
                'author'
            ],
            prohibitedProps: [],
            props: {
                'aria-disabled': null,
                'aria-errormessage': null,
                'aria-expanded': null,
                'aria-haspopup': null,
                'aria-invalid': null
            },
            relatedConcepts: [
                {
                    concept: {
                        name: 'index [EPUB-SSV]'
                    },
                    module: 'EPUB'
                }
            ],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'structure',
                    'section',
                    'landmark',
                    'navigation'
                ]
            ]
        };
        var _default = docIndexRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/dpub/docIntroductionRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var docIntroductionRole = {
            abstract: false,
            accessibleNameRequired: false,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [
                'author'
            ],
            prohibitedProps: [],
            props: {
                'aria-disabled': null,
                'aria-errormessage': null,
                'aria-expanded': null,
                'aria-haspopup': null,
                'aria-invalid': null
            },
            relatedConcepts: [
                {
                    concept: {
                        name: 'introduction [EPUB-SSV]'
                    },
                    module: 'EPUB'
                }
            ],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'structure',
                    'section',
                    'landmark'
                ]
            ]
        };
        var _default = docIntroductionRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/dpub/docNoterefRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var docNoterefRole = {
            abstract: false,
            accessibleNameRequired: true,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [
                'author',
                'contents'
            ],
            prohibitedProps: [],
            props: {
                'aria-errormessage': null,
                'aria-invalid': null
            },
            relatedConcepts: [
                {
                    concept: {
                        name: 'noteref [EPUB-SSV]'
                    },
                    module: 'EPUB'
                }
            ],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'widget',
                    'command',
                    'link'
                ]
            ]
        };
        var _default = docNoterefRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/dpub/docNoticeRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var docNoticeRole = {
            abstract: false,
            accessibleNameRequired: false,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [
                'author'
            ],
            prohibitedProps: [],
            props: {
                'aria-disabled': null,
                'aria-errormessage': null,
                'aria-expanded': null,
                'aria-haspopup': null,
                'aria-invalid': null
            },
            relatedConcepts: [
                {
                    concept: {
                        name: 'notice [EPUB-SSV]'
                    },
                    module: 'EPUB'
                }
            ],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'structure',
                    'section',
                    'note'
                ]
            ]
        };
        var _default = docNoticeRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/dpub/docPagebreakRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var docPagebreakRole = {
            abstract: false,
            accessibleNameRequired: true,
            baseConcepts: [],
            childrenPresentational: true,
            nameFrom: [
                'author'
            ],
            prohibitedProps: [],
            props: {
                'aria-errormessage': null,
                'aria-expanded': null,
                'aria-haspopup': null,
                'aria-invalid': null
            },
            relatedConcepts: [
                {
                    concept: {
                        name: 'pagebreak [EPUB-SSV]'
                    },
                    module: 'EPUB'
                }
            ],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'structure',
                    'separator'
                ]
            ]
        };
        var _default = docPagebreakRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/dpub/docPagelistRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var docPagelistRole = {
            abstract: false,
            accessibleNameRequired: false,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [
                'author'
            ],
            prohibitedProps: [],
            props: {
                'aria-disabled': null,
                'aria-errormessage': null,
                'aria-expanded': null,
                'aria-haspopup': null,
                'aria-invalid': null
            },
            relatedConcepts: [
                {
                    concept: {
                        name: 'page-list [EPUB-SSV]'
                    },
                    module: 'EPUB'
                }
            ],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'structure',
                    'section',
                    'landmark',
                    'navigation'
                ]
            ]
        };
        var _default = docPagelistRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/dpub/docPartRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var docPartRole = {
            abstract: false,
            accessibleNameRequired: true,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [
                'author'
            ],
            prohibitedProps: [],
            props: {
                'aria-disabled': null,
                'aria-errormessage': null,
                'aria-expanded': null,
                'aria-haspopup': null,
                'aria-invalid': null
            },
            relatedConcepts: [
                {
                    concept: {
                        name: 'part [EPUB-SSV]'
                    },
                    module: 'EPUB'
                }
            ],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'structure',
                    'section',
                    'landmark'
                ]
            ]
        };
        var _default = docPartRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/dpub/docPrefaceRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var docPrefaceRole = {
            abstract: false,
            accessibleNameRequired: false,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [
                'author'
            ],
            prohibitedProps: [],
            props: {
                'aria-disabled': null,
                'aria-errormessage': null,
                'aria-expanded': null,
                'aria-haspopup': null,
                'aria-invalid': null
            },
            relatedConcepts: [
                {
                    concept: {
                        name: 'preface [EPUB-SSV]'
                    },
                    module: 'EPUB'
                }
            ],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'structure',
                    'section',
                    'landmark'
                ]
            ]
        };
        var _default = docPrefaceRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/dpub/docPrologueRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var docPrologueRole = {
            abstract: false,
            accessibleNameRequired: false,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [
                'author'
            ],
            prohibitedProps: [],
            props: {
                'aria-disabled': null,
                'aria-errormessage': null,
                'aria-expanded': null,
                'aria-haspopup': null,
                'aria-invalid': null
            },
            relatedConcepts: [
                {
                    concept: {
                        name: 'prologue [EPUB-SSV]'
                    },
                    module: 'EPUB'
                }
            ],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'structure',
                    'section',
                    'landmark'
                ]
            ]
        };
        var _default = docPrologueRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/dpub/docPullquoteRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var docPullquoteRole = {
            abstract: false,
            accessibleNameRequired: false,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [
                'author'
            ],
            prohibitedProps: [],
            props: {},
            relatedConcepts: [
                {
                    concept: {
                        name: 'pullquote [EPUB-SSV]'
                    },
                    module: 'EPUB'
                }
            ],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [],
            requiredProps: {},
            superClass: [
                [
                    'none'
                ]
            ]
        };
        var _default = docPullquoteRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/dpub/docQnaRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var docQnaRole = {
            abstract: false,
            accessibleNameRequired: false,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [
                'author'
            ],
            prohibitedProps: [],
            props: {
                'aria-disabled': null,
                'aria-errormessage': null,
                'aria-expanded': null,
                'aria-haspopup': null,
                'aria-invalid': null
            },
            relatedConcepts: [
                {
                    concept: {
                        name: 'qna [EPUB-SSV]'
                    },
                    module: 'EPUB'
                }
            ],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'structure',
                    'section'
                ]
            ]
        };
        var _default = docQnaRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/dpub/docSubtitleRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var docSubtitleRole = {
            abstract: false,
            accessibleNameRequired: false,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [
                'author'
            ],
            prohibitedProps: [],
            props: {
                'aria-disabled': null,
                'aria-errormessage': null,
                'aria-expanded': null,
                'aria-haspopup': null,
                'aria-invalid': null
            },
            relatedConcepts: [
                {
                    concept: {
                        name: 'subtitle [EPUB-SSV]'
                    },
                    module: 'EPUB'
                }
            ],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'structure',
                    'sectionhead'
                ]
            ]
        };
        var _default = docSubtitleRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/dpub/docTipRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var docTipRole = {
            abstract: false,
            accessibleNameRequired: false,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [
                'author'
            ],
            prohibitedProps: [],
            props: {
                'aria-disabled': null,
                'aria-errormessage': null,
                'aria-expanded': null,
                'aria-haspopup': null,
                'aria-invalid': null
            },
            relatedConcepts: [
                {
                    concept: {
                        name: 'help [EPUB-SSV]'
                    },
                    module: 'EPUB'
                }
            ],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'structure',
                    'section',
                    'note'
                ]
            ]
        };
        var _default = docTipRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/dpub/docTocRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var docTocRole = {
            abstract: false,
            accessibleNameRequired: false,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [
                'author'
            ],
            prohibitedProps: [],
            props: {
                'aria-disabled': null,
                'aria-errormessage': null,
                'aria-expanded': null,
                'aria-haspopup': null,
                'aria-invalid': null
            },
            relatedConcepts: [
                {
                    concept: {
                        name: 'toc [EPUB-SSV]'
                    },
                    module: 'EPUB'
                }
            ],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'structure',
                    'section',
                    'landmark',
                    'navigation'
                ]
            ]
        };
        var _default = docTocRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/graphics/graphicsDocumentRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var graphicsDocumentRole = {
            abstract: false,
            accessibleNameRequired: true,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [
                'author'
            ],
            prohibitedProps: [],
            props: {
                'aria-disabled': null,
                'aria-errormessage': null,
                'aria-expanded': null,
                'aria-haspopup': null,
                'aria-invalid': null
            },
            relatedConcepts: [
                {
                    module: 'GRAPHICS',
                    concept: {
                        name: 'graphics-object'
                    }
                },
                {
                    module: 'ARIA',
                    concept: {
                        name: 'img'
                    }
                },
                {
                    module: 'ARIA',
                    concept: {
                        name: 'article'
                    }
                }
            ],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'structure',
                    'document'
                ]
            ]
        };
        var _default = graphicsDocumentRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/graphics/graphicsObjectRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var graphicsObjectRole = {
            abstract: false,
            accessibleNameRequired: false,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [
                'author',
                'contents'
            ],
            prohibitedProps: [],
            props: {
                'aria-errormessage': null,
                'aria-expanded': null,
                'aria-haspopup': null,
                'aria-invalid': null
            },
            relatedConcepts: [
                {
                    module: 'GRAPHICS',
                    concept: {
                        name: 'graphics-document'
                    }
                },
                {
                    module: 'ARIA',
                    concept: {
                        name: 'group'
                    }
                },
                {
                    module: 'ARIA',
                    concept: {
                        name: 'img'
                    }
                },
                {
                    module: 'GRAPHICS',
                    concept: {
                        name: 'graphics-symbol'
                    }
                }
            ],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'structure',
                    'section',
                    'group'
                ]
            ]
        };
        var _default = graphicsObjectRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/graphics/graphicsSymbolRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var graphicsSymbolRole = {
            abstract: false,
            accessibleNameRequired: true,
            baseConcepts: [],
            childrenPresentational: true,
            nameFrom: [
                'author'
            ],
            prohibitedProps: [],
            props: {
                'aria-disabled': null,
                'aria-errormessage': null,
                'aria-expanded': null,
                'aria-haspopup': null,
                'aria-invalid': null
            },
            relatedConcepts: [],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'structure',
                    'section',
                    'img'
                ]
            ]
        };
        var _default = graphicsSymbolRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/alertRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var alertRole = {
            abstract: false,
            accessibleNameRequired: false,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [
                'author'
            ],
            prohibitedProps: [],
            props: {
                'aria-atomic': 'true',
                'aria-live': 'assertive'
            },
            relatedConcepts: [
                {
                    concept: {
                        name: 'alert'
                    },
                    module: 'XForms'
                }
            ],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'structure',
                    'section'
                ]
            ]
        };
        var _default = alertRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/alertdialogRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var alertdialogRole = {
            abstract: false,
            accessibleNameRequired: true,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [
                'author'
            ],
            prohibitedProps: [],
            props: {},
            relatedConcepts: [
                {
                    concept: {
                        name: 'alert'
                    },
                    module: 'XForms'
                }
            ],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'structure',
                    'section',
                    'alert'
                ],
                [
                    'roletype',
                    'window',
                    'dialog'
                ]
            ]
        };
        var _default = alertdialogRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/applicationRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var applicationRole = {
            abstract: false,
            accessibleNameRequired: true,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [
                'author'
            ],
            prohibitedProps: [],
            props: {
                'aria-activedescendant': null,
                'aria-disabled': null,
                'aria-errormessage': null,
                'aria-expanded': null,
                'aria-haspopup': null,
                'aria-invalid': null
            },
            relatedConcepts: [
                {
                    concept: {
                        name: 'Device Independence Delivery Unit'
                    }
                }
            ],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'structure'
                ]
            ]
        };
        var _default = applicationRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/articleRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var articleRole = {
            abstract: false,
            accessibleNameRequired: false,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [
                'author'
            ],
            prohibitedProps: [],
            props: {
                'aria-posinset': null,
                'aria-setsize': null
            },
            relatedConcepts: [
                {
                    concept: {
                        name: 'article'
                    },
                    module: 'HTML'
                }
            ],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'structure',
                    'document'
                ]
            ]
        };
        var _default = articleRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/bannerRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var bannerRole = {
            abstract: false,
            accessibleNameRequired: false,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [
                'author'
            ],
            prohibitedProps: [],
            props: {},
            relatedConcepts: [
                {
                    concept: {
                        constraints: [
                            'scoped to the body element'
                        ],
                        name: 'header'
                    },
                    module: 'HTML'
                }
            ],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'structure',
                    'section',
                    'landmark'
                ]
            ]
        };
        var _default = bannerRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/blockquoteRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var blockquoteRole = {
            abstract: false,
            accessibleNameRequired: false,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [
                'author'
            ],
            prohibitedProps: [],
            props: {},
            relatedConcepts: [
                {
                    concept: {
                        name: 'blockquote'
                    },
                    module: 'HTML'
                }
            ],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'structure',
                    'section'
                ]
            ]
        };
        var _default = blockquoteRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/buttonRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var buttonRole = {
            abstract: false,
            accessibleNameRequired: true,
            baseConcepts: [],
            childrenPresentational: true,
            nameFrom: [
                'author',
                'contents'
            ],
            prohibitedProps: [],
            props: {
                'aria-disabled': null,
                'aria-expanded': null,
                'aria-haspopup': null,
                'aria-pressed': null
            },
            relatedConcepts: [
                {
                    concept: {
                        attributes: [
                            {
                                name: 'type',
                                value: 'button'
                            }
                        ],
                        name: 'input'
                    },
                    module: 'HTML'
                },
                {
                    concept: {
                        attributes: [
                            {
                                name: 'type',
                                value: 'image'
                            }
                        ],
                        name: 'input'
                    },
                    module: 'HTML'
                },
                {
                    concept: {
                        attributes: [
                            {
                                name: 'type',
                                value: 'reset'
                            }
                        ],
                        name: 'input'
                    },
                    module: 'HTML'
                },
                {
                    concept: {
                        attributes: [
                            {
                                name: 'type',
                                value: 'submit'
                            }
                        ],
                        name: 'input'
                    },
                    module: 'HTML'
                },
                {
                    concept: {
                        name: 'button'
                    },
                    module: 'HTML'
                },
                {
                    concept: {
                        name: 'trigger'
                    },
                    module: 'XForms'
                }
            ],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'widget',
                    'command'
                ]
            ]
        };
        var _default = buttonRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/captionRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var captionRole = {
            abstract: false,
            accessibleNameRequired: false,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [
                'prohibited'
            ],
            prohibitedProps: [
                'aria-label',
                'aria-labelledby'
            ],
            props: {},
            relatedConcepts: [
                {
                    concept: {
                        name: 'caption'
                    },
                    module: 'HTML'
                }
            ],
            requireContextRole: [
                'figure',
                'grid',
                'table'
            ],
            requiredContextRole: [
                'figure',
                'grid',
                'table'
            ],
            requiredOwnedElements: [],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'structure',
                    'section'
                ]
            ]
        };
        var _default = captionRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/cellRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var cellRole = {
            abstract: false,
            accessibleNameRequired: false,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [
                'author',
                'contents'
            ],
            prohibitedProps: [],
            props: {
                'aria-colindex': null,
                'aria-colspan': null,
                'aria-rowindex': null,
                'aria-rowspan': null
            },
            relatedConcepts: [
                {
                    concept: {
                        constraints: [
                            'ancestor table element has table role'
                        ],
                        name: 'td'
                    },
                    module: 'HTML'
                }
            ],
            requireContextRole: [
                'row'
            ],
            requiredContextRole: [
                'row'
            ],
            requiredOwnedElements: [],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'structure',
                    'section'
                ]
            ]
        };
        var _default = cellRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/checkboxRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var checkboxRole = {
            abstract: false,
            accessibleNameRequired: true,
            baseConcepts: [],
            childrenPresentational: true,
            nameFrom: [
                'author',
                'contents'
            ],
            prohibitedProps: [],
            props: {
                'aria-checked': null,
                'aria-errormessage': null,
                'aria-expanded': null,
                'aria-invalid': null,
                'aria-readonly': null,
                'aria-required': null
            },
            relatedConcepts: [
                {
                    concept: {
                        attributes: [
                            {
                                name: 'type',
                                value: 'checkbox'
                            }
                        ],
                        name: 'input'
                    },
                    module: 'HTML'
                },
                {
                    concept: {
                        name: 'option'
                    },
                    module: 'ARIA'
                }
            ],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [],
            requiredProps: {
                'aria-checked': null
            },
            superClass: [
                [
                    'roletype',
                    'widget',
                    'input'
                ]
            ]
        };
        var _default = checkboxRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/codeRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var codeRole = {
            abstract: false,
            accessibleNameRequired: false,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [
                'prohibited'
            ],
            prohibitedProps: [
                'aria-label',
                'aria-labelledby'
            ],
            props: {},
            relatedConcepts: [
                {
                    concept: {
                        name: 'code'
                    },
                    module: 'HTML'
                }
            ],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'structure',
                    'section'
                ]
            ]
        };
        var _default = codeRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/columnheaderRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var columnheaderRole = {
            abstract: false,
            accessibleNameRequired: true,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [
                'author',
                'contents'
            ],
            prohibitedProps: [],
            props: {
                'aria-sort': null
            },
            relatedConcepts: [
                {
                    concept: {
                        name: 'th'
                    },
                    module: 'HTML'
                },
                {
                    concept: {
                        attributes: [
                            {
                                name: 'scope',
                                value: 'col'
                            }
                        ],
                        name: 'th'
                    },
                    module: 'HTML'
                },
                {
                    concept: {
                        attributes: [
                            {
                                name: 'scope',
                                value: 'colgroup'
                            }
                        ],
                        name: 'th'
                    },
                    module: 'HTML'
                }
            ],
            requireContextRole: [
                'row'
            ],
            requiredContextRole: [
                'row'
            ],
            requiredOwnedElements: [],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'structure',
                    'section',
                    'cell'
                ],
                [
                    'roletype',
                    'structure',
                    'section',
                    'cell',
                    'gridcell'
                ],
                [
                    'roletype',
                    'widget',
                    'gridcell'
                ],
                [
                    'roletype',
                    'structure',
                    'sectionhead'
                ]
            ]
        };
        var _default = columnheaderRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/comboboxRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var comboboxRole = {
            abstract: false,
            accessibleNameRequired: true,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [
                'author'
            ],
            prohibitedProps: [],
            props: {
                'aria-activedescendant': null,
                'aria-autocomplete': null,
                'aria-errormessage': null,
                'aria-invalid': null,
                'aria-readonly': null,
                'aria-required': null,
                'aria-expanded': 'false',
                'aria-haspopup': 'listbox'
            },
            relatedConcepts: [
                {
                    concept: {
                        attributes: [
                            {
                                constraints: [
                                    'set'
                                ],
                                name: 'list'
                            },
                            {
                                name: 'type',
                                value: 'email'
                            }
                        ],
                        name: 'input'
                    },
                    module: 'HTML'
                },
                {
                    concept: {
                        attributes: [
                            {
                                constraints: [
                                    'set'
                                ],
                                name: 'list'
                            },
                            {
                                name: 'type',
                                value: 'search'
                            }
                        ],
                        name: 'input'
                    },
                    module: 'HTML'
                },
                {
                    concept: {
                        attributes: [
                            {
                                constraints: [
                                    'set'
                                ],
                                name: 'list'
                            },
                            {
                                name: 'type',
                                value: 'tel'
                            }
                        ],
                        name: 'input'
                    },
                    module: 'HTML'
                },
                {
                    concept: {
                        attributes: [
                            {
                                constraints: [
                                    'set'
                                ],
                                name: 'list'
                            },
                            {
                                name: 'type',
                                value: 'text'
                            }
                        ],
                        name: 'input'
                    },
                    module: 'HTML'
                },
                {
                    concept: {
                        attributes: [
                            {
                                constraints: [
                                    'set'
                                ],
                                name: 'list'
                            },
                            {
                                name: 'type',
                                value: 'url'
                            }
                        ],
                        name: 'input'
                    },
                    module: 'HTML'
                },
                {
                    concept: {
                        attributes: [
                            {
                                constraints: [
                                    'set'
                                ],
                                name: 'list'
                            },
                            {
                                name: 'type',
                                value: 'url'
                            }
                        ],
                        name: 'input'
                    },
                    module: 'HTML'
                },
                {
                    concept: {
                        attributes: [
                            {
                                constraints: [
                                    'undefined'
                                ],
                                name: 'multiple'
                            },
                            {
                                constraints: [
                                    'undefined'
                                ],
                                name: 'size'
                            }
                        ],
                        constraints: [
                            'the multiple attribute is not set and the size attribute does not have a value greater than 1'
                        ],
                        name: 'select'
                    },
                    module: 'HTML'
                },
                {
                    concept: {
                        name: 'select'
                    },
                    module: 'XForms'
                }
            ],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [],
            requiredProps: {
                'aria-controls': null,
                'aria-expanded': 'false'
            },
            superClass: [
                [
                    'roletype',
                    'widget',
                    'input'
                ]
            ]
        };
        var _default = comboboxRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/complementaryRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var complementaryRole = {
            abstract: false,
            accessibleNameRequired: false,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [
                'author'
            ],
            prohibitedProps: [],
            props: {},
            relatedConcepts: [
                {
                    concept: {
                        name: 'aside'
                    },
                    module: 'HTML'
                },
                {
                    concept: {
                        attributes: [
                            {
                                constraints: [
                                    'set'
                                ],
                                name: 'aria-label'
                            }
                        ],
                        constraints: [
                            'scoped to a sectioning content element',
                            'scoped to a sectioning root element other than body'
                        ],
                        name: 'aside'
                    },
                    module: 'HTML'
                },
                {
                    concept: {
                        attributes: [
                            {
                                constraints: [
                                    'set'
                                ],
                                name: 'aria-labelledby'
                            }
                        ],
                        constraints: [
                            'scoped to a sectioning content element',
                            'scoped to a sectioning root element other than body'
                        ],
                        name: 'aside'
                    },
                    module: 'HTML'
                }
            ],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'structure',
                    'section',
                    'landmark'
                ]
            ]
        };
        var _default = complementaryRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/contentinfoRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var contentinfoRole = {
            abstract: false,
            accessibleNameRequired: false,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [
                'author'
            ],
            prohibitedProps: [],
            props: {},
            relatedConcepts: [
                {
                    concept: {
                        constraints: [
                            'scoped to the body element'
                        ],
                        name: 'footer'
                    },
                    module: 'HTML'
                }
            ],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'structure',
                    'section',
                    'landmark'
                ]
            ]
        };
        var _default = contentinfoRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/definitionRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var definitionRole = {
            abstract: false,
            accessibleNameRequired: false,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [
                'author'
            ],
            prohibitedProps: [],
            props: {},
            relatedConcepts: [
                {
                    concept: {
                        name: 'dd'
                    },
                    module: 'HTML'
                }
            ],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'structure',
                    'section'
                ]
            ]
        };
        var _default = definitionRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/deletionRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var deletionRole = {
            abstract: false,
            accessibleNameRequired: false,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [
                'prohibited'
            ],
            prohibitedProps: [
                'aria-label',
                'aria-labelledby'
            ],
            props: {},
            relatedConcepts: [
                {
                    concept: {
                        name: 'del'
                    },
                    module: 'HTML'
                }
            ],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'structure',
                    'section'
                ]
            ]
        };
        var _default = deletionRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/dialogRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var dialogRole = {
            abstract: false,
            accessibleNameRequired: true,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [
                'author'
            ],
            prohibitedProps: [],
            props: {},
            relatedConcepts: [
                {
                    concept: {
                        name: 'dialog'
                    },
                    module: 'HTML'
                }
            ],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'window'
                ]
            ]
        };
        var _default = dialogRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/directoryRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var directoryRole = {
            abstract: false,
            accessibleNameRequired: false,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [
                'author'
            ],
            prohibitedProps: [],
            props: {},
            relatedConcepts: [
                {
                    module: 'DAISY Guide'
                }
            ],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'structure',
                    'section',
                    'list'
                ]
            ]
        };
        var _default = directoryRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/documentRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var documentRole = {
            abstract: false,
            accessibleNameRequired: false,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [
                'author'
            ],
            prohibitedProps: [],
            props: {},
            relatedConcepts: [
                {
                    concept: {
                        name: 'Device Independence Delivery Unit'
                    }
                },
                {
                    concept: {
                        name: 'html'
                    },
                    module: 'HTML'
                }
            ],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'structure'
                ]
            ]
        };
        var _default = documentRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/emphasisRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var emphasisRole = {
            abstract: false,
            accessibleNameRequired: false,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [
                'prohibited'
            ],
            prohibitedProps: [
                'aria-label',
                'aria-labelledby'
            ],
            props: {},
            relatedConcepts: [
                {
                    concept: {
                        name: 'em'
                    },
                    module: 'HTML'
                }
            ],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'structure',
                    'section'
                ]
            ]
        };
        var _default = emphasisRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/feedRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var feedRole = {
            abstract: false,
            accessibleNameRequired: false,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [
                'author'
            ],
            prohibitedProps: [],
            props: {},
            relatedConcepts: [],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [
                [
                    'article'
                ]
            ],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'structure',
                    'section',
                    'list'
                ]
            ]
        };
        var _default = feedRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/figureRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var figureRole = {
            abstract: false,
            accessibleNameRequired: false,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [
                'author'
            ],
            prohibitedProps: [],
            props: {},
            relatedConcepts: [
                {
                    concept: {
                        name: 'figure'
                    },
                    module: 'HTML'
                }
            ],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'structure',
                    'section'
                ]
            ]
        };
        var _default = figureRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/formRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var formRole = {
            abstract: false,
            accessibleNameRequired: false,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [
                'author'
            ],
            prohibitedProps: [],
            props: {},
            relatedConcepts: [
                {
                    concept: {
                        attributes: [
                            {
                                constraints: [
                                    'set'
                                ],
                                name: 'aria-label'
                            }
                        ],
                        name: 'form'
                    },
                    module: 'HTML'
                },
                {
                    concept: {
                        attributes: [
                            {
                                constraints: [
                                    'set'
                                ],
                                name: 'aria-labelledby'
                            }
                        ],
                        name: 'form'
                    },
                    module: 'HTML'
                },
                {
                    concept: {
                        attributes: [
                            {
                                constraints: [
                                    'set'
                                ],
                                name: 'name'
                            }
                        ],
                        name: 'form'
                    },
                    module: 'HTML'
                }
            ],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'structure',
                    'section',
                    'landmark'
                ]
            ]
        };
        var _default = formRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/genericRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var genericRole = {
            abstract: false,
            accessibleNameRequired: false,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [
                'prohibited'
            ],
            prohibitedProps: [
                'aria-label',
                'aria-labelledby'
            ],
            props: {},
            relatedConcepts: [
                {
                    concept: {
                        name: 'a'
                    },
                    module: 'HTML'
                },
                {
                    concept: {
                        name: 'area'
                    },
                    module: 'HTML'
                },
                {
                    concept: {
                        name: 'aside'
                    },
                    module: 'HTML'
                },
                {
                    concept: {
                        name: 'b'
                    },
                    module: 'HTML'
                },
                {
                    concept: {
                        name: 'bdo'
                    },
                    module: 'HTML'
                },
                {
                    concept: {
                        name: 'body'
                    },
                    module: 'HTML'
                },
                {
                    concept: {
                        name: 'data'
                    },
                    module: 'HTML'
                },
                {
                    concept: {
                        name: 'div'
                    },
                    module: 'HTML'
                },
                {
                    concept: {
                        constraints: [
                            'scoped to the main element',
                            'scoped to a sectioning content element',
                            'scoped to a sectioning root element other than body'
                        ],
                        name: 'footer'
                    },
                    module: 'HTML'
                },
                {
                    concept: {
                        constraints: [
                            'scoped to the main element',
                            'scoped to a sectioning content element',
                            'scoped to a sectioning root element other than body'
                        ],
                        name: 'header'
                    },
                    module: 'HTML'
                },
                {
                    concept: {
                        name: 'hgroup'
                    },
                    module: 'HTML'
                },
                {
                    concept: {
                        name: 'i'
                    },
                    module: 'HTML'
                },
                {
                    concept: {
                        name: 'pre'
                    },
                    module: 'HTML'
                },
                {
                    concept: {
                        name: 'q'
                    },
                    module: 'HTML'
                },
                {
                    concept: {
                        name: 'samp'
                    },
                    module: 'HTML'
                },
                {
                    concept: {
                        name: 'section'
                    },
                    module: 'HTML'
                },
                {
                    concept: {
                        name: 'small'
                    },
                    module: 'HTML'
                },
                {
                    concept: {
                        name: 'span'
                    },
                    module: 'HTML'
                },
                {
                    concept: {
                        name: 'u'
                    },
                    module: 'HTML'
                }
            ],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'structure'
                ]
            ]
        };
        var _default = genericRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/gridRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var gridRole = {
            abstract: false,
            accessibleNameRequired: true,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [
                'author'
            ],
            prohibitedProps: [],
            props: {
                'aria-multiselectable': null,
                'aria-readonly': null
            },
            relatedConcepts: [],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [
                [
                    'row'
                ],
                [
                    'row',
                    'rowgroup'
                ]
            ],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'widget',
                    'composite'
                ],
                [
                    'roletype',
                    'structure',
                    'section',
                    'table'
                ]
            ]
        };
        var _default = gridRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/gridcellRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var gridcellRole = {
            abstract: false,
            accessibleNameRequired: false,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [
                'author',
                'contents'
            ],
            prohibitedProps: [],
            props: {
                'aria-disabled': null,
                'aria-errormessage': null,
                'aria-expanded': null,
                'aria-haspopup': null,
                'aria-invalid': null,
                'aria-readonly': null,
                'aria-required': null,
                'aria-selected': null
            },
            relatedConcepts: [
                {
                    concept: {
                        constraints: [
                            'ancestor table element has grid role',
                            'ancestor table element has treegrid role'
                        ],
                        name: 'td'
                    },
                    module: 'HTML'
                }
            ],
            requireContextRole: [
                'row'
            ],
            requiredContextRole: [
                'row'
            ],
            requiredOwnedElements: [],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'structure',
                    'section',
                    'cell'
                ],
                [
                    'roletype',
                    'widget'
                ]
            ]
        };
        var _default = gridcellRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/groupRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var groupRole = {
            abstract: false,
            accessibleNameRequired: false,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [
                'author'
            ],
            prohibitedProps: [],
            props: {
                'aria-activedescendant': null,
                'aria-disabled': null
            },
            relatedConcepts: [
                {
                    concept: {
                        name: 'details'
                    },
                    module: 'HTML'
                },
                {
                    concept: {
                        name: 'fieldset'
                    },
                    module: 'HTML'
                },
                {
                    concept: {
                        name: 'optgroup'
                    },
                    module: 'HTML'
                },
                {
                    concept: {
                        name: 'address'
                    },
                    module: 'HTML'
                }
            ],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'structure',
                    'section'
                ]
            ]
        };
        var _default = groupRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/headingRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var headingRole = {
            abstract: false,
            accessibleNameRequired: true,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [
                'author',
                'contents'
            ],
            prohibitedProps: [],
            props: {
                'aria-level': '2'
            },
            relatedConcepts: [
                {
                    concept: {
                        name: 'h1'
                    },
                    module: 'HTML'
                },
                {
                    concept: {
                        name: 'h2'
                    },
                    module: 'HTML'
                },
                {
                    concept: {
                        name: 'h3'
                    },
                    module: 'HTML'
                },
                {
                    concept: {
                        name: 'h4'
                    },
                    module: 'HTML'
                },
                {
                    concept: {
                        name: 'h5'
                    },
                    module: 'HTML'
                },
                {
                    concept: {
                        name: 'h6'
                    },
                    module: 'HTML'
                }
            ],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [],
            requiredProps: {
                'aria-level': '2'
            },
            superClass: [
                [
                    'roletype',
                    'structure',
                    'sectionhead'
                ]
            ]
        };
        var _default = headingRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/imgRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var imgRole = {
            abstract: false,
            accessibleNameRequired: true,
            baseConcepts: [],
            childrenPresentational: true,
            nameFrom: [
                'author'
            ],
            prohibitedProps: [],
            props: {},
            relatedConcepts: [
                {
                    concept: {
                        attributes: [
                            {
                                constraints: [
                                    'set'
                                ],
                                name: 'alt'
                            }
                        ],
                        name: 'img'
                    },
                    module: 'HTML'
                },
                {
                    concept: {
                        attributes: [
                            {
                                constraints: [
                                    'undefined'
                                ],
                                name: 'alt'
                            }
                        ],
                        name: 'img'
                    },
                    module: 'HTML'
                },
                {
                    concept: {
                        name: 'imggroup'
                    },
                    module: 'DTB'
                }
            ],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'structure',
                    'section'
                ]
            ]
        };
        var _default = imgRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/insertionRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var insertionRole = {
            abstract: false,
            accessibleNameRequired: false,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [
                'prohibited'
            ],
            prohibitedProps: [
                'aria-label',
                'aria-labelledby'
            ],
            props: {},
            relatedConcepts: [
                {
                    concept: {
                        name: 'ins'
                    },
                    module: 'HTML'
                }
            ],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'structure',
                    'section'
                ]
            ]
        };
        var _default = insertionRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/linkRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var linkRole = {
            abstract: false,
            accessibleNameRequired: true,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [
                'author',
                'contents'
            ],
            prohibitedProps: [],
            props: {
                'aria-disabled': null,
                'aria-expanded': null,
                'aria-haspopup': null
            },
            relatedConcepts: [
                {
                    concept: {
                        attributes: [
                            {
                                constraints: [
                                    'set'
                                ],
                                name: 'href'
                            }
                        ],
                        name: 'a'
                    },
                    module: 'HTML'
                },
                {
                    concept: {
                        attributes: [
                            {
                                constraints: [
                                    'set'
                                ],
                                name: 'href'
                            }
                        ],
                        name: 'area'
                    },
                    module: 'HTML'
                }
            ],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'widget',
                    'command'
                ]
            ]
        };
        var _default = linkRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/listRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var listRole = {
            abstract: false,
            accessibleNameRequired: false,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [
                'author'
            ],
            prohibitedProps: [],
            props: {},
            relatedConcepts: [
                {
                    concept: {
                        name: 'menu'
                    },
                    module: 'HTML'
                },
                {
                    concept: {
                        name: 'ol'
                    },
                    module: 'HTML'
                },
                {
                    concept: {
                        name: 'ul'
                    },
                    module: 'HTML'
                }
            ],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [
                [
                    'listitem'
                ]
            ],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'structure',
                    'section'
                ]
            ]
        };
        var _default = listRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/listboxRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var listboxRole = {
            abstract: false,
            accessibleNameRequired: true,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [
                'author'
            ],
            prohibitedProps: [],
            props: {
                'aria-errormessage': null,
                'aria-expanded': null,
                'aria-invalid': null,
                'aria-multiselectable': null,
                'aria-readonly': null,
                'aria-required': null,
                'aria-orientation': 'vertical'
            },
            relatedConcepts: [
                {
                    concept: {
                        attributes: [
                            {
                                constraints: [
                                    '>1'
                                ],
                                name: 'size'
                            }
                        ],
                        constraints: [
                            'the size attribute value is greater than 1'
                        ],
                        name: 'select'
                    },
                    module: 'HTML'
                },
                {
                    concept: {
                        attributes: [
                            {
                                name: 'multiple'
                            }
                        ],
                        name: 'select'
                    },
                    module: 'HTML'
                },
                {
                    concept: {
                        name: 'datalist'
                    },
                    module: 'HTML'
                },
                {
                    concept: {
                        name: 'list'
                    },
                    module: 'ARIA'
                },
                {
                    concept: {
                        name: 'select'
                    },
                    module: 'XForms'
                }
            ],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [
                [
                    'option',
                    'group'
                ],
                [
                    'option'
                ]
            ],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'widget',
                    'composite',
                    'select'
                ],
                [
                    'roletype',
                    'structure',
                    'section',
                    'group',
                    'select'
                ]
            ]
        };
        var _default = listboxRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/listitemRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var listitemRole = {
            abstract: false,
            accessibleNameRequired: false,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [
                'author'
            ],
            prohibitedProps: [],
            props: {
                'aria-level': null,
                'aria-posinset': null,
                'aria-setsize': null
            },
            relatedConcepts: [
                {
                    concept: {
                        constraints: [
                            'direct descendant of ol',
                            'direct descendant of ul',
                            'direct descendant of menu'
                        ],
                        name: 'li'
                    },
                    module: 'HTML'
                },
                {
                    concept: {
                        name: 'item'
                    },
                    module: 'XForms'
                }
            ],
            requireContextRole: [
                'directory',
                'list'
            ],
            requiredContextRole: [
                'directory',
                'list'
            ],
            requiredOwnedElements: [],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'structure',
                    'section'
                ]
            ]
        };
        var _default = listitemRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/logRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var logRole = {
            abstract: false,
            accessibleNameRequired: false,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [
                'author'
            ],
            prohibitedProps: [],
            props: {
                'aria-live': 'polite'
            },
            relatedConcepts: [],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'structure',
                    'section'
                ]
            ]
        };
        var _default = logRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/mainRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var mainRole = {
            abstract: false,
            accessibleNameRequired: false,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [
                'author'
            ],
            prohibitedProps: [],
            props: {},
            relatedConcepts: [
                {
                    concept: {
                        name: 'main'
                    },
                    module: 'HTML'
                }
            ],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'structure',
                    'section',
                    'landmark'
                ]
            ]
        };
        var _default = mainRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/markRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var markRole = {
            abstract: false,
            accessibleNameRequired: false,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [
                'prohibited'
            ],
            prohibitedProps: [],
            props: {
                'aria-braillelabel': null,
                "aria-brailleroledescription": null,
                "aria-description": null
            },
            relatedConcepts: [
                {
                    concept: {
                        name: 'mark'
                    },
                    module: 'HTML'
                }
            ],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'structure',
                    'section'
                ]
            ]
        };
        var _default = markRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/marqueeRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var marqueeRole = {
            abstract: false,
            accessibleNameRequired: true,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [
                'author'
            ],
            prohibitedProps: [],
            props: {},
            relatedConcepts: [],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'structure',
                    'section'
                ]
            ]
        };
        var _default = marqueeRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/mathRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var mathRole = {
            abstract: false,
            accessibleNameRequired: false,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [
                'author'
            ],
            prohibitedProps: [],
            props: {},
            relatedConcepts: [
                {
                    concept: {
                        name: 'math'
                    },
                    module: 'HTML'
                }
            ],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'structure',
                    'section'
                ]
            ]
        };
        var _default = mathRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/menuRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var menuRole = {
            abstract: false,
            accessibleNameRequired: false,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [
                'author'
            ],
            prohibitedProps: [],
            props: {
                'aria-orientation': 'vertical'
            },
            relatedConcepts: [
                {
                    concept: {
                        name: 'MENU'
                    },
                    module: 'JAPI'
                },
                {
                    concept: {
                        name: 'list'
                    },
                    module: 'ARIA'
                },
                {
                    concept: {
                        name: 'select'
                    },
                    module: 'XForms'
                },
                {
                    concept: {
                        name: 'sidebar'
                    },
                    module: 'DTB'
                }
            ],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [
                [
                    'menuitem',
                    'group'
                ],
                [
                    'menuitemradio',
                    'group'
                ],
                [
                    'menuitemcheckbox',
                    'group'
                ],
                [
                    'menuitem'
                ],
                [
                    'menuitemcheckbox'
                ],
                [
                    'menuitemradio'
                ]
            ],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'widget',
                    'composite',
                    'select'
                ],
                [
                    'roletype',
                    'structure',
                    'section',
                    'group',
                    'select'
                ]
            ]
        };
        var _default = menuRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/menubarRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var menubarRole = {
            abstract: false,
            accessibleNameRequired: false,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [
                'author'
            ],
            prohibitedProps: [],
            props: {
                'aria-orientation': 'horizontal'
            },
            relatedConcepts: [
                {
                    concept: {
                        name: 'toolbar'
                    },
                    module: 'ARIA'
                }
            ],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [
                [
                    'menuitem',
                    'group'
                ],
                [
                    'menuitemradio',
                    'group'
                ],
                [
                    'menuitemcheckbox',
                    'group'
                ],
                [
                    'menuitem'
                ],
                [
                    'menuitemcheckbox'
                ],
                [
                    'menuitemradio'
                ]
            ],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'widget',
                    'composite',
                    'select',
                    'menu'
                ],
                [
                    'roletype',
                    'structure',
                    'section',
                    'group',
                    'select',
                    'menu'
                ]
            ]
        };
        var _default = menubarRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/menuitemRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var menuitemRole = {
            abstract: false,
            accessibleNameRequired: true,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [
                'author',
                'contents'
            ],
            prohibitedProps: [],
            props: {
                'aria-disabled': null,
                'aria-expanded': null,
                'aria-haspopup': null,
                'aria-posinset': null,
                'aria-setsize': null
            },
            relatedConcepts: [
                {
                    concept: {
                        name: 'MENU_ITEM'
                    },
                    module: 'JAPI'
                },
                {
                    concept: {
                        name: 'listitem'
                    },
                    module: 'ARIA'
                },
                {
                    concept: {
                        name: 'option'
                    },
                    module: 'ARIA'
                }
            ],
            requireContextRole: [
                'group',
                'menu',
                'menubar'
            ],
            requiredContextRole: [
                'group',
                'menu',
                'menubar'
            ],
            requiredOwnedElements: [],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'widget',
                    'command'
                ]
            ]
        };
        var _default = menuitemRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/menuitemcheckboxRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var menuitemcheckboxRole = {
            abstract: false,
            accessibleNameRequired: true,
            baseConcepts: [],
            childrenPresentational: true,
            nameFrom: [
                'author',
                'contents'
            ],
            prohibitedProps: [],
            props: {},
            relatedConcepts: [
                {
                    concept: {
                        name: 'menuitem'
                    },
                    module: 'ARIA'
                }
            ],
            requireContextRole: [
                'group',
                'menu',
                'menubar'
            ],
            requiredContextRole: [
                'group',
                'menu',
                'menubar'
            ],
            requiredOwnedElements: [],
            requiredProps: {
                'aria-checked': null
            },
            superClass: [
                [
                    'roletype',
                    'widget',
                    'input',
                    'checkbox'
                ],
                [
                    'roletype',
                    'widget',
                    'command',
                    'menuitem'
                ]
            ]
        };
        var _default = menuitemcheckboxRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/menuitemradioRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var menuitemradioRole = {
            abstract: false,
            accessibleNameRequired: true,
            baseConcepts: [],
            childrenPresentational: true,
            nameFrom: [
                'author',
                'contents'
            ],
            prohibitedProps: [],
            props: {},
            relatedConcepts: [
                {
                    concept: {
                        name: 'menuitem'
                    },
                    module: 'ARIA'
                }
            ],
            requireContextRole: [
                'group',
                'menu',
                'menubar'
            ],
            requiredContextRole: [
                'group',
                'menu',
                'menubar'
            ],
            requiredOwnedElements: [],
            requiredProps: {
                'aria-checked': null
            },
            superClass: [
                [
                    'roletype',
                    'widget',
                    'input',
                    'checkbox',
                    'menuitemcheckbox'
                ],
                [
                    'roletype',
                    'widget',
                    'command',
                    'menuitem',
                    'menuitemcheckbox'
                ],
                [
                    'roletype',
                    'widget',
                    'input',
                    'radio'
                ]
            ]
        };
        var _default = menuitemradioRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/meterRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var meterRole = {
            abstract: false,
            accessibleNameRequired: true,
            baseConcepts: [],
            childrenPresentational: true,
            nameFrom: [
                'author'
            ],
            prohibitedProps: [],
            props: {
                'aria-valuetext': null,
                'aria-valuemax': '100',
                'aria-valuemin': '0'
            },
            relatedConcepts: [
                {
                    concept: {
                        name: 'meter'
                    },
                    module: 'HTML'
                }
            ],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [],
            requiredProps: {
                'aria-valuenow': null
            },
            superClass: [
                [
                    'roletype',
                    'structure',
                    'range'
                ]
            ]
        };
        var _default = meterRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/navigationRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var navigationRole = {
            abstract: false,
            accessibleNameRequired: false,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [
                'author'
            ],
            prohibitedProps: [],
            props: {},
            relatedConcepts: [
                {
                    concept: {
                        name: 'nav'
                    },
                    module: 'HTML'
                }
            ],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'structure',
                    'section',
                    'landmark'
                ]
            ]
        };
        var _default = navigationRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/noneRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var noneRole = {
            abstract: false,
            accessibleNameRequired: false,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [],
            prohibitedProps: [],
            props: {},
            relatedConcepts: [],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [],
            requiredProps: {},
            superClass: []
        };
        var _default = noneRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/noteRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var noteRole = {
            abstract: false,
            accessibleNameRequired: false,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [
                'author'
            ],
            prohibitedProps: [],
            props: {},
            relatedConcepts: [],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'structure',
                    'section'
                ]
            ]
        };
        var _default = noteRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/optionRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var optionRole = {
            abstract: false,
            accessibleNameRequired: true,
            baseConcepts: [],
            childrenPresentational: true,
            nameFrom: [
                'author',
                'contents'
            ],
            prohibitedProps: [],
            props: {
                'aria-checked': null,
                'aria-posinset': null,
                'aria-setsize': null,
                'aria-selected': 'false'
            },
            relatedConcepts: [
                {
                    concept: {
                        name: 'item'
                    },
                    module: 'XForms'
                },
                {
                    concept: {
                        name: 'listitem'
                    },
                    module: 'ARIA'
                },
                {
                    concept: {
                        name: 'option'
                    },
                    module: 'HTML'
                }
            ],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [],
            requiredProps: {
                'aria-selected': 'false'
            },
            superClass: [
                [
                    'roletype',
                    'widget',
                    'input'
                ]
            ]
        };
        var _default = optionRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/paragraphRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var paragraphRole = {
            abstract: false,
            accessibleNameRequired: false,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [
                'prohibited'
            ],
            prohibitedProps: [
                'aria-label',
                'aria-labelledby'
            ],
            props: {},
            relatedConcepts: [
                {
                    concept: {
                        name: 'p'
                    },
                    module: 'HTML'
                }
            ],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'structure',
                    'section'
                ]
            ]
        };
        var _default = paragraphRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/presentationRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var presentationRole = {
            abstract: false,
            accessibleNameRequired: false,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [
                'prohibited'
            ],
            prohibitedProps: [
                'aria-label',
                'aria-labelledby'
            ],
            props: {},
            relatedConcepts: [
                {
                    concept: {
                        attributes: [
                            {
                                name: 'alt',
                                value: ''
                            }
                        ],
                        name: 'img'
                    },
                    module: 'HTML'
                }
            ],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'structure'
                ]
            ]
        };
        var _default = presentationRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/progressbarRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var progressbarRole = {
            abstract: false,
            accessibleNameRequired: true,
            baseConcepts: [],
            childrenPresentational: true,
            nameFrom: [
                'author'
            ],
            prohibitedProps: [],
            props: {
                'aria-valuetext': null
            },
            relatedConcepts: [
                {
                    concept: {
                        name: 'progress'
                    },
                    module: 'HTML'
                },
                {
                    concept: {
                        name: 'status'
                    },
                    module: 'ARIA'
                }
            ],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'structure',
                    'range'
                ],
                [
                    'roletype',
                    'widget'
                ]
            ]
        };
        var _default = progressbarRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/radioRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var radioRole = {
            abstract: false,
            accessibleNameRequired: true,
            baseConcepts: [],
            childrenPresentational: true,
            nameFrom: [
                'author',
                'contents'
            ],
            prohibitedProps: [],
            props: {
                'aria-checked': null,
                'aria-posinset': null,
                'aria-setsize': null
            },
            relatedConcepts: [
                {
                    concept: {
                        attributes: [
                            {
                                name: 'type',
                                value: 'radio'
                            }
                        ],
                        name: 'input'
                    },
                    module: 'HTML'
                }
            ],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [],
            requiredProps: {
                'aria-checked': null
            },
            superClass: [
                [
                    'roletype',
                    'widget',
                    'input'
                ]
            ]
        };
        var _default = radioRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/radiogroupRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var radiogroupRole = {
            abstract: false,
            accessibleNameRequired: true,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [
                'author'
            ],
            prohibitedProps: [],
            props: {
                'aria-errormessage': null,
                'aria-invalid': null,
                'aria-readonly': null,
                'aria-required': null
            },
            relatedConcepts: [
                {
                    concept: {
                        name: 'list'
                    },
                    module: 'ARIA'
                }
            ],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [
                [
                    'radio'
                ]
            ],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'widget',
                    'composite',
                    'select'
                ],
                [
                    'roletype',
                    'structure',
                    'section',
                    'group',
                    'select'
                ]
            ]
        };
        var _default = radiogroupRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/regionRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var regionRole = {
            abstract: false,
            accessibleNameRequired: true,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [
                'author'
            ],
            prohibitedProps: [],
            props: {},
            relatedConcepts: [
                {
                    concept: {
                        attributes: [
                            {
                                constraints: [
                                    'set'
                                ],
                                name: 'aria-label'
                            }
                        ],
                        name: 'section'
                    },
                    module: 'HTML'
                },
                {
                    concept: {
                        attributes: [
                            {
                                constraints: [
                                    'set'
                                ],
                                name: 'aria-labelledby'
                            }
                        ],
                        name: 'section'
                    },
                    module: 'HTML'
                },
                {
                    concept: {
                        name: 'Device Independence Glossart perceivable unit'
                    }
                }
            ],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'structure',
                    'section',
                    'landmark'
                ]
            ]
        };
        var _default = regionRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/rowRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var rowRole = {
            abstract: false,
            accessibleNameRequired: false,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [
                'author',
                'contents'
            ],
            prohibitedProps: [],
            props: {
                'aria-colindex': null,
                'aria-expanded': null,
                'aria-level': null,
                'aria-posinset': null,
                'aria-rowindex': null,
                'aria-selected': null,
                'aria-setsize': null
            },
            relatedConcepts: [
                {
                    concept: {
                        name: 'tr'
                    },
                    module: 'HTML'
                }
            ],
            requireContextRole: [
                'grid',
                'rowgroup',
                'table',
                'treegrid'
            ],
            requiredContextRole: [
                'grid',
                'rowgroup',
                'table',
                'treegrid'
            ],
            requiredOwnedElements: [
                [
                    'cell'
                ],
                [
                    'columnheader'
                ],
                [
                    'gridcell'
                ],
                [
                    'rowheader'
                ]
            ],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'structure',
                    'section',
                    'group'
                ],
                [
                    'roletype',
                    'widget'
                ]
            ]
        };
        var _default = rowRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/rowgroupRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var rowgroupRole = {
            abstract: false,
            accessibleNameRequired: false,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [
                'author',
                'contents'
            ],
            prohibitedProps: [],
            props: {},
            relatedConcepts: [
                {
                    concept: {
                        name: 'tbody'
                    },
                    module: 'HTML'
                },
                {
                    concept: {
                        name: 'tfoot'
                    },
                    module: 'HTML'
                },
                {
                    concept: {
                        name: 'thead'
                    },
                    module: 'HTML'
                }
            ],
            requireContextRole: [
                'grid',
                'table',
                'treegrid'
            ],
            requiredContextRole: [
                'grid',
                'table',
                'treegrid'
            ],
            requiredOwnedElements: [
                [
                    'row'
                ]
            ],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'structure'
                ]
            ]
        };
        var _default = rowgroupRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/rowheaderRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var rowheaderRole = {
            abstract: false,
            accessibleNameRequired: true,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [
                'author',
                'contents'
            ],
            prohibitedProps: [],
            props: {
                'aria-sort': null
            },
            relatedConcepts: [
                {
                    concept: {
                        attributes: [
                            {
                                name: 'scope',
                                value: 'row'
                            }
                        ],
                        name: 'th'
                    },
                    module: 'HTML'
                },
                {
                    concept: {
                        attributes: [
                            {
                                name: 'scope',
                                value: 'rowgroup'
                            }
                        ],
                        name: 'th'
                    },
                    module: 'HTML'
                }
            ],
            requireContextRole: [
                'row',
                'rowgroup'
            ],
            requiredContextRole: [
                'row',
                'rowgroup'
            ],
            requiredOwnedElements: [],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'structure',
                    'section',
                    'cell'
                ],
                [
                    'roletype',
                    'structure',
                    'section',
                    'cell',
                    'gridcell'
                ],
                [
                    'roletype',
                    'widget',
                    'gridcell'
                ],
                [
                    'roletype',
                    'structure',
                    'sectionhead'
                ]
            ]
        };
        var _default = rowheaderRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/scrollbarRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var scrollbarRole = {
            abstract: false,
            accessibleNameRequired: false,
            baseConcepts: [],
            childrenPresentational: true,
            nameFrom: [
                'author'
            ],
            prohibitedProps: [],
            props: {
                'aria-disabled': null,
                'aria-valuetext': null,
                'aria-orientation': 'vertical',
                'aria-valuemax': '100',
                'aria-valuemin': '0'
            },
            relatedConcepts: [],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [],
            requiredProps: {
                'aria-controls': null,
                'aria-valuenow': null
            },
            superClass: [
                [
                    'roletype',
                    'structure',
                    'range'
                ],
                [
                    'roletype',
                    'widget'
                ]
            ]
        };
        var _default = scrollbarRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/searchRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var searchRole = {
            abstract: false,
            accessibleNameRequired: false,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [
                'author'
            ],
            prohibitedProps: [],
            props: {},
            relatedConcepts: [],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'structure',
                    'section',
                    'landmark'
                ]
            ]
        };
        var _default = searchRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/searchboxRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var searchboxRole = {
            abstract: false,
            accessibleNameRequired: true,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [
                'author'
            ],
            prohibitedProps: [],
            props: {},
            relatedConcepts: [
                {
                    concept: {
                        attributes: [
                            {
                                constraints: [
                                    'undefined'
                                ],
                                name: 'list'
                            },
                            {
                                name: 'type',
                                value: 'search'
                            }
                        ],
                        constraints: [
                            'the list attribute is not set'
                        ],
                        name: 'input'
                    },
                    module: 'HTML'
                }
            ],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'widget',
                    'input',
                    'textbox'
                ]
            ]
        };
        var _default = searchboxRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/separatorRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var separatorRole = {
            abstract: false,
            accessibleNameRequired: false,
            baseConcepts: [],
            childrenPresentational: true,
            nameFrom: [
                'author'
            ],
            prohibitedProps: [],
            props: {
                'aria-disabled': null,
                'aria-orientation': 'horizontal',
                'aria-valuemax': '100',
                'aria-valuemin': '0',
                'aria-valuenow': null,
                'aria-valuetext': null
            },
            relatedConcepts: [
                {
                    concept: {
                        name: 'hr'
                    },
                    module: 'HTML'
                }
            ],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'structure'
                ]
            ]
        };
        var _default = separatorRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/sliderRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var sliderRole = {
            abstract: false,
            accessibleNameRequired: true,
            baseConcepts: [],
            childrenPresentational: true,
            nameFrom: [
                'author'
            ],
            prohibitedProps: [],
            props: {
                'aria-errormessage': null,
                'aria-haspopup': null,
                'aria-invalid': null,
                'aria-readonly': null,
                'aria-valuetext': null,
                'aria-orientation': 'horizontal',
                'aria-valuemax': '100',
                'aria-valuemin': '0'
            },
            relatedConcepts: [
                {
                    concept: {
                        attributes: [
                            {
                                name: 'type',
                                value: 'range'
                            }
                        ],
                        name: 'input'
                    },
                    module: 'HTML'
                }
            ],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [],
            requiredProps: {
                'aria-valuenow': null
            },
            superClass: [
                [
                    'roletype',
                    'widget',
                    'input'
                ],
                [
                    'roletype',
                    'structure',
                    'range'
                ]
            ]
        };
        var _default = sliderRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/spinbuttonRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var spinbuttonRole = {
            abstract: false,
            accessibleNameRequired: true,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [
                'author'
            ],
            prohibitedProps: [],
            props: {
                'aria-errormessage': null,
                'aria-invalid': null,
                'aria-readonly': null,
                'aria-required': null,
                'aria-valuetext': null,
                'aria-valuenow': '0'
            },
            relatedConcepts: [
                {
                    concept: {
                        attributes: [
                            {
                                name: 'type',
                                value: 'number'
                            }
                        ],
                        name: 'input'
                    },
                    module: 'HTML'
                }
            ],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'widget',
                    'composite'
                ],
                [
                    'roletype',
                    'widget',
                    'input'
                ],
                [
                    'roletype',
                    'structure',
                    'range'
                ]
            ]
        };
        var _default = spinbuttonRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/statusRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var statusRole = {
            abstract: false,
            accessibleNameRequired: false,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [
                'author'
            ],
            prohibitedProps: [],
            props: {
                'aria-atomic': 'true',
                'aria-live': 'polite'
            },
            relatedConcepts: [
                {
                    concept: {
                        name: 'output'
                    },
                    module: 'HTML'
                }
            ],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'structure',
                    'section'
                ]
            ]
        };
        var _default = statusRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/strongRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var strongRole = {
            abstract: false,
            accessibleNameRequired: false,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [
                'prohibited'
            ],
            prohibitedProps: [
                'aria-label',
                'aria-labelledby'
            ],
            props: {},
            relatedConcepts: [
                {
                    concept: {
                        name: 'strong'
                    },
                    module: 'HTML'
                }
            ],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'structure',
                    'section'
                ]
            ]
        };
        var _default = strongRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/subscriptRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var subscriptRole = {
            abstract: false,
            accessibleNameRequired: false,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [
                'prohibited'
            ],
            prohibitedProps: [
                'aria-label',
                'aria-labelledby'
            ],
            props: {},
            relatedConcepts: [
                {
                    concept: {
                        name: 'sub'
                    },
                    module: 'HTML'
                }
            ],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'structure',
                    'section'
                ]
            ]
        };
        var _default = subscriptRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/superscriptRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var superscriptRole = {
            abstract: false,
            accessibleNameRequired: false,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [
                'prohibited'
            ],
            prohibitedProps: [
                'aria-label',
                'aria-labelledby'
            ],
            props: {},
            relatedConcepts: [
                {
                    concept: {
                        name: 'sup'
                    },
                    module: 'HTML'
                }
            ],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'structure',
                    'section'
                ]
            ]
        };
        var _default = superscriptRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/switchRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var switchRole = {
            abstract: false,
            accessibleNameRequired: true,
            baseConcepts: [],
            childrenPresentational: true,
            nameFrom: [
                'author',
                'contents'
            ],
            prohibitedProps: [],
            props: {},
            relatedConcepts: [
                {
                    concept: {
                        name: 'button'
                    },
                    module: 'ARIA'
                }
            ],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [],
            requiredProps: {
                'aria-checked': null
            },
            superClass: [
                [
                    'roletype',
                    'widget',
                    'input',
                    'checkbox'
                ]
            ]
        };
        var _default = switchRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/tabRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var tabRole = {
            abstract: false,
            accessibleNameRequired: false,
            baseConcepts: [],
            childrenPresentational: true,
            nameFrom: [
                'author',
                'contents'
            ],
            prohibitedProps: [],
            props: {
                'aria-disabled': null,
                'aria-expanded': null,
                'aria-haspopup': null,
                'aria-posinset': null,
                'aria-setsize': null,
                'aria-selected': 'false'
            },
            relatedConcepts: [],
            requireContextRole: [
                'tablist'
            ],
            requiredContextRole: [
                'tablist'
            ],
            requiredOwnedElements: [],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'structure',
                    'sectionhead'
                ],
                [
                    'roletype',
                    'widget'
                ]
            ]
        };
        var _default = tabRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/tableRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var tableRole = {
            abstract: false,
            accessibleNameRequired: true,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [
                'author'
            ],
            prohibitedProps: [],
            props: {
                'aria-colcount': null,
                'aria-rowcount': null
            },
            relatedConcepts: [
                {
                    concept: {
                        name: 'table'
                    },
                    module: 'HTML'
                }
            ],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [
                [
                    'row'
                ],
                [
                    'row',
                    'rowgroup'
                ]
            ],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'structure',
                    'section'
                ]
            ]
        };
        var _default = tableRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/tablistRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var tablistRole = {
            abstract: false,
            accessibleNameRequired: false,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [
                'author'
            ],
            prohibitedProps: [],
            props: {
                'aria-level': null,
                'aria-multiselectable': null,
                'aria-orientation': 'horizontal'
            },
            relatedConcepts: [
                {
                    module: 'DAISY',
                    concept: {
                        name: 'guide'
                    }
                }
            ],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [
                [
                    'tab'
                ]
            ],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'widget',
                    'composite'
                ]
            ]
        };
        var _default = tablistRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/tabpanelRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var tabpanelRole = {
            abstract: false,
            accessibleNameRequired: true,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [
                'author'
            ],
            prohibitedProps: [],
            props: {},
            relatedConcepts: [],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'structure',
                    'section'
                ]
            ]
        };
        var _default = tabpanelRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/termRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var termRole = {
            abstract: false,
            accessibleNameRequired: false,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [
                'author'
            ],
            prohibitedProps: [],
            props: {},
            relatedConcepts: [
                {
                    concept: {
                        name: 'dfn'
                    },
                    module: 'HTML'
                },
                {
                    concept: {
                        name: 'dt'
                    },
                    module: 'HTML'
                }
            ],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'structure',
                    'section'
                ]
            ]
        };
        var _default = termRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/textboxRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var textboxRole = {
            abstract: false,
            accessibleNameRequired: true,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [
                'author'
            ],
            prohibitedProps: [],
            props: {
                'aria-activedescendant': null,
                'aria-autocomplete': null,
                'aria-errormessage': null,
                'aria-haspopup': null,
                'aria-invalid': null,
                'aria-multiline': null,
                'aria-placeholder': null,
                'aria-readonly': null,
                'aria-required': null
            },
            relatedConcepts: [
                {
                    concept: {
                        attributes: [
                            {
                                constraints: [
                                    'undefined'
                                ],
                                name: 'type'
                            },
                            {
                                constraints: [
                                    'undefined'
                                ],
                                name: 'list'
                            }
                        ],
                        constraints: [
                            'the list attribute is not set'
                        ],
                        name: 'input'
                    },
                    module: 'HTML'
                },
                {
                    concept: {
                        attributes: [
                            {
                                constraints: [
                                    'undefined'
                                ],
                                name: 'list'
                            },
                            {
                                name: 'type',
                                value: 'email'
                            }
                        ],
                        constraints: [
                            'the list attribute is not set'
                        ],
                        name: 'input'
                    },
                    module: 'HTML'
                },
                {
                    concept: {
                        attributes: [
                            {
                                constraints: [
                                    'undefined'
                                ],
                                name: 'list'
                            },
                            {
                                name: 'type',
                                value: 'tel'
                            }
                        ],
                        constraints: [
                            'the list attribute is not set'
                        ],
                        name: 'input'
                    },
                    module: 'HTML'
                },
                {
                    concept: {
                        attributes: [
                            {
                                constraints: [
                                    'undefined'
                                ],
                                name: 'list'
                            },
                            {
                                name: 'type',
                                value: 'text'
                            }
                        ],
                        constraints: [
                            'the list attribute is not set'
                        ],
                        name: 'input'
                    },
                    module: 'HTML'
                },
                {
                    concept: {
                        attributes: [
                            {
                                constraints: [
                                    'undefined'
                                ],
                                name: 'list'
                            },
                            {
                                name: 'type',
                                value: 'url'
                            }
                        ],
                        constraints: [
                            'the list attribute is not set'
                        ],
                        name: 'input'
                    },
                    module: 'HTML'
                },
                {
                    concept: {
                        name: 'input'
                    },
                    module: 'XForms'
                },
                {
                    concept: {
                        name: 'textarea'
                    },
                    module: 'HTML'
                }
            ],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'widget',
                    'input'
                ]
            ]
        };
        var _default = textboxRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/timeRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var timeRole = {
            abstract: false,
            accessibleNameRequired: false,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [
                'author'
            ],
            prohibitedProps: [],
            props: {},
            relatedConcepts: [
                {
                    concept: {
                        name: 'time'
                    },
                    module: 'HTML'
                }
            ],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'structure',
                    'section'
                ]
            ]
        };
        var _default = timeRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/timerRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var timerRole = {
            abstract: false,
            accessibleNameRequired: false,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [
                'author'
            ],
            prohibitedProps: [],
            props: {},
            relatedConcepts: [],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'structure',
                    'section',
                    'status'
                ]
            ]
        };
        var _default = timerRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/toolbarRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var toolbarRole = {
            abstract: false,
            accessibleNameRequired: false,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [
                'author'
            ],
            prohibitedProps: [],
            props: {
                'aria-orientation': 'horizontal'
            },
            relatedConcepts: [
                {
                    concept: {
                        name: 'menubar'
                    },
                    module: 'ARIA'
                }
            ],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'structure',
                    'section',
                    'group'
                ]
            ]
        };
        var _default = toolbarRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/tooltipRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var tooltipRole = {
            abstract: false,
            accessibleNameRequired: true,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [
                'author',
                'contents'
            ],
            prohibitedProps: [],
            props: {},
            relatedConcepts: [],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'structure',
                    'section'
                ]
            ]
        };
        var _default = tooltipRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/treeRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var treeRole = {
            abstract: false,
            accessibleNameRequired: true,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [
                'author'
            ],
            prohibitedProps: [],
            props: {
                'aria-errormessage': null,
                'aria-invalid': null,
                'aria-multiselectable': null,
                'aria-required': null,
                'aria-orientation': 'vertical'
            },
            relatedConcepts: [],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [
                [
                    'treeitem',
                    'group'
                ],
                [
                    'treeitem'
                ]
            ],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'widget',
                    'composite',
                    'select'
                ],
                [
                    'roletype',
                    'structure',
                    'section',
                    'group',
                    'select'
                ]
            ]
        };
        var _default = treeRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/treegridRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var treegridRole = {
            abstract: false,
            accessibleNameRequired: true,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [
                'author'
            ],
            prohibitedProps: [],
            props: {},
            relatedConcepts: [],
            requireContextRole: [],
            requiredContextRole: [],
            requiredOwnedElements: [
                [
                    'row'
                ],
                [
                    'row',
                    'rowgroup'
                ]
            ],
            requiredProps: {},
            superClass: [
                [
                    'roletype',
                    'widget',
                    'composite',
                    'grid'
                ],
                [
                    'roletype',
                    'structure',
                    'section',
                    'table',
                    'grid'
                ],
                [
                    'roletype',
                    'widget',
                    'composite',
                    'select',
                    'tree'
                ],
                [
                    'roletype',
                    'structure',
                    'section',
                    'group',
                    'select',
                    'tree'
                ]
            ]
        };
        var _default = treegridRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/literal/treeitemRole.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var treeitemRole = {
            abstract: false,
            accessibleNameRequired: true,
            baseConcepts: [],
            childrenPresentational: false,
            nameFrom: [
                'author',
                'contents'
            ],
            prohibitedProps: [],
            props: {
                'aria-expanded': null,
                'aria-haspopup': null
            },
            relatedConcepts: [],
            requireContextRole: [
                'group',
                'tree'
            ],
            requiredContextRole: [
                'group',
                'tree'
            ],
            requiredOwnedElements: [],
            requiredProps: {
                'aria-selected': null
            },
            superClass: [
                [
                    'roletype',
                    'structure',
                    'section',
                    'listitem'
                ],
                [
                    'roletype',
                    'widget',
                    'input',
                    'option'
                ]
            ]
        };
        var _default = treeitemRole;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/index.js": function(__unused_webpack_module, exports, __webpack_require__) {
        exports.roles = exports.roleElements = exports.elementRoles = void 0;
        var _ariaPropsMap = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/ariaPropsMap.js"));
        var _domMap = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/domMap.js"));
        var _rolesMap = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/rolesMap.js"));
        var _elementRoleMap = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/elementRoleMap.js"));
        var _roleElementMap = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/roleElementMap.js"));
        function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
                default: obj
            };
        }
        _ariaPropsMap.default;
        _domMap.default;
        var roles = _rolesMap.default;
        exports.roles = roles;
        var elementRoles = _elementRoleMap.default;
        exports.elementRoles = elementRoles;
        var roleElements = _roleElementMap.default;
        exports.roleElements = roleElements;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/roleElementMap.js": function(__unused_webpack_module, exports, __webpack_require__) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var _iterationDecorator = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/util/iterationDecorator.js"));
        var _rolesMap = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/rolesMap.js"));
        function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
                default: obj
            };
        }
        function _slicedToArray(arr, i) {
            return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
        }
        function _nonIterableRest() {
            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }
        function _iterableToArrayLimit(arr, i) {
            var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"];
            if (null == _i) return;
            var _arr = [];
            var _n = true;
            var _d = false;
            var _s, _e;
            try {
                for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){
                    _arr.push(_s.value);
                    if (i && _arr.length === i) break;
                }
            } catch (err) {
                _d = true;
                _e = err;
            } finally{
                try {
                    if (!_n && null != _i["return"]) _i["return"]();
                } finally{
                    if (_d) throw _e;
                }
            }
            return _arr;
        }
        function _arrayWithHoles(arr) {
            if (Array.isArray(arr)) return arr;
        }
        function _createForOfIteratorHelper(o, allowArrayLike) {
            var it = "undefined" != typeof Symbol && o[Symbol.iterator] || o["@@iterator"];
            if (!it) {
                if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && "number" == typeof o.length) {
                    if (it) o = it;
                    var i = 0;
                    var F = function() {};
                    return {
                        s: F,
                        n: function() {
                            if (i >= o.length) return {
                                done: true
                            };
                            return {
                                done: false,
                                value: o[i++]
                            };
                        },
                        e: function(_e2) {
                            throw _e2;
                        },
                        f: F
                    };
                }
                throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
            }
            var normalCompletion = true, didErr = false, err;
            return {
                s: function() {
                    it = it.call(o);
                },
                n: function() {
                    var step = it.next();
                    normalCompletion = step.done;
                    return step;
                },
                e: function(_e3) {
                    didErr = true;
                    err = _e3;
                },
                f: function() {
                    try {
                        if (!normalCompletion && null != it.return) it.return();
                    } finally{
                        if (didErr) throw err;
                    }
                }
            };
        }
        function _unsupportedIterableToArray(o, minLen) {
            if (!o) return;
            if ("string" == typeof o) return _arrayLikeToArray(o, minLen);
            var n = Object.prototype.toString.call(o).slice(8, -1);
            if ("Object" === n && o.constructor) n = o.constructor.name;
            if ("Map" === n || "Set" === n) return Array.from(o);
            if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
        }
        function _arrayLikeToArray(arr, len) {
            if (null == len || len > arr.length) len = arr.length;
            for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
            return arr2;
        }
        var roleElement = [];
        var keys = _rolesMap.default.keys();
        for(var i = 0; i < keys.length; i++){
            var key = keys[i];
            var role = _rolesMap.default.get(key);
            var relationConcepts = [];
            if (role) {
                var concepts = [].concat(role.baseConcepts, role.relatedConcepts);
                for(var k = 0; k < concepts.length; k++){
                    var relation = concepts[k];
                    if ('HTML' === relation.module) {
                        var concept = relation.concept;
                        if (null != concept) relationConcepts.push(concept);
                    }
                }
                if (relationConcepts.length > 0) roleElement.push([
                    key,
                    relationConcepts
                ]);
            }
        }
        var roleElementMap = {
            entries: function() {
                return roleElement;
            },
            forEach: function(fn) {
                var thisArg = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null;
                var _iterator = _createForOfIteratorHelper(roleElement), _step;
                try {
                    for(_iterator.s(); !(_step = _iterator.n()).done;){
                        var _step$value = _slicedToArray(_step.value, 2), _key = _step$value[0], values = _step$value[1];
                        fn.call(thisArg, values, _key, roleElement);
                    }
                } catch (err) {
                    _iterator.e(err);
                } finally{
                    _iterator.f();
                }
            },
            get: function(key) {
                var item = roleElement.find(function(tuple) {
                    return tuple[0] === key;
                });
                return item && item[1];
            },
            has: function(key) {
                return !!roleElementMap.get(key);
            },
            keys: function() {
                return roleElement.map(function(_ref) {
                    var _ref2 = _slicedToArray(_ref, 1), key = _ref2[0];
                    return key;
                });
            },
            values: function() {
                return roleElement.map(function(_ref3) {
                    var _ref4 = _slicedToArray(_ref3, 2), values = _ref4[1];
                    return values;
                });
            }
        };
        var _default = (0, _iterationDecorator.default)(roleElementMap, roleElementMap.entries());
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/rolesMap.js": function(__unused_webpack_module, exports, __webpack_require__) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        var _ariaAbstractRoles = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/ariaAbstractRoles.js"));
        var _ariaLiteralRoles = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/ariaLiteralRoles.js"));
        var _ariaDpubRoles = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/ariaDpubRoles.js"));
        var _ariaGraphicsRoles = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/etc/roles/ariaGraphicsRoles.js"));
        var _iterationDecorator = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/util/iterationDecorator.js"));
        function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
                default: obj
            };
        }
        function _defineProperty(obj, key, value) {
            if (key in obj) Object.defineProperty(obj, key, {
                value: value,
                enumerable: true,
                configurable: true,
                writable: true
            });
            else obj[key] = value;
            return obj;
        }
        function _createForOfIteratorHelper(o, allowArrayLike) {
            var it = "undefined" != typeof Symbol && o[Symbol.iterator] || o["@@iterator"];
            if (!it) {
                if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && "number" == typeof o.length) {
                    if (it) o = it;
                    var i = 0;
                    var F = function() {};
                    return {
                        s: F,
                        n: function() {
                            if (i >= o.length) return {
                                done: true
                            };
                            return {
                                done: false,
                                value: o[i++]
                            };
                        },
                        e: function(_e2) {
                            throw _e2;
                        },
                        f: F
                    };
                }
                throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
            }
            var normalCompletion = true, didErr = false, err;
            return {
                s: function() {
                    it = it.call(o);
                },
                n: function() {
                    var step = it.next();
                    normalCompletion = step.done;
                    return step;
                },
                e: function(_e3) {
                    didErr = true;
                    err = _e3;
                },
                f: function() {
                    try {
                        if (!normalCompletion && null != it.return) it.return();
                    } finally{
                        if (didErr) throw err;
                    }
                }
            };
        }
        function _slicedToArray(arr, i) {
            return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
        }
        function _nonIterableRest() {
            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }
        function _unsupportedIterableToArray(o, minLen) {
            if (!o) return;
            if ("string" == typeof o) return _arrayLikeToArray(o, minLen);
            var n = Object.prototype.toString.call(o).slice(8, -1);
            if ("Object" === n && o.constructor) n = o.constructor.name;
            if ("Map" === n || "Set" === n) return Array.from(o);
            if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
        }
        function _arrayLikeToArray(arr, len) {
            if (null == len || len > arr.length) len = arr.length;
            for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
            return arr2;
        }
        function _iterableToArrayLimit(arr, i) {
            var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"];
            if (null == _i) return;
            var _arr = [];
            var _n = true;
            var _d = false;
            var _s, _e;
            try {
                for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){
                    _arr.push(_s.value);
                    if (i && _arr.length === i) break;
                }
            } catch (err) {
                _d = true;
                _e = err;
            } finally{
                try {
                    if (!_n && null != _i["return"]) _i["return"]();
                } finally{
                    if (_d) throw _e;
                }
            }
            return _arr;
        }
        function _arrayWithHoles(arr) {
            if (Array.isArray(arr)) return arr;
        }
        var roles = [].concat(_ariaAbstractRoles.default, _ariaLiteralRoles.default, _ariaDpubRoles.default, _ariaGraphicsRoles.default);
        roles.forEach(function(_ref) {
            var _ref2 = _slicedToArray(_ref, 2), roleDefinition = _ref2[1];
            var _iterator = _createForOfIteratorHelper(roleDefinition.superClass), _step;
            try {
                for(_iterator.s(); !(_step = _iterator.n()).done;){
                    var superClassIter = _step.value;
                    var _iterator2 = _createForOfIteratorHelper(superClassIter), _step2;
                    try {
                        var _loop = function() {
                            var superClassName = _step2.value;
                            var superClassRoleTuple = roles.find(function(_ref3) {
                                var _ref4 = _slicedToArray(_ref3, 1), name = _ref4[0];
                                return name === superClassName;
                            });
                            if (superClassRoleTuple) {
                                var superClassDefinition = superClassRoleTuple[1];
                                for(var _i2 = 0, _Object$keys = Object.keys(superClassDefinition.props); _i2 < _Object$keys.length; _i2++){
                                    var prop = _Object$keys[_i2];
                                    if (!Object.prototype.hasOwnProperty.call(roleDefinition.props, prop)) Object.assign(roleDefinition.props, _defineProperty({}, prop, superClassDefinition.props[prop]));
                                }
                            }
                        };
                        for(_iterator2.s(); !(_step2 = _iterator2.n()).done;)_loop();
                    } catch (err) {
                        _iterator2.e(err);
                    } finally{
                        _iterator2.f();
                    }
                }
            } catch (err) {
                _iterator.e(err);
            } finally{
                _iterator.f();
            }
        });
        var rolesMap = {
            entries: function() {
                return roles;
            },
            forEach: function(fn) {
                var thisArg = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null;
                var _iterator3 = _createForOfIteratorHelper(roles), _step3;
                try {
                    for(_iterator3.s(); !(_step3 = _iterator3.n()).done;){
                        var _step3$value = _slicedToArray(_step3.value, 2), key = _step3$value[0], values = _step3$value[1];
                        fn.call(thisArg, values, key, roles);
                    }
                } catch (err) {
                    _iterator3.e(err);
                } finally{
                    _iterator3.f();
                }
            },
            get: function(key) {
                var item = roles.find(function(tuple) {
                    return tuple[0] === key;
                });
                return item && item[1];
            },
            has: function(key) {
                return !!rolesMap.get(key);
            },
            keys: function() {
                return roles.map(function(_ref5) {
                    var _ref6 = _slicedToArray(_ref5, 1), key = _ref6[0];
                    return key;
                });
            },
            values: function() {
                return roles.map(function(_ref7) {
                    var _ref8 = _slicedToArray(_ref7, 2), values = _ref8[1];
                    return values;
                });
            }
        };
        var _default = (0, _iterationDecorator.default)(rolesMap, rolesMap.entries());
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/util/iterationDecorator.js": function(__unused_webpack_module, exports, __webpack_require__) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = iterationDecorator;
        var _iteratorProxy = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/util/iteratorProxy.js"));
        function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
                default: obj
            };
        }
        function _typeof(obj) {
            return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj) {
                return typeof obj;
            } : function(obj) {
                return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
            }, _typeof(obj);
        }
        function iterationDecorator(collection, entries) {
            if ('function' == typeof Symbol && 'symbol' === _typeof(Symbol.iterator)) Object.defineProperty(collection, Symbol.iterator, {
                value: _iteratorProxy.default.bind(entries)
            });
            return collection;
        }
    },
    "../../../node_modules/.pnpm/aria-query@5.3.0/node_modules/aria-query/lib/util/iteratorProxy.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = void 0;
        function iteratorProxy() {
            var values = this;
            var index = 0;
            var iter = {
                '@@iterator': function() {
                    return iter;
                },
                next: function() {
                    if (!(index < values.length)) return {
                        done: true
                    };
                    var value = values[index];
                    index += 1;
                    return {
                        done: false,
                        value: value
                    };
                }
            };
            return iter;
        }
        var _default = iteratorProxy;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/dequal@2.0.3/node_modules/dequal/lite/index.js": function(__unused_webpack_module, exports) {
        var has = Object.prototype.hasOwnProperty;
        function dequal(foo, bar) {
            var ctor, len;
            if (foo === bar) return true;
            if (foo && bar && (ctor = foo.constructor) === bar.constructor) {
                if (ctor === Date) return foo.getTime() === bar.getTime();
                if (ctor === RegExp) return foo.toString() === bar.toString();
                if (ctor === Array) {
                    if ((len = foo.length) === bar.length) while(len-- && dequal(foo[len], bar[len]));
                    return -1 === len;
                }
                if (!ctor || 'object' == typeof foo) {
                    len = 0;
                    for(ctor in foo){
                        if (has.call(foo, ctor) && ++len && !has.call(bar, ctor)) return false;
                        if (!(ctor in bar) || !dequal(foo[ctor], bar[ctor])) return false;
                    }
                    return Object.keys(bar).length === len;
                }
            }
            return foo !== foo && bar !== bar;
        }
        exports.dequal = dequal;
    },
    "../../../node_modules/.pnpm/lz-string@1.5.0/node_modules/lz-string/libs/lz-string.js": function(module, __unused_webpack_exports, __webpack_require__) {
        module = __webpack_require__.nmd(module);
        var LZString = function() {
            var f = String.fromCharCode;
            var keyStrBase64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
            var keyStrUriSafe = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+-$";
            var baseReverseDic = {};
            function getBaseValue(alphabet, character) {
                if (!baseReverseDic[alphabet]) {
                    baseReverseDic[alphabet] = {};
                    for(var i = 0; i < alphabet.length; i++)baseReverseDic[alphabet][alphabet.charAt(i)] = i;
                }
                return baseReverseDic[alphabet][character];
            }
            var LZString = {
                compressToBase64: function(input) {
                    if (null == input) return "";
                    var res = LZString._compress(input, 6, function(a) {
                        return keyStrBase64.charAt(a);
                    });
                    switch(res.length % 4){
                        default:
                        case 0:
                            return res;
                        case 1:
                            return res + "===";
                        case 2:
                            return res + "==";
                        case 3:
                            return res + "=";
                    }
                },
                decompressFromBase64: function(input) {
                    if (null == input) return "";
                    if ("" == input) return null;
                    return LZString._decompress(input.length, 32, function(index) {
                        return getBaseValue(keyStrBase64, input.charAt(index));
                    });
                },
                compressToUTF16: function(input) {
                    if (null == input) return "";
                    return LZString._compress(input, 15, function(a) {
                        return f(a + 32);
                    }) + " ";
                },
                decompressFromUTF16: function(compressed) {
                    if (null == compressed) return "";
                    if ("" == compressed) return null;
                    return LZString._decompress(compressed.length, 16384, function(index) {
                        return compressed.charCodeAt(index) - 32;
                    });
                },
                compressToUint8Array: function(uncompressed) {
                    var compressed = LZString.compress(uncompressed);
                    var buf = new Uint8Array(2 * compressed.length);
                    for(var i = 0, TotalLen = compressed.length; i < TotalLen; i++){
                        var current_value = compressed.charCodeAt(i);
                        buf[2 * i] = current_value >>> 8;
                        buf[2 * i + 1] = current_value % 256;
                    }
                    return buf;
                },
                decompressFromUint8Array: function(compressed) {
                    if (null == compressed) return LZString.decompress(compressed);
                    var buf = new Array(compressed.length / 2);
                    for(var i = 0, TotalLen = buf.length; i < TotalLen; i++)buf[i] = 256 * compressed[2 * i] + compressed[2 * i + 1];
                    var result = [];
                    buf.forEach(function(c) {
                        result.push(f(c));
                    });
                    return LZString.decompress(result.join(''));
                },
                compressToEncodedURIComponent: function(input) {
                    if (null == input) return "";
                    return LZString._compress(input, 6, function(a) {
                        return keyStrUriSafe.charAt(a);
                    });
                },
                decompressFromEncodedURIComponent: function(input) {
                    if (null == input) return "";
                    if ("" == input) return null;
                    input = input.replace(/ /g, "+");
                    return LZString._decompress(input.length, 32, function(index) {
                        return getBaseValue(keyStrUriSafe, input.charAt(index));
                    });
                },
                compress: function(uncompressed) {
                    return LZString._compress(uncompressed, 16, function(a) {
                        return f(a);
                    });
                },
                _compress: function(uncompressed, bitsPerChar, getCharFromInt) {
                    if (null == uncompressed) return "";
                    var i, value, context_dictionary = {}, context_dictionaryToCreate = {}, context_c = "", context_wc = "", context_w = "", context_enlargeIn = 2, context_dictSize = 3, context_numBits = 2, context_data = [], context_data_val = 0, context_data_position = 0, ii;
                    for(ii = 0; ii < uncompressed.length; ii += 1){
                        context_c = uncompressed.charAt(ii);
                        if (!Object.prototype.hasOwnProperty.call(context_dictionary, context_c)) {
                            context_dictionary[context_c] = context_dictSize++;
                            context_dictionaryToCreate[context_c] = true;
                        }
                        context_wc = context_w + context_c;
                        if (Object.prototype.hasOwnProperty.call(context_dictionary, context_wc)) context_w = context_wc;
                        else {
                            if (Object.prototype.hasOwnProperty.call(context_dictionaryToCreate, context_w)) {
                                if (context_w.charCodeAt(0) < 256) {
                                    for(i = 0; i < context_numBits; i++){
                                        context_data_val <<= 1;
                                        if (context_data_position == bitsPerChar - 1) {
                                            context_data_position = 0;
                                            context_data.push(getCharFromInt(context_data_val));
                                            context_data_val = 0;
                                        } else context_data_position++;
                                    }
                                    value = context_w.charCodeAt(0);
                                    for(i = 0; i < 8; i++){
                                        context_data_val = context_data_val << 1 | 1 & value;
                                        if (context_data_position == bitsPerChar - 1) {
                                            context_data_position = 0;
                                            context_data.push(getCharFromInt(context_data_val));
                                            context_data_val = 0;
                                        } else context_data_position++;
                                        value >>= 1;
                                    }
                                } else {
                                    value = 1;
                                    for(i = 0; i < context_numBits; i++){
                                        context_data_val = context_data_val << 1 | value;
                                        if (context_data_position == bitsPerChar - 1) {
                                            context_data_position = 0;
                                            context_data.push(getCharFromInt(context_data_val));
                                            context_data_val = 0;
                                        } else context_data_position++;
                                        value = 0;
                                    }
                                    value = context_w.charCodeAt(0);
                                    for(i = 0; i < 16; i++){
                                        context_data_val = context_data_val << 1 | 1 & value;
                                        if (context_data_position == bitsPerChar - 1) {
                                            context_data_position = 0;
                                            context_data.push(getCharFromInt(context_data_val));
                                            context_data_val = 0;
                                        } else context_data_position++;
                                        value >>= 1;
                                    }
                                }
                                context_enlargeIn--;
                                if (0 == context_enlargeIn) {
                                    context_enlargeIn = Math.pow(2, context_numBits);
                                    context_numBits++;
                                }
                                delete context_dictionaryToCreate[context_w];
                            } else {
                                value = context_dictionary[context_w];
                                for(i = 0; i < context_numBits; i++){
                                    context_data_val = context_data_val << 1 | 1 & value;
                                    if (context_data_position == bitsPerChar - 1) {
                                        context_data_position = 0;
                                        context_data.push(getCharFromInt(context_data_val));
                                        context_data_val = 0;
                                    } else context_data_position++;
                                    value >>= 1;
                                }
                            }
                            context_enlargeIn--;
                            if (0 == context_enlargeIn) {
                                context_enlargeIn = Math.pow(2, context_numBits);
                                context_numBits++;
                            }
                            context_dictionary[context_wc] = context_dictSize++;
                            context_w = String(context_c);
                        }
                    }
                    if ("" !== context_w) {
                        if (Object.prototype.hasOwnProperty.call(context_dictionaryToCreate, context_w)) {
                            if (context_w.charCodeAt(0) < 256) {
                                for(i = 0; i < context_numBits; i++){
                                    context_data_val <<= 1;
                                    if (context_data_position == bitsPerChar - 1) {
                                        context_data_position = 0;
                                        context_data.push(getCharFromInt(context_data_val));
                                        context_data_val = 0;
                                    } else context_data_position++;
                                }
                                value = context_w.charCodeAt(0);
                                for(i = 0; i < 8; i++){
                                    context_data_val = context_data_val << 1 | 1 & value;
                                    if (context_data_position == bitsPerChar - 1) {
                                        context_data_position = 0;
                                        context_data.push(getCharFromInt(context_data_val));
                                        context_data_val = 0;
                                    } else context_data_position++;
                                    value >>= 1;
                                }
                            } else {
                                value = 1;
                                for(i = 0; i < context_numBits; i++){
                                    context_data_val = context_data_val << 1 | value;
                                    if (context_data_position == bitsPerChar - 1) {
                                        context_data_position = 0;
                                        context_data.push(getCharFromInt(context_data_val));
                                        context_data_val = 0;
                                    } else context_data_position++;
                                    value = 0;
                                }
                                value = context_w.charCodeAt(0);
                                for(i = 0; i < 16; i++){
                                    context_data_val = context_data_val << 1 | 1 & value;
                                    if (context_data_position == bitsPerChar - 1) {
                                        context_data_position = 0;
                                        context_data.push(getCharFromInt(context_data_val));
                                        context_data_val = 0;
                                    } else context_data_position++;
                                    value >>= 1;
                                }
                            }
                            context_enlargeIn--;
                            if (0 == context_enlargeIn) {
                                context_enlargeIn = Math.pow(2, context_numBits);
                                context_numBits++;
                            }
                            delete context_dictionaryToCreate[context_w];
                        } else {
                            value = context_dictionary[context_w];
                            for(i = 0; i < context_numBits; i++){
                                context_data_val = context_data_val << 1 | 1 & value;
                                if (context_data_position == bitsPerChar - 1) {
                                    context_data_position = 0;
                                    context_data.push(getCharFromInt(context_data_val));
                                    context_data_val = 0;
                                } else context_data_position++;
                                value >>= 1;
                            }
                        }
                        context_enlargeIn--;
                        if (0 == context_enlargeIn) {
                            context_enlargeIn = Math.pow(2, context_numBits);
                            context_numBits++;
                        }
                    }
                    value = 2;
                    for(i = 0; i < context_numBits; i++){
                        context_data_val = context_data_val << 1 | 1 & value;
                        if (context_data_position == bitsPerChar - 1) {
                            context_data_position = 0;
                            context_data.push(getCharFromInt(context_data_val));
                            context_data_val = 0;
                        } else context_data_position++;
                        value >>= 1;
                    }
                    while(true){
                        context_data_val <<= 1;
                        if (context_data_position == bitsPerChar - 1) {
                            context_data.push(getCharFromInt(context_data_val));
                            break;
                        }
                        context_data_position++;
                    }
                    return context_data.join('');
                },
                decompress: function(compressed) {
                    if (null == compressed) return "";
                    if ("" == compressed) return null;
                    return LZString._decompress(compressed.length, 32768, function(index) {
                        return compressed.charCodeAt(index);
                    });
                },
                _decompress: function(length, resetValue, getNextValue) {
                    var dictionary = [], enlargeIn = 4, dictSize = 4, numBits = 3, entry = "", result = [], i, w, bits, resb, maxpower, power, c, data = {
                        val: getNextValue(0),
                        position: resetValue,
                        index: 1
                    };
                    for(i = 0; i < 3; i += 1)dictionary[i] = i;
                    bits = 0;
                    maxpower = Math.pow(2, 2);
                    power = 1;
                    while(power != maxpower){
                        resb = data.val & data.position;
                        data.position >>= 1;
                        if (0 == data.position) {
                            data.position = resetValue;
                            data.val = getNextValue(data.index++);
                        }
                        bits |= (resb > 0 ? 1 : 0) * power;
                        power <<= 1;
                    }
                    switch(bits){
                        case 0:
                            bits = 0;
                            maxpower = Math.pow(2, 8);
                            power = 1;
                            while(power != maxpower){
                                resb = data.val & data.position;
                                data.position >>= 1;
                                if (0 == data.position) {
                                    data.position = resetValue;
                                    data.val = getNextValue(data.index++);
                                }
                                bits |= (resb > 0 ? 1 : 0) * power;
                                power <<= 1;
                            }
                            c = f(bits);
                            break;
                        case 1:
                            bits = 0;
                            maxpower = Math.pow(2, 16);
                            power = 1;
                            while(power != maxpower){
                                resb = data.val & data.position;
                                data.position >>= 1;
                                if (0 == data.position) {
                                    data.position = resetValue;
                                    data.val = getNextValue(data.index++);
                                }
                                bits |= (resb > 0 ? 1 : 0) * power;
                                power <<= 1;
                            }
                            c = f(bits);
                            break;
                        case 2:
                            return "";
                    }
                    dictionary[3] = c;
                    w = c;
                    result.push(c);
                    while(true){
                        if (data.index > length) return "";
                        bits = 0;
                        maxpower = Math.pow(2, numBits);
                        power = 1;
                        while(power != maxpower){
                            resb = data.val & data.position;
                            data.position >>= 1;
                            if (0 == data.position) {
                                data.position = resetValue;
                                data.val = getNextValue(data.index++);
                            }
                            bits |= (resb > 0 ? 1 : 0) * power;
                            power <<= 1;
                        }
                        switch(c = bits){
                            case 0:
                                bits = 0;
                                maxpower = Math.pow(2, 8);
                                power = 1;
                                while(power != maxpower){
                                    resb = data.val & data.position;
                                    data.position >>= 1;
                                    if (0 == data.position) {
                                        data.position = resetValue;
                                        data.val = getNextValue(data.index++);
                                    }
                                    bits |= (resb > 0 ? 1 : 0) * power;
                                    power <<= 1;
                                }
                                dictionary[dictSize++] = f(bits);
                                c = dictSize - 1;
                                enlargeIn--;
                                break;
                            case 1:
                                bits = 0;
                                maxpower = Math.pow(2, 16);
                                power = 1;
                                while(power != maxpower){
                                    resb = data.val & data.position;
                                    data.position >>= 1;
                                    if (0 == data.position) {
                                        data.position = resetValue;
                                        data.val = getNextValue(data.index++);
                                    }
                                    bits |= (resb > 0 ? 1 : 0) * power;
                                    power <<= 1;
                                }
                                dictionary[dictSize++] = f(bits);
                                c = dictSize - 1;
                                enlargeIn--;
                                break;
                            case 2:
                                return result.join('');
                        }
                        if (0 == enlargeIn) {
                            enlargeIn = Math.pow(2, numBits);
                            numBits++;
                        }
                        if (dictionary[c]) entry = dictionary[c];
                        else {
                            if (c !== dictSize) return null;
                            entry = w + w.charAt(0);
                        }
                        result.push(entry);
                        dictionary[dictSize++] = w + entry.charAt(0);
                        enlargeIn--;
                        w = entry;
                        if (0 == enlargeIn) {
                            enlargeIn = Math.pow(2, numBits);
                            numBits++;
                        }
                    }
                }
            };
            return LZString;
        }();
        if ('function' == typeof define && define.amd) define(function() {
            return LZString;
        });
        else if (null != module) module.exports = LZString;
        else if ('undefined' != typeof angular && null != angular) angular.module('LZString', []).factory('LZString', function() {
            return LZString;
        });
    },
    "../../../node_modules/.pnpm/pretty-format@27.5.1/node_modules/pretty-format/build/collections.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports.printIteratorEntries = printIteratorEntries;
        exports.printIteratorValues = printIteratorValues;
        exports.printListItems = printListItems;
        exports.printObjectProperties = printObjectProperties;
        const getKeysOfEnumerableProperties = (object, compareKeys)=>{
            const keys = Object.keys(object).sort(compareKeys);
            if (Object.getOwnPropertySymbols) Object.getOwnPropertySymbols(object).forEach((symbol)=>{
                if (Object.getOwnPropertyDescriptor(object, symbol).enumerable) keys.push(symbol);
            });
            return keys;
        };
        function printIteratorEntries(iterator, config, indentation, depth, refs, printer, separator = ': ') {
            let result = '';
            let current = iterator.next();
            if (!current.done) {
                result += config.spacingOuter;
                const indentationNext = indentation + config.indent;
                while(!current.done){
                    const name = printer(current.value[0], config, indentationNext, depth, refs);
                    const value = printer(current.value[1], config, indentationNext, depth, refs);
                    result += indentationNext + name + separator + value;
                    current = iterator.next();
                    if (current.done) {
                        if (!config.min) result += ',';
                    } else result += ',' + config.spacingInner;
                }
                result += config.spacingOuter + indentation;
            }
            return result;
        }
        function printIteratorValues(iterator, config, indentation, depth, refs, printer) {
            let result = '';
            let current = iterator.next();
            if (!current.done) {
                result += config.spacingOuter;
                const indentationNext = indentation + config.indent;
                while(!current.done){
                    result += indentationNext + printer(current.value, config, indentationNext, depth, refs);
                    current = iterator.next();
                    if (current.done) {
                        if (!config.min) result += ',';
                    } else result += ',' + config.spacingInner;
                }
                result += config.spacingOuter + indentation;
            }
            return result;
        }
        function printListItems(list, config, indentation, depth, refs, printer) {
            let result = '';
            if (list.length) {
                result += config.spacingOuter;
                const indentationNext = indentation + config.indent;
                for(let i = 0; i < list.length; i++){
                    result += indentationNext;
                    if (i in list) result += printer(list[i], config, indentationNext, depth, refs);
                    if (i < list.length - 1) result += ',' + config.spacingInner;
                    else if (!config.min) result += ',';
                }
                result += config.spacingOuter + indentation;
            }
            return result;
        }
        function printObjectProperties(val, config, indentation, depth, refs, printer) {
            let result = '';
            const keys = getKeysOfEnumerableProperties(val, config.compareKeys);
            if (keys.length) {
                result += config.spacingOuter;
                const indentationNext = indentation + config.indent;
                for(let i = 0; i < keys.length; i++){
                    const key = keys[i];
                    const name = printer(key, config, indentationNext, depth, refs);
                    const value = printer(val[key], config, indentationNext, depth, refs);
                    result += indentationNext + name + ': ' + value;
                    if (i < keys.length - 1) result += ',' + config.spacingInner;
                    else if (!config.min) result += ',';
                }
                result += config.spacingOuter + indentation;
            }
            return result;
        }
    },
    "../../../node_modules/.pnpm/pretty-format@27.5.1/node_modules/pretty-format/build/index.js": function(__unused_webpack_module, exports, __webpack_require__) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = exports.DEFAULT_OPTIONS = void 0;
        exports.format = format;
        exports.plugins = void 0;
        var _ansiStyles = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/ansi-styles@5.2.0/node_modules/ansi-styles/index.js"));
        var _collections = __webpack_require__("../../../node_modules/.pnpm/pretty-format@27.5.1/node_modules/pretty-format/build/collections.js");
        var _AsymmetricMatcher = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/pretty-format@27.5.1/node_modules/pretty-format/build/plugins/AsymmetricMatcher.js"));
        var _ConvertAnsi = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/pretty-format@27.5.1/node_modules/pretty-format/build/plugins/ConvertAnsi.js"));
        var _DOMCollection = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/pretty-format@27.5.1/node_modules/pretty-format/build/plugins/DOMCollection.js"));
        var _DOMElement = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/pretty-format@27.5.1/node_modules/pretty-format/build/plugins/DOMElement.js"));
        var _Immutable = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/pretty-format@27.5.1/node_modules/pretty-format/build/plugins/Immutable.js"));
        var _ReactElement = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/pretty-format@27.5.1/node_modules/pretty-format/build/plugins/ReactElement.js"));
        var _ReactTestComponent = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/pretty-format@27.5.1/node_modules/pretty-format/build/plugins/ReactTestComponent.js"));
        function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
                default: obj
            };
        }
        const toString = Object.prototype.toString;
        const toISOString = Date.prototype.toISOString;
        const errorToString = Error.prototype.toString;
        const regExpToString = RegExp.prototype.toString;
        const getConstructorName = (val)=>'function' == typeof val.constructor && val.constructor.name || 'Object';
        const isWindow = (val)=>'undefined' != typeof window && val === window;
        const SYMBOL_REGEXP = /^Symbol\((.*)\)(.*)$/;
        const NEWLINE_REGEXP = /\n/gi;
        class PrettyFormatPluginError extends Error {
            constructor(message, stack){
                super(message);
                this.stack = stack;
                this.name = this.constructor.name;
            }
        }
        function isToStringedArrayType(toStringed) {
            return '[object Array]' === toStringed || '[object ArrayBuffer]' === toStringed || '[object DataView]' === toStringed || '[object Float32Array]' === toStringed || '[object Float64Array]' === toStringed || '[object Int8Array]' === toStringed || '[object Int16Array]' === toStringed || '[object Int32Array]' === toStringed || '[object Uint8Array]' === toStringed || '[object Uint8ClampedArray]' === toStringed || '[object Uint16Array]' === toStringed || '[object Uint32Array]' === toStringed;
        }
        function printNumber(val) {
            return Object.is(val, -0) ? '-0' : String(val);
        }
        function printBigInt(val) {
            return String(`${val}n`);
        }
        function printFunction(val, printFunctionName) {
            if (!printFunctionName) return '[Function]';
            return '[Function ' + (val.name || 'anonymous') + ']';
        }
        function printSymbol(val) {
            return String(val).replace(SYMBOL_REGEXP, 'Symbol($1)');
        }
        function printError(val) {
            return '[' + errorToString.call(val) + ']';
        }
        function printBasicValue(val, printFunctionName, escapeRegex, escapeString) {
            if (true === val || false === val) return '' + val;
            if (void 0 === val) return 'undefined';
            if (null === val) return 'null';
            const typeOf = typeof val;
            if ('number' === typeOf) return printNumber(val);
            if ('bigint' === typeOf) return printBigInt(val);
            if ('string' === typeOf) {
                if (escapeString) return '"' + val.replace(/"|\\/g, '\\$&') + '"';
                return '"' + val + '"';
            }
            if ('function' === typeOf) return printFunction(val, printFunctionName);
            if ('symbol' === typeOf) return printSymbol(val);
            const toStringed = toString.call(val);
            if ('[object WeakMap]' === toStringed) return 'WeakMap {}';
            if ('[object WeakSet]' === toStringed) return 'WeakSet {}';
            if ('[object Function]' === toStringed || '[object GeneratorFunction]' === toStringed) return printFunction(val, printFunctionName);
            if ('[object Symbol]' === toStringed) return printSymbol(val);
            if ('[object Date]' === toStringed) return isNaN(+val) ? 'Date { NaN }' : toISOString.call(val);
            if ('[object Error]' === toStringed) return printError(val);
            if ('[object RegExp]' === toStringed) {
                if (escapeRegex) return regExpToString.call(val).replace(/[\\^$*+?.()|[\]{}]/g, '\\$&');
                return regExpToString.call(val);
            }
            if (val instanceof Error) return printError(val);
            return null;
        }
        function printComplexValue(val, config, indentation, depth, refs, hasCalledToJSON) {
            if (-1 !== refs.indexOf(val)) return '[Circular]';
            refs = refs.slice();
            refs.push(val);
            const hitMaxDepth = ++depth > config.maxDepth;
            const min = config.min;
            if (config.callToJSON && !hitMaxDepth && val.toJSON && 'function' == typeof val.toJSON && !hasCalledToJSON) return printer(val.toJSON(), config, indentation, depth, refs, true);
            const toStringed = toString.call(val);
            if ('[object Arguments]' === toStringed) return hitMaxDepth ? '[Arguments]' : (min ? '' : 'Arguments ') + '[' + (0, _collections.printListItems)(val, config, indentation, depth, refs, printer) + ']';
            if (isToStringedArrayType(toStringed)) return hitMaxDepth ? '[' + val.constructor.name + ']' : (min ? '' : config.printBasicPrototype || 'Array' !== val.constructor.name ? val.constructor.name + ' ' : '') + '[' + (0, _collections.printListItems)(val, config, indentation, depth, refs, printer) + ']';
            if ('[object Map]' === toStringed) return hitMaxDepth ? '[Map]' : 'Map {' + (0, _collections.printIteratorEntries)(val.entries(), config, indentation, depth, refs, printer, ' => ') + '}';
            if ('[object Set]' === toStringed) return hitMaxDepth ? '[Set]' : 'Set {' + (0, _collections.printIteratorValues)(val.values(), config, indentation, depth, refs, printer) + '}';
            return hitMaxDepth || isWindow(val) ? '[' + getConstructorName(val) + ']' : (min ? '' : config.printBasicPrototype || 'Object' !== getConstructorName(val) ? getConstructorName(val) + ' ' : '') + '{' + (0, _collections.printObjectProperties)(val, config, indentation, depth, refs, printer) + '}';
        }
        function isNewPlugin(plugin) {
            return null != plugin.serialize;
        }
        function printPlugin(plugin, val, config, indentation, depth, refs) {
            let printed;
            try {
                printed = isNewPlugin(plugin) ? plugin.serialize(val, config, indentation, depth, refs, printer) : plugin.print(val, (valChild)=>printer(valChild, config, indentation, depth, refs), (str)=>{
                    const indentationNext = indentation + config.indent;
                    return indentationNext + str.replace(NEWLINE_REGEXP, '\n' + indentationNext);
                }, {
                    edgeSpacing: config.spacingOuter,
                    min: config.min,
                    spacing: config.spacingInner
                }, config.colors);
            } catch (error) {
                throw new PrettyFormatPluginError(error.message, error.stack);
            }
            if ('string' != typeof printed) throw new Error(`pretty-format: Plugin must return type "string" but instead returned "${typeof printed}".`);
            return printed;
        }
        function findPlugin(plugins, val) {
            for(let p = 0; p < plugins.length; p++)try {
                if (plugins[p].test(val)) return plugins[p];
            } catch (error) {
                throw new PrettyFormatPluginError(error.message, error.stack);
            }
            return null;
        }
        function printer(val, config, indentation, depth, refs, hasCalledToJSON) {
            const plugin = findPlugin(config.plugins, val);
            if (null !== plugin) return printPlugin(plugin, val, config, indentation, depth, refs);
            const basicResult = printBasicValue(val, config.printFunctionName, config.escapeRegex, config.escapeString);
            if (null !== basicResult) return basicResult;
            return printComplexValue(val, config, indentation, depth, refs, hasCalledToJSON);
        }
        const DEFAULT_THEME = {
            comment: 'gray',
            content: 'reset',
            prop: 'yellow',
            tag: 'cyan',
            value: 'green'
        };
        const DEFAULT_THEME_KEYS = Object.keys(DEFAULT_THEME);
        const DEFAULT_OPTIONS = {
            callToJSON: true,
            compareKeys: void 0,
            escapeRegex: false,
            escapeString: true,
            highlight: false,
            indent: 2,
            maxDepth: 1 / 0,
            min: false,
            plugins: [],
            printBasicPrototype: true,
            printFunctionName: true,
            theme: DEFAULT_THEME
        };
        exports.DEFAULT_OPTIONS = DEFAULT_OPTIONS;
        function validateOptions(options) {
            Object.keys(options).forEach((key)=>{
                if (!DEFAULT_OPTIONS.hasOwnProperty(key)) throw new Error(`pretty-format: Unknown option "${key}".`);
            });
            if (options.min && void 0 !== options.indent && 0 !== options.indent) throw new Error('pretty-format: Options "min" and "indent" cannot be used together.');
            if (void 0 !== options.theme) {
                if (null === options.theme) throw new Error('pretty-format: Option "theme" must not be null.');
                if ('object' != typeof options.theme) throw new Error(`pretty-format: Option "theme" must be of type "object" but instead received "${typeof options.theme}".`);
            }
        }
        const getColorsHighlight = (options)=>DEFAULT_THEME_KEYS.reduce((colors, key)=>{
                const value = options.theme && void 0 !== options.theme[key] ? options.theme[key] : DEFAULT_THEME[key];
                const color = value && _ansiStyles.default[value];
                if (color && 'string' == typeof color.close && 'string' == typeof color.open) colors[key] = color;
                else throw new Error(`pretty-format: Option "theme" has a key "${key}" whose value "${value}" is undefined in ansi-styles.`);
                return colors;
            }, Object.create(null));
        const getColorsEmpty = ()=>DEFAULT_THEME_KEYS.reduce((colors, key)=>{
                colors[key] = {
                    close: '',
                    open: ''
                };
                return colors;
            }, Object.create(null));
        const getPrintFunctionName = (options)=>options && void 0 !== options.printFunctionName ? options.printFunctionName : DEFAULT_OPTIONS.printFunctionName;
        const getEscapeRegex = (options)=>options && void 0 !== options.escapeRegex ? options.escapeRegex : DEFAULT_OPTIONS.escapeRegex;
        const getEscapeString = (options)=>options && void 0 !== options.escapeString ? options.escapeString : DEFAULT_OPTIONS.escapeString;
        const getConfig = (options)=>{
            var _options$printBasicPr;
            return {
                callToJSON: options && void 0 !== options.callToJSON ? options.callToJSON : DEFAULT_OPTIONS.callToJSON,
                colors: options && options.highlight ? getColorsHighlight(options) : getColorsEmpty(),
                compareKeys: options && 'function' == typeof options.compareKeys ? options.compareKeys : DEFAULT_OPTIONS.compareKeys,
                escapeRegex: getEscapeRegex(options),
                escapeString: getEscapeString(options),
                indent: options && options.min ? '' : createIndent(options && void 0 !== options.indent ? options.indent : DEFAULT_OPTIONS.indent),
                maxDepth: options && void 0 !== options.maxDepth ? options.maxDepth : DEFAULT_OPTIONS.maxDepth,
                min: options && void 0 !== options.min ? options.min : DEFAULT_OPTIONS.min,
                plugins: options && void 0 !== options.plugins ? options.plugins : DEFAULT_OPTIONS.plugins,
                printBasicPrototype: null != (_options$printBasicPr = null == options ? void 0 : options.printBasicPrototype) ? _options$printBasicPr : true,
                printFunctionName: getPrintFunctionName(options),
                spacingInner: options && options.min ? ' ' : '\n',
                spacingOuter: options && options.min ? '' : '\n'
            };
        };
        function createIndent(indent) {
            return new Array(indent + 1).join(' ');
        }
        function format(val, options) {
            if (options) {
                validateOptions(options);
                if (options.plugins) {
                    const plugin = findPlugin(options.plugins, val);
                    if (null !== plugin) return printPlugin(plugin, val, getConfig(options), '', 0, []);
                }
            }
            const basicResult = printBasicValue(val, getPrintFunctionName(options), getEscapeRegex(options), getEscapeString(options));
            if (null !== basicResult) return basicResult;
            return printComplexValue(val, getConfig(options), '', 0, []);
        }
        const plugins = {
            AsymmetricMatcher: _AsymmetricMatcher.default,
            ConvertAnsi: _ConvertAnsi.default,
            DOMCollection: _DOMCollection.default,
            DOMElement: _DOMElement.default,
            Immutable: _Immutable.default,
            ReactElement: _ReactElement.default,
            ReactTestComponent: _ReactTestComponent.default
        };
        exports.plugins = plugins;
        var _default = format;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/pretty-format@27.5.1/node_modules/pretty-format/build/plugins/AsymmetricMatcher.js": function(__unused_webpack_module, exports, __webpack_require__) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports.test = exports.serialize = exports["default"] = void 0;
        var _collections = __webpack_require__("../../../node_modules/.pnpm/pretty-format@27.5.1/node_modules/pretty-format/build/collections.js");
        var global = function() {
            if ('undefined' != typeof globalThis) return globalThis;
            if (void 0 !== global) return global;
            if ('undefined' != typeof self) return self;
            if ('undefined' != typeof window) return window;
            return Function('return this')();
        }();
        var Symbol1 = global['jest-symbol-do-not-touch'] || global.Symbol;
        const asymmetricMatcher = 'function' == typeof Symbol1 && Symbol1.for ? Symbol1.for('jest.asymmetricMatcher') : 0x1357a5;
        const SPACE = ' ';
        const serialize = (val, config, indentation, depth, refs, printer)=>{
            const stringedValue = val.toString();
            if ('ArrayContaining' === stringedValue || 'ArrayNotContaining' === stringedValue) {
                if (++depth > config.maxDepth) return '[' + stringedValue + ']';
                return stringedValue + SPACE + '[' + (0, _collections.printListItems)(val.sample, config, indentation, depth, refs, printer) + ']';
            }
            if ('ObjectContaining' === stringedValue || 'ObjectNotContaining' === stringedValue) {
                if (++depth > config.maxDepth) return '[' + stringedValue + ']';
                return stringedValue + SPACE + '{' + (0, _collections.printObjectProperties)(val.sample, config, indentation, depth, refs, printer) + '}';
            }
            if ('StringMatching' === stringedValue || 'StringNotMatching' === stringedValue) return stringedValue + SPACE + printer(val.sample, config, indentation, depth, refs);
            if ('StringContaining' === stringedValue || 'StringNotContaining' === stringedValue) return stringedValue + SPACE + printer(val.sample, config, indentation, depth, refs);
            return val.toAsymmetricMatcher();
        };
        exports.serialize = serialize;
        const test = (val)=>val && val.$$typeof === asymmetricMatcher;
        exports.test = test;
        const plugin = {
            serialize,
            test
        };
        var _default = plugin;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/pretty-format@27.5.1/node_modules/pretty-format/build/plugins/ConvertAnsi.js": function(__unused_webpack_module, exports, __webpack_require__) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports.test = exports.serialize = exports["default"] = void 0;
        var _ansiRegex = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/ansi-regex@5.0.1/node_modules/ansi-regex/index.js"));
        var _ansiStyles = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/ansi-styles@5.2.0/node_modules/ansi-styles/index.js"));
        function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
                default: obj
            };
        }
        const toHumanReadableAnsi = (text)=>text.replace((0, _ansiRegex.default)(), (match)=>{
                switch(match){
                    case _ansiStyles.default.red.close:
                    case _ansiStyles.default.green.close:
                    case _ansiStyles.default.cyan.close:
                    case _ansiStyles.default.gray.close:
                    case _ansiStyles.default.white.close:
                    case _ansiStyles.default.yellow.close:
                    case _ansiStyles.default.bgRed.close:
                    case _ansiStyles.default.bgGreen.close:
                    case _ansiStyles.default.bgYellow.close:
                    case _ansiStyles.default.inverse.close:
                    case _ansiStyles.default.dim.close:
                    case _ansiStyles.default.bold.close:
                    case _ansiStyles.default.reset.open:
                    case _ansiStyles.default.reset.close:
                        return '</>';
                    case _ansiStyles.default.red.open:
                        return '<red>';
                    case _ansiStyles.default.green.open:
                        return '<green>';
                    case _ansiStyles.default.cyan.open:
                        return '<cyan>';
                    case _ansiStyles.default.gray.open:
                        return '<gray>';
                    case _ansiStyles.default.white.open:
                        return '<white>';
                    case _ansiStyles.default.yellow.open:
                        return '<yellow>';
                    case _ansiStyles.default.bgRed.open:
                        return '<bgRed>';
                    case _ansiStyles.default.bgGreen.open:
                        return '<bgGreen>';
                    case _ansiStyles.default.bgYellow.open:
                        return '<bgYellow>';
                    case _ansiStyles.default.inverse.open:
                        return '<inverse>';
                    case _ansiStyles.default.dim.open:
                        return '<dim>';
                    case _ansiStyles.default.bold.open:
                        return '<bold>';
                    default:
                        return '';
                }
            });
        const test = (val)=>'string' == typeof val && !!val.match((0, _ansiRegex.default)());
        exports.test = test;
        const serialize = (val, config, indentation, depth, refs, printer)=>printer(toHumanReadableAnsi(val), config, indentation, depth, refs);
        exports.serialize = serialize;
        const plugin = {
            serialize,
            test
        };
        var _default = plugin;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/pretty-format@27.5.1/node_modules/pretty-format/build/plugins/DOMCollection.js": function(__unused_webpack_module, exports, __webpack_require__) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports.test = exports.serialize = exports["default"] = void 0;
        var _collections = __webpack_require__("../../../node_modules/.pnpm/pretty-format@27.5.1/node_modules/pretty-format/build/collections.js");
        const SPACE = ' ';
        const OBJECT_NAMES = [
            'DOMStringMap',
            'NamedNodeMap'
        ];
        const ARRAY_REGEXP = /^(HTML\w*Collection|NodeList)$/;
        const testName = (name)=>-1 !== OBJECT_NAMES.indexOf(name) || ARRAY_REGEXP.test(name);
        const test = (val)=>val && val.constructor && !!val.constructor.name && testName(val.constructor.name);
        exports.test = test;
        const isNamedNodeMap = (collection)=>'NamedNodeMap' === collection.constructor.name;
        const serialize = (collection, config, indentation, depth, refs, printer)=>{
            const name = collection.constructor.name;
            if (++depth > config.maxDepth) return '[' + name + ']';
            return (config.min ? '' : name + SPACE) + (-1 !== OBJECT_NAMES.indexOf(name) ? '{' + (0, _collections.printObjectProperties)(isNamedNodeMap(collection) ? Array.from(collection).reduce((props, attribute)=>{
                props[attribute.name] = attribute.value;
                return props;
            }, {}) : {
                ...collection
            }, config, indentation, depth, refs, printer) + '}' : '[' + (0, _collections.printListItems)(Array.from(collection), config, indentation, depth, refs, printer) + ']');
        };
        exports.serialize = serialize;
        const plugin = {
            serialize,
            test
        };
        var _default = plugin;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/pretty-format@27.5.1/node_modules/pretty-format/build/plugins/DOMElement.js": function(__unused_webpack_module, exports, __webpack_require__) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports.test = exports.serialize = exports["default"] = void 0;
        var _markup = __webpack_require__("../../../node_modules/.pnpm/pretty-format@27.5.1/node_modules/pretty-format/build/plugins/lib/markup.js");
        const ELEMENT_NODE = 1;
        const TEXT_NODE = 3;
        const COMMENT_NODE = 8;
        const FRAGMENT_NODE = 11;
        const ELEMENT_REGEXP = /^((HTML|SVG)\w*)?Element$/;
        const testHasAttribute = (val)=>{
            try {
                return 'function' == typeof val.hasAttribute && val.hasAttribute('is');
            } catch  {
                return false;
            }
        };
        const testNode = (val)=>{
            const constructorName = val.constructor.name;
            const { nodeType, tagName } = val;
            const isCustomElement = 'string' == typeof tagName && tagName.includes('-') || testHasAttribute(val);
            return nodeType === ELEMENT_NODE && (ELEMENT_REGEXP.test(constructorName) || isCustomElement) || nodeType === TEXT_NODE && 'Text' === constructorName || nodeType === COMMENT_NODE && 'Comment' === constructorName || nodeType === FRAGMENT_NODE && 'DocumentFragment' === constructorName;
        };
        const test = (val)=>{
            var _val$constructor;
            return (null == val ? void 0 : null == (_val$constructor = val.constructor) ? void 0 : _val$constructor.name) && testNode(val);
        };
        exports.test = test;
        function nodeIsText(node) {
            return node.nodeType === TEXT_NODE;
        }
        function nodeIsComment(node) {
            return node.nodeType === COMMENT_NODE;
        }
        function nodeIsFragment(node) {
            return node.nodeType === FRAGMENT_NODE;
        }
        const serialize = (node, config, indentation, depth, refs, printer)=>{
            if (nodeIsText(node)) return (0, _markup.printText)(node.data, config);
            if (nodeIsComment(node)) return (0, _markup.printComment)(node.data, config);
            const type = nodeIsFragment(node) ? 'DocumentFragment' : node.tagName.toLowerCase();
            if (++depth > config.maxDepth) return (0, _markup.printElementAsLeaf)(type, config);
            return (0, _markup.printElement)(type, (0, _markup.printProps)(nodeIsFragment(node) ? [] : Array.from(node.attributes).map((attr)=>attr.name).sort(), nodeIsFragment(node) ? {} : Array.from(node.attributes).reduce((props, attribute)=>{
                props[attribute.name] = attribute.value;
                return props;
            }, {}), config, indentation + config.indent, depth, refs, printer), (0, _markup.printChildren)(Array.prototype.slice.call(node.childNodes || node.children), config, indentation + config.indent, depth, refs, printer), config, indentation);
        };
        exports.serialize = serialize;
        const plugin = {
            serialize,
            test
        };
        var _default = plugin;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/pretty-format@27.5.1/node_modules/pretty-format/build/plugins/Immutable.js": function(__unused_webpack_module, exports, __webpack_require__) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports.test = exports.serialize = exports["default"] = void 0;
        var _collections = __webpack_require__("../../../node_modules/.pnpm/pretty-format@27.5.1/node_modules/pretty-format/build/collections.js");
        const IS_ITERABLE_SENTINEL = '@@__IMMUTABLE_ITERABLE__@@';
        const IS_LIST_SENTINEL = '@@__IMMUTABLE_LIST__@@';
        const IS_KEYED_SENTINEL = '@@__IMMUTABLE_KEYED__@@';
        const IS_MAP_SENTINEL = '@@__IMMUTABLE_MAP__@@';
        const IS_ORDERED_SENTINEL = '@@__IMMUTABLE_ORDERED__@@';
        const IS_RECORD_SENTINEL = '@@__IMMUTABLE_RECORD__@@';
        const IS_SEQ_SENTINEL = '@@__IMMUTABLE_SEQ__@@';
        const IS_SET_SENTINEL = '@@__IMMUTABLE_SET__@@';
        const IS_STACK_SENTINEL = '@@__IMMUTABLE_STACK__@@';
        const getImmutableName = (name)=>'Immutable.' + name;
        const printAsLeaf = (name)=>'[' + name + ']';
        const SPACE = ' ';
        const LAZY = '…';
        const printImmutableEntries = (val, config, indentation, depth, refs, printer, type)=>++depth > config.maxDepth ? printAsLeaf(getImmutableName(type)) : getImmutableName(type) + SPACE + '{' + (0, _collections.printIteratorEntries)(val.entries(), config, indentation, depth, refs, printer) + '}';
        function getRecordEntries(val) {
            let i = 0;
            return {
                next () {
                    if (i < val._keys.length) {
                        const key = val._keys[i++];
                        return {
                            done: false,
                            value: [
                                key,
                                val.get(key)
                            ]
                        };
                    }
                    return {
                        done: true,
                        value: void 0
                    };
                }
            };
        }
        const printImmutableRecord = (val, config, indentation, depth, refs, printer)=>{
            const name = getImmutableName(val._name || 'Record');
            return ++depth > config.maxDepth ? printAsLeaf(name) : name + SPACE + '{' + (0, _collections.printIteratorEntries)(getRecordEntries(val), config, indentation, depth, refs, printer) + '}';
        };
        const printImmutableSeq = (val, config, indentation, depth, refs, printer)=>{
            const name = getImmutableName('Seq');
            if (++depth > config.maxDepth) return printAsLeaf(name);
            if (val[IS_KEYED_SENTINEL]) return name + SPACE + '{' + (val._iter || val._object ? (0, _collections.printIteratorEntries)(val.entries(), config, indentation, depth, refs, printer) : LAZY) + '}';
            return name + SPACE + '[' + (val._iter || val._array || val._collection || val._iterable ? (0, _collections.printIteratorValues)(val.values(), config, indentation, depth, refs, printer) : LAZY) + ']';
        };
        const printImmutableValues = (val, config, indentation, depth, refs, printer, type)=>++depth > config.maxDepth ? printAsLeaf(getImmutableName(type)) : getImmutableName(type) + SPACE + '[' + (0, _collections.printIteratorValues)(val.values(), config, indentation, depth, refs, printer) + ']';
        const serialize = (val, config, indentation, depth, refs, printer)=>{
            if (val[IS_MAP_SENTINEL]) return printImmutableEntries(val, config, indentation, depth, refs, printer, val[IS_ORDERED_SENTINEL] ? 'OrderedMap' : 'Map');
            if (val[IS_LIST_SENTINEL]) return printImmutableValues(val, config, indentation, depth, refs, printer, 'List');
            if (val[IS_SET_SENTINEL]) return printImmutableValues(val, config, indentation, depth, refs, printer, val[IS_ORDERED_SENTINEL] ? 'OrderedSet' : 'Set');
            if (val[IS_STACK_SENTINEL]) return printImmutableValues(val, config, indentation, depth, refs, printer, 'Stack');
            if (val[IS_SEQ_SENTINEL]) return printImmutableSeq(val, config, indentation, depth, refs, printer);
            return printImmutableRecord(val, config, indentation, depth, refs, printer);
        };
        exports.serialize = serialize;
        const test = (val)=>val && (true === val[IS_ITERABLE_SENTINEL] || true === val[IS_RECORD_SENTINEL]);
        exports.test = test;
        const plugin = {
            serialize,
            test
        };
        var _default = plugin;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/pretty-format@27.5.1/node_modules/pretty-format/build/plugins/ReactElement.js": function(__unused_webpack_module, exports, __webpack_require__) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports.test = exports.serialize = exports["default"] = void 0;
        var ReactIs = _interopRequireWildcard(__webpack_require__("../../../node_modules/.pnpm/react-is@17.0.2/node_modules/react-is/index.js"));
        var _markup = __webpack_require__("../../../node_modules/.pnpm/pretty-format@27.5.1/node_modules/pretty-format/build/plugins/lib/markup.js");
        function _getRequireWildcardCache(nodeInterop) {
            if ('function' != typeof WeakMap) return null;
            var cacheBabelInterop = new WeakMap();
            var cacheNodeInterop = new WeakMap();
            return (_getRequireWildcardCache = function(nodeInterop) {
                return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
            })(nodeInterop);
        }
        function _interopRequireWildcard(obj, nodeInterop) {
            if (!nodeInterop && obj && obj.__esModule) return obj;
            if (null === obj || 'object' != typeof obj && 'function' != typeof obj) return {
                default: obj
            };
            var cache = _getRequireWildcardCache(nodeInterop);
            if (cache && cache.has(obj)) return cache.get(obj);
            var newObj = {};
            var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
            for(var key in obj)if ('default' !== key && Object.prototype.hasOwnProperty.call(obj, key)) {
                var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
                if (desc && (desc.get || desc.set)) Object.defineProperty(newObj, key, desc);
                else newObj[key] = obj[key];
            }
            newObj.default = obj;
            if (cache) cache.set(obj, newObj);
            return newObj;
        }
        const getChildren = (arg, children = [])=>{
            if (Array.isArray(arg)) arg.forEach((item)=>{
                getChildren(item, children);
            });
            else if (null != arg && false !== arg) children.push(arg);
            return children;
        };
        const getType = (element)=>{
            const type = element.type;
            if ('string' == typeof type) return type;
            if ('function' == typeof type) return type.displayName || type.name || 'Unknown';
            if (ReactIs.isFragment(element)) return 'React.Fragment';
            if (ReactIs.isSuspense(element)) return 'React.Suspense';
            if ('object' == typeof type && null !== type) {
                if (ReactIs.isContextProvider(element)) return 'Context.Provider';
                if (ReactIs.isContextConsumer(element)) return 'Context.Consumer';
                if (ReactIs.isForwardRef(element)) {
                    if (type.displayName) return type.displayName;
                    const functionName = type.render.displayName || type.render.name || '';
                    return '' !== functionName ? 'ForwardRef(' + functionName + ')' : 'ForwardRef';
                }
                if (ReactIs.isMemo(element)) {
                    const functionName = type.displayName || type.type.displayName || type.type.name || '';
                    return '' !== functionName ? 'Memo(' + functionName + ')' : 'Memo';
                }
            }
            return 'UNDEFINED';
        };
        const getPropKeys = (element)=>{
            const { props } = element;
            return Object.keys(props).filter((key)=>'children' !== key && void 0 !== props[key]).sort();
        };
        const serialize = (element, config, indentation, depth, refs, printer)=>++depth > config.maxDepth ? (0, _markup.printElementAsLeaf)(getType(element), config) : (0, _markup.printElement)(getType(element), (0, _markup.printProps)(getPropKeys(element), element.props, config, indentation + config.indent, depth, refs, printer), (0, _markup.printChildren)(getChildren(element.props.children), config, indentation + config.indent, depth, refs, printer), config, indentation);
        exports.serialize = serialize;
        const test = (val)=>null != val && ReactIs.isElement(val);
        exports.test = test;
        const plugin = {
            serialize,
            test
        };
        var _default = plugin;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/pretty-format@27.5.1/node_modules/pretty-format/build/plugins/ReactTestComponent.js": function(__unused_webpack_module, exports, __webpack_require__) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports.test = exports.serialize = exports["default"] = void 0;
        var _markup = __webpack_require__("../../../node_modules/.pnpm/pretty-format@27.5.1/node_modules/pretty-format/build/plugins/lib/markup.js");
        var global = function() {
            if ('undefined' != typeof globalThis) return globalThis;
            if (void 0 !== global) return global;
            if ('undefined' != typeof self) return self;
            if ('undefined' != typeof window) return window;
            return Function('return this')();
        }();
        var Symbol1 = global['jest-symbol-do-not-touch'] || global.Symbol;
        const testSymbol = 'function' == typeof Symbol1 && Symbol1.for ? Symbol1.for('react.test.json') : 0xea71357;
        const getPropKeys = (object)=>{
            const { props } = object;
            return props ? Object.keys(props).filter((key)=>void 0 !== props[key]).sort() : [];
        };
        const serialize = (object, config, indentation, depth, refs, printer)=>++depth > config.maxDepth ? (0, _markup.printElementAsLeaf)(object.type, config) : (0, _markup.printElement)(object.type, object.props ? (0, _markup.printProps)(getPropKeys(object), object.props, config, indentation + config.indent, depth, refs, printer) : '', object.children ? (0, _markup.printChildren)(object.children, config, indentation + config.indent, depth, refs, printer) : '', config, indentation);
        exports.serialize = serialize;
        const test = (val)=>val && val.$$typeof === testSymbol;
        exports.test = test;
        const plugin = {
            serialize,
            test
        };
        var _default = plugin;
        exports["default"] = _default;
    },
    "../../../node_modules/.pnpm/pretty-format@27.5.1/node_modules/pretty-format/build/plugins/lib/escapeHTML.js": function(__unused_webpack_module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = escapeHTML;
        function escapeHTML(str) {
            return str.replace(/</g, '&lt;').replace(/>/g, '&gt;');
        }
    },
    "../../../node_modules/.pnpm/pretty-format@27.5.1/node_modules/pretty-format/build/plugins/lib/markup.js": function(__unused_webpack_module, exports, __webpack_require__) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports.printText = exports.printProps = exports.printElementAsLeaf = exports.printElement = exports.printComment = exports.printChildren = void 0;
        var _escapeHTML = _interopRequireDefault(__webpack_require__("../../../node_modules/.pnpm/pretty-format@27.5.1/node_modules/pretty-format/build/plugins/lib/escapeHTML.js"));
        function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
                default: obj
            };
        }
        const printProps = (keys, props, config, indentation, depth, refs, printer)=>{
            const indentationNext = indentation + config.indent;
            const colors = config.colors;
            return keys.map((key)=>{
                const value = props[key];
                let printed = printer(value, config, indentationNext, depth, refs);
                if ('string' != typeof value) {
                    if (-1 !== printed.indexOf('\n')) printed = config.spacingOuter + indentationNext + printed + config.spacingOuter + indentation;
                    printed = '{' + printed + '}';
                }
                return config.spacingInner + indentation + colors.prop.open + key + colors.prop.close + '=' + colors.value.open + printed + colors.value.close;
            }).join('');
        };
        exports.printProps = printProps;
        const printChildren = (children, config, indentation, depth, refs, printer)=>children.map((child)=>config.spacingOuter + indentation + ('string' == typeof child ? printText(child, config) : printer(child, config, indentation, depth, refs))).join('');
        exports.printChildren = printChildren;
        const printText = (text, config)=>{
            const contentColor = config.colors.content;
            return contentColor.open + (0, _escapeHTML.default)(text) + contentColor.close;
        };
        exports.printText = printText;
        const printComment = (comment, config)=>{
            const commentColor = config.colors.comment;
            return commentColor.open + '<!--' + (0, _escapeHTML.default)(comment) + '-->' + commentColor.close;
        };
        exports.printComment = printComment;
        const printElement = (type, printedProps, printedChildren, config, indentation)=>{
            const tagColor = config.colors.tag;
            return tagColor.open + '<' + type + (printedProps && tagColor.close + printedProps + config.spacingOuter + indentation + tagColor.open) + (printedChildren ? '>' + tagColor.close + printedChildren + config.spacingOuter + indentation + tagColor.open + '</' + type : (printedProps && !config.min ? '' : ' ') + '/') + '>' + tagColor.close;
        };
        exports.printElement = printElement;
        const printElementAsLeaf = (type, config)=>{
            const tagColor = config.colors.tag;
            return tagColor.open + '<' + type + tagColor.close + ' …' + tagColor.open + ' />' + tagColor.close;
        };
        exports.printElementAsLeaf = printElementAsLeaf;
    },
    "../../../node_modules/.pnpm/react-is@17.0.2/node_modules/react-is/cjs/react-is.development.js": function(__unused_webpack_module, exports) {
        /** @license React v17.0.2
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ if ("production" !== process.env.NODE_ENV) (function() {
            'use strict';
            var REACT_ELEMENT_TYPE = 0xeac7;
            var REACT_PORTAL_TYPE = 0xeaca;
            var REACT_FRAGMENT_TYPE = 0xeacb;
            var REACT_STRICT_MODE_TYPE = 0xeacc;
            var REACT_PROFILER_TYPE = 0xead2;
            var REACT_PROVIDER_TYPE = 0xeacd;
            var REACT_CONTEXT_TYPE = 0xeace;
            var REACT_FORWARD_REF_TYPE = 0xead0;
            var REACT_SUSPENSE_TYPE = 0xead1;
            var REACT_SUSPENSE_LIST_TYPE = 0xead8;
            var REACT_MEMO_TYPE = 0xead3;
            var REACT_LAZY_TYPE = 0xead4;
            var REACT_BLOCK_TYPE = 0xead9;
            var REACT_SERVER_BLOCK_TYPE = 0xeada;
            var REACT_FUNDAMENTAL_TYPE = 0xead5;
            var REACT_DEBUG_TRACING_MODE_TYPE = 0xeae1;
            var REACT_LEGACY_HIDDEN_TYPE = 0xeae3;
            if ('function' == typeof Symbol && Symbol.for) {
                var symbolFor = Symbol.for;
                REACT_ELEMENT_TYPE = symbolFor('react.element');
                REACT_PORTAL_TYPE = symbolFor('react.portal');
                REACT_FRAGMENT_TYPE = symbolFor('react.fragment');
                REACT_STRICT_MODE_TYPE = symbolFor('react.strict_mode');
                REACT_PROFILER_TYPE = symbolFor('react.profiler');
                REACT_PROVIDER_TYPE = symbolFor('react.provider');
                REACT_CONTEXT_TYPE = symbolFor('react.context');
                REACT_FORWARD_REF_TYPE = symbolFor('react.forward_ref');
                REACT_SUSPENSE_TYPE = symbolFor('react.suspense');
                REACT_SUSPENSE_LIST_TYPE = symbolFor('react.suspense_list');
                REACT_MEMO_TYPE = symbolFor('react.memo');
                REACT_LAZY_TYPE = symbolFor('react.lazy');
                REACT_BLOCK_TYPE = symbolFor('react.block');
                REACT_SERVER_BLOCK_TYPE = symbolFor('react.server.block');
                REACT_FUNDAMENTAL_TYPE = symbolFor('react.fundamental');
                symbolFor('react.scope');
                symbolFor('react.opaque.id');
                REACT_DEBUG_TRACING_MODE_TYPE = symbolFor('react.debug_trace_mode');
                symbolFor('react.offscreen');
                REACT_LEGACY_HIDDEN_TYPE = symbolFor('react.legacy_hidden');
            }
            var enableScopeAPI = false;
            function isValidElementType(type) {
                if ('string' == typeof type || 'function' == typeof type) return true;
                if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || type === REACT_DEBUG_TRACING_MODE_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || type === REACT_LEGACY_HIDDEN_TYPE || enableScopeAPI) return true;
                if ('object' == typeof type && null !== type) {
                    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_BLOCK_TYPE || type[0] === REACT_SERVER_BLOCK_TYPE) return true;
                }
                return false;
            }
            function typeOf(object) {
                if ('object' == typeof object && null !== object) {
                    var $$typeof = object.$$typeof;
                    switch($$typeof){
                        case REACT_ELEMENT_TYPE:
                            var type = object.type;
                            switch(type){
                                case REACT_FRAGMENT_TYPE:
                                case REACT_PROFILER_TYPE:
                                case REACT_STRICT_MODE_TYPE:
                                case REACT_SUSPENSE_TYPE:
                                case REACT_SUSPENSE_LIST_TYPE:
                                    return type;
                                default:
                                    var $$typeofType = type && type.$$typeof;
                                    switch($$typeofType){
                                        case REACT_CONTEXT_TYPE:
                                        case REACT_FORWARD_REF_TYPE:
                                        case REACT_LAZY_TYPE:
                                        case REACT_MEMO_TYPE:
                                        case REACT_PROVIDER_TYPE:
                                            return $$typeofType;
                                        default:
                                            return $$typeof;
                                    }
                            }
                        case REACT_PORTAL_TYPE:
                            return $$typeof;
                    }
                }
            }
            var ContextConsumer = REACT_CONTEXT_TYPE;
            var ContextProvider = REACT_PROVIDER_TYPE;
            var Element = REACT_ELEMENT_TYPE;
            var ForwardRef = REACT_FORWARD_REF_TYPE;
            var Fragment = REACT_FRAGMENT_TYPE;
            var Lazy = REACT_LAZY_TYPE;
            var Memo = REACT_MEMO_TYPE;
            var Portal = REACT_PORTAL_TYPE;
            var Profiler = REACT_PROFILER_TYPE;
            var StrictMode = REACT_STRICT_MODE_TYPE;
            var Suspense = REACT_SUSPENSE_TYPE;
            var hasWarnedAboutDeprecatedIsAsyncMode = false;
            var hasWarnedAboutDeprecatedIsConcurrentMode = false;
            function isAsyncMode(object) {
                if (!hasWarnedAboutDeprecatedIsAsyncMode) {
                    hasWarnedAboutDeprecatedIsAsyncMode = true;
                    console['warn']("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 18+.");
                }
                return false;
            }
            function isConcurrentMode(object) {
                if (!hasWarnedAboutDeprecatedIsConcurrentMode) {
                    hasWarnedAboutDeprecatedIsConcurrentMode = true;
                    console['warn']("The ReactIs.isConcurrentMode() alias has been deprecated, and will be removed in React 18+.");
                }
                return false;
            }
            function isContextConsumer(object) {
                return typeOf(object) === REACT_CONTEXT_TYPE;
            }
            function isContextProvider(object) {
                return typeOf(object) === REACT_PROVIDER_TYPE;
            }
            function isElement(object) {
                return 'object' == typeof object && null !== object && object.$$typeof === REACT_ELEMENT_TYPE;
            }
            function isForwardRef(object) {
                return typeOf(object) === REACT_FORWARD_REF_TYPE;
            }
            function isFragment(object) {
                return typeOf(object) === REACT_FRAGMENT_TYPE;
            }
            function isLazy(object) {
                return typeOf(object) === REACT_LAZY_TYPE;
            }
            function isMemo(object) {
                return typeOf(object) === REACT_MEMO_TYPE;
            }
            function isPortal(object) {
                return typeOf(object) === REACT_PORTAL_TYPE;
            }
            function isProfiler(object) {
                return typeOf(object) === REACT_PROFILER_TYPE;
            }
            function isStrictMode(object) {
                return typeOf(object) === REACT_STRICT_MODE_TYPE;
            }
            function isSuspense(object) {
                return typeOf(object) === REACT_SUSPENSE_TYPE;
            }
            exports.ContextConsumer = ContextConsumer;
            exports.ContextProvider = ContextProvider;
            exports.Element = Element;
            exports.ForwardRef = ForwardRef;
            exports.Fragment = Fragment;
            exports.Lazy = Lazy;
            exports.Memo = Memo;
            exports.Portal = Portal;
            exports.Profiler = Profiler;
            exports.StrictMode = StrictMode;
            exports.Suspense = Suspense;
            exports.isAsyncMode = isAsyncMode;
            exports.isConcurrentMode = isConcurrentMode;
            exports.isContextConsumer = isContextConsumer;
            exports.isContextProvider = isContextProvider;
            exports.isElement = isElement;
            exports.isForwardRef = isForwardRef;
            exports.isFragment = isFragment;
            exports.isLazy = isLazy;
            exports.isMemo = isMemo;
            exports.isPortal = isPortal;
            exports.isProfiler = isProfiler;
            exports.isStrictMode = isStrictMode;
            exports.isSuspense = isSuspense;
            exports.isValidElementType = isValidElementType;
            exports.typeOf = typeOf;
        })();
    },
    "../../../node_modules/.pnpm/react-is@17.0.2/node_modules/react-is/cjs/react-is.production.min.js": function(__unused_webpack_module, exports) {
        /** @license React v17.0.2
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var b = 60103, c = 60106, d = 60107, e = 60108, f = 60114, g = 60109, h = 60110, k = 60112, l = 60113, m = 60120, n = 60115, p = 60116, q = 60121, r = 60122, u = 60117, v = 60129, w = 60131;
        if ("function" == typeof Symbol && Symbol.for) {
            var x = Symbol.for;
            b = x("react.element");
            c = x("react.portal");
            d = x("react.fragment");
            e = x("react.strict_mode");
            f = x("react.profiler");
            g = x("react.provider");
            h = x("react.context");
            k = x("react.forward_ref");
            l = x("react.suspense");
            m = x("react.suspense_list");
            n = x("react.memo");
            p = x("react.lazy");
            q = x("react.block");
            r = x("react.server.block");
            u = x("react.fundamental");
            v = x("react.debug_trace_mode");
            w = x("react.legacy_hidden");
        }
        function y(a) {
            if ("object" == typeof a && null !== a) {
                var t = a.$$typeof;
                switch(t){
                    case b:
                        switch(a = a.type){
                            case d:
                            case f:
                            case e:
                            case l:
                            case m:
                                return a;
                            default:
                                switch(a = a && a.$$typeof){
                                    case h:
                                    case k:
                                    case p:
                                    case n:
                                    case g:
                                        return a;
                                    default:
                                        return t;
                                }
                        }
                    case c:
                        return t;
                }
            }
        }
        var z = g, A = b, B = k, C = d, D = p, E = n, F = c, G = f, H = e, I = l;
        exports.ContextConsumer = h;
        exports.ContextProvider = z;
        exports.Element = A;
        exports.ForwardRef = B;
        exports.Fragment = C;
        exports.Lazy = D;
        exports.Memo = E;
        exports.Portal = F;
        exports.Profiler = G;
        exports.StrictMode = H;
        exports.Suspense = I;
        exports.isAsyncMode = function() {
            return !1;
        };
        exports.isConcurrentMode = function() {
            return !1;
        };
        exports.isContextConsumer = function(a) {
            return y(a) === h;
        };
        exports.isContextProvider = function(a) {
            return y(a) === g;
        };
        exports.isElement = function(a) {
            return "object" == typeof a && null !== a && a.$$typeof === b;
        };
        exports.isForwardRef = function(a) {
            return y(a) === k;
        };
        exports.isFragment = function(a) {
            return y(a) === d;
        };
        exports.isLazy = function(a) {
            return y(a) === p;
        };
        exports.isMemo = function(a) {
            return y(a) === n;
        };
        exports.isPortal = function(a) {
            return y(a) === c;
        };
        exports.isProfiler = function(a) {
            return y(a) === f;
        };
        exports.isStrictMode = function(a) {
            return y(a) === e;
        };
        exports.isSuspense = function(a) {
            return y(a) === l;
        };
        exports.isValidElementType = function(a) {
            return "string" == typeof a || "function" == typeof a || a === d || a === f || a === v || a === e || a === l || a === m || a === w || "object" == typeof a && null !== a && (a.$$typeof === p || a.$$typeof === n || a.$$typeof === g || a.$$typeof === h || a.$$typeof === k || a.$$typeof === u || a.$$typeof === q || a[0] === r);
        };
        exports.typeOf = y;
    },
    "../../../node_modules/.pnpm/react-is@17.0.2/node_modules/react-is/index.js": function(module, __unused_webpack_exports, __webpack_require__) {
        if ('production' === process.env.NODE_ENV) module.exports = __webpack_require__("../../../node_modules/.pnpm/react-is@17.0.2/node_modules/react-is/cjs/react-is.production.min.js");
        else module.exports = __webpack_require__("../../../node_modules/.pnpm/react-is@17.0.2/node_modules/react-is/cjs/react-is.development.js");
    }
};
var __webpack_module_cache__ = {};
function __webpack_require__(moduleId) {
    var cachedModule = __webpack_module_cache__[moduleId];
    if (void 0 !== cachedModule) return cachedModule.exports;
    var module = __webpack_module_cache__[moduleId] = {
        id: moduleId,
        loaded: false,
        exports: {}
    };
    __webpack_modules__[moduleId](module, module.exports, __webpack_require__);
    module.loaded = true;
    return module.exports;
}
(()=>{
    __webpack_require__.n = (module)=>{
        var getter = module && module.__esModule ? ()=>module['default'] : ()=>module;
        __webpack_require__.d(getter, {
            a: getter
        });
        return getter;
    };
})();
(()=>{
    __webpack_require__.d = (exports, definition)=>{
        for(var key in definition)if (__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) Object.defineProperty(exports, key, {
            enumerable: true,
            get: definition[key]
        });
    };
})();
(()=>{
    __webpack_require__.hmd = (module)=>{
        module = Object.create(module);
        if (!module.children) module.children = [];
        Object.defineProperty(module, 'exports', {
            enumerable: true,
            set: ()=>{
                throw new Error('ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: ' + module.id);
            }
        });
        return module;
    };
})();
(()=>{
    __webpack_require__.o = (obj, prop)=>Object.prototype.hasOwnProperty.call(obj, prop);
})();
(()=>{
    __webpack_require__.nmd = (module)=>{
        module.paths = [];
        if (!module.children) module.children = [];
        return module;
    };
})();
var dom_esm = __webpack_require__("../../../node_modules/.pnpm/@testing-library+dom@10.4.1/node_modules/@testing-library/dom/dist/@testing-library/dom.esm.js");
const NodesRef = lynx.createSelectorQuery().selectUniqueID(-1).constructor;
function getElement(elemOrNodesRef) {
    if (elemOrNodesRef instanceof NodesRef) return __GetElementByUniqueId(Number(elemOrNodesRef._nodeSelectToken.identifier));
    if ('refAttr' in elemOrNodesRef) return document.querySelector(`[react-ref-${elemOrNodesRef.refAttr[0]}-${elemOrNodesRef.refAttr[1]}]`);
    if (elemOrNodesRef?.constructor?.name === 'HTMLUnknownElement') return elemOrNodesRef;
    throw new Error('Invalid element, got: ' + elemOrNodesRef.constructor?.name);
}
const fireEvent = (elemOrNodesRef, ...args)=>{
    const isMainThread = __MAIN_THREAD__;
    lynxTestingEnv.switchToBackgroundThread();
    const elem = getElement(elemOrNodesRef);
    const ans = (0, dom_esm.rC)(elem, ...args);
    if (isMainThread) lynxTestingEnv.switchToMainThread();
    return ans;
};
const eventMap = {
    tap: {
        defaultInit: {}
    },
    longtap: {
        defaultInit: {}
    },
    bgload: {
        defaultInit: {}
    },
    bgerror: {
        defaultInit: {}
    },
    touchstart: {
        defaultInit: {}
    },
    touchmove: {
        defaultInit: {}
    },
    touchcancel: {
        defaultInit: {}
    },
    touchend: {
        defaultInit: {}
    },
    longpress: {
        defaultInit: {}
    },
    transitionstart: {
        defaultInit: {}
    },
    transitioncancel: {
        defaultInit: {}
    },
    transitionend: {
        defaultInit: {}
    },
    animationstart: {
        defaultInit: {}
    },
    animationiteration: {
        defaultInit: {}
    },
    animationcancel: {
        defaultInit: {}
    },
    animationend: {
        defaultInit: {}
    },
    mousedown: {
        defaultInit: {}
    },
    mouseup: {
        defaultInit: {}
    },
    mousemove: {
        defaultInit: {}
    },
    mouseclick: {
        defaultInit: {}
    },
    mousedblclick: {
        defaultInit: {}
    },
    mouselongpress: {
        defaultInit: {}
    },
    wheel: {
        defaultInit: {}
    },
    keydown: {
        defaultInit: {}
    },
    keyup: {
        defaultInit: {}
    },
    focus: {
        defaultInit: {}
    },
    blur: {
        defaultInit: {}
    },
    layoutchange: {
        defaultInit: {}
    },
    scrolltoupper: {
        defaultInit: {}
    },
    scrolltolower: {
        defaultInit: {}
    },
    scroll: {
        defaultInit: {}
    },
    scrollend: {
        defaultInit: {}
    },
    contentsizechanged: {
        defaultInit: {}
    },
    scrolltoupperedge: {
        defaultInit: {}
    },
    scrolltoloweredge: {
        defaultInit: {}
    },
    scrolltonormalstate: {
        defaultInit: {}
    }
};
Object.keys(eventMap).forEach((key)=>{
    fireEvent[key] = (elemOrNodesRef, init = {})=>{
        const isMainThread = __MAIN_THREAD__;
        lynxTestingEnv.switchToBackgroundThread();
        const elem = getElement(elemOrNodesRef);
        const eventType = init?.eventType || 'bindEvent';
        init = {
            eventType,
            eventName: key,
            ...eventMap[key].defaultInit,
            ...init
        };
        const event = (0, dom_esm.lh)(`${eventType}:${key}`, elem, init);
        Object.assign(event, init);
        const ans = (0, dom_esm.rC)(elem, event);
        if (isMainThread) lynxTestingEnv.switchToMainThread();
        return ans;
    };
});
function waitSchedule() {
    return new Promise((resolve)=>{
        requestAnimationFrame(()=>{
            setTimeout(resolve);
        });
    });
}
(0, dom_esm.jK)({
    asyncWrapper: async (cb)=>{
        let result;
        await act(()=>{
            result = cb();
        });
        return result;
    },
    eventWrapper: (cb)=>{
        let result;
        act(()=>{
            result = cb();
        });
        return result;
    }
});
function pure_render(ui, { queries, wrapper: WrapperComponent, enableMainThread = false, enableBackgroundThread = true } = {}) {
    if (!enableMainThread && !enableBackgroundThread) throw new Error('You must enable at least one thread for rendering (enableMainThread or enableBackgroundThread)');
    const wrapUiIfNeeded = (innerElement)=>WrapperComponent ? h(WrapperComponent, null, innerElement) : innerElement;
    const comp = wrapUiIfNeeded(ui);
    const compMainThread = cloneElement(comp);
    const compBackgroundThread = cloneElement(comp);
    globalThis.lynxTestingEnv.switchToMainThread();
    __root.__jsx = enableMainThread ? compMainThread : null;
    act(()=>{
        renderPage();
    });
    if (enableBackgroundThread) {
        globalThis.lynxTestingEnv.switchToBackgroundThread();
        act(()=>{
            render(compBackgroundThread, __root);
            flushDelayedLifecycleEvents();
        });
    }
    return {
        container: lynxTestingEnv.mainThread.elementTree.root,
        unmount: cleanup,
        rerender: (rerenderUi)=>{
            lynxTestingEnv.reset();
            return pure_render(wrapUiIfNeeded(rerenderUi), {
                queries,
                wrapper: WrapperComponent,
                enableMainThread,
                enableBackgroundThread
            });
        },
        ...(0, dom_esm.E5)(lynxTestingEnv.mainThread.elementTree.root, queries)
    };
}
function cleanup() {
    const isMainThread = __MAIN_THREAD__;
    globalThis.lynxTestingEnv.switchToBackgroundThread();
    act(()=>{
        render(null, __root);
    });
    lynxTestingEnv.mainThread.elementTree.root = void 0;
    clearPage();
    lynxTestingEnv.jsdom.window.document.body.innerHTML = '';
    if (isMainThread) globalThis.lynxTestingEnv.switchToMainThread();
}
function renderHook(renderCallback, options) {
    const { initialProps, wrapper } = options || {};
    const result = createRef();
    function TestComponent({ renderCallbackProps }) {
        const pendingResult = renderCallback(renderCallbackProps);
        useEffect(()=>{
            result.current = pendingResult;
        });
        return null;
    }
    const { rerender: baseRerender, unmount } = pure_render(/*#__PURE__*/ jsx(TestComponent, {
        renderCallbackProps: initialProps
    }), {
        wrapper
    });
    function rerender(rerenderCallbackProps) {
        return baseRerender(/*#__PURE__*/ jsx(TestComponent, {
            renderCallbackProps: rerenderCallbackProps
        }));
    }
    return {
        result,
        rerender,
        unmount
    };
}
var __webpack_exports__buildQueries = dom_esm.H5;
var __webpack_exports__configure = dom_esm.jK;
var __webpack_exports__createEvent = dom_esm.lh;
var __webpack_exports__findAllByAltText = dom_esm.mm;
var __webpack_exports__findAllByDisplayValue = dom_esm.tN;
var __webpack_exports__findAllByLabelText = dom_esm.Ll;
var __webpack_exports__findAllByPlaceholderText = dom_esm.eX;
var __webpack_exports__findAllByRole = dom_esm.Qb;
var __webpack_exports__findAllByTestId = dom_esm.v5;
var __webpack_exports__findAllByText = dom_esm.fG;
var __webpack_exports__findAllByTitle = dom_esm.E_;
var __webpack_exports__findByAltText = dom_esm.d_;
var __webpack_exports__findByDisplayValue = dom_esm.Ou;
var __webpack_exports__findByLabelText = dom_esm.It;
var __webpack_exports__findByPlaceholderText = dom_esm.Fz;
var __webpack_exports__findByRole = dom_esm.rg;
var __webpack_exports__findByTestId = dom_esm.oO;
var __webpack_exports__findByText = dom_esm.E9;
var __webpack_exports__findByTitle = dom_esm.L_;
var __webpack_exports__getAllByAltText = dom_esm.Bw;
var __webpack_exports__getAllByDisplayValue = dom_esm.kL;
var __webpack_exports__getAllByLabelText = dom_esm.WY;
var __webpack_exports__getAllByPlaceholderText = dom_esm.BJ;
var __webpack_exports__getAllByRole = dom_esm.Rt;
var __webpack_exports__getAllByTestId = dom_esm.Gz;
var __webpack_exports__getAllByText = dom_esm.Y7;
var __webpack_exports__getAllByTitle = dom_esm.r4;
var __webpack_exports__getByAltText = dom_esm.CF;
var __webpack_exports__getByDisplayValue = dom_esm.$b;
var __webpack_exports__getByLabelText = dom_esm.NX;
var __webpack_exports__getByPlaceholderText = dom_esm.Iv;
var __webpack_exports__getByRole = dom_esm.gy;
var __webpack_exports__getByTestId = dom_esm.h5;
var __webpack_exports__getByText = dom_esm.Tf;
var __webpack_exports__getByTitle = dom_esm.yw;
var __webpack_exports__getConfig = dom_esm.zj;
var __webpack_exports__getDefaultNormalizer = dom_esm.v6;
var __webpack_exports__getElementError = dom_esm.Xj;
var __webpack_exports__getMultipleElementsFoundError = dom_esm.op;
var __webpack_exports__getNodeText = dom_esm.Oe;
var __webpack_exports__getQueriesForElement = dom_esm.E5;
var __webpack_exports__getRoles = dom_esm.O0;
var __webpack_exports__getSuggestedQuery = dom_esm.IS;
var __webpack_exports__isInaccessible = dom_esm._E;
var __webpack_exports__logDOM = dom_esm.X_;
var __webpack_exports__logRoles = dom_esm.cY;
var __webpack_exports__makeFindQuery = dom_esm._Y;
var __webpack_exports__makeGetAllQuery = dom_esm.on;
var __webpack_exports__makeSingleQuery = dom_esm.xO;
var __webpack_exports__prettyDOM = dom_esm.fE;
var __webpack_exports__prettyFormat = dom_esm.Yc;
var __webpack_exports__queries = dom_esm.Pq;
var __webpack_exports__queryAllByAltText = dom_esm.j7;
var __webpack_exports__queryAllByAttribute = dom_esm.tc;
var __webpack_exports__queryAllByDisplayValue = dom_esm.aM;
var __webpack_exports__queryAllByLabelText = dom_esm.s9;
var __webpack_exports__queryAllByPlaceholderText = dom_esm.H0;
var __webpack_exports__queryAllByRole = dom_esm.h3;
var __webpack_exports__queryAllByTestId = dom_esm.wY;
var __webpack_exports__queryAllByText = dom_esm.MJ;
var __webpack_exports__queryAllByTitle = dom_esm.tl;
var __webpack_exports__queryByAltText = dom_esm.Uk;
var __webpack_exports__queryByAttribute = dom_esm.Oj;
var __webpack_exports__queryByDisplayValue = dom_esm.V;
var __webpack_exports__queryByLabelText = dom_esm.LM;
var __webpack_exports__queryByPlaceholderText = dom_esm.uq;
var __webpack_exports__queryByRole = dom_esm.AS;
var __webpack_exports__queryByTestId = dom_esm.P8;
var __webpack_exports__queryByText = dom_esm.D3;
var __webpack_exports__queryByTitle = dom_esm.Eh;
var __webpack_exports__queryHelpers = dom_esm.sd;
var __webpack_exports__screen = dom_esm.nj;
var __webpack_exports__waitFor = dom_esm.fm;
var __webpack_exports__waitForElementToBeRemoved = dom_esm.n8;
var __webpack_exports__within = dom_esm.ux;
var __webpack_exports__wrapAllByQueryWithSuggestion = dom_esm.Aq;
var __webpack_exports__wrapSingleQueryWithSuggestion = dom_esm.v4;
export { act, cleanup, fireEvent, pure_render as render, renderHook, waitSchedule, __webpack_exports__buildQueries as buildQueries, __webpack_exports__configure as configure, __webpack_exports__createEvent as createEvent, __webpack_exports__findAllByAltText as findAllByAltText, __webpack_exports__findAllByDisplayValue as findAllByDisplayValue, __webpack_exports__findAllByLabelText as findAllByLabelText, __webpack_exports__findAllByPlaceholderText as findAllByPlaceholderText, __webpack_exports__findAllByRole as findAllByRole, __webpack_exports__findAllByTestId as findAllByTestId, __webpack_exports__findAllByText as findAllByText, __webpack_exports__findAllByTitle as findAllByTitle, __webpack_exports__findByAltText as findByAltText, __webpack_exports__findByDisplayValue as findByDisplayValue, __webpack_exports__findByLabelText as findByLabelText, __webpack_exports__findByPlaceholderText as findByPlaceholderText, __webpack_exports__findByRole as findByRole, __webpack_exports__findByTestId as findByTestId, __webpack_exports__findByText as findByText, __webpack_exports__findByTitle as findByTitle, __webpack_exports__getAllByAltText as getAllByAltText, __webpack_exports__getAllByDisplayValue as getAllByDisplayValue, __webpack_exports__getAllByLabelText as getAllByLabelText, __webpack_exports__getAllByPlaceholderText as getAllByPlaceholderText, __webpack_exports__getAllByRole as getAllByRole, __webpack_exports__getAllByTestId as getAllByTestId, __webpack_exports__getAllByText as getAllByText, __webpack_exports__getAllByTitle as getAllByTitle, __webpack_exports__getByAltText as getByAltText, __webpack_exports__getByDisplayValue as getByDisplayValue, __webpack_exports__getByLabelText as getByLabelText, __webpack_exports__getByPlaceholderText as getByPlaceholderText, __webpack_exports__getByRole as getByRole, __webpack_exports__getByTestId as getByTestId, __webpack_exports__getByText as getByText, __webpack_exports__getByTitle as getByTitle, __webpack_exports__getConfig as getConfig, __webpack_exports__getDefaultNormalizer as getDefaultNormalizer, __webpack_exports__getElementError as getElementError, __webpack_exports__getMultipleElementsFoundError as getMultipleElementsFoundError, __webpack_exports__getNodeText as getNodeText, __webpack_exports__getQueriesForElement as getQueriesForElement, __webpack_exports__getRoles as getRoles, __webpack_exports__getSuggestedQuery as getSuggestedQuery, __webpack_exports__isInaccessible as isInaccessible, __webpack_exports__logDOM as logDOM, __webpack_exports__logRoles as logRoles, __webpack_exports__makeFindQuery as makeFindQuery, __webpack_exports__makeGetAllQuery as makeGetAllQuery, __webpack_exports__makeSingleQuery as makeSingleQuery, __webpack_exports__prettyDOM as prettyDOM, __webpack_exports__prettyFormat as prettyFormat, __webpack_exports__queries as queries, __webpack_exports__queryAllByAltText as queryAllByAltText, __webpack_exports__queryAllByAttribute as queryAllByAttribute, __webpack_exports__queryAllByDisplayValue as queryAllByDisplayValue, __webpack_exports__queryAllByLabelText as queryAllByLabelText, __webpack_exports__queryAllByPlaceholderText as queryAllByPlaceholderText, __webpack_exports__queryAllByRole as queryAllByRole, __webpack_exports__queryAllByTestId as queryAllByTestId, __webpack_exports__queryAllByText as queryAllByText, __webpack_exports__queryAllByTitle as queryAllByTitle, __webpack_exports__queryByAltText as queryByAltText, __webpack_exports__queryByAttribute as queryByAttribute, __webpack_exports__queryByDisplayValue as queryByDisplayValue, __webpack_exports__queryByLabelText as queryByLabelText, __webpack_exports__queryByPlaceholderText as queryByPlaceholderText, __webpack_exports__queryByRole as queryByRole, __webpack_exports__queryByTestId as queryByTestId, __webpack_exports__queryByText as queryByText, __webpack_exports__queryByTitle as queryByTitle, __webpack_exports__queryHelpers as queryHelpers, __webpack_exports__screen as screen, __webpack_exports__waitFor as waitFor, __webpack_exports__waitForElementToBeRemoved as waitForElementToBeRemoved, __webpack_exports__within as within, __webpack_exports__wrapAllByQueryWithSuggestion as wrapAllByQueryWithSuggestion, __webpack_exports__wrapSingleQueryWithSuggestion as wrapSingleQueryWithSuggestion };
