let lastId = 0;
/**
 * transform args of `runOnBackground()`.
 *
 * @internal
 */
export function transformToWorklet(obj) {
    const id = ++lastId;
    if (typeof obj !== 'function') {
        // We save the error message in the object, so that we can throw it later when the function is called on the main thread.
        return {
            _jsFnId: id,
            _error: `Argument of runOnBackground should be a function, but got [${typeof obj}] instead`,
        };
    }
    obj.toJSON ??= () => '[BackgroundFunction]';
    return {
        _jsFnId: id,
        _fn: obj,
    };
}
//# sourceMappingURL=transformToWorklet.js.map