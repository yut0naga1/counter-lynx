export var AnimationOperation;
(function (AnimationOperation) {
    AnimationOperation[AnimationOperation["START"] = 0] = "START";
    AnimationOperation[AnimationOperation["PLAY"] = 1] = "PLAY";
    AnimationOperation[AnimationOperation["PAUSE"] = 2] = "PAUSE";
    AnimationOperation[AnimationOperation["CANCEL"] = 3] = "CANCEL";
})(AnimationOperation || (AnimationOperation = {}));
export class Animation {
    static count = 0;
    effect;
    id;
    constructor(effect) {
        this.effect = effect;
        this.id = '__lynx-inner-js-animation-' + Animation.count++;
        this.start();
    }
    cancel() {
        // @ts-expect-error accessing private member 'element'
        return __ElementAnimate(this.effect.target.element, [AnimationOperation.CANCEL, this.id]);
    }
    pause() {
        // @ts-expect-error accessing private member 'element'
        return __ElementAnimate(this.effect.target.element, [AnimationOperation.PAUSE, this.id]);
    }
    play() {
        // @ts-expect-error accessing private member 'element'
        return __ElementAnimate(this.effect.target.element, [AnimationOperation.PLAY, this.id]);
    }
    start() {
        // @ts-expect-error accessing private member 'element'
        return __ElementAnimate(this.effect.target.element, [
            AnimationOperation.START,
            this.id,
            this.effect.keyframes,
            this.effect.options,
        ]);
    }
}
//# sourceMappingURL=animation.js.map