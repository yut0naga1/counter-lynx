import type { Compiler } from 'webpack';
/**
 * The options for {@link ReactRefreshWebpackPlugin}.
 *
 * @public
 */
export interface ReactRefreshWebpackPluginOptions {
}
/**
 * ReactRefreshWebpackPlugin allows using fast refresh in ReactLynx.
 *
 * @example
 * ```js
 * // webpack.config.js
 * import { ReactRefreshWebpackPlugin } from '@lynx-js/react-refresh-webpack-plugin'
 * export default {
 *   plugins: [new ReactRefreshWebpackPlugin()],
 * }
 * ```
 *
 * @public
 */
export declare class ReactRefreshWebpackPlugin {
    #private;
    /**
     * @param options - The options for react refresh.
     */
    constructor(options?: ReactRefreshWebpackPluginOptions | undefined);
    /**
     * The loader for react refresh.
     *
     * @remarks
     * Please note that the runtime of react should be ignored. See the example below:
     *
     * @example
     * ```js
     * // webpack.config.js
     * import { ReactRefreshWebpackPlugin } from '@lynx-js/react-refresh-webpack-plugin'
     * import { ReactWebpackPlugin } from '@lynx-js/react-webpack-plugin'
     *
     * export default {
     *   module: {
     *     rules: [
     *       {
     *         issueLayer: ReactWebpackPlugin.LAYERS.BACKGROUND,
     *         test: /\.[jt]sx?$/,
     *         exclude: [
     *           /node_modules/,
     *           /@lynx-js\/react/,
     *           ReactRefreshWebpackPlugin.loader,
     *         ],
     *         use: [ReactRefreshWebpackPlugin.loader],
     *       },
     *     ],
     *   },
     *   plugins: [new ReactRefreshWebpackPlugin()],
     * }
     * ```
     */
    static loader: string;
    /**
     * The entry point of a webpack plugin.
     * @param compiler - the webpack compiler
     */
    apply(compiler: Compiler): void;
}
