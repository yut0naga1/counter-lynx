import type { Compiler } from 'webpack';
/**
 * The options for {@link LynxCacheEventsPlugin}
 *
 * @public
 */
export interface LynxCacheEventsPluginOptions {
    /**
     * The transformer function to modify the setup list.
     *
     * @example
     * ```js
     * // webpack.config.js
     * import { LynxCacheEventsPlugin } from '@lynx-js/cache-events-webpack-plugin'
     *
     * const config = {
     *   plugins: [
     *     new LynxCacheEventsPlugin({
     *       setupListTransformer: (setupList) => {
     *         setupList.push(
     *           `{
     *             name: 'customCacheEvent',
     *             setup: () => {
     *               console.log('customCacheEvent setup');
     *               return () => {
     *                 console.log('customCacheEvent teardown');
     *               }
     *             }
     *           }`
     *         )
     *         return setupList;
     *       },
     *     }),
     *   ],
     * }
     * ```
     *
     * @public
     */
    setupListTransformer?: (setupList: string[]) => string[];
}
/**
 * A webpack plugin that cache Lynx native events until the BTS chunk is fully loaded, and replay them when the BTS chunk is ready.
 *
 * @public
 */
export declare class LynxCacheEventsPlugin {
    protected options?: LynxCacheEventsPluginOptions | undefined;
    constructor(options?: LynxCacheEventsPluginOptions | undefined);
    /**
     * `defaultOptions` is the default options that the {@link LynxCacheEventsPlugin} uses.
     *
     * @example
     * `defaultOptions` can be used to change part of the option and keep others as the default value.
     *
     * ```js
     * // webpack.config.js
     * import { LynxCacheEventsPlugin } from '@lynx-js/cache-events-webpack-plugin'
     * export default {
     *   plugins: [
     *     new LynxCacheEventsPlugin({
     *       ...LynxCacheEventsPlugin.defaultOptions,
     *       setupListTransformer: (setupList) => setupList,
     *     }),
     *   ],
     * }
     * ```
     *
     * @public
     */
    static defaultOptions: Readonly<Required<LynxCacheEventsPluginOptions>>;
    /**
     * The entry point of a webpack plugin.
     * @param compiler - the webpack compiler
     */
    apply(compiler: Compiler): void;
}
export declare class LynxCacheEventsPluginImpl {
    name: string;
    protected options: Required<LynxCacheEventsPluginOptions>;
    static chunkLoadingValue: string;
    constructor(compiler: Compiler, options: Required<LynxCacheEventsPluginOptions>);
}
