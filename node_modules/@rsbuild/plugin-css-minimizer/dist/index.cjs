"use strict";
var __webpack_require__ = {};
(()=>{
    __webpack_require__.n = (module)=>{
        var getter = module && module.__esModule ? ()=>module['default'] : ()=>module;
        __webpack_require__.d(getter, {
            a: getter
        });
        return getter;
    };
})();
(()=>{
    __webpack_require__.d = (exports1, definition)=>{
        for(var key in definition)if (__webpack_require__.o(definition, key) && !__webpack_require__.o(exports1, key)) Object.defineProperty(exports1, key, {
            enumerable: true,
            get: definition[key]
        });
    };
})();
(()=>{
    __webpack_require__.o = (obj, prop)=>Object.prototype.hasOwnProperty.call(obj, prop);
})();
(()=>{
    __webpack_require__.r = (exports1)=>{
        if ('undefined' != typeof Symbol && Symbol.toStringTag) Object.defineProperty(exports1, Symbol.toStringTag, {
            value: 'Module'
        });
        Object.defineProperty(exports1, '__esModule', {
            value: true
        });
    };
})();
var __webpack_exports__ = {};
__webpack_require__.r(__webpack_exports__);
__webpack_require__.d(__webpack_exports__, {
    pluginCssMinimizer: ()=>pluginCssMinimizer,
    PLUGIN_CSS_MINIMIZER_NAME: ()=>PLUGIN_CSS_MINIMIZER_NAME,
    applyCSSMinimizer: ()=>applyCSSMinimizer,
    CssMinimizerWebpackPlugin: ()=>external_css_minimizer_webpack_plugin_default()
});
const external_css_minimizer_webpack_plugin_namespaceObject = require("css-minimizer-webpack-plugin");
var external_css_minimizer_webpack_plugin_default = /*#__PURE__*/ __webpack_require__.n(external_css_minimizer_webpack_plugin_namespaceObject);
const external_reduce_configs_namespaceObject = require("reduce-configs");
const getCssnanoDefaultOptions = ()=>({
        preset: [
            'default',
            {
                mergeLonghand: false
            }
        ]
    });
function applyCSSMinimizer(chain, CHAIN_ID, options = {}) {
    const mergedOptions = (0, external_reduce_configs_namespaceObject.reduceConfigs)({
        initial: {
            minify: external_css_minimizer_webpack_plugin_default().cssnanoMinify,
            minimizerOptions: getCssnanoDefaultOptions()
        },
        config: options.pluginOptions
    });
    chain.optimization.minimizer(CHAIN_ID.MINIMIZER.CSS).use(external_css_minimizer_webpack_plugin_default(), [
        mergedOptions
    ]).end();
}
const PLUGIN_CSS_MINIMIZER_NAME = 'rsbuild:css-minimizer';
const pluginCssMinimizer = (options)=>({
        name: PLUGIN_CSS_MINIMIZER_NAME,
        setup (api) {
            api.modifyBundlerChain(async (chain, { CHAIN_ID, environment, isProd })=>{
                const { config } = environment;
                const { minify } = config.output;
                if (isProd && (true === minify || 'object' == typeof minify && minify.css)) applyCSSMinimizer(chain, CHAIN_ID, options);
            });
        }
    });
exports.CssMinimizerWebpackPlugin = __webpack_exports__.CssMinimizerWebpackPlugin;
exports.PLUGIN_CSS_MINIMIZER_NAME = __webpack_exports__.PLUGIN_CSS_MINIMIZER_NAME;
exports.applyCSSMinimizer = __webpack_exports__.applyCSSMinimizer;
exports.pluginCssMinimizer = __webpack_exports__.pluginCssMinimizer;
for(var __webpack_i__ in __webpack_exports__)if (-1 === [
    "CssMinimizerWebpackPlugin",
    "PLUGIN_CSS_MINIMIZER_NAME",
    "applyCSSMinimizer",
    "pluginCssMinimizer"
].indexOf(__webpack_i__)) exports[__webpack_i__] = __webpack_exports__[__webpack_i__];
Object.defineProperty(exports, '__esModule', {
    value: true
});
