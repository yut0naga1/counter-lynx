import * as __WEBPACK_EXTERNAL_MODULE_css_minimizer_webpack_plugin_07bf85be__ from "css-minimizer-webpack-plugin";
import * as __WEBPACK_EXTERNAL_MODULE_reduce_configs_02786df6__ from "reduce-configs";
const getCssnanoDefaultOptions = ()=>({
        preset: [
            'default',
            {
                mergeLonghand: false
            }
        ]
    });
function applyCSSMinimizer(chain, CHAIN_ID, options = {}) {
    const mergedOptions = (0, __WEBPACK_EXTERNAL_MODULE_reduce_configs_02786df6__.reduceConfigs)({
        initial: {
            minify: __WEBPACK_EXTERNAL_MODULE_css_minimizer_webpack_plugin_07bf85be__["default"].cssnanoMinify,
            minimizerOptions: getCssnanoDefaultOptions()
        },
        config: options.pluginOptions
    });
    chain.optimization.minimizer(CHAIN_ID.MINIMIZER.CSS).use(__WEBPACK_EXTERNAL_MODULE_css_minimizer_webpack_plugin_07bf85be__["default"], [
        mergedOptions
    ]).end();
}
const PLUGIN_CSS_MINIMIZER_NAME = 'rsbuild:css-minimizer';
const pluginCssMinimizer = (options)=>({
        name: PLUGIN_CSS_MINIMIZER_NAME,
        setup (api) {
            api.modifyBundlerChain(async (chain, { CHAIN_ID, environment, isProd })=>{
                const { config } = environment;
                const { minify } = config.output;
                if (isProd && (true === minify || 'object' == typeof minify && minify.css)) applyCSSMinimizer(chain, CHAIN_ID, options);
            });
        }
    });
var __webpack_exports__CssMinimizerWebpackPlugin = __WEBPACK_EXTERNAL_MODULE_css_minimizer_webpack_plugin_07bf85be__["default"];
export { PLUGIN_CSS_MINIMIZER_NAME, applyCSSMinimizer, pluginCssMinimizer, __webpack_exports__CssMinimizerWebpackPlugin as CssMinimizerWebpackPlugin };
