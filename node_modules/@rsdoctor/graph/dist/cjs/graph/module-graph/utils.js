"use strict";
var __webpack_require__ = {};
(()=>{
    __webpack_require__.d = (exports1, definition)=>{
        for(var key in definition)if (__webpack_require__.o(definition, key) && !__webpack_require__.o(exports1, key)) Object.defineProperty(exports1, key, {
            enumerable: true,
            get: definition[key]
        });
    };
})();
(()=>{
    __webpack_require__.o = (obj, prop)=>Object.prototype.hasOwnProperty.call(obj, prop);
})();
(()=>{
    __webpack_require__.r = (exports1)=>{
        if ('undefined' != typeof Symbol && Symbol.toStringTag) Object.defineProperty(exports1, Symbol.toStringTag, {
            value: 'Module'
        });
        Object.defineProperty(exports1, '__esModule', {
            value: true
        });
    };
})();
var __webpack_exports__ = {};
__webpack_require__.r(__webpack_exports__);
__webpack_require__.d(__webpack_exports__, {
    isSamePosition: ()=>isSamePosition,
    getModuleName: ()=>getModuleName,
    isSameRange: ()=>isSameRange
});
const common_namespaceObject = require("@rsdoctor/utils/common");
function isSamePosition(po1, po2) {
    return po1.line === po2.line && po1.column === po2.column;
}
function isSameRange(po1, po2) {
    if (!isSamePosition(po1.start, po2.start)) return false;
    if (!common_namespaceObject.Lodash.isNil(po1.end) && !common_namespaceObject.Lodash.isNil(po2.end)) return isSamePosition(po1.end, po2.end);
    return common_namespaceObject.Lodash.isUndefined(po1.end) && common_namespaceObject.Lodash.isUndefined(po2.end);
}
const NAME_WITH_LOADERS = /!/;
const NAME_WITH_MODULES = /\s\+\s\d*\smodules$/;
const INVALID_CSS_PREFIX = /^css\s.*node_modules(?!\/)/;
function getModuleName(name) {
    if (!name) return '';
    if (NAME_WITH_LOADERS.test(name)) {
        const normalizedName = common_namespaceObject.Lodash.last(name.split(NAME_WITH_LOADERS));
        if (null == normalizedName ? void 0 : normalizedName.trim()) return normalizedName;
    }
    if (NAME_WITH_MODULES.test(name)) return name.replace(NAME_WITH_MODULES, '');
    if (INVALID_CSS_PREFIX.test(name)) return name.replace(INVALID_CSS_PREFIX, '');
    return name;
}
exports.getModuleName = __webpack_exports__.getModuleName;
exports.isSamePosition = __webpack_exports__.isSamePosition;
exports.isSameRange = __webpack_exports__.isSameRange;
for(var __webpack_i__ in __webpack_exports__)if (-1 === [
    "getModuleName",
    "isSamePosition",
    "isSameRange"
].indexOf(__webpack_i__)) exports[__webpack_i__] = __webpack_exports__[__webpack_i__];
Object.defineProperty(exports, '__esModule', {
    value: true
});
