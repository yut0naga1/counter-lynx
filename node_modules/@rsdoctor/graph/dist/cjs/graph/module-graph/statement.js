"use strict";
var __webpack_require__ = {};
(()=>{
    __webpack_require__.d = (exports1, definition)=>{
        for(var key in definition)if (__webpack_require__.o(definition, key) && !__webpack_require__.o(exports1, key)) Object.defineProperty(exports1, key, {
            enumerable: true,
            get: definition[key]
        });
    };
})();
(()=>{
    __webpack_require__.o = (obj, prop)=>Object.prototype.hasOwnProperty.call(obj, prop);
})();
(()=>{
    __webpack_require__.r = (exports1)=>{
        if ('undefined' != typeof Symbol && Symbol.toStringTag) Object.defineProperty(exports1, Symbol.toStringTag, {
            value: 'Module'
        });
        Object.defineProperty(exports1, '__esModule', {
            value: true
        });
    };
})();
var __webpack_exports__ = {};
__webpack_require__.r(__webpack_exports__);
__webpack_require__.d(__webpack_exports__, {
    Statement: ()=>Statement
});
const external_utils_js_namespaceObject = require("./utils.js");
class Statement {
    static getDefaultStatement(module) {
        const defaultPosition = {
            line: 1,
            column: 0
        };
        const defaultRange = {
            start: {
                ...defaultPosition
            },
            end: {
                ...defaultPosition
            }
        };
        return new Statement(module, {
            source: {
                ...defaultRange
            },
            transformed: {
                ...defaultRange
            }
        });
    }
    isSame(statement) {
        return this.module.id === statement.module.id && (0, external_utils_js_namespaceObject.isSameRange)(this.position.transformed, statement.position.transformed);
    }
    getSourcePosition() {
        const { module, position } = this;
        if (position.source) return position.source;
        if (module.getSourceMap()) {
            position.source = module.getSourceRange(position.transformed);
            return position.source;
        }
    }
    getLineCode() {
        const useSource = this.module.isPreferSource && this.position.source;
        const sourceCode = this.module.getSource();
        const source = useSource ? sourceCode.source : sourceCode.transformed;
        const line = useSource ? this.position.source.start.line : this.position.transformed.start.line;
        if ('number' == typeof line) return source.split('\n')[line - 1];
    }
    toData() {
        const position = {
            transformed: this.position.transformed
        };
        if (this.position.source) position.source = this.position.source;
        return {
            position,
            module: this.module.id
        };
    }
    constructor(module, position){
        this.module = module;
        this.position = position;
    }
}
exports.Statement = __webpack_exports__.Statement;
for(var __webpack_i__ in __webpack_exports__)if (-1 === [
    "Statement"
].indexOf(__webpack_i__)) exports[__webpack_i__] = __webpack_exports__[__webpack_i__];
Object.defineProperty(exports, '__esModule', {
    value: true
});
