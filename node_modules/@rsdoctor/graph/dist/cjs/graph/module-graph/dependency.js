"use strict";
var __webpack_require__ = {};
(()=>{
    __webpack_require__.d = (exports1, definition)=>{
        for(var key in definition)if (__webpack_require__.o(definition, key) && !__webpack_require__.o(exports1, key)) Object.defineProperty(exports1, key, {
            enumerable: true,
            get: definition[key]
        });
    };
})();
(()=>{
    __webpack_require__.o = (obj, prop)=>Object.prototype.hasOwnProperty.call(obj, prop);
})();
(()=>{
    __webpack_require__.r = (exports1)=>{
        if ('undefined' != typeof Symbol && Symbol.toStringTag) Object.defineProperty(exports1, Symbol.toStringTag, {
            value: 'Module'
        });
        Object.defineProperty(exports1, '__esModule', {
            value: true
        });
    };
})();
var __webpack_exports__ = {};
__webpack_require__.r(__webpack_exports__);
__webpack_require__.d(__webpack_exports__, {
    Dependency: ()=>Dependency
});
const types_namespaceObject = require("@rsdoctor/types");
let dependency_id = 1;
class Dependency {
    static init() {
        dependency_id = 1;
    }
    get resolvedRequest() {
        return this.dependency.path;
    }
    get dependency() {
        return this.originDependency.rootModule ?? this.originDependency;
    }
    get originDependency() {
        return this._originDependency;
    }
    get kindString() {
        return types_namespaceObject.SDK.DependencyKind[this.kind];
    }
    get resolveConcatenationModule() {
        return this.dependency.kind === types_namespaceObject.SDK.ModuleKind.Concatenation;
    }
    isSameWithoutStatements(dep) {
        return this.request === dep.request && this.kind === dep.kind && this.module.id === dep.module.id && this.dependency.id === dep.dependency.id;
    }
    addStatement(statement) {
        if (!this.hasStatement(statement)) this.statements.push(statement);
    }
    hasStatement(statement) {
        return this.statements.some((item)=>item.isSame(statement));
    }
    setBuildMeta(data) {
        this.meta = {
            ...this.meta,
            ...data
        };
    }
    toData() {
        return {
            id: this.id,
            request: this.request,
            resolvedRequest: this.resolvedRequest,
            kind: this.kind,
            module: this.module.id,
            dependency: this.dependency.id,
            originDependency: this.originDependency.id,
            statements: this.statements.map((item)=>item.toData())
        };
    }
    setId(id) {
        this.id = id;
    }
    constructor(request, module, dependency, kind, statements){
        this.statements = [];
        this.meta = {
            exportsType: 'default-with-named'
        };
        this.id = dependency_id++;
        this.request = request;
        this.module = module;
        this._originDependency = dependency;
        this.kind = kind;
        this.statements = statements ?? [];
    }
}
Dependency.kind = types_namespaceObject.SDK.DependencyKind;
exports.Dependency = __webpack_exports__.Dependency;
for(var __webpack_i__ in __webpack_exports__)if (-1 === [
    "Dependency"
].indexOf(__webpack_i__)) exports[__webpack_i__] = __webpack_exports__[__webpack_i__];
Object.defineProperty(exports, '__esModule', {
    value: true
});
