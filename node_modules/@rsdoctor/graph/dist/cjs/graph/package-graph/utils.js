"use strict";
var __webpack_require__ = {};
(()=>{
    __webpack_require__.d = (exports1, definition)=>{
        for(var key in definition)if (__webpack_require__.o(definition, key) && !__webpack_require__.o(exports1, key)) Object.defineProperty(exports1, key, {
            enumerable: true,
            get: definition[key]
        });
    };
})();
(()=>{
    __webpack_require__.o = (obj, prop)=>Object.prototype.hasOwnProperty.call(obj, prop);
})();
(()=>{
    __webpack_require__.r = (exports1)=>{
        if ('undefined' != typeof Symbol && Symbol.toStringTag) Object.defineProperty(exports1, Symbol.toStringTag, {
            value: 'Module'
        });
        Object.defineProperty(exports1, '__esModule', {
            value: true
        });
    };
})();
var __webpack_exports__ = {};
__webpack_require__.r(__webpack_exports__);
__webpack_require__.d(__webpack_exports__, {
    isPackagePath: ()=>isPackagePath,
    readPackageJson: ()=>readPackageJson
});
const external_path_namespaceObject = require("path");
const common_namespaceObject = require("@rsdoctor/utils/common");
function isPackagePath(path) {
    return /(^|[/\\])node_modules[/\\]/.test(path);
}
const readPackageJson = (file, readFile)=>{
    let result;
    let current = file;
    while('/' !== current && !result){
        if ((0, external_path_namespaceObject.dirname)(current) === current) break;
        current = (0, external_path_namespaceObject.dirname)(current);
        if (readFile) result = readFile((0, external_path_namespaceObject.join)(current, 'package.json'));
        if (readFile) {
            if (!(null == result ? void 0 : result.name)) result = void 0;
        } else result = common_namespaceObject.Package.getPackageMetaFromModulePath(file);
    }
    if (!result) return;
    if (readFile && (!result.name || !result.version)) return readPackageJson((0, external_path_namespaceObject.dirname)(current), readFile);
    return {
        ...result,
        root: current
    };
};
exports.isPackagePath = __webpack_exports__.isPackagePath;
exports.readPackageJson = __webpack_exports__.readPackageJson;
for(var __webpack_i__ in __webpack_exports__)if (-1 === [
    "isPackagePath",
    "readPackageJson"
].indexOf(__webpack_i__)) exports[__webpack_i__] = __webpack_exports__[__webpack_i__];
Object.defineProperty(exports, '__esModule', {
    value: true
});
