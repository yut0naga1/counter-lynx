"use strict";
var __webpack_require__ = {};
(()=>{
    __webpack_require__.d = (exports1, definition)=>{
        for(var key in definition)if (__webpack_require__.o(definition, key) && !__webpack_require__.o(exports1, key)) Object.defineProperty(exports1, key, {
            enumerable: true,
            get: definition[key]
        });
    };
})();
(()=>{
    __webpack_require__.o = (obj, prop)=>Object.prototype.hasOwnProperty.call(obj, prop);
})();
(()=>{
    __webpack_require__.r = (exports1)=>{
        if ('undefined' != typeof Symbol && Symbol.toStringTag) Object.defineProperty(exports1, Symbol.toStringTag, {
            value: 'Module'
        });
        Object.defineProperty(exports1, '__esModule', {
            value: true
        });
    };
})();
var __webpack_exports__ = {};
__webpack_require__.r(__webpack_exports__);
__webpack_require__.d(__webpack_exports__, {
    Chunk: ()=>Chunk
});
class Chunk {
    isEntry() {
        return this.entry;
    }
    isChunkEntryModule(module) {
        return module.isEntry || module.getImported().every((item)=>!this.hasModule(item));
    }
    hasModule(module) {
        return this._modules.includes(module);
    }
    addModule(module) {
        if (!this.hasModule(module)) {
            this._modules.push(module);
            module.addChunk(this);
        }
    }
    addAsset(asset) {
        this._assets.push(asset);
    }
    addModules(modules) {
        modules.forEach((module)=>{
            if (!this.hasModule(module)) {
                this._modules.push(module);
                module.addChunk(this);
            }
        });
    }
    addDependency(dep) {
        if (!this._dependencies.includes(dep)) this._dependencies.push(dep);
    }
    addImported(imported) {
        if (!this._imported.includes(imported)) this._imported.push(imported);
    }
    getAssets() {
        return this._assets.slice();
    }
    getModules() {
        return this._modules.slice();
    }
    getDependencies() {
        return this._dependencies.slice();
    }
    getImported() {
        return this._imported.slice();
    }
    setParsedSize(parsedSize) {
        this._parsedSize = parsedSize;
    }
    toData() {
        return {
            id: this.id,
            name: this.name,
            initial: this.initial,
            size: this.size,
            parsedSize: this._parsedSize || 0,
            entry: this.isEntry(),
            assets: this._assets.map(({ path })=>path),
            modules: this._modules.map(({ id })=>id),
            dependencies: this._dependencies.map(({ id })=>id),
            imported: this._imported.map(({ id })=>id)
        };
    }
    setDependencies(dependencies) {
        this._dependencies = dependencies;
    }
    setImported(imported) {
        this._imported = imported;
    }
    setModules(modules) {
        this._modules = modules;
    }
    setAssets(assets) {
        this._assets = assets;
    }
    constructor(id, name, size, initial, entry){
        this._assets = [];
        this._modules = [];
        this._dependencies = [];
        this._imported = [];
        this.id = id;
        this.name = name;
        this.size = size;
        this.initial = initial;
        this.entry = entry;
    }
}
exports.Chunk = __webpack_exports__.Chunk;
for(var __webpack_i__ in __webpack_exports__)if (-1 === [
    "Chunk"
].indexOf(__webpack_i__)) exports[__webpack_i__] = __webpack_exports__[__webpack_i__];
Object.defineProperty(exports, '__esModule', {
    value: true
});
