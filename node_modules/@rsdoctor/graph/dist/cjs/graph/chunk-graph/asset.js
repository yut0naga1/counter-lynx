"use strict";
var __webpack_require__ = {};
(()=>{
    __webpack_require__.d = (exports1, definition)=>{
        for(var key in definition)if (__webpack_require__.o(definition, key) && !__webpack_require__.o(exports1, key)) Object.defineProperty(exports1, key, {
            enumerable: true,
            get: definition[key]
        });
    };
})();
(()=>{
    __webpack_require__.o = (obj, prop)=>Object.prototype.hasOwnProperty.call(obj, prop);
})();
(()=>{
    __webpack_require__.r = (exports1)=>{
        if ('undefined' != typeof Symbol && Symbol.toStringTag) Object.defineProperty(exports1, Symbol.toStringTag, {
            value: 'Module'
        });
        Object.defineProperty(exports1, '__esModule', {
            value: true
        });
    };
})();
var __webpack_exports__ = {};
__webpack_require__.r(__webpack_exports__);
__webpack_require__.d(__webpack_exports__, {
    Asset: ()=>Asset
});
const types_namespaceObject = require("@rsdoctor/types");
const external_node_zlib_namespaceObject = require("node:zlib");
let asset_id = 1;
class Asset {
    static init() {
        asset_id = 1;
    }
    toData(types) {
        var _this_chunks;
        return {
            id: this.id,
            path: this.path,
            size: this.size,
            gzipSize: this.gzipSize,
            chunks: null == (_this_chunks = this.chunks) ? void 0 : _this_chunks.map((ck)=>ck.id),
            content: types === types_namespaceObject.SDK.ToDataType.NoSourceAndAssets || types === types_namespaceObject.SDK.ToDataType.NoCode ? '' : this.content
        };
    }
    setChunks(chunks) {
        this.chunks = chunks;
    }
    setId(id) {
        this.id = id;
    }
    setGzipSize(content) {
        this.gzipSize = (0, external_node_zlib_namespaceObject.gzipSync)(content, {
            level: 9
        }).length;
    }
    constructor(path, size, chunks, content){
        this.id = asset_id++;
        this.path = path;
        this.size = size;
        this.chunks = chunks;
        this.content = content;
    }
}
exports.Asset = __webpack_exports__.Asset;
for(var __webpack_i__ in __webpack_exports__)if (-1 === [
    "Asset"
].indexOf(__webpack_i__)) exports[__webpack_i__] = __webpack_exports__[__webpack_i__];
Object.defineProperty(exports, '__esModule', {
    value: true
});
