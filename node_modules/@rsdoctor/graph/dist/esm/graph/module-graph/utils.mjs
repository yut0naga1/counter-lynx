import { Lodash } from "@rsdoctor/utils/common";
function isSamePosition(po1, po2) {
    return po1.line === po2.line && po1.column === po2.column;
}
function isSameRange(po1, po2) {
    if (!isSamePosition(po1.start, po2.start)) return false;
    if (!Lodash.isNil(po1.end) && !Lodash.isNil(po2.end)) return isSamePosition(po1.end, po2.end);
    return Lodash.isUndefined(po1.end) && Lodash.isUndefined(po2.end);
}
const NAME_WITH_LOADERS = /!/;
const NAME_WITH_MODULES = /\s\+\s\d*\smodules$/;
const INVALID_CSS_PREFIX = /^css\s.*node_modules(?!\/)/;
function getModuleName(name) {
    if (!name) return '';
    if (NAME_WITH_LOADERS.test(name)) {
        const normalizedName = Lodash.last(name.split(NAME_WITH_LOADERS));
        if (null == normalizedName ? void 0 : normalizedName.trim()) return normalizedName;
    }
    if (NAME_WITH_MODULES.test(name)) return name.replace(NAME_WITH_MODULES, '');
    if (INVALID_CSS_PREFIX.test(name)) return name.replace(INVALID_CSS_PREFIX, '');
    return name;
}
export { getModuleName, isSamePosition, isSameRange };
