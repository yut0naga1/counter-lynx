import { SDK } from "@rsdoctor/types";
import { gzipSync } from "node:zlib";
let asset_id = 1;
class Asset {
    static init() {
        asset_id = 1;
    }
    toData(types) {
        var _this_chunks;
        return {
            id: this.id,
            path: this.path,
            size: this.size,
            gzipSize: this.gzipSize,
            chunks: null == (_this_chunks = this.chunks) ? void 0 : _this_chunks.map((ck)=>ck.id),
            content: types === SDK.ToDataType.NoSourceAndAssets || types === SDK.ToDataType.NoCode ? '' : this.content
        };
    }
    setChunks(chunks) {
        this.chunks = chunks;
    }
    setId(id) {
        this.id = id;
    }
    setGzipSize(content) {
        this.gzipSize = gzipSync(content, {
            level: 9
        }).length;
    }
    constructor(path, size, chunks, content){
        this.id = asset_id++;
        this.path = path;
        this.size = size;
        this.chunks = chunks;
        this.content = content;
    }
}
export { Asset };
