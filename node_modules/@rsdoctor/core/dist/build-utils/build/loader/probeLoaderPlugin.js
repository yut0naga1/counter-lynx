"use strict";
var __webpack_require__ = {};
(()=>{
    __webpack_require__.d = (exports1, definition)=>{
        for(var key in definition)if (__webpack_require__.o(definition, key) && !__webpack_require__.o(exports1, key)) Object.defineProperty(exports1, key, {
            enumerable: true,
            get: definition[key]
        });
    };
})();
(()=>{
    __webpack_require__.o = (obj, prop)=>Object.prototype.hasOwnProperty.call(obj, prop);
})();
(()=>{
    __webpack_require__.r = (exports1)=>{
        if ('undefined' != typeof Symbol && Symbol.toStringTag) Object.defineProperty(exports1, Symbol.toStringTag, {
            value: 'Module'
        });
        Object.defineProperty(exports1, '__esModule', {
            value: true
        });
    };
})();
var __webpack_exports__ = {};
__webpack_require__.r(__webpack_exports__);
__webpack_require__.d(__webpack_exports__, {
    ProbeLoaderPlugin: ()=>ProbeLoaderPlugin
});
const common_namespaceObject = require("@rsdoctor/utils/common");
const external_index_js_namespaceObject = require("../../index.js");
const external_index_js_namespaceObject_1 = require("../index.js");
const BuiltinLoaderName = 'builtin:swc-loader';
const BuiltinLightingCssName = 'builtin:lightningcss-loader';
const ESMLoaderFile = '.mjs';
class ProbeLoaderPlugin {
    apply(compiler) {
        compiler.hooks.beforeRun.tap({
            name: 'ProbeLoaderPlugin'
        }, ()=>{
            this.addProbeLoader(compiler);
        });
        compiler.hooks.watchRun.tap({
            name: 'ProbeLoaderPlugin'
        }, ()=>{
            this.addProbeLoader(compiler);
        });
    }
    addProbeLoader(compiler) {
        let rules = compiler.options.module.rules;
        if (common_namespaceObject.Loader.isVue(compiler)) {
            compiler.options.module.rules = external_index_js_namespaceObject_1.Utils.addProbeLoader2Rules(rules, compiler, (r)=>!!r.loader || 'string' == typeof r);
            return;
        }
        rules = external_index_js_namespaceObject_1.Utils.addProbeLoader2Rules(rules, compiler, (r)=>external_index_js_namespaceObject.Build.Utils.getLoaderNameMatch(r, BuiltinLoaderName, true));
        rules = external_index_js_namespaceObject_1.Utils.addProbeLoader2Rules(rules, compiler, (r)=>external_index_js_namespaceObject.Build.Utils.getLoaderNameMatch(r, BuiltinLightingCssName, true));
        compiler.options.module.rules = external_index_js_namespaceObject_1.Utils.addProbeLoader2Rules(rules, compiler, (r)=>external_index_js_namespaceObject.Build.Utils.getLoaderNameMatch(r, ESMLoaderFile, false) || external_index_js_namespaceObject.Build.Utils.isESMLoader(r));
    }
}
exports.ProbeLoaderPlugin = __webpack_exports__.ProbeLoaderPlugin;
for(var __webpack_i__ in __webpack_exports__)if (-1 === [
    "ProbeLoaderPlugin"
].indexOf(__webpack_i__)) exports[__webpack_i__] = __webpack_exports__[__webpack_i__];
Object.defineProperty(exports, '__esModule', {
    value: true
});
