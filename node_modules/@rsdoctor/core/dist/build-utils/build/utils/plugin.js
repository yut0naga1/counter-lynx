"use strict";
var __webpack_require__ = {};
(()=>{
    __webpack_require__.d = (exports1, definition)=>{
        for(var key in definition)if (__webpack_require__.o(definition, key) && !__webpack_require__.o(exports1, key)) Object.defineProperty(exports1, key, {
            enumerable: true,
            get: definition[key]
        });
    };
})();
(()=>{
    __webpack_require__.o = (obj, prop)=>Object.prototype.hasOwnProperty.call(obj, prop);
})();
(()=>{
    __webpack_require__.r = (exports1)=>{
        if ('undefined' != typeof Symbol && Symbol.toStringTag) Object.defineProperty(exports1, Symbol.toStringTag, {
            value: 'Module'
        });
        Object.defineProperty(exports1, '__esModule', {
            value: true
        });
    };
})();
var __webpack_exports__ = {};
__webpack_require__.r(__webpack_exports__);
__webpack_require__.d(__webpack_exports__, {
    interceptCompilationHooks: ()=>interceptCompilationHooks,
    interceptCompilerHooks: ()=>interceptCompilerHooks,
    shouldInterceptPluginHook: ()=>shouldInterceptPluginHook
});
const compatible_js_namespaceObject = require("../../common/module-graph/compatible.js");
function shouldInterceptPluginHook(hook) {
    if (hook && hook._fakeHook) return false;
    if ((null == hook ? void 0 : hook.isUsed) && 'function' == typeof hook.isUsed) return hook.isUsed();
    if ((null == hook ? void 0 : hook._map) && 0 === hook._map.size) return false;
    return true;
}
function interceptCompilerHooks(compiler, interceptor) {
    Object.keys(compiler.hooks).forEach((hook)=>{
        const v = compiler.hooks[hook];
        if (shouldInterceptPluginHook(v)) interceptor(hook, v, 'compiler');
    });
}
function interceptCompilationHooks(compilation, interceptor) {
    Object.keys(compilation.hooks).forEach((hook)=>{
        if ('normalModuleLoader' === hook && (0, compatible_js_namespaceObject.isWebpack5orRspack)(compilation)) return;
        const v = compilation.hooks[hook];
        if (shouldInterceptPluginHook(v)) interceptor(hook, v, 'compilation');
    });
}
exports.interceptCompilationHooks = __webpack_exports__.interceptCompilationHooks;
exports.interceptCompilerHooks = __webpack_exports__.interceptCompilerHooks;
exports.shouldInterceptPluginHook = __webpack_exports__.shouldInterceptPluginHook;
for(var __webpack_i__ in __webpack_exports__)if (-1 === [
    "interceptCompilationHooks",
    "interceptCompilerHooks",
    "shouldInterceptPluginHook"
].indexOf(__webpack_i__)) exports[__webpack_i__] = __webpack_exports__[__webpack_i__];
Object.defineProperty(exports, '__esModule', {
    value: true
});
