"use strict";
var __webpack_require__ = {};
(()=>{
    __webpack_require__.d = (exports1, definition)=>{
        for(var key in definition)if (__webpack_require__.o(definition, key) && !__webpack_require__.o(exports1, key)) Object.defineProperty(exports1, key, {
            enumerable: true,
            get: definition[key]
        });
    };
})();
(()=>{
    __webpack_require__.o = (obj, prop)=>Object.prototype.hasOwnProperty.call(obj, prop);
})();
(()=>{
    __webpack_require__.r = (exports1)=>{
        if ('undefined' != typeof Symbol && Symbol.toStringTag) Object.defineProperty(exports1, Symbol.toStringTag, {
            value: 'Module'
        });
        Object.defineProperty(exports1, '__esModule', {
            value: true
        });
    };
})();
var __webpack_exports__ = {};
__webpack_require__.r(__webpack_exports__);
__webpack_require__.d(__webpack_exports__, {
    hasSetEsModuleStatement: ()=>hasSetEsModuleStatement
});
const ruleUtils_namespaceObject = require("@rsdoctor/utils/ruleUtils");
const esmLabelStatement = ruleUtils_namespaceObject.parser.internal.parseExpressionAt('Object.defineProperty(exports, "__esModule", { value: true })', 0, {
    ecmaVersion: 6,
    ranges: false,
    locations: false,
    sourceType: "script"
});
function hasSetEsModuleStatement(program) {
    const expressions = program.body.filter(ruleUtils_namespaceObject.parser.asserts.isExpressionStatement).map((item)=>item.expression).filter(ruleUtils_namespaceObject.parser.asserts.isSimpleCallExpression);
    return expressions.some((exp)=>ruleUtils_namespaceObject.parser.utils.isSameSemantics(exp, esmLabelStatement));
}
exports.hasSetEsModuleStatement = __webpack_exports__.hasSetEsModuleStatement;
for(var __webpack_i__ in __webpack_exports__)if (-1 === [
    "hasSetEsModuleStatement"
].indexOf(__webpack_i__)) exports[__webpack_i__] = __webpack_exports__[__webpack_i__];
Object.defineProperty(exports, '__esModule', {
    value: true
});
