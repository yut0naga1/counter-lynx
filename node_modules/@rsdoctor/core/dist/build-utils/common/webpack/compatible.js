"use strict";
var __webpack_require__ = {};
(()=>{
    __webpack_require__.d = (exports1, definition)=>{
        for(var key in definition)if (__webpack_require__.o(definition, key) && !__webpack_require__.o(exports1, key)) Object.defineProperty(exports1, key, {
            enumerable: true,
            get: definition[key]
        });
    };
})();
(()=>{
    __webpack_require__.o = (obj, prop)=>Object.prototype.hasOwnProperty.call(obj, prop);
})();
(()=>{
    __webpack_require__.r = (exports1)=>{
        if ('undefined' != typeof Symbol && Symbol.toStringTag) Object.defineProperty(exports1, Symbol.toStringTag, {
            value: 'Module'
        });
        Object.defineProperty(exports1, '__esModule', {
            value: true
        });
    };
})();
var __webpack_exports__ = {};
__webpack_require__.r(__webpack_exports__);
__webpack_require__.d(__webpack_exports__, {
    isExternalModule: ()=>isExternalModule,
    getExportDependency: ()=>getExportDependency,
    isNormalModule: ()=>isNormalModule,
    getResolveRequest: ()=>getResolveRequest,
    getWebpackDependencyRequest: ()=>getWebpackDependencyRequest,
    getExportStatement: ()=>getExportStatement,
    getAllModules: ()=>getAllModules,
    getDependencyPosition: ()=>getDependencyPosition,
    getModuleSource: ()=>getModuleSource,
    getSdkDependencyByWebpackDependency: ()=>getSdkDependencyByWebpackDependency,
    getWebpackModuleId: ()=>getWebpackModuleId,
    getLastExportInfo: ()=>getLastExportInfo,
    getWebpackModulePath: ()=>getWebpackModulePath,
    getEntryModule: ()=>getEntryModule
});
const external_lodash_namespaceObject = require("lodash");
const graph_namespaceObject = require("@rsdoctor/graph");
function isNormalModule(mod) {
    return 'request' in mod && 'rawRequest' in mod && 'resource' in mod;
}
function getWebpackModuleId(mod) {
    return mod.identifier();
}
function getWebpackModulePath(mod) {
    var _mod_nameForCondition;
    return mod.resource ?? (null == (_mod_nameForCondition = mod.nameForCondition) ? void 0 : _mod_nameForCondition.call(mod)) ?? getWebpackModuleId(mod);
}
function getWebpackDependencyRequest(dep, module) {
    return dep.request ?? dep.userRequest ?? (null == module ? void 0 : module.rawRequest);
}
function getResolveRequest(dep, graph) {
    return getWebpackModulePath(graph.getResolvedModule(dep));
}
function isExternalModule(mod) {
    return Boolean(mod.externalType);
}
function getModuleSource(mod) {
    var _mod_originalSource, _mod_originalSource1;
    return isExternalModule(mod) ? '' : (null == (_mod_originalSource1 = mod.originalSource) ? void 0 : null == (_mod_originalSource = _mod_originalSource1.call(mod)) ? void 0 : _mod_originalSource.source().toString()) ?? '';
}
function getEntryModule(entryMap) {
    return Array.from(entryMap.values()).map((entry)=>entry.getRuntimeChunk()).map((chunk)=>chunk ? chunk.entryModule : null).filter(Boolean).map((mod)=>isNormalModule(mod) ? mod : mod.rootModule);
}
function getDependencyPosition(dep, module, getSource = true) {
    const { loc: depLoc } = dep;
    if (void 0 === depLoc || !('start' in depLoc)) return;
    const transformed = {
        start: {
            line: depLoc.start.line,
            column: depLoc.start.column
        },
        end: depLoc.end ? {
            line: depLoc.end.line,
            column: depLoc.end.column
        } : void 0
    };
    const statement = new graph_namespaceObject.Statement(module, {
        source: getSource ? module.getSourceRange(transformed) : void 0,
        transformed
    });
    return statement;
}
function getExportDependency(info, module) {
    let dep = module.dependencies.find((dep)=>dep.name === info.name && ('harmony export imported specifier' === dep.type || 'harmony export specifier' === dep.type));
    if (!dep && info._target && info._target.size > 0) dep = info._getMaxTarget().values().next().value.connection.dependency;
    return dep;
}
function getSdkDependencyByWebpackDependency(dep, module, graph) {
    const modulePath = getWebpackModulePath(module);
    const request = getWebpackDependencyRequest(dep);
    return graph.getDependencies().find((item)=>item.module.path === modulePath && item.request === request);
}
function getExportStatement(info, normalModule, graph) {
    const webpackDependency = getExportDependency(info, normalModule);
    if (!webpackDependency) return;
    const modulePath = getWebpackModulePath(normalModule);
    const request = getWebpackDependencyRequest(webpackDependency);
    const sdkDependency = graph.getDependencies().find((item)=>item.module.path === modulePath && item.request === request);
    if (sdkDependency && 1 === sdkDependency.statements.length) return sdkDependency.statements[0];
    const sdkModule = graph.getModuleByWebpackId(getWebpackModuleId(normalModule));
    if (sdkModule) return getDependencyPosition(webpackDependency, sdkModule);
}
function getLastExportInfo(info, webpackGraph) {
    const target = info.findTarget(webpackGraph, ()=>true);
    if (!target || !target.export) return;
    const exportsInfo = webpackGraph.getExportsInfo(target.module);
    const lastInfo = exportsInfo.getExportInfo(target.export[0]);
    return lastInfo;
}
function getAllModules(compilation) {
    const modules = [];
    for (const mod of compilation.modules){
        modules.push(...mod.modules ?? []);
        modules.push(mod);
    }
    return (0, external_lodash_namespaceObject.unionBy)(modules.filter((mod)=>!getWebpackModuleId(mod).startsWith('webpack/runtime')), (mod)=>getWebpackModuleId(mod));
}
exports.getAllModules = __webpack_exports__.getAllModules;
exports.getDependencyPosition = __webpack_exports__.getDependencyPosition;
exports.getEntryModule = __webpack_exports__.getEntryModule;
exports.getExportDependency = __webpack_exports__.getExportDependency;
exports.getExportStatement = __webpack_exports__.getExportStatement;
exports.getLastExportInfo = __webpack_exports__.getLastExportInfo;
exports.getModuleSource = __webpack_exports__.getModuleSource;
exports.getResolveRequest = __webpack_exports__.getResolveRequest;
exports.getSdkDependencyByWebpackDependency = __webpack_exports__.getSdkDependencyByWebpackDependency;
exports.getWebpackDependencyRequest = __webpack_exports__.getWebpackDependencyRequest;
exports.getWebpackModuleId = __webpack_exports__.getWebpackModuleId;
exports.getWebpackModulePath = __webpack_exports__.getWebpackModulePath;
exports.isExternalModule = __webpack_exports__.isExternalModule;
exports.isNormalModule = __webpack_exports__.isNormalModule;
for(var __webpack_i__ in __webpack_exports__)if (-1 === [
    "getAllModules",
    "getDependencyPosition",
    "getEntryModule",
    "getExportDependency",
    "getExportStatement",
    "getLastExportInfo",
    "getModuleSource",
    "getResolveRequest",
    "getSdkDependencyByWebpackDependency",
    "getWebpackDependencyRequest",
    "getWebpackModuleId",
    "getWebpackModulePath",
    "isExternalModule",
    "isNormalModule"
].indexOf(__webpack_i__)) exports[__webpack_i__] = __webpack_exports__[__webpack_i__];
Object.defineProperty(exports, '__esModule', {
    value: true
});
