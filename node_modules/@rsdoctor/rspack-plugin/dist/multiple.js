"use strict";
var __webpack_require__ = {};
(()=>{
    __webpack_require__.d = (exports1, definition)=>{
        for(var key in definition)if (__webpack_require__.o(definition, key) && !__webpack_require__.o(exports1, key)) Object.defineProperty(exports1, key, {
            enumerable: true,
            get: definition[key]
        });
    };
})();
(()=>{
    __webpack_require__.o = (obj, prop)=>Object.prototype.hasOwnProperty.call(obj, prop);
})();
(()=>{
    __webpack_require__.r = (exports1)=>{
        if ('undefined' != typeof Symbol && Symbol.toStringTag) Object.defineProperty(exports1, Symbol.toStringTag, {
            value: 'Module'
        });
        Object.defineProperty(exports1, '__esModule', {
            value: true
        });
    };
})();
var __webpack_exports__ = {};
__webpack_require__.r(__webpack_exports__);
__webpack_require__.d(__webpack_exports__, {
    RsdoctorRspackMultiplePlugin: ()=>RsdoctorRspackMultiplePlugin
});
const sdk_namespaceObject = require("@rsdoctor/sdk");
const external_plugin_js_namespaceObject = require("./plugin.js");
const plugins_namespaceObject = require("@rsdoctor/core/plugins");
function _define_property(obj, key, value) {
    if (key in obj) Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
    });
    else obj[key] = value;
    return obj;
}
let globalController;
class RsdoctorRspackMultiplePlugin extends external_plugin_js_namespaceObject.RsdoctorRspackPlugin {
    apply(compiler) {
        if ('dependencies' in compiler.options) this.sdk.dependencies = compiler.options.dependencies;
        super.apply(compiler);
    }
    constructor(options = {}){
        const controller = (()=>{
            if (globalController) return globalController;
            const controller = new sdk_namespaceObject.RsdoctorSDKController();
            globalController = controller;
            return controller;
        })();
        const normallizedOptions = (0, plugins_namespaceObject.normalizeUserConfig)(options);
        const instance = controller.createSlave({
            name: options.name || 'Builder',
            stage: options.stage,
            extraConfig: {
                innerClientPath: normallizedOptions.innerClientPath,
                printLog: normallizedOptions.printLog,
                mode: normallizedOptions.mode ? normallizedOptions.mode : void 0,
                brief: normallizedOptions.brief
            },
            type: normallizedOptions.output.reportCodeType
        });
        super({
            ...options,
            sdkInstance: instance
        }), _define_property(this, "controller", void 0);
        this.controller = controller;
    }
}
exports.RsdoctorRspackMultiplePlugin = __webpack_exports__.RsdoctorRspackMultiplePlugin;
for(var __webpack_i__ in __webpack_exports__)if (-1 === [
    "RsdoctorRspackMultiplePlugin"
].indexOf(__webpack_i__)) exports[__webpack_i__] = __webpack_exports__[__webpack_i__];
Object.defineProperty(exports, '__esModule', {
    value: true
});
