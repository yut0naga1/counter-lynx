"use strict";
var __webpack_require__ = {};
(()=>{
    __webpack_require__.n = (module)=>{
        var getter = module && module.__esModule ? ()=>module['default'] : ()=>module;
        __webpack_require__.d(getter, {
            a: getter
        });
        return getter;
    };
})();
(()=>{
    __webpack_require__.d = (exports1, definition)=>{
        for(var key in definition)if (__webpack_require__.o(definition, key) && !__webpack_require__.o(exports1, key)) Object.defineProperty(exports1, key, {
            enumerable: true,
            get: definition[key]
        });
    };
})();
(()=>{
    __webpack_require__.o = (obj, prop)=>Object.prototype.hasOwnProperty.call(obj, prop);
})();
(()=>{
    __webpack_require__.r = (exports1)=>{
        if ('undefined' != typeof Symbol && Symbol.toStringTag) Object.defineProperty(exports1, Symbol.toStringTag, {
            value: 'Module'
        });
        Object.defineProperty(exports1, '__esModule', {
            value: true
        });
    };
})();
var __webpack_exports__ = {};
__webpack_require__.r(__webpack_exports__);
__webpack_require__.d(__webpack_exports__, {
    debug: ()=>debug,
    chalk: ()=>external_picocolors_default(),
    logger: ()=>rsdoctorLogger,
    timeEnd: ()=>timeEnd,
    time: ()=>time
});
const external_picocolors_namespaceObject = require("picocolors");
var external_picocolors_default = /*#__PURE__*/ __webpack_require__.n(external_picocolors_namespaceObject);
const external_rslog_namespaceObject = require("rslog");
const types_namespaceObject = require("@rsdoctor/types");
function debug(getMsg, prefix = '') {
    if (!process.env.DEBUG) return;
    external_rslog_namespaceObject.logger.level = 'verbose';
    external_rslog_namespaceObject.logger.debug(`${prefix} ${getMsg()}`);
}
const rsdoctorLogger = (0, external_rslog_namespaceObject.createLogger)();
rsdoctorLogger.override({
    log: (message)=>{
        console.log(`${external_picocolors_default().green('[RSDOCTOR LOG]')} ${message}`);
    },
    info: (message)=>{
        console.log(`${external_picocolors_default().yellow('[RSDOCTOR INFO]')} ${message}`);
    },
    warn: (message)=>{
        console.warn(`${external_picocolors_default().yellow('[RSDOCTOR WARN]')} ${message}`);
    },
    start: (message)=>{
        console.log(`${external_picocolors_default().green('[RSDOCTOR START]')} ${message}`);
    },
    ready: (message)=>{
        console.log(`${external_picocolors_default().green('[RSDOCTOR READY]')} ${message}`);
    },
    error: (message)=>{
        console.error(`${external_picocolors_default().red('[RSDOCTOR ERROR]')} ${message}`);
    },
    success: (message)=>{
        console.error(`${external_picocolors_default().green('[RSDOCTOR SUCCESS]')} ${message}`);
    },
    debug: (message)=>{
        if (process.env.DEBUG) console.log(`${external_picocolors_default().blue('[RSDOCTOR DEBUG]')} ${message}`);
    }
});
const _timers = new Map();
function time(label) {
    if (process.env.DEBUG !== types_namespaceObject.Constants.RsdoctorProcessEnvDebugKey) return;
    if (_timers.has(label)) return;
    _timers.set(label, Date.now());
}
function timeEnd(label) {
    if (process.env.DEBUG !== types_namespaceObject.Constants.RsdoctorProcessEnvDebugKey) return;
    const start = _timers.get(label);
    if (null == start) return void external_rslog_namespaceObject.logger.debug(`Timer '${label}' does not exist.`);
    const duration = Date.now() - start;
    external_rslog_namespaceObject.logger.debug(`Timer '${label}' ended: ${duration}ms`);
    _timers.delete(label);
}
exports.chalk = __webpack_exports__.chalk;
exports.debug = __webpack_exports__.debug;
exports.logger = __webpack_exports__.logger;
exports.time = __webpack_exports__.time;
exports.timeEnd = __webpack_exports__.timeEnd;
for(var __webpack_i__ in __webpack_exports__)if (-1 === [
    "chalk",
    "debug",
    "logger",
    "time",
    "timeEnd"
].indexOf(__webpack_i__)) exports[__webpack_i__] = __webpack_exports__[__webpack_i__];
Object.defineProperty(exports, '__esModule', {
    value: true
});
