"use strict";
var __webpack_require__ = {};
(()=>{
    __webpack_require__.d = (exports1, definition)=>{
        for(var key in definition)if (__webpack_require__.o(definition, key) && !__webpack_require__.o(exports1, key)) Object.defineProperty(exports1, key, {
            enumerable: true,
            get: definition[key]
        });
    };
})();
(()=>{
    __webpack_require__.o = (obj, prop)=>Object.prototype.hasOwnProperty.call(obj, prop);
})();
(()=>{
    __webpack_require__.r = (exports1)=>{
        if ('undefined' != typeof Symbol && Symbol.toStringTag) Object.defineProperty(exports1, Symbol.toStringTag, {
            value: 'Module'
        });
        Object.defineProperty(exports1, '__esModule', {
            value: true
        });
    };
})();
var __webpack_exports__ = {};
__webpack_require__.r(__webpack_exports__);
__webpack_require__.d(__webpack_exports__, {
    decode: ()=>decode,
    encode: ()=>encode
});
const sep = '!';
function encode(str) {
    let res = `${str.charCodeAt(0)}`;
    for(let i = 1; i < str.length; i++)res += `${sep}${str.charCodeAt(i)}`;
    return res;
}
function decode(str) {
    let res = '';
    let tmp = '';
    for(let i = 0; i < str.length; i++)if (str[i] === sep) {
        res += String.fromCharCode(+tmp);
        tmp = '';
    } else tmp += str[i];
    if (tmp) res += String.fromCharCode(+tmp);
    return res;
}
exports.decode = __webpack_exports__.decode;
exports.encode = __webpack_exports__.encode;
for(var __webpack_i__ in __webpack_exports__)if (-1 === [
    "decode",
    "encode"
].indexOf(__webpack_i__)) exports[__webpack_i__] = __webpack_exports__[__webpack_i__];
Object.defineProperty(exports, '__esModule', {
    value: true
});
