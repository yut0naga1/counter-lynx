"use strict";
var __webpack_require__ = {};
(()=>{
    __webpack_require__.d = (exports1, definition)=>{
        for(var key in definition)if (__webpack_require__.o(definition, key) && !__webpack_require__.o(exports1, key)) Object.defineProperty(exports1, key, {
            enumerable: true,
            get: definition[key]
        });
    };
})();
(()=>{
    __webpack_require__.o = (obj, prop)=>Object.prototype.hasOwnProperty.call(obj, prop);
})();
(()=>{
    __webpack_require__.r = (exports1)=>{
        if ('undefined' != typeof Symbol && Symbol.toStringTag) Object.defineProperty(exports1, Symbol.toStringTag, {
            value: 'Module'
        });
        Object.defineProperty(exports1, '__esModule', {
            value: true
        });
    };
})();
var __webpack_exports__ = {};
__webpack_require__.r(__webpack_exports__);
__webpack_require__.d(__webpack_exports__, {
    getPackageMetaFromModulePath: ()=>getPackageMetaFromModulePath,
    MODULE_PATH_PACKAGES: ()=>MODULE_PATH_PACKAGES,
    PACKAGE_PATH_NAME: ()=>PACKAGE_PATH_NAME
});
const external_lodash_js_namespaceObject = require("./lodash.js");
const PACKAGE_PREFIX = /(?:node_modules|~)(?:\/\.pnpm)?/;
const PACKAGE_SLUG = /[a-zA-Z0-9]+(?:[-|_|.]+[a-zA-Z0-9]+)*/;
const VERSION = /@[\w|\-|_|.]+/;
const VERSION_NUMBER = '@([\\d.]+)';
const MODULE_PATH_PACKAGES = new RegExp([
    `(?:${PACKAGE_PREFIX.source}/)`,
    '(?:',
    `(?:@${PACKAGE_SLUG.source}[/|+])?`,
    `(?:${PACKAGE_SLUG.source}\\+)*`,
    `(?:${PACKAGE_SLUG.source})`,
    `(?:${VERSION.source})?`,
    ')',
    '(?:_',
    `(?:@${PACKAGE_SLUG.source}[/|+])?`,
    `(?:${PACKAGE_SLUG.source})`,
    `(?:@${PACKAGE_SLUG.source})?`,
    ')*',
    '/'
].join(''), 'g');
const PACKAGE_PATH_NAME = /(?:(?:node_modules|~)(?:\/\.pnpm)?\/)(?:((?:@[a-zA-Z0-9]+(?:[-|_|.]+[a-zA-Z0-9]+)*[/|+])?(?:(?:[a-zA-Z0-9]+(?:[-|_|.]+[a-zA-Z0-9]+)*\+)*)(?:[a-zA-Z0-9]+(?:[-|_|.]+[a-zA-Z0-9]+)*))(?:@[\w|\-|_|.]+)?)(?:_((?:@[a-zA-Z0-9]+(?:[-|_|.]+[a-zA-Z0-9]+)*[/|+])?(?:[a-zA-Z0-9]+(?:[-|_|.]+[a-zA-Z0-9]+)*))(?:@[a-zA-Z0-9]+(?:[-|_|.]+[a-zA-Z0-9]+)*))*\//gm;
const uniqLast = (data)=>{
    const res = [];
    data.forEach((item, index)=>{
        if (!data.slice(index + 1).includes(item)) res.push(item);
    });
    return res;
};
const getPackageMetaFromModulePath = (modulePath)=>{
    var _path_match_flat_slice, _path_match;
    const paths = modulePath.match(MODULE_PATH_PACKAGES);
    if (!paths) return {
        name: '',
        version: ''
    };
    const names = uniqLast(paths.flatMap((packagePath)=>{
        const found = packagePath.matchAll(PACKAGE_PATH_NAME);
        if (!found) return [];
        const paksArray = (0, external_lodash_js_namespaceObject.compact)([
            ...found
        ].flat());
        return paksArray.slice(1).filter(Boolean).map((name)=>name.replace(/\+/g, '/'));
    }));
    if ((0, external_lodash_js_namespaceObject.isEmpty)(names)) return {
        name: '',
        version: ''
    };
    const name = (0, external_lodash_js_namespaceObject.last)(names);
    const pattern = new RegExp(`(.*)(${(0, external_lodash_js_namespaceObject.last)(paths)}).*`);
    const path = modulePath.replace(pattern, '$1$2').replace(/\/$/, '');
    return {
        name,
        version: path && name ? (null == (_path_match = path.match(new RegExp(`${name}${VERSION_NUMBER}`))) ? void 0 : null == (_path_match_flat_slice = _path_match.flat().slice(1)) ? void 0 : _path_match_flat_slice[0]) || '' : ''
    };
};
exports.MODULE_PATH_PACKAGES = __webpack_exports__.MODULE_PATH_PACKAGES;
exports.PACKAGE_PATH_NAME = __webpack_exports__.PACKAGE_PATH_NAME;
exports.getPackageMetaFromModulePath = __webpack_exports__.getPackageMetaFromModulePath;
for(var __webpack_i__ in __webpack_exports__)if (-1 === [
    "MODULE_PATH_PACKAGES",
    "PACKAGE_PATH_NAME",
    "getPackageMetaFromModulePath"
].indexOf(__webpack_i__)) exports[__webpack_i__] = __webpack_exports__[__webpack_i__];
Object.defineProperty(exports, '__esModule', {
    value: true
});
