"use strict";
var __webpack_require__ = {};
(()=>{
    __webpack_require__.d = (exports1, definition)=>{
        for(var key in definition)if (__webpack_require__.o(definition, key) && !__webpack_require__.o(exports1, key)) Object.defineProperty(exports1, key, {
            enumerable: true,
            get: definition[key]
        });
    };
})();
(()=>{
    __webpack_require__.o = (obj, prop)=>Object.prototype.hasOwnProperty.call(obj, prop);
})();
(()=>{
    __webpack_require__.r = (exports1)=>{
        if ('undefined' != typeof Symbol && Symbol.toStringTag) Object.defineProperty(exports1, Symbol.toStringTag, {
            value: 'Module'
        });
        Object.defineProperty(exports1, '__esModule', {
            value: true
        });
    };
})();
var __webpack_exports__ = {};
__webpack_require__.r(__webpack_exports__);
__webpack_require__.d(__webpack_exports__, {
    RspackLoaderInternalPropertyName: ()=>RspackLoaderInternalPropertyName,
    RspackSummaryCostsDataName: ()=>RspackSummaryCostsDataName,
    checkSourceMapSupport: ()=>checkSourceMapSupport
});
const RspackLoaderInternalPropertyName = '__l__';
var RspackSummaryCostsDataName = /*#__PURE__*/ function(RspackSummaryCostsDataName) {
    RspackSummaryCostsDataName["Bootstrap"] = "bootstrap->rspack:beforeCompile";
    RspackSummaryCostsDataName["Compile"] = "rspack:beforeCompile->afterCompile";
    RspackSummaryCostsDataName["Done"] = "rspack:afterCompile->done";
    RspackSummaryCostsDataName["Minify"] = "rspack:minify(rspack:optimizeChunkAssets)";
    return RspackSummaryCostsDataName;
}({});
function checkSourceMapSupport(configs) {
    var _configs__config, _configs_, _configs__config1, _configs__config2;
    if (!Array.isArray(configs) || !configs[0]) return {
        isRspack: false,
        hasSourceMap: false
    };
    const isRspack = 'rspack' === configs[0].name && (null == (_configs_ = configs[0]) ? void 0 : null == (_configs__config = _configs_.config) ? void 0 : _configs__config.name) !== 'lynx';
    const devtool = null == (_configs__config1 = configs[0].config) ? void 0 : _configs__config1.devtool;
    const plugins = null == (_configs__config2 = configs[0].config) ? void 0 : _configs__config2.plugins;
    const hasLynxSourcemapPlugin = null == plugins ? void 0 : plugins.filter((plugin)=>plugin && plugin.includes('SourceMapDevToolPlugin'));
    const hasSourceMap = 'string' == typeof devtool && devtool.includes('source-map') && !devtool.includes('eval') || !!(null == hasLynxSourcemapPlugin ? void 0 : hasLynxSourcemapPlugin.length);
    return {
        isRspack,
        hasSourceMap
    };
}
exports.RspackLoaderInternalPropertyName = __webpack_exports__.RspackLoaderInternalPropertyName;
exports.RspackSummaryCostsDataName = __webpack_exports__.RspackSummaryCostsDataName;
exports.checkSourceMapSupport = __webpack_exports__.checkSourceMapSupport;
for(var __webpack_i__ in __webpack_exports__)if (-1 === [
    "RspackLoaderInternalPropertyName",
    "RspackSummaryCostsDataName",
    "checkSourceMapSupport"
].indexOf(__webpack_i__)) exports[__webpack_i__] = __webpack_exports__[__webpack_i__];
Object.defineProperty(exports, '__esModule', {
    value: true
});
