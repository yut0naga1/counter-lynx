"use strict";
var __webpack_require__ = {};
(()=>{
    __webpack_require__.d = (exports1, definition)=>{
        for(var key in definition)if (__webpack_require__.o(definition, key) && !__webpack_require__.o(exports1, key)) Object.defineProperty(exports1, key, {
            enumerable: true,
            get: definition[key]
        });
    };
})();
(()=>{
    __webpack_require__.o = (obj, prop)=>Object.prototype.hasOwnProperty.call(obj, prop);
})();
(()=>{
    __webpack_require__.r = (exports1)=>{
        if ('undefined' != typeof Symbol && Symbol.toStringTag) Object.defineProperty(exports1, Symbol.toStringTag, {
            value: 'Module'
        });
        Object.defineProperty(exports1, '__esModule', {
            value: true
        });
    };
})();
var __webpack_exports__ = {};
__webpack_require__.r(__webpack_exports__);
__webpack_require__.d(__webpack_exports__, {
    parser: ()=>parser
});
const external_acorn_namespaceObject = require("acorn");
const external_acorn_import_attributes_namespaceObject = require("acorn-import-attributes");
const external_acorn_walk_namespaceObject = require("acorn-walk");
const external_asserts_js_namespaceObject = require("./asserts.js");
const external_utils_js_namespaceObject = require("./utils.js");
const acornParserInternal = external_acorn_namespaceObject.Parser.extend(external_acorn_import_attributes_namespaceObject.importAttributes);
let acornParserExport = external_acorn_namespaceObject.Parser.extend(external_acorn_import_attributes_namespaceObject.importAttributes);
const parser = {
    walk: external_acorn_walk_namespaceObject,
    parse: (input, options)=>acornParserExport.parse(input, options),
    parseExpressionAt: (input, pos, options)=>acornParserExport.parseExpressionAt(input, pos, options),
    extend (...args) {
        acornParserExport = acornParserExport.extend(...args);
        return acornParserExport;
    },
    asserts: external_asserts_js_namespaceObject.asserts,
    utils: external_utils_js_namespaceObject,
    internal: {
        parse: (input, options)=>acornParserInternal.parse(input, options),
        parseExpressionAt: (input, pos, options)=>acornParserInternal.parseExpressionAt(input, pos, options)
    }
};
exports.parser = __webpack_exports__.parser;
for(var __webpack_i__ in __webpack_exports__)if (-1 === [
    "parser"
].indexOf(__webpack_i__)) exports[__webpack_i__] = __webpack_exports__[__webpack_i__];
Object.defineProperty(exports, '__esModule', {
    value: true
});
