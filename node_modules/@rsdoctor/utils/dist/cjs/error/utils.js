"use strict";
var __webpack_require__ = {};
(()=>{
    __webpack_require__.d = (exports1, definition)=>{
        for(var key in definition)if (__webpack_require__.o(definition, key) && !__webpack_require__.o(exports1, key)) Object.defineProperty(exports1, key, {
            enumerable: true,
            get: definition[key]
        });
    };
})();
(()=>{
    __webpack_require__.o = (obj, prop)=>Object.prototype.hasOwnProperty.call(obj, prop);
})();
(()=>{
    __webpack_require__.r = (exports1)=>{
        if ('undefined' != typeof Symbol && Symbol.toStringTag) Object.defineProperty(exports1, Symbol.toStringTag, {
            value: 'Module'
        });
        Object.defineProperty(exports1, '__esModule', {
            value: true
        });
    };
})();
var __webpack_exports__ = {};
__webpack_require__.r(__webpack_exports__);
__webpack_require__.d(__webpack_exports__, {
    toLevel: ()=>toLevel,
    insertSpace: ()=>insertSpace,
    printErrors: ()=>printErrors
});
const types_namespaceObject = require("@rsdoctor/types");
function toLevel(level) {
    return types_namespaceObject.Err.ErrorLevel[level];
}
function insertSpace(rawLines, line, width) {
    const lines = rawLines.split('\n');
    lines[line - 1] = Array(width).fill(' ').join('') + lines[line - 1];
    return lines.join('\n');
}
function printErrors({ errors, warnings }, logLevel = 'Error') {
    const onlyError = 'Error' === logLevel;
    if ('Silent' === logLevel) return '';
    if (onlyError && 0 === errors.length || !onlyError && 0 === errors.length && 0 === warnings.length) return '';
    const msgs = [];
    if (onlyError) msgs.push(`Build failed with ${errors.length} error:`, ...errors.map((item)=>item.toString()), '');
    else {
        const title = 0 === errors.length ? `Build succuss with ${warnings.length} warning:` : `Build failed with ${errors.length} error, ${warnings.length} warning:`;
        msgs.push(title, ...errors.map((item)=>item.toString()), ...warnings.map((item)=>item.toString()), '');
    }
    return msgs.join('\n\n');
}
exports.insertSpace = __webpack_exports__.insertSpace;
exports.printErrors = __webpack_exports__.printErrors;
exports.toLevel = __webpack_exports__.toLevel;
for(var __webpack_i__ in __webpack_exports__)if (-1 === [
    "insertSpace",
    "printErrors",
    "toLevel"
].indexOf(__webpack_i__)) exports[__webpack_i__] = __webpack_exports__[__webpack_i__];
Object.defineProperty(exports, '__esModule', {
    value: true
});
