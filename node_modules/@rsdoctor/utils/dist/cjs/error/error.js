"use strict";
var __webpack_require__ = {};
(()=>{
    __webpack_require__.n = (module)=>{
        var getter = module && module.__esModule ? ()=>module['default'] : ()=>module;
        __webpack_require__.d(getter, {
            a: getter
        });
        return getter;
    };
})();
(()=>{
    __webpack_require__.d = (exports1, definition)=>{
        for(var key in definition)if (__webpack_require__.o(definition, key) && !__webpack_require__.o(exports1, key)) Object.defineProperty(exports1, key, {
            enumerable: true,
            get: definition[key]
        });
    };
})();
(()=>{
    __webpack_require__.o = (obj, prop)=>Object.prototype.hasOwnProperty.call(obj, prop);
})();
(()=>{
    __webpack_require__.r = (exports1)=>{
        if ('undefined' != typeof Symbol && Symbol.toStringTag) Object.defineProperty(exports1, Symbol.toStringTag, {
            value: 'Module'
        });
        Object.defineProperty(exports1, '__esModule', {
            value: true
        });
    };
})();
var __webpack_exports__ = {};
__webpack_require__.r(__webpack_exports__);
__webpack_require__.d(__webpack_exports__, {
    DevToolError: ()=>DevToolError
});
const code_frame_namespaceObject = require("@babel/code-frame");
const types_namespaceObject = require("@rsdoctor/types");
const external_picocolors_namespaceObject = require("picocolors");
const external_deep_eql_namespaceObject = require("deep-eql");
var external_deep_eql_default = /*#__PURE__*/ __webpack_require__.n(external_deep_eql_namespaceObject);
const external_strip_ansi_namespaceObject = require("strip-ansi");
var external_strip_ansi_default = /*#__PURE__*/ __webpack_require__.n(external_strip_ansi_namespaceObject);
const external_transform_js_namespaceObject = require("./transform.js");
const external_utils_js_namespaceObject = require("./utils.js");
const lodash_js_namespaceObject = require("../common/lodash.js");
function _define_property(obj, key, value) {
    if (key in obj) Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
    });
    else obj[key] = value;
    return obj;
}
let id = 1;
class DevToolError extends Error {
    static from(err, opt) {
        if (err instanceof DevToolError) return err;
        return (0, external_transform_js_namespaceObject.transform)(err, opt);
    }
    get level() {
        return types_namespaceObject.Err.ErrorLevel[this._level];
    }
    get path() {
        var _this__codeFrame;
        return null == (_this__codeFrame = this._codeFrame) ? void 0 : _this__codeFrame.filePath;
    }
    set path(file) {
        if (!file) return;
        if (this._codeFrame) {
            this._codeFrame.filePath = file;
            return;
        }
        this._codeFrame = {
            filePath: file
        };
    }
    get codeFrame() {
        return this._codeFrame;
    }
    printCodeFrame(print) {
        const msgs = [];
        const { _codeFrame: codeFrameOpt, _controller: controller } = this;
        if (!codeFrameOpt) return msgs;
        if ('start' in codeFrameOpt && codeFrameOpt.start) {
            const { filePath, start } = codeFrameOpt;
            msgs.push(`\n ${print.red(print.bold('File: '))}${print.bold(filePath)}:${start.line}${start.column ? `:${start.column}` : ''}`);
            if ('fileContent' in codeFrameOpt) {
                const { end, fileContent } = codeFrameOpt;
                msgs.push((0, code_frame_namespaceObject.codeFrameColumns)(fileContent, {
                    start,
                    end
                }, {
                    highlightCode: !controller.noColor
                }));
            } else if ('lineText' in codeFrameOpt) {
                const { length, lineText } = codeFrameOpt;
                let lineCodeFrame = (0, code_frame_namespaceObject.codeFrameColumns)(lineText, {
                    start: {
                        line: 1,
                        column: start.column
                    },
                    end: {
                        line: 1,
                        column: (0, lodash_js_namespaceObject.isNil)(start.column) || (0, lodash_js_namespaceObject.isNil)(length) ? void 0 : start.column + length
                    }
                }, {
                    highlightCode: !controller.noColor
                });
                if (start.line > 1) {
                    lineCodeFrame = lineCodeFrame.replace(' 1 |', ` ${start.line} |`);
                    if (start.line >= 10) lineCodeFrame = (0, external_utils_js_namespaceObject.insertSpace)(lineCodeFrame, 2, String(start.line).length - 1);
                }
                msgs.push(lineCodeFrame);
            }
        } else msgs.push(`\n ${print.red(print.bold('File: '))}${print.bold(codeFrameOpt.filePath)}\n`);
        return msgs;
    }
    toString() {
        const msgs = [];
        const { code, title, message, hint, referenceUrl, _controller: controller } = this;
        const print = (0, external_picocolors_namespaceObject.createColors)(!controller.noColor);
        const mainColorPrint = this._level === types_namespaceObject.Err.ErrorLevel.Error ? print.red : print.yellow;
        const codeText = code ? `${mainColorPrint(print.blue(code))}:` : '';
        msgs.push(mainColorPrint(print.bold(`[${codeText}${this.level}:${title.toUpperCase()}] `) + message));
        msgs.push(...this.printCodeFrame(print));
        if (hint || referenceUrl) msgs.push('');
        if (hint) msgs.push(` ${print.blue(`HINT: ${hint}`)}`);
        if (referenceUrl) msgs.push(print.magenta(print.bold(` See: ${referenceUrl}`)));
        if (!controller.noStack && this.stack) msgs.push(print.red(print.bold(` Error Stack:\n${this.stack}\n`)));
        return msgs.join('\n');
    }
    toData() {
        var _this_detail;
        return {
            ...this.detail,
            id: this.id,
            category: this.category,
            description: external_strip_ansi_default()((null == (_this_detail = this.detail) ? void 0 : _this_detail.description) ?? this.message),
            title: this.title.toUpperCase(),
            code: this.code,
            level: this.level.toLowerCase()
        };
    }
    toError() {
        const error = new Error();
        error.message = this.toString();
        error.name = this.name;
        error.stack = this.stack;
        return error;
    }
    toJSON() {
        return {
            message: this.toString(),
            name: this.name,
            stack: this.stack
        };
    }
    setControllerOption(opt) {
        this._controller = {
            noStack: opt.noStack ?? this._controller.noStack ?? true,
            noColor: opt.noColor ?? this._controller.noColor ?? false
        };
    }
    setCodeFrame(opt) {
        this._codeFrame = opt;
    }
    isSame(error) {
        return this.code === error.code && this.message === error.message && this.hint === error.hint && this.level === error.level && this.title === error.title && this.referenceUrl === error.referenceUrl && this.code === error.code && external_deep_eql_default()(this.codeFrame, error.codeFrame);
    }
    constructor(title, message, opts){
        super(message), _define_property(this, "id", void 0), _define_property(this, "code", void 0), _define_property(this, "category", void 0), _define_property(this, "title", void 0), _define_property(this, "detail", void 0), _define_property(this, "fixData", void 0), _define_property(this, "hint", void 0), _define_property(this, "referenceUrl", void 0), _define_property(this, "_codeFrame", void 0), _define_property(this, "_controller", {
            noStack: true,
            noColor: false
        }), _define_property(this, "_level", void 0);
        this.id = id++;
        this.title = title;
        this.code = null == opts ? void 0 : opts.code;
        this.hint = null == opts ? void 0 : opts.hint;
        this.stack = null == opts ? void 0 : opts.stack;
        this.detail = null == opts ? void 0 : opts.detail;
        this.fixData = null == opts ? void 0 : opts.fixData;
        this.category = null == opts ? void 0 : opts.category;
        this.referenceUrl = null == opts ? void 0 : opts.referenceUrl;
        this._level = (null == opts ? void 0 : opts.level) ? (0, external_utils_js_namespaceObject.toLevel)(opts.level) : types_namespaceObject.Err.ErrorLevel.Error;
        this._codeFrame = null == opts ? void 0 : opts.codeFrame;
        this.setControllerOption((null == opts ? void 0 : opts.controller) ?? {});
    }
}
exports.DevToolError = __webpack_exports__.DevToolError;
for(var __webpack_i__ in __webpack_exports__)if (-1 === [
    "DevToolError"
].indexOf(__webpack_i__)) exports[__webpack_i__] = __webpack_exports__[__webpack_i__];
Object.defineProperty(exports, '__esModule', {
    value: true
});
