import fs from "fs";
import path from "path";
import os from "os";
import { logger } from "../logger.mjs";
function writeMcpPort(port, builderName) {
    const homeDir = os.homedir();
    const rsdoctorDir = path.join(homeDir, '.cache/rsdoctor');
    const mcpPortFilePath = path.join(rsdoctorDir, 'mcp.json');
    if (!fs.existsSync(rsdoctorDir)) fs.mkdirSync(rsdoctorDir, {
        recursive: true
    });
    let mcpJson = {
        portList: {},
        port: 0
    };
    if (fs.existsSync(mcpPortFilePath)) try {
        mcpJson = JSON.parse(fs.readFileSync(mcpPortFilePath, 'utf8'));
    } catch (error) {
        logger.debug('Failed to parse mcp.json', error);
    }
    if (!mcpJson.portList) mcpJson.portList = {};
    mcpJson.portList[builderName || 'builder'] = port;
    mcpJson.port = port;
    fs.writeFileSync(mcpPortFilePath, JSON.stringify(mcpJson, null, 2), 'utf8');
}
function getMcpConfigPath() {
    const homeDir = os.homedir();
    const rsdoctorDir = path.join(homeDir, '.cache/rsdoctor');
    const mcpPortFilePath = path.join(rsdoctorDir, 'mcp.json');
    return mcpPortFilePath;
}
export { getMcpConfigPath, writeMcpPort };
