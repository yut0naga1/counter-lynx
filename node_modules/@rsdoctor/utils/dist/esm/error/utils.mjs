import { Err } from "@rsdoctor/types";
function toLevel(level) {
    return Err.ErrorLevel[level];
}
function insertSpace(rawLines, line, width) {
    const lines = rawLines.split('\n');
    lines[line - 1] = Array(width).fill(' ').join('') + lines[line - 1];
    return lines.join('\n');
}
function printErrors({ errors, warnings }, logLevel = 'Error') {
    const onlyError = 'Error' === logLevel;
    if ('Silent' === logLevel) return '';
    if (onlyError && 0 === errors.length || !onlyError && 0 === errors.length && 0 === warnings.length) return '';
    const msgs = [];
    if (onlyError) msgs.push(`Build failed with ${errors.length} error:`, ...errors.map((item)=>item.toString()), '');
    else {
        const title = 0 === errors.length ? `Build succuss with ${warnings.length} warning:` : `Build failed with ${errors.length} error, ${warnings.length} warning:`;
        msgs.push(title, ...errors.map((item)=>item.toString()), ...warnings.map((item)=>item.toString()), '');
    }
    return msgs.join('\n\n');
}
export { insertSpace, printErrors, toLevel };
