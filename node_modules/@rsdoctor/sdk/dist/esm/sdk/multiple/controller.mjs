import { RsdoctorPrimarySDK } from "./primary.mjs";
class RsdoctorSDKController {
    get master() {
        return this.slaves[0];
    }
    getLastSdk() {
        return this.slaves[this.slaves.length - 1];
    }
    hasName(name) {
        return Boolean(this.slaves.find((item)=>item.name === name));
    }
    getSeriesData(serverUrl = false) {
        return this.slaves.map((item)=>{
            const data = {
                name: item.name,
                path: item.diskManifestPath,
                stage: item.stage
            };
            if (serverUrl) data.origin = item.server.origin;
            return data;
        });
    }
    createSlave({ name, stage, extraConfig, type }) {
        const slave = new RsdoctorPrimarySDK({
            name,
            stage,
            controller: this,
            extraConfig,
            type
        });
        this.slaves.push(slave);
        this.slaves.sort((a, b)=>a.stage - b.stage);
        return slave;
    }
    constructor(root = process.cwd()){
        this.slaves = [];
        this.root = '';
        this.root = root;
    }
}
export { RsdoctorSDKController };
