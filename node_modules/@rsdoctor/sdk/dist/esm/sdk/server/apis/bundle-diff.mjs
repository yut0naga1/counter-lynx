import { SDK } from "@rsdoctor/types";
import { BaseAPI } from "./base.mjs";
import { Router } from "../router.mjs";
function _ts_decorate(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc);
    else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
}
function _ts_metadata(k, v) {
    if ("object" == typeof Reflect && "function" == typeof Reflect.metadata) return Reflect.metadata(k, v);
}
class BundleDiffAPI extends BaseAPI {
    async getBundleDiffSummary() {
        var _configs__config_output, _configs__config, _configs_;
        const { sdk } = this.ctx;
        const { root, hash, errors, chunkGraph, moduleGraph, packageGraph, configs, moduleCodeMap, cloudManifestUrl } = sdk.getStoreData();
        let outputFilename = '';
        if ('string' == typeof (null == configs ? void 0 : null == (_configs_ = configs[0]) ? void 0 : null == (_configs__config = _configs_.config) ? void 0 : null == (_configs__config_output = _configs__config.output) ? void 0 : _configs__config_output.filename)) {
            var _configs__config_output1, _configs__config1, _configs_1;
            outputFilename = null == configs ? void 0 : null == (_configs_1 = configs[0]) ? void 0 : null == (_configs__config1 = _configs_1.config) ? void 0 : null == (_configs__config_output1 = _configs__config1.output) ? void 0 : _configs__config_output1.filename;
        }
        return {
            root,
            hash,
            errors,
            chunkGraph,
            moduleGraph,
            packageGraph,
            outputFilename,
            moduleCodeMap,
            cloudManifestUrl
        };
    }
    async bundleDiffManifest() {
        const { sdk } = this.ctx;
        const data = sdk.getStoreData();
        return data;
    }
}
_ts_decorate([
    Router.get(SDK.ServerAPI.API.GetBundleDiffSummary),
    _ts_metadata("design:type", Function),
    _ts_metadata("design:paramtypes", []),
    _ts_metadata("design:returntype", Promise)
], BundleDiffAPI.prototype, "getBundleDiffSummary", null);
_ts_decorate([
    Router.get(SDK.ServerAPI.API.BundleDiffManifest),
    _ts_metadata("design:type", Function),
    _ts_metadata("design:paramtypes", []),
    _ts_metadata("design:returntype", Promise)
], BundleDiffAPI.prototype, "bundleDiffManifest", null);
export { BundleDiffAPI };
