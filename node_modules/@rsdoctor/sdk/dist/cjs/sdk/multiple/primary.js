"use strict";
var __webpack_require__ = {};
(()=>{
    __webpack_require__.n = (module)=>{
        var getter = module && module.__esModule ? ()=>module['default'] : ()=>module;
        __webpack_require__.d(getter, {
            a: getter
        });
        return getter;
    };
})();
(()=>{
    __webpack_require__.d = (exports1, definition)=>{
        for(var key in definition)if (__webpack_require__.o(definition, key) && !__webpack_require__.o(exports1, key)) Object.defineProperty(exports1, key, {
            enumerable: true,
            get: definition[key]
        });
    };
})();
(()=>{
    __webpack_require__.o = (obj, prop)=>Object.prototype.hasOwnProperty.call(obj, prop);
})();
(()=>{
    __webpack_require__.r = (exports1)=>{
        if ('undefined' != typeof Symbol && Symbol.toStringTag) Object.defineProperty(exports1, Symbol.toStringTag, {
            value: 'Module'
        });
        Object.defineProperty(exports1, '__esModule', {
            value: true
        });
    };
})();
var __webpack_exports__ = {};
__webpack_require__.r(__webpack_exports__);
__webpack_require__.d(__webpack_exports__, {
    RsdoctorPrimarySDK: ()=>RsdoctorPrimarySDK
});
const external_path_namespaceObject = require("path");
var external_path_default = /*#__PURE__*/ __webpack_require__.n(external_path_namespaceObject);
const index_js_namespaceObject = require("../sdk/index.js");
const external_server_js_namespaceObject = require("./server.js");
let id = 1;
class RsdoctorPrimarySDK extends index_js_namespaceObject.RsdoctorSDK {
    clearSwitch() {
        this.uploadPieces = new Promise((resolve)=>{
            this.finishUploadPieceSwitch = resolve;
        });
    }
    get isMaster() {
        return this.parent.master === this;
    }
    async writePieces() {
        const { name, parent, isMaster, outputDir, finishUploadPieceSwitch } = this;
        this.setOutputDir(isMaster ? outputDir : external_path_default().join(parent.master.outputDir, '.slaves', name.replace(/\s+/g, '-')));
        await super.writePieces(this.getStoreData());
        null == finishUploadPieceSwitch || finishUploadPieceSwitch();
    }
    async writeManifest() {
        const { parent, cloudData, dependencies } = this;
        if (!(null == dependencies ? void 0 : dependencies.length)) await Promise.all(this.parent.slaves.filter((item)=>{
            var _item_dependencies;
            return !(null == (_item_dependencies = item.dependencies) ? void 0 : _item_dependencies.length);
        }).map((item)=>item.uploadPieces));
        if (cloudData) {
            cloudData.name = this.name;
            cloudData.series = parent.getSeriesData();
        }
        const result = await super.writeManifest();
        this.clearSwitch();
        return result;
    }
    getSeriesData(serverUrl = false) {
        return this.parent.getSeriesData(serverUrl);
    }
    setName(name) {
        this._name = this.parent.hasName(name) ? `${name}-${id}` : name;
    }
    getManifestData() {
        const data = super.getManifestData();
        data.name = this.name;
        data.series = this.getSeriesData(true);
        return data;
    }
    constructor({ name, stage, controller, extraConfig, type }){
        super({
            name,
            root: controller.root
        });
        const lastSdk = controller.getLastSdk();
        const port = lastSdk ? lastSdk.server.port + 1 : this.server.port;
        this.id = id++;
        this.stage = 'number' == typeof stage ? stage : 1;
        this.extraConfig = extraConfig;
        this.parent = controller;
        this.server = new external_server_js_namespaceObject.RsdoctorSlaveServer(this, port);
        this.type = type;
        this.setName(name);
        this.clearSwitch();
    }
}
exports.RsdoctorPrimarySDK = __webpack_exports__.RsdoctorPrimarySDK;
for(var __webpack_i__ in __webpack_exports__)if (-1 === [
    "RsdoctorPrimarySDK"
].indexOf(__webpack_i__)) exports[__webpack_i__] = __webpack_exports__[__webpack_i__];
Object.defineProperty(exports, '__esModule', {
    value: true
});
