"use strict";
var __webpack_require__ = {};
(()=>{
    __webpack_require__.d = (exports1, definition)=>{
        for(var key in definition)if (__webpack_require__.o(definition, key) && !__webpack_require__.o(exports1, key)) Object.defineProperty(exports1, key, {
            enumerable: true,
            get: definition[key]
        });
    };
})();
(()=>{
    __webpack_require__.o = (obj, prop)=>Object.prototype.hasOwnProperty.call(obj, prop);
})();
(()=>{
    __webpack_require__.r = (exports1)=>{
        if ('undefined' != typeof Symbol && Symbol.toStringTag) Object.defineProperty(exports1, Symbol.toStringTag, {
            value: 'Module'
        });
        Object.defineProperty(exports1, '__esModule', {
            value: true
        });
    };
})();
var __webpack_exports__ = {};
__webpack_require__.r(__webpack_exports__);
__webpack_require__.d(__webpack_exports__, {
    Socket: ()=>Socket
});
const types_namespaceObject = require("@rsdoctor/types");
const external_socket_io_namespaceObject = require("socket.io");
const external_util_namespaceObject = require("util");
const external_api_js_namespaceObject = require("./api.js");
class Socket {
    bootstrap() {
        this.io = new external_socket_io_namespaceObject.Server(this.options.server, {
            cors: {
                origin: '*'
            },
            ...this.options.socketOptions
        });
        this.io.on('connection', (socket)=>{
            this.setupSocket(socket);
        });
    }
    setupSocket(socket) {
        Object.values(types_namespaceObject.SDK.ServerAPI.API).forEach((api)=>{
            socket.on(api, async (body, callback)=>{
                this.saveRequestToMap(api, body);
                callback(await this.getAPIResponse(api, body));
            });
        });
    }
    saveRequestToMap(api, body = null) {
        if (!this.map.has(api)) this.map.set(api, []);
        const list = this.map.get(api);
        if (!list.some((e)=>e === body || (0, external_util_namespaceObject.isDeepStrictEqual)(e, body))) list.push(body);
    }
    async getAPIResponse(api, body) {
        const data = await this.loader.loadAPIData(api, body);
        const response = {
            req: {
                api,
                body
            },
            res: data
        };
        return response;
    }
    async broadcast() {
        clearImmediate(this.timer);
        this.timer = setImmediate(async ()=>{
            const promises = [];
            this.map.forEach((bodies, api)=>{
                bodies.forEach((body)=>{
                    promises.push((async ()=>{
                        const res = await this.getAPIResponse(api, body);
                        this.io.emit(api, res);
                    })());
                });
            });
            await Promise.all(promises);
        });
    }
    sendAPIData(api, msg) {
        this.io.sockets.emit(api, msg);
    }
    dispose() {
        this.io.disconnectSockets();
        this.io.close();
    }
    constructor(options){
        this.options = options;
        this.map = new Map();
        this.loader = new external_api_js_namespaceObject.SocketAPILoader({
            sdk: options.sdk
        });
    }
}
exports.Socket = __webpack_exports__.Socket;
for(var __webpack_i__ in __webpack_exports__)if (-1 === [
    "Socket"
].indexOf(__webpack_i__)) exports[__webpack_i__] = __webpack_exports__[__webpack_i__];
Object.defineProperty(exports, '__esModule', {
    value: true
});
